cset: moving following pidspec: 28022
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.381822167 seconds)
loading group "string"... done (took 0.565756802 seconds)
loading group "linalg"... done (took 7.150998343 seconds)
loading group "parallel"... done (took 0.161691558 seconds)
loading group "find"... done (took 1.132007935 seconds)
loading group "tuple"... done (took 1.799315796 seconds)
loading group "dates"... done (took 1.27904735 seconds)
loading group "micro"... done (took 0.226270199 seconds)
loading group "io"... done (took 0.931244059 seconds)
loading group "scalar"... done (took 37.843776949 seconds)
loading group "sparse"... done (took 11.994544022 seconds)
loading group "broadcast"... done (took 0.955970873 seconds)
loading group "union"... done (took 12.49582181 seconds)
loading group "simd"... done (took 4.588073386 seconds)
loading group "random"... done (took 8.759428656 seconds)
loading group "problem"... done (took 1.868772149 seconds)
loading group "array"... done (took 20.0117355 seconds)
loading group "misc"... done (took 1.770318111 seconds)
loading group "sort"... done (took 3.141650352 seconds)
loading group "collection"... done (took 16.517508965 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478131986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121308826 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115180869 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120322053 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133586759 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115560244 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123673202 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084468888 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.790943494 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143217377 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117964647 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411186362 seconds)
done (took 5.067474989 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170370072 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082226579 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081717083 seconds)
  done (took 1.293663675 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065107712 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120344756 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06577215 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066524766 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065931837 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067382594 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067066414 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067173557 seconds)
  done (took 1.650917664 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072658111 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068026316 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070062687 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069464214 seconds)
  done (took 1.4103222 seconds)
done (took 5.730702109 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765203879 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204250401 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182115353 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405920096 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13119529 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157269477 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636682821 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320778366 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185529724 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082657549 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103697476 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316533404 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106455154 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636156352 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076567322 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089252695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138526121 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429690376 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067027119 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081289259 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088330976 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127318164 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086910176 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074183784 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143618861 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067719251 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129267013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080398662 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066098344 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206400484 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173981213 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.65506773 seconds)
  done (took 10.184620812 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095653474 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096610849 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068287485 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137065672 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095292772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069114952 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07047703 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06673388 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08683074 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126959143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088276412 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100772675 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067151541 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070183993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086012449 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207440396 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08194788 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083123914 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071701319 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077535751 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119150292 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079346955 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07863414 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079246774 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130550549 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182645958 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0982268 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097261641 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066100035 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080062893 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114851814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125462527 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064819586 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065714503 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123657188 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093973201 seconds)
  done (took 4.616285277 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.929504093 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142699615 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093122518 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134862406 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066349873 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109774359 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066629601 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083110043 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.207765277 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.304191583 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579601778 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110302216 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103386972 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067229162 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067984968 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066402755 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354867538 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110703953 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10550698 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083288809 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07098885 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071136928 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.344369476 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067355392 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063257153 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06760379 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057590892 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121371642 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066720357 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.931529725 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12546833 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066626148 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100233588 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169608376 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086839325 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272059818 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06823314 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083975242 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064242531 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148607493 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070092692 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065676649 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086678889 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103428008 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112604418 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065924923 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06676076 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161673848 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065509947 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077915323 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.973903434 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154015506 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091551354 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07526498 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064182577 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244174298 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08561018 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069092458 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064315994 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182603991 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137466969 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065558437 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068640521 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067337405 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069571015 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069840952 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366246847 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065882218 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.975821363 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067366841 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075786503 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068461369 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06931218 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072085522 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072114651 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084855167 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065674948 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074489083 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065296646 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065224703 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066198975 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08397348 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360029432 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065938175 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067768716 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064501912 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086229884 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096288351 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065986689 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064724213 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099270752 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067203482 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.172417723 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106119978 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066978145 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084073549 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068319653 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11260116 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070969069 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108934799 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06740243 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099745069 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071611086 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097922352 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080267668 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068652885 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397264532 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064860317 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065234996 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067806733 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065098575 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06379076 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067184144 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069623531 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079605532 seconds)
  done (took 21.163981652 seconds)
done (took 38.024850678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.276402652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078224158 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079040296 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075204691 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075156463 seconds)
  done (took 1.806947399 seconds)
done (took 3.011601973 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119323015 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098956826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064019801 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094764738 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063459793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099330823 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098574567 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080351615 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09897507 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065046468 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098338759 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066060235 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065596655 seconds)
  done (took 2.335727855 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082633895 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085537766 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071848931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084798773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065424208 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084433367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082147129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090206101 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08286976 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073314427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065219599 seconds)
  done (took 2.065700071 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081250266 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082788728 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07037039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081035633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064771611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082647015 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082499722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087286091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082882283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074544583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065396504 seconds)
  done (took 2.048814459 seconds)
done (took 7.643399262 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076999497 seconds)
  done (took 1.261471136 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59779948 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.059714648 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081284451 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112426664 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186838212 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122868675 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.28369581 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089628663 seconds)
  done (took 8.898761367 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102771706 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070490238 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073469658 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069286697 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071125351 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071312001 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072645876 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073911798 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073931462 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070806435 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073019647 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072524923 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070362584 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070462048 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073616107 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071240719 seconds)
  done (took 2.438886589 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093880899 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091461304 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073715505 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075027273 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072387037 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07196335 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074996067 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075661156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072533462 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073776276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076796122 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075334716 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073500547 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066558364 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075947038 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077457687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07273345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075905116 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076159152 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076372091 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076232711 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06565233 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072423241 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074693797 seconds)
  done (took 3.107899642 seconds)
done (took 16.900954522 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110805632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071223339 seconds)
  done (took 1.375824929 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080984305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084681874 seconds)
  done (took 1.366072499 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081794711 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06574796 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092506467 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080327229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068169811 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067729461 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089709962 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068267366 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067692234 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067886163 seconds)
  done (took 1.951120419 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068657387 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077769528 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070241794 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080716881 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07417228 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0656816 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075024603 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069626963 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079851717 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064180938 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072450219 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083772877 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072802548 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085109719 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074793023 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069713467 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072307784 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068888965 seconds)
  done (took 2.529138352 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065168545 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066543569 seconds)
  done (took 1.338207816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066074202 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063164515 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06575799 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066868427 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063369036 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062411596 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063236394 seconds)
  done (took 1.654115411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39397726 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113491153 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.302670315 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072047406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083658257 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255007451 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066675433 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071901818 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072076329 seconds)
  done (took 2.682337311 seconds)
done (took 14.104140975 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078588232 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084579338 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095096062 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.364173876 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092042296 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067618877 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115702342 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193494362 seconds)
done (took 2.307898777 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212189472 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613279713 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.390863805 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198439014 seconds)
  done (took 2.40981 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324808844 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08832037 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059927041 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069058788 seconds)
  done (took 1.760489719 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065832121 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069360362 seconds)
  done (took 1.347848108 seconds)
done (took 6.944275233 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065832678 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066724887 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086998763 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065430085 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067824644 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064797265 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064813884 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067360598 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067178805 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066070687 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070265314 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066962723 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067044501 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06489974 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065208259 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06460642 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067215995 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0647858 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065117416 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068034229 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067293599 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064857195 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064560405 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067274103 seconds)
  done (took 2.860605452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082443995 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066206176 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071354705 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070514813 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069609296 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071012875 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071544652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065738642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071236344 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067670065 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069393357 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069740191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067543766 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069910074 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067928482 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069863498 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070388287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065863215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068272122 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069619625 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070327582 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065621823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06932331 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070293277 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069017129 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06887574 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067271813 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065739823 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07088717 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069653665 seconds)
  done (took 3.304938123 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069032006 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064398779 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06577087 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072289439 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064984137 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06630715 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064707478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06586417 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065841399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064806593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066364771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064673375 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065170817 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065786147 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06586542 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069036924 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080358572 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065335721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065367599 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065927515 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068257022 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064686939 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065533615 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065292527 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065067024 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064717271 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065365559 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064721871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065579599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065163542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067913931 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068568775 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064611926 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071690335 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067879579 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064728777 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068311725 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063083709 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.177271196 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064192437 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064525255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064832885 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063996312 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070143171 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0631536 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064690053 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062963706 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064203968 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063326068 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066242458 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062927793 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063179069 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065108609 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06408088 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067416664 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062728918 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063850439 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062734844 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064139795 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062828067 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064600258 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064353347 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066968063 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065183025 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079019666 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071803653 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064832821 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066263934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065760102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067666996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066986532 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077749288 seconds)
  done (took 6.104424463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086192952 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086502951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066494438 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066668284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063365321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06540537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069169217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065656436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066998536 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071606317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065799782 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06668257 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067107365 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078287755 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065683199 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066837793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071935311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063599715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065752792 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068690798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065651688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068962874 seconds)
  done (took 2.759826762 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155800981 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071941077 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105818776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074371363 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068829364 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074389739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071508546 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071769569 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071566197 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070102896 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069899704 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07138055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06905237 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069365661 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069577839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069906134 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071478964 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070290856 seconds)
  done (took 2.627155884 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078111293 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065898347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085435111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0670977 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067888179 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069852242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072046654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076158815 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069710288 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067327602 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075952896 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069995307 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069931714 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067191548 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069662009 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067204391 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069931556 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067541587 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075797185 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072472024 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071942206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07568531 seconds)
  done (took 2.804431254 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078776871 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067519028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082952563 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067598264 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062342817 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065310149 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071538783 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067577798 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072126204 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069215179 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067607939 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06565321 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071295461 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067404574 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071193716 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06726337 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069415407 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067300725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069141559 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063199028 seconds)
  done (took 2.617177456 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086446147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067551525 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067617951 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075415877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066512009 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066931518 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074512067 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06683555 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068161909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088922501 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068908631 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068632074 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076729505 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073337196 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06881022 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07665181 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076203508 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076462932 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06836188 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068584417 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08882424 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068894656 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07649874 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068539064 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068607659 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068916696 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068797502 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073509703 seconds)
  done (took 3.266867544 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066200408 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066445259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063999717 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064925478 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065163548 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065360759 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064615788 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064671769 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066860545 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065059816 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067184114 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067342685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067238423 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067429853 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067158967 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06767414 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067126146 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065122086 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064800949 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06452138 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067289507 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06705542 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067541032 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064574179 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065042594 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067589008 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064498568 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06450984 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066306917 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063316952 seconds)
  done (took 3.214535378 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074302336 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073083754 seconds)
  done (took 1.386775807 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062744696 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080183294 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063421478 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069511173 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069467943 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066180447 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072806006 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069156163 seconds)
  done (took 1.784373207 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081459468 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078395756 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069546426 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081715064 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078039152 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084223869 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133483183 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066700996 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072327717 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063648607 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079195327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064504724 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071861238 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066117999 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071117378 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071806572 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063888698 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071810019 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068361852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064392458 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066529501 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07417802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067680319 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061311019 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067370596 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087085042 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076715552 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067100415 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07095567 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074805262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071902597 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060095959 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066456209 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067738867 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064518988 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075293307 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081050794 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068963782 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074254007 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06750626 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078473189 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062661624 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071554425 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073298306 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077716949 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067839529 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068174118 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062468807 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065154968 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069974162 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063189271 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067917158 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062238163 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077082542 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071381779 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078103472 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066079576 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06909627 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070695663 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070595448 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074375741 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06920756 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069940167 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067178918 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073828421 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071808438 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07672408 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062726325 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061377883 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065464044 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077897612 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090312163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074027262 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068419452 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068554211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065382519 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071012964 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069107479 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073637278 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07689374 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068366336 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073523817 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075280106 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067888775 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070362002 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076479046 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065515906 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071115433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065397807 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084541032 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066722181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065374042 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066335211 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080326898 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070474188 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067267978 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065142705 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074080772 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061792435 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067718005 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068189749 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067991059 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077594481 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071371997 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071565216 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075613992 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074037509 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067114186 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069607427 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063905537 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067528995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066086578 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073810884 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061263812 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06977202 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06719544 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067093962 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199787699 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064603553 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066898709 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074376723 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071871168 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065242135 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063049964 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069316297 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066383651 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069657763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076291043 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066698751 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064041637 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06376929 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07179624 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067885026 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072750572 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073271032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071478334 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062661934 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066173833 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073627889 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077569468 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068865997 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069022328 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074061258 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06912279 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067391866 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07512607 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070781431 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066505347 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07164787 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067336855 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061724276 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069096216 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069192303 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065180055 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06990884 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069455947 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069062344 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067146306 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064395347 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074419459 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06689109 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065462878 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066618394 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065172617 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076883016 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068322452 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061315049 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063638025 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076157475 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063808404 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066389161 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066148117 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067526164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066695451 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064578212 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065932819 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068499956 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076859847 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071711882 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068410242 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073144543 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07926591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067760668 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070563377 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067583557 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069027514 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068692169 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076243244 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073581731 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072484531 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069996404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063789922 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073171022 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075267862 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066624269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065586752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066848191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07195836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073195466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071908042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068724617 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066047143 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068319088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071242186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071012857 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067491916 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067168828 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074645645 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066321137 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074536142 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067969866 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076193877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069798872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062985278 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071487718 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066390941 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073267178 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062821821 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065758047 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066799827 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068933255 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066329953 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070137276 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061696473 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07445905 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074817794 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067612645 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066445896 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066711281 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073639997 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068539066 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070601162 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070253604 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072890614 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076997417 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067249807 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070126005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077471367 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066812977 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189723592 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073183624 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066787256 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067817481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068230037 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066236768 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071643762 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077870986 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07560551 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062911599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071539348 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067104302 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067607717 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064141561 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072993822 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071706672 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069907245 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075151995 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07063889 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067584476 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070146182 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065667786 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066639108 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068149236 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070179602 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067738179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068118485 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066091117 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0697414 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065765411 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064700475 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068871019 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065600183 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066713556 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072008119 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066647824 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067427416 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06946029 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067364443 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066743707 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066603942 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066529278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069023678 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067284758 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06680345 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0694212 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063358827 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075818141 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067834946 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076347785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068918292 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064867642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076410276 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070620367 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074088057 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069207284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069475203 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069695873 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067995296 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070928187 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075024719 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066020518 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079498848 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076672352 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068578 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071030832 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068807315 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069192593 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067259117 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06890311 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068887538 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068653652 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067263655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072403819 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070871137 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068011674 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069744019 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067769143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066310622 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067821315 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062659662 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067551753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067740162 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067603991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078573438 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069160359 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067722344 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06721402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068805031 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067407891 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064763751 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076461027 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077586493 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067950016 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073857711 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065615732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068321603 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078836705 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062561323 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066440104 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066086254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065946119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075363623 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068630482 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077166529 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06775708 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067156303 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064918552 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06858474 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066456461 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062144047 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064985359 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071189367 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066457514 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065712062 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067235355 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069404097 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067690276 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076713897 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066054581 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067983797 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067081003 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064045537 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06617004 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066059833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.202654053 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070462433 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067446149 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066401939 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068810417 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069940809 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071106623 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068572898 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070887369 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078097325 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068893391 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071208054 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073569676 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063970256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071667595 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068688956 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068687452 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067592071 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072537881 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071283481 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068653252 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075545979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06657446 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067481524 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067178055 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064696515 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06668464 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066037674 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066440207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066216886 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06778782 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075111873 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066162021 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069517892 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06683939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067197923 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074006416 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068041087 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06984548 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074031155 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066443186 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069020035 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075212753 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0715508 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070383723 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068559932 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068702465 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072502354 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065738851 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073685735 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06647712 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067050852 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067821421 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064860258 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065389351 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066597329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065488808 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073856966 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067419613 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066000596 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065323865 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063996651 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067643554 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06983594 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07413079 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069573097 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069535851 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061737646 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063777617 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067347038 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064705531 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068114097 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06922335 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071998165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068082627 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066873646 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064724733 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074623359 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071457394 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.06960733 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064199639 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069451959 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06648326 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068466252 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066996807 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066380449 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0672748 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070215791 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067886188 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065499609 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072927046 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069646463 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067117311 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067580483 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066621066 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066313859 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061549992 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066808209 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068517444 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071488137 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068558642 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06654875 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077130665 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063883061 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066229539 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068947187 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064827662 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069977039 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061132238 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066960598 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066319382 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066776996 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060926089 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064580366 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063405081 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067345014 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064086516 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060142015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074991442 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073355907 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067444985 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063787423 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06373685 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060320928 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060389459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196344627 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067723074 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068937131 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076412861 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065406627 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065484337 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061301402 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066598484 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069503691 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069543595 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063863578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061126571 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065936743 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069686774 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072308182 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06526246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065972841 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070889978 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069301952 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064769361 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07047292 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063553311 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070452851 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079144424 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067195324 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069322247 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074573736 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076642458 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069250469 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064324476 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069626587 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071304179 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069056514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070026723 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069724673 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08280256 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069592741 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066378969 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065323337 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068968163 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066326322 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074955344 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067682012 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067362767 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072654769 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068744098 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076088063 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070065116 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074777938 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070224633 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070196258 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065767959 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067123332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064898838 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065577528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067826821 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067719674 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072620625 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074656352 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065582871 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076931491 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07635018 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068397958 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0633849 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067010196 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066639111 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061639182 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067456554 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06523102 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064375753 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064284427 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066152146 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069292254 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073561142 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068915016 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068915469 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067859624 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061946941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070014077 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069993626 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068430136 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064778236 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06794625 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068117227 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071808295 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070965826 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06510356 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069778358 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069316672 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06864996 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062878348 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074691378 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066602063 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069933797 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067057597 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067672462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066740306 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069661561 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071500397 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069233591 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070079301 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071542035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070063827 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06496751 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064637817 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072936101 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065521829 seconds)
  done (took 43.036538743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103013512 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065092717 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063530145 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063561911 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076378025 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064476238 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063764497 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064638442 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064910812 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067278972 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06367886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063724792 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072832552 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079673596 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075997422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068798025 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063420695 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064749794 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063781259 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065035164 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07274148 seconds)
  done (took 2.781844033 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074935149 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071656004 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075360205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077239865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069015978 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072489799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074646331 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072366729 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078056647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068971261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078620983 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072948977 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06903382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068883902 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068761404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072571473 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077933629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069032785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072448446 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083293467 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072785881 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074359615 seconds)
  done (took 2.921278505 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069159439 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067230329 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070081538 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062832242 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06734664 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062912002 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071365307 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065221756 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070958435 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06716307 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066955478 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066650875 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069232025 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063240295 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067950814 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065632744 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110344281 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07119169 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067583803 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068450539 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063015163 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069625789 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063034178 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063760697 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066591052 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070794147 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068491789 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06540083 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06667133 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066822401 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066555864 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063440838 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067024587 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066100615 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06499378 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064306865 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065241398 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065785359 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060947654 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06358093 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066054956 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061423127 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065607333 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066946115 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063149607 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063522044 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066879543 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065099521 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06060042 seconds)
  done (took 4.591207058 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080753384 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110788768 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069082121 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090367735 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081516046 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077881941 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070993414 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09182849 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064990731 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066242215 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083126919 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081310069 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067164038 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07205067 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071082657 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067055866 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068521216 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066174776 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071426781 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066702681 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071397798 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073814381 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081755051 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08039448 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070664437 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065240506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064684294 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069834564 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077528734 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069671139 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069741835 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070575777 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07978686 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067202802 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064463776 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067231929 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081185332 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065333484 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067452722 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062780091 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067332677 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06925915 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072122577 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081161757 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06576786 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070536025 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065219705 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062554328 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078078346 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067656915 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07370936 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080656245 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069032654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065433348 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069524002 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080207275 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065335682 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063523295 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067996839 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077103221 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062828378 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069032511 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078833346 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066654505 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072257371 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080723803 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071430197 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070489293 seconds)
  done (took 6.374340229 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076521955 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072014018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082648069 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082125569 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074326816 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074377233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073826624 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074040234 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073737566 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078959073 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074082522 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09532551 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069373537 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076587694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074196146 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074423145 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074600226 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074331785 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073608212 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073927272 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073965728 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081899872 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07408104 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080269477 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097825005 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067486103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071480572 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0721151 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080288932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071962063 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078803177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0718316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07224326 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079951013 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079332693 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071666857 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064647653 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071474471 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071823515 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071588527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067149063 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079405796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07152592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066953437 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071794464 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071152608 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080136326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079344088 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07431473 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076233359 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071558939 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079391927 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071522686 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071947439 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079368861 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103763354 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079304465 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07913484 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071700822 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079287461 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079519754 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085310354 seconds)
  done (took 6.043888125 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083723846 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074767161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076529725 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061353509 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064633945 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070073928 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065608176 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066407345 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076561609 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076033161 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079089634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073153781 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073658037 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077037595 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06914002 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072660182 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06955213 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06894394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074106591 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069265332 seconds)
  done (took 2.769991644 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075806531 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083060367 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06835717 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07347799 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070594796 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073552013 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069904301 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070883223 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068708624 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070271395 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078025212 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078142524 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068749568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073341711 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077619672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07308064 seconds)
  done (took 2.493239226 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076551064 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073023648 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080109054 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06602314 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063965315 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062118122 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065812019 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061139888 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062363021 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077347864 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065585882 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067893062 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065719431 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064224601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062332098 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068328212 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062115751 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063137688 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06550577 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078086103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076231623 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063942059 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066242709 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065588903 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066122445 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070604287 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064946043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06349408 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062934121 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065642789 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06612456 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069475569 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062755539 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063445949 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064418328 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063075235 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065327368 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065671352 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068059118 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065092296 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063482799 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065246686 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065433987 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066864925 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061770262 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066093532 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061673456 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067245391 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063328804 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065665867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065122238 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067782711 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065607067 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071872868 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068910894 seconds)
  done (took 4.979256048 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080253484 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069379526 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061377071 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063819008 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068776283 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066937019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069160162 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066886525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070562232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063601658 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067386243 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06788046 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067155689 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069025131 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067155206 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069351096 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0614892 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067428255 seconds)
  done (took 2.550004866 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072670283 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068517316 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074744213 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066946827 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065719962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067868912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061766238 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0645853 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064149028 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065455152 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065163956 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06819688 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064168839 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067941288 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06503531 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065661797 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068124481 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064361026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065249943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061523567 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067865449 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064389958 seconds)
  done (took 2.784098114 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073436917 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093716891 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.140943627 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085886196 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083017864 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080172782 seconds)
  done (took 1.884715782 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091013619 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07892854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066571688 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088116899 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072691854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067149408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06687003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067140072 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075896439 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075600879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067103464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075645659 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075934514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07537977 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07307713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072813601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066968351 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067371642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066046518 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084023574 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06737236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076019842 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067548364 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066710504 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067501415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075334824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075677386 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075807322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067203291 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07559286 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073323998 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067271278 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075942671 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075839475 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068892232 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075920756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067519718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084250012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072917567 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075135548 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069532636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073368177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076139128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072152824 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075820603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068680342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072042706 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067329515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067424188 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086372501 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073397852 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07510616 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073313339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07637593 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075737208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08620543 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07585127 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075218031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073251275 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07824543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074817113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073091704 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074708143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07598516 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073049501 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0749941 seconds)
  done (took 6.191740117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082989043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088591789 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067882798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077009188 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075472466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067222551 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067424733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067604138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067761591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067162372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108129439 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067779608 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07539043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075753308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067714207 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067687499 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067660337 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075292459 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067542201 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08582891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06731215 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075489682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075336431 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075076434 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076174471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073311422 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067500103 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067458425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067276661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067657331 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072530017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067483981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075354459 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067075211 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075462683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067763525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067420431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071980513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067416719 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073103091 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075396242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083819276 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067475807 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067118289 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075754817 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067645913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06685461 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066725559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066893982 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066746918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075634831 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07563592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075690974 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075207456 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067312862 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067373932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06747491 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067810918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068589242 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075112276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077228237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069165762 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088270783 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069486769 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069084206 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077160597 seconds)
  done (took 6.117124976 seconds)
done (took 129.460899612 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186789641 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167836777 seconds)
  done (took 1.670633103 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071477584 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099849491 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079388911 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130936903 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066700204 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100127865 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099162005 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077616991 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066374841 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065997555 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066188036 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068566237 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131014832 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066414327 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06604074 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068661209 seconds)
  done (took 2.65724523 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098998882 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164068556 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100346418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064903623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09641238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072759885 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064465301 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074845754 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070815708 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065193872 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073229243 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070596674 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06499359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070602884 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071201386 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072920866 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064777051 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073016686 seconds)
  done (took 2.77488921 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104632228 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093895438 seconds)
  done (took 1.537455739 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159719877 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104944464 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150311793 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344741924 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16697518 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230415578 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126717621 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12713852 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116619371 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12343831 seconds)
  done (took 2.985756607 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100039645 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155250556 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.258105627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114751521 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072134107 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09458758 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115949092 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077656089 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080913395 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080291564 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080121847 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075976644 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098849007 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073456815 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07358992 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075933398 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101767946 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072012769 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074114589 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076502132 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098871355 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065619973 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073564482 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071963171 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077227209 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077138367 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06579446 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065122295 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076420302 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073857001 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076786409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093395125 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077115149 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106494648 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069836289 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10779848 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076258406 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07340705 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074163537 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073196442 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07864092 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0783924 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071614556 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07582228 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06472585 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076004621 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065311506 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06562477 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077654154 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066590337 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077773029 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076842541 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106515749 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066768205 seconds)
  done (took 5.940428645 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103756671 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104567424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070901518 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109086155 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09730712 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071136637 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102921489 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091296235 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102474208 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092438116 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089237306 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070509072 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082062498 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083343888 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10932721 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101750486 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095086871 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071074786 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101863493 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102754351 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068273835 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094405554 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090669564 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103342377 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067278438 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070336621 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068098168 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070494146 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076715696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078477616 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06969279 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102100823 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084517607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078280539 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066970439 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067786517 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068264593 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079562458 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097556515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078811892 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077620763 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067468837 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068028522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069566834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09057914 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067588745 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078665324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080178514 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07932648 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069414647 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069961211 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067771294 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069513112 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079686231 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07738406 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080560263 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079852362 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068313299 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068047885 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071604697 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080917266 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079356006 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079641162 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092576568 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079604627 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06833615 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080551682 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084749666 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068731459 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069964107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068690537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069981133 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069824933 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078599309 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07851057 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069742662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069395274 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06843564 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080276949 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078369844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068097025 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077602392 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066820452 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068659299 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070213221 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069745909 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07729402 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079423319 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069847801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067554668 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068871294 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067678774 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066294211 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075726227 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078091463 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077563672 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077632019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069074379 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077864044 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077151484 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068754315 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077558999 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067514047 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06899406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068261415 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076722859 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075610036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076907256 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06805857 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066950829 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076237619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078046377 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066609034 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075594899 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07819442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.0766546 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066085894 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078891452 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066913065 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07726716 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068150748 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077399224 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067219428 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076892713 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067239611 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066426638 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067199358 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077048771 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068445513 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067076634 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068443979 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068552419 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077420844 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080447013 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069166802 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079072644 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075563558 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068029587 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075975776 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066508213 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075760266 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067362381 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067464515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064796552 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07794061 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06555581 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065332979 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067799365 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077899896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066368608 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076180787 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075056162 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064989295 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078331005 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076413164 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073430441 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07600116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067615921 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065997707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065238132 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067481297 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074739373 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076875283 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068731563 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066403469 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073686707 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076359723 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065293127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074966332 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075511424 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07479611 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066753973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067840868 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076592723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077512031 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074678821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074891854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074507204 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066867963 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074410591 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075011603 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065972755 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082218488 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065989865 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079165344 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0759251 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073479553 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075489984 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07659335 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077008189 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076250589 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078986566 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065362212 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066097775 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075249612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065829456 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067426605 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07453805 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067642569 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067556615 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08027179 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067148671 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076580119 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065641386 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075407079 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065099677 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067920794 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317062177 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070113153 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071457546 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081256463 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072878628 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079867244 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083790067 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080795659 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070673239 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072026183 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082038655 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081279195 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070306649 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070189689 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072250721 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086129686 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07939737 seconds)
  done (took 18.492858825 seconds)
done (took 37.404676352 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219510141 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155297743 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182880328 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120357833 seconds)
  done (took 2.144552939 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125912722 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103545929 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097019522 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067464903 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103669419 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066674392 seconds)
  done (took 1.968112901 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320606859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214579104 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185716662 seconds)
  done (took 2.119365709 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2069582 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19339393 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.404920223 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257036227 seconds)
  done (took 2.585323611 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149820662 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090610475 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067927961 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083783568 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135675987 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162302593 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102913867 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12720366 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079107485 seconds)
  done (took 2.462886971 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148221231 seconds)
done (took 12.8389642 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.234485637 seconds)
    (2/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.183277613 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.243358776 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171610934 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109558095 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.148838262 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102557016 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142689274 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219112739 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208646287 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083940309 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082795602 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091566148 seconds)
    (14/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073605733 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151015543 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052429886 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094233652 seconds)
    (18/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.136745644 seconds)
    (19/309) benchmarking ("sort", Int8, false)...
    done (took 0.141088875 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078971857 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073715885 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092863241 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.150978479 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095819149 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173890648 seconds)
    (26/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109451217 seconds)
    (27/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.155287281 seconds)
    (28/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.161709058 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.117579003 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.160913623 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101880434 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096244086 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078369701 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192062946 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075694303 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.163789553 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068144203 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082204102 seconds)
    (39/309) benchmarking ("sort", Float32, false)...
    done (took 0.131178299 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074900479 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071100961 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101839437 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.201338055 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110535519 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090777891 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.163117574 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154729386 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067809096 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069215125 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164983198 seconds)
    (51/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102192632 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067487655 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086188326 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07501052 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078149607 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161891983 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074057136 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088782889 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078718177 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08010727 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065745852 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067610961 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095851857 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076140762 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138844576 seconds)
    (66/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082116639 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100904445 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066003497 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052855891 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142336912 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065460679 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077431399 seconds)
    (73/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18430827 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065625144 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088205181 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096570241 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050776663 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.154535186 seconds)
    (79/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068234187 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.222435482 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053771072 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.352916454 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079799336 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176771407 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084241466 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07432221 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18357273 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077530913 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072247391 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068543693 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189514599 seconds)
    (92/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053348977 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087593137 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.066974233 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17542437 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118637354 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142111075 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079620864 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069212674 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156941206 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.17031992 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075905108 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073145128 seconds)
    (104/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079255883 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18640343 seconds)
    (106/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.172514545 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.271386901 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107346749 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149763899 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.153217176 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055597868 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074981521 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09270313 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056389657 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07437011 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098326681 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056476747 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143509037 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091913445 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097629091 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069265857 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056189888 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078576686 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094848034 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.166440523 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067249262 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068694519 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.133570631 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074391754 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065425226 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099482474 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180566394 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074293625 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072577993 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053965387 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072622287 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073135234 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140099005 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052942741 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09206041 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07371059 seconds)
    (142/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077148369 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063530442 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153545578 seconds)
    (145/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074134823 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.178215411 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091087207 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094101722 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063255635 seconds)
    (150/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083320433 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067245524 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073636318 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157666881 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051247507 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076300363 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175423231 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073092546 seconds)
    (158/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097854436 seconds)
    (159/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112822516 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079373575 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065080217 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06668166 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086589535 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051684275 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072830846 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051470185 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073295115 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174199333 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072923738 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071675398 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072549928 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106755255 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050878154 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150908592 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090879279 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149384836 seconds)
    (177/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068428931 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076418795 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065048993 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071333873 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070063714 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064325791 seconds)
    (183/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051964574 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073501039 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050691341 seconds)
    (186/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07852841 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07276836 seconds)
    (188/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051547863 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202551559 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053392898 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.15416587 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131038152 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145221994 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097112153 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073315212 seconds)
    (196/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063146728 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067536322 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094726625 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062258872 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051648005 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087228047 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053125737 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065395304 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078330998 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072860723 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051727234 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070115435 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075950512 seconds)
    (209/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070256095 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099942468 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073949559 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072904682 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052430452 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052754463 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051977792 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095974565 seconds)
    (217/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099470935 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0550027 seconds)
    (219/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069517895 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067429935 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112692665 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054195996 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073123481 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090676377 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082252583 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 0.129751674 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05611389 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066093733 seconds)
    (229/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055236949 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053853624 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077198208 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111335838 seconds)
    (233/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065792765 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090193876 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064371228 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142543974 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052558785 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065392365 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136470798 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071302757 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052754733 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092165074 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118004034 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065338135 seconds)
    (245/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068190195 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172036715 seconds)
    (247/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061196675 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079043183 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065271395 seconds)
    (250/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112015547 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105499324 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088514987 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051025179 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183774255 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067601714 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051189539 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071892594 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075024614 seconds)
    (259/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119211283 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052140281 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051246038 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072457669 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051163774 seconds)
    (264/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051989401 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065866808 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051480269 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05090354 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183568694 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072861751 seconds)
    (270/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053114795 seconds)
    (271/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060507144 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064851583 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065882131 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13776506 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075073231 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068872001 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053068361 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07277573 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051454512 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067753722 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073876853 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06446864 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052448409 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072731222 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06636622 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063784452 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07299328 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051368888 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072532876 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066215975 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05271912 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066697235 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113348506 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051670153 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064881215 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070144717 seconds)
    (297/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061516732 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06818058 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06527592 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065570371 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060178571 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051429113 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051422911 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088250447 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070486502 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053264792 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071102385 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06645103 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066460837 seconds)
  done (took 30.972362847 seconds)
done (took 32.392260467 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089382906 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096810461 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077092529 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095842843 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083390151 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079407699 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074705299 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079034252 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082295203 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083963646 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081020988 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057174993 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076050288 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076229337 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076574152 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094632355 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080189825 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074495002 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074911844 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067128261 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074784955 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067948912 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06931269 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056765706 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07999637 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07411809 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074520792 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076331224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067572701 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068110553 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071199846 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075460657 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067870094 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080111013 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074166214 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074825696 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076650635 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078056874 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06933177 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067590462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076128407 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068529462 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075076307 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076272211 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073625215 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070939155 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073149584 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07724514 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090702024 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067691512 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074493962 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07543386 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076378222 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072838473 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069120426 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073013382 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070660482 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090934099 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073101059 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067878773 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073731918 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073748888 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070520087 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072673731 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07242187 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074469681 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074493541 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070963491 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074353043 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070311372 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06622232 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074648783 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07028586 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067823498 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077677544 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079085844 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066399302 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072917703 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074301527 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07324196 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066629299 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070245257 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068672046 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073090856 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070044585 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056618934 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070330251 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073475916 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065877217 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074507894 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073147513 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073995553 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069094794 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077114922 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06702128 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072863531 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067690402 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067438043 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069480103 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070673335 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066800789 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069774241 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076114458 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069226787 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072781725 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081192625 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066880747 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073285794 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.0663558 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066632499 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081256331 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076880456 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066904266 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069460644 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065050366 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07370654 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065991256 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066604282 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066600394 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066740803 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07230456 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066886742 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069647663 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073817507 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079179095 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06652423 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07034893 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069591882 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067101657 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07241642 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066934818 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067015913 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201963478 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062132009 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069271388 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067624145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074913689 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070742511 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07538595 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069388715 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075505065 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072768682 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073855536 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073081837 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066217282 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0605408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070712101 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070479877 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067647509 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066402891 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066787254 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065230085 seconds)
done (took 12.711784725 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068503215 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146033321 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102946282 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098820938 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088585615 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066282979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075736308 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100971125 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067321032 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102137835 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087049667 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084860244 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111649428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064245067 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065455111 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069186104 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067612355 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081373217 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100162285 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086105552 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115442804 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064712002 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094504307 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089590701 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086869831 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092006865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066494244 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069556428 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068994843 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100091834 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086065893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06938333 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066422436 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099735521 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092167146 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082870366 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066206367 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081911793 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066429266 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065344298 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0677122 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097991007 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079770176 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079815225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069632023 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068740307 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066843173 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083212337 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088697141 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078313701 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086121393 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102571289 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068582537 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066169273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066396837 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088682706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06715577 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070533442 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068002402 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070090524 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06794065 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071337508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083690644 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084281388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071857132 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082631822 seconds)
  done (took 6.82903214 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086463311 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092164768 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083255529 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083268523 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065815477 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066528761 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066592528 seconds)
  done (took 2.053827538 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069347835 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091279633 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092176987 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091225178 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085757293 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086844688 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075387446 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066861502 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08010433 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068042135 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087251359 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101426819 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06679171 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072389721 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090258034 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066224736 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089680633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066405502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069246268 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089696394 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068098782 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081497469 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069703534 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066934007 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080364049 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066634019 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111353282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07030081 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067763413 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068969202 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064218407 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106706792 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079472216 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075103792 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066642966 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081014037 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083218044 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065984912 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083692712 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073398017 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081981678 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068387254 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069123019 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066466843 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073173825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078947013 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069220981 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06914403 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07094784 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088790924 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06906448 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08255485 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072241209 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071798997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070149621 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072130716 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077388272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069461118 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088368756 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069947443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085895711 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085347885 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081894498 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085670563 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070722339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082605761 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082541952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070621419 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070564034 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072422936 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085543621 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066611549 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07054185 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079737989 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070038136 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091817046 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091920058 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069702315 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077959991 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068886555 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068449585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068567904 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092055668 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071376341 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068595586 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073470396 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07155563 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06694903 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067557861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072363019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066781787 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069943565 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071769953 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071666825 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071061599 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084931682 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069007836 seconds)
  done (took 8.901796916 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071471039 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070001535 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071702617 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070096604 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07013958 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070670956 seconds)
  done (took 1.960607691 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096606135 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07168224 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083945311 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074831397 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107891221 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089851414 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090308745 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081987191 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086880488 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082041687 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089964307 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091563077 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095761818 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07524547 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090013921 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074888531 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090236184 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078310573 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080999811 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076084389 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089990506 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075416861 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075899163 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085092713 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078713537 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075178015 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069607556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082556535 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08121712 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081991055 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075186294 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078249944 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073536731 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081944985 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090100634 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073657667 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074925352 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079908165 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075499215 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078641015 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091102276 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075778885 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076931744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080023743 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081442327 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07272257 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079597589 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078675148 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089562246 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079627707 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079921449 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073959415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078798901 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079385246 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072882086 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081021895 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079668877 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089348956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074750727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072918243 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069471489 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075472786 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078100451 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075229269 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078890853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077142116 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070004301 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072272254 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072616719 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072083978 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076661945 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068636323 seconds)
  done (took 7.275088566 seconds)
done (took 28.515730936 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548491837 seconds)
  done (took 2.048859589 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612197112 seconds)
  done (took 2.136016958 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.614006237 seconds)
  done (took 8.139618173 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396819327 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474935439 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697275848 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130683111 seconds)
  done (took 3.266644113 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674542536 seconds)
  done (took 2.207625706 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214282417 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196711697 seconds)
  done (took 1.956362938 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381416949 seconds)
  done (took 1.904413689 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127143383 seconds)
  done (took 2.652471509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2653622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167242721 seconds)
  done (took 1.960582997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475794633 seconds)
  done (took 2.000652348 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.872563259 seconds)
  done (took 6.401411224 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218799043 seconds)
  done (took 1.790941915 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245331133 seconds)
  done (took 1.773284693 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.705415112 seconds)
  done (took 3.234694123 seconds)
done (took 43.008050916 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082009801 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084048935 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08127538 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077301005 seconds)
  done (took 1.839479675 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079222073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074367691 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078601209 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074864642 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078647853 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074891688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076253876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078820695 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073816166 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074868447 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074697856 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074389048 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077319963 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076274524 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071935145 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076231334 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075380958 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071905097 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075032132 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072019853 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070718672 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074512811 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074803869 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071011251 seconds)
  done (took 3.330173663 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079898858 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075002614 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076291069 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074516598 seconds)
  done (took 1.84650926 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079652817 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094156368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091148174 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079715629 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094528871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089074591 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070889197 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07121437 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074857085 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078857093 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069976342 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098531872 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090221456 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078916855 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081024442 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067140902 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06799315 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086377328 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076593985 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077404295 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069665283 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077021337 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067345785 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087626629 seconds)
  done (took 3.455522531 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080176411 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105041917 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080286291 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090150093 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092241076 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067044456 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077192699 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091460067 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125507712 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06707753 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071749005 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067214556 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074191591 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067243993 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077769708 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104256589 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107346234 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067588751 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09499449 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064859697 seconds)
  done (took 3.217521095 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074626759 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071485718 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067696381 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071394868 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078107371 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072837031 seconds)
  done (took 1.981606758 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070654766 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069114901 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069430721 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068837817 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073435301 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067860519 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066515221 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067161063 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066429683 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068668087 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067934956 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066336295 seconds)
  done (took 2.362882549 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.434519293 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069283421 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068966576 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06534514 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070117359 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066075071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079493631 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.0674904 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089752969 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066486087 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065566204 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068320519 seconds)
  done (took 2.753810357 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210015133 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078347652 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242028948 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140372598 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114817364 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118876923 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106960041 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1134965 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14273567 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101345102 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167314397 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167949736 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108268629 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138074946 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091365872 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097896649 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156171066 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161357087 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102844083 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164556641 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143193895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124163369 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145881083 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100483401 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105572221 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120921347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070322457 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079428455 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169343406 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130750043 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146010685 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112142232 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095009996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175880273 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171714994 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140479024 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132781128 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082948677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101661836 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132257435 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198631627 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088305118 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163526004 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243768116 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080671319 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132735488 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122942135 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12306291 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11019454 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092460402 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148961142 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188412043 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141941503 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090115943 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115630166 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118856277 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117936274 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105990807 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185128914 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165026597 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129955231 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071543359 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098295848 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153335734 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130976674 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108719075 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12619143 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093292366 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132724918 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153384225 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117618113 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142744715 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128213801 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087623867 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11870281 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139499449 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129879583 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169806633 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12324539 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072204295 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124566495 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103891926 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080638848 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141925404 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074742173 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173568475 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097427787 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105484403 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112176897 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108129582 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109257058 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162478599 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144349257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242325653 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066077161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103392688 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119582314 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148251353 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086651409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108237029 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116388272 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077300457 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139639316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075291734 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123479007 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076647474 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126292461 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13381137 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075443293 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12394435 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099748253 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100992795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133607653 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159130413 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08821331 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081481785 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165978911 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121955823 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104178172 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142989509 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155441706 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09802277 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101569856 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14895666 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17858544 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089801772 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1619063 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106661405 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083095788 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086886559 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123057697 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111884006 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121820934 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082295773 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117988028 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167583924 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074262064 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094491763 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132750792 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077793095 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080302564 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102391921 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099494516 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094114222 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099620832 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103662918 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136564795 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122401967 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103558385 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267316999 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098709653 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17243377 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092190141 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103268407 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106726344 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072378837 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140621224 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161162587 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082272791 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166908012 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127202265 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107558557 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119867458 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084026976 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143120946 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080738296 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072068298 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147757717 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114305055 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112995429 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152039899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107154232 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129792531 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120997715 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13624289 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134015374 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129168339 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10508486 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089369174 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111427836 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127351192 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.0747317 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094227338 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08271799 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106389957 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095165822 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082596238 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141743284 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126162078 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101562326 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112515106 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098926098 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150787399 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078860211 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1329561 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122614418 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096274743 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155470249 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153895508 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134032248 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10230391 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148117434 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072242603 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075520313 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090295725 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267411479 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082633295 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083817685 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116572931 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148441931 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133527622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140892251 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114676175 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125208473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159915463 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071405913 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11774519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151192847 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124357615 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106985439 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090984067 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098595182 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146307139 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110910134 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18325586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113486819 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124980206 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151722311 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099035747 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07939488 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105790697 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134372993 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103531191 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144228883 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099454531 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089348046 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110983664 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073690833 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099642651 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126909767 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119350352 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134682849 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114113752 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132217507 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077132536 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116489568 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119523897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121315554 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063390797 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11879522 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159993236 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093452364 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118130826 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151679386 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078736582 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12373535 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319131074 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146826104 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084993127 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111179179 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118010468 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127451691 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122911785 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143215852 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112716001 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138149344 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111841004 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087038042 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090070807 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100984255 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108208118 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096893038 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109790105 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116708345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098150319 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135789234 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105703164 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112737109 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11995094 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098154789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092073428 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099436943 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175880298 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12261347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171545043 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09778269 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143681015 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162622275 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074090638 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078808638 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077618082 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140820259 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084002802 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133854879 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100304685 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10875669 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126934313 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145452979 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09784225 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070552695 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107726483 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133565239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111518175 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097358054 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105970522 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161649968 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09926335 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078428891 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112607225 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1039706 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101269919 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171278302 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.201006161 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097932446 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07552642 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081956236 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131053017 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15494744 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082378587 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105990201 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122075228 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112780176 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132071845 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10495654 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102133065 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117788675 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152933634 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1319802 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092722703 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114016287 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13223147 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159594338 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108966375 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096850115 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171272858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150856837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159876883 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089044344 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129333907 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113184397 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107520658 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138846632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083025974 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166374425 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08313641 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141363318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106837057 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091678933 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130962529 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098713987 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088565534 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147932507 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117052222 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08192637 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077287114 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117282841 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119223405 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105998863 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074882346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138773557 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072206842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131111275 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167085634 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080726434 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102960819 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095087756 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078562141 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106010352 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10116351 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08763968 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097057509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166937613 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085574649 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146412924 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140343342 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109711083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131676579 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096430549 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631986006 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075803533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147117229 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113019621 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165396576 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094632734 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113763176 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106276711 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118509525 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138841033 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101261341 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173639601 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126819487 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112545399 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077668421 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099313505 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099022657 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085772335 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101349264 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109847042 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111618267 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090036513 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111763079 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118900704 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081737051 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096047621 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155715102 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11631058 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143041909 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140006653 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085542206 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117647708 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137203977 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077803904 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118193723 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146289153 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102745596 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095393934 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078497228 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.350850862 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171857138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075682744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167096073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125957689 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114740873 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117676375 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119057756 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136371255 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113992333 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126899558 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097847343 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115524151 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117671869 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08430919 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080403646 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108980008 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114858854 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101370448 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102379634 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100356144 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153625697 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071052517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095704428 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103497387 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14658491 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174067265 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088478353 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082294214 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118840845 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112133122 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113381267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121045074 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079968381 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081984782 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081726516 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076107809 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108138871 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11213581 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104886125 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110663637 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163557057 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083126386 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225618733 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097339877 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107455629 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072244751 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081334442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098234109 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10003747 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11315794 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102369098 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173307705 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097386966 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092434705 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095273623 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075240399 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085253906 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13171154 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258633046 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122101806 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098469647 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062429702 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107759497 seconds)
  done (took 59.094648268 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110262121 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081922306 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096757099 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149156266 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122088855 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211340363 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156731835 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19774953 seconds)
  done (took 2.795341349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070984545 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097589596 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102564866 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085454245 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066242996 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068681506 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228242089 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082881742 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067400334 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090341604 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080834503 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069702485 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420664343 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067869128 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068286926 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062251396 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066965592 seconds)
  done (took 3.456981046 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370428766 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.368154328 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370800849 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074745673 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.809586936 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088490905 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080244149 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095657617 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.0711046 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.279268858 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700980234 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091788513 seconds)
  done (took 14.070891443 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078619073 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071531534 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085866818 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085881282 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073831517 seconds)
  done (took 2.055667183 seconds)
done (took 103.827380804 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082986261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409422972 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055899413 seconds)
  done (took 2.157264593 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085819506 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087629927 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086807966 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086102638 seconds)
  done (took 2.021533863 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076766998 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078401681 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.087185986 seconds)
  done (took 1.907926921 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228493947 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.143400646 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089420623 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084616638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079907241 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081448637 seconds)
  done (took 1.919961637 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07482177 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077571399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074675208 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078240144 seconds)
  done (took 1.977629073 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078093645 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054288047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05660557 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057562053 seconds)
  done (took 1.917351609 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087948862 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081330766 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080841621 seconds)
  done (took 1.921609983 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110254521 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087199522 seconds)
  done (took 1.867339291 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084578078 seconds)
  done (took 1.7592267 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102258657 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.116848788 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132364617 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113330607 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140186856 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11188622 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088221827 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089300951 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079066434 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089725916 seconds)
  done (took 2.73516239 seconds)
done (took 22.390681548 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080706755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371109794 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363537392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094341538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669928975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35612363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.0243869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095505921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116801389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069929193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087262052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654935752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98368491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325644987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972952398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.352092216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651988819 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070593607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070051468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070622689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012253745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069788505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070017438 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070797256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649868221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373685656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070904221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317007229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069106106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069010686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355181912 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067694115 seconds)
  done (took 16.331960524 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073104681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121158241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076255442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087432191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072433056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071746489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073681457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071318858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122338455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070271225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087525685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070284417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074137559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070806277 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090244806 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070712565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07146124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070689253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071097371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070920449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089716962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070075969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070571064 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071108685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070757916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082269282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070608734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070364645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070564447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072424659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073077183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071372143 seconds)
  done (took 4.157993421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117365187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129100495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076901845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107062732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116100076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072322269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147289853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095552002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130929987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070320816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087818166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07028063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104230459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070820156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090735042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070783652 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071946471 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071402426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071053016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070951992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090839722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070442485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071328877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071537561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070739218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084376894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071419261 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071605572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070980512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072865721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074561597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071400657 seconds)
  done (took 4.420947565 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074375729 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076750104 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08580143 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085511942 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071654526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073714951 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074882949 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071906136 seconds)
  done (took 2.304744674 seconds)
done (took 28.895024712 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080926044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070955218 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074560294 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083587726 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07530445 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081153906 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069328724 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076442965 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074084887 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075151661 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076771788 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069178258 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072809577 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069275019 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075863181 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069796545 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082976471 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074257042 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081960496 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082325112 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07213701 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075061526 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076513215 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081372971 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081920397 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081872886 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080080468 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075256583 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071153998 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072610563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079402885 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087372404 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071072191 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082011704 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070740577 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070249553 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073569498 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070441307 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082057853 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079045708 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071964718 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078321484 seconds)
  done (took 4.866034479 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09023905 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093898352 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087729073 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063886751 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069569932 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067123359 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091358968 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061961336 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06178029 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090991794 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057968515 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06151066 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064697479 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056586222 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060220676 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056376266 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061272698 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055494047 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059529948 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059064126 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057557746 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054002083 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059642956 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06453334 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055996112 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06205614 seconds)
  done (took 3.424204898 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076874001 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086640325 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090701331 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13056428 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106912016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079089102 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080558529 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094816485 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088026494 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069364976 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073878063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096153474 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090232253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075967763 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067564598 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084416011 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081121808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068561537 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07304727 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090613576 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08369576 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083335651 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092048055 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080231552 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066299067 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069108426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070953288 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081133392 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0724775 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076405439 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072152882 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071359721 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.082535301 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081713297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073597155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071319602 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093191061 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079127768 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080093558 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070393951 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071484221 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067940294 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088885095 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122661361 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068432408 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07531219 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075524519 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077014034 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067308821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085326572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077965767 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066844224 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070088224 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066636329 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067164771 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079977631 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069045716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071632712 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078042867 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072205619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086917204 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073461623 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085038889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069338815 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0771897 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068675324 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069689347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065962813 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091982604 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068481843 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107463815 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070376887 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070273741 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078432852 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077576835 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075835425 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069944601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084940347 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080150264 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073424451 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078345832 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073477263 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072931541 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08972077 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071727199 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070068436 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067769404 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074825502 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072722701 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069122819 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079743268 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066876624 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070163182 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083492172 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066694445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068190996 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073328463 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071848538 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066769017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077622566 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071518004 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067727133 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076132084 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067451935 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069737043 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077740381 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073093848 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065901192 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072068923 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073216102 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06831193 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068736768 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069590436 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072419747 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077265088 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075388901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071344293 seconds)
  done (took 10.702701491 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164234419 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154722785 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06993278 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143830053 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075647141 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078949766 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146394706 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093715293 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067514908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068034866 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068540109 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111228185 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105235591 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114663534 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078474728 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067362457 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082993323 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112569182 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148452312 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141912745 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083051265 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076119399 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069667804 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068866174 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069800859 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077880199 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085158322 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076385691 seconds)
  done (took 4.423317678 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083296081 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099691242 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075479271 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088512695 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090133729 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067264928 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069276911 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069298659 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080024917 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078418268 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066994893 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073085403 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07419763 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071016905 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068966556 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074208352 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0746064 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06882981 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070312024 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072309738 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077018065 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080095937 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071573674 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066641266 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074123103 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066545716 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064313533 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084731987 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067914127 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08955455 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065276172 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07438145 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081220968 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068103206 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067408196 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06737071 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066872932 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066981504 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069072321 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066019256 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065767331 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05745771 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066623591 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079177798 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073551429 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057139397 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072781346 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072789176 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072577594 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067561618 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069958078 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069957302 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070937745 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074420822 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072262814 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072805509 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068499127 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065137342 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074751694 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066825742 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064062728 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065537891 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071299937 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065658368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074757608 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072026695 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065557762 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066729637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069040058 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072800636 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067407852 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070160432 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065327714 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069012971 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071462397 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069277688 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067822784 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065666608 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066719478 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067265231 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055416843 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067030185 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053832848 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070191516 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065154852 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06557578 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066949988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071918834 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079212024 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068625215 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072967851 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068035141 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066402409 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070273424 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059992117 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069946429 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082460893 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082520758 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066970736 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065316489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081690166 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07161948 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066032815 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055926106 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074643942 seconds)
  done (took 9.148171842 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097455169 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089996942 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072243234 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085809253 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.093492385 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088245545 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076252975 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078048551 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072094835 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.083674146 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075439626 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078202732 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0702707 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077375966 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092302026 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076707779 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069325482 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076538794 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071547389 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099839993 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081785065 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081777784 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074104972 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067650257 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075207482 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079876918 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088544381 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079643773 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077557004 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074978747 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079503714 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088744717 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073653536 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071767513 seconds)
  done (took 4.448817439 seconds)
done (took 38.697558981 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.771524946 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.941952537 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.761901281 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.120082298 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.076364193 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.775039825 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.920338328 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.759278445 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.01263206 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.798630977 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.997981858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.823760163 seconds)
done (took 65.461281658 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.774498555 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.89370446 seconds)
    (2/2) benchmarking "String"...
    done (took 2.029366103 seconds)
  done (took 5.616376274 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.073141328 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.283968749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.996836555 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.752680649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75672907 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.052070768 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.551531375 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.27260926 seconds)
  done (took 30.361250022 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.896325446 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.949565514 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.387103896 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.422825014 seconds)
  done (took 15.394872583 seconds)
done (took 62.995919489 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.773946104 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.804715053 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.764827895 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.731465988 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.807037329 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.758419229 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.022161294 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.977070044 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.746022467 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.732906012 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.747515505 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.170704308 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.755000398 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.035481047 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.743420033 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.758155442 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.80379624 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.163944006 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.904930713 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.754453789 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.764618131 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.764680075 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.751140738 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.74988875 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779943863 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.742270325 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.187285832 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.751233983 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.346083844 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.745893501 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.769944869 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.173393463 seconds)
  done (took 204.175467249 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.743881679 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.603653764 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.694888129 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.755872406 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.099519166 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.942727437 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.879841671 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.195672334 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.745704525 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768191346 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.91882103 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.738896541 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.959564618 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.765827109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750847957 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.743227728 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.917154999 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.967803825 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.740256454 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.994242512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.742096133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.760031245 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.725794911 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.898395823 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.765345332 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.758611185 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.914514942 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773798511 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.933603141 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.894247188 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.755705611 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766073334 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970244411 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.620379521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.763516804 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.768589118 seconds)
  done (took 168.422055145 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.890433313 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.746946119 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.747306869 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.748584956 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.758515875 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.74832 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869557394 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870979037 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.212194857 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.347536156 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.797847361 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579087377 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.746215546 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816717723 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.758533211 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.748485319 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.762609405 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.776880652 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744832348 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.747961503 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873325405 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.759421264 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.812536937 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756426748 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.748469094 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753825778 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.119231046 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744387359 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756238686 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.009250207 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.747079788 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748705876 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.640985712 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.124578984 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838757902 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748443114 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754852884 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.748675809 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.751609123 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.970918245 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746178135 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.749603245 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.752651954 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928694743 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.746698902 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.872463438 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747368305 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251716494 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.745858169 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.749676318 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.458467824 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.424537495 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.752710093 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.750869397 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751226426 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.753358852 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.750240011 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.750413865 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.757283841 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.430841347 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.821441613 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.752299586 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.750732011 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.753967395 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756605864 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.750798159 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.860575296 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.747986241 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.203511292 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.810594407 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.865984663 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871172073 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752763188 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820557679 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844176909 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.749009748 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.751617178 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.751374656 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.752373015 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836619647 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.748879572 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.873075532 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755617937 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755531945 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802215035 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.823137261 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.749190872 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643196687 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.752243864 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.752129659 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083346821 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822345294 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.749196317 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.750535121 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751977167 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884043789 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870616527 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.524607634 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.75401072 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.461072877 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.752382598 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.892470494 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753042234 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933113077 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.752752856 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835848938 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755762129 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754074414 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753023648 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784688766 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.754153997 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752232567 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.755459379 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.811100483 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.123684783 seconds)
  done (took 400.181394582 seconds)
done (took 776.415322832 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.42626147 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390112847 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502985561 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.420401009 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.397181621 seconds)
  done (took 13.829007621 seconds)
done (took 15.520662208 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.838769742 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.844334784 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.777950749 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.84513924 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772365801 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.843062395 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819910317 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.775267492 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812969928 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.779022451 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.812336693 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778706655 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766732565 seconds)
  done (took 25.159465035 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989481441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990003868 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.821619277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.992168737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.797054126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982706516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.911125276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907407851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902687052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.77079053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768116236 seconds)
  done (took 22.527977514 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993120386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993397661 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825190357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.998941662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801221238 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993512758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.915396595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907081306 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910296579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771466665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766719927 seconds)
  done (took 22.572773904 seconds)
done (took 71.953761981 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.763920904 seconds)
  done (took 3.458016985 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.787588559 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.922760733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.770631171 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.766780288 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.763554473 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.764117672 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769399755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.763529228 seconds)
  done (took 16.004345937 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.761182603 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76116694 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.765663017 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.759380893 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76087461 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.75999585 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.762952023 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.761942632 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766199207 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.760491077 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.762582641 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.761863837 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.75986188 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.760060244 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.764851758 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.760944739 seconds)
  done (took 29.886391858 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.761495241 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.760727339 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.761246459 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.760289469 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.760031331 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.760116232 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.761620686 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.761029353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.7648438 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.760621897 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.7621212 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.760311902 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.76078928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.76168985 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76304433 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.761515655 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.761701706 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.760943173 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.766903677 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.763487061 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.762054993 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.761852349 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.762572907 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.762446032 seconds)
  done (took 43.982043005 seconds)
done (took 95.025769389 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.460458229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.208482678 seconds)
  done (took 8.365789666 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.765648169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.76364222 seconds)
  done (took 5.264595511 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.763296377 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.763994246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.763244197 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.763348707 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.76370152 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.764427462 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.764493379 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.764157127 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766196738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.764544382 seconds)
  done (took 19.338446673 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.764202261 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.765166024 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.762836548 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.765816242 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.765606222 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.762817147 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.764618048 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.764717325 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.764505042 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764436731 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.765697376 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.763631641 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.7652558 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.762943264 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.764805913 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.763002285 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.761991286 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.763075108 seconds)
  done (took 33.453041525 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.764457648 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.765813028 seconds)
  done (took 5.229077452 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.763608513 seconds)
    (2/7) benchmarking "second"...
    done (took 1.762876112 seconds)
    (3/7) benchmarking "month"...
    done (took 1.762186227 seconds)
    (4/7) benchmarking "year"...
    done (took 1.763163524 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.764169252 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.763323913 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.762912053 seconds)
  done (took 14.041461724 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.765790745 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.930178543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995349517 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.448106417 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.76726944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.77038968 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.686146688 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.770849935 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.772152976 seconds)
  done (took 19.605745089 seconds)
done (took 106.996521477 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.576605298 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.759339308 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.163870456 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.855461295 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.780336596 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.060421244 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.796041037 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.979508986 seconds)
done (took 42.67241387 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.860045548 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.289581031 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.330186437 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.57296475 seconds)
  done (took 12.892573881 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.749017635 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.333299529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.812518144 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.443928988 seconds)
  done (took 20.277305159 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.146262976 seconds)
    (2/2) benchmarking "read"...
    done (took 2.125807643 seconds)
  done (took 5.981860628 seconds)
done (took 47.713669874 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768145634 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.769730863 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.768659229 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.766641029 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.769603866 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.766718984 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.766954855 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.768457019 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.769944088 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767707634 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.76883892 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.769456564 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769937938 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.766604168 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766932079 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766099084 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769956062 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.767062249 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767967939 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767630846 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769622128 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.768102157 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.768174337 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.770242817 seconds)
  done (took 44.141128592 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.769697101 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.769254606 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.770070992 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.771096383 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.768868055 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.770677396 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.771133172 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.767520191 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770967789 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.770318444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768349201 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.76841312 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.771698774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767572667 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77016529 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.770051373 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.771035458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7689021 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770949906 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.769181534 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.770753182 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769877185 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.768989702 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771015398 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.768802564 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767895147 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.774764698 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.769438946 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771456843 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.769150977 seconds)
  done (took 54.80292727 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.776072847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.780931679 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.771447392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.773930499 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.77244478 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.771866733 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.772973638 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.772686167 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.771922438 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.771459872 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.770995356 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.77176589 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776135756 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.771255839 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.772018307 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.772477913 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.77265569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.771823329 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.773482766 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.773188826 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.773224825 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.772475073 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.771934933 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.773180058 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.774405374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.773329897 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773002827 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.772439965 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.773943846 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774566166 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.773565876 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.773349034 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.773647824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.772720227 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.773455768 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775613577 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.778148118 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781323776 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.773462649 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.773739815 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.773073436 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.774369353 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.773409648 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774237452 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.77319052 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.772822392 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.77633829 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.773920792 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.774330632 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.774927838 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.773582795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.774882348 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.776008792 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.773848871 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.774346636 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.775633012 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.774420032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.775275671 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775413664 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.77466243 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.775066918 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775488154 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.774872841 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777565405 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.775896042 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.775248196 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776178243 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.775035518 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.775994986 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.777872425 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.774881762 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.776854476 seconds)
  done (took 129.450236382 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.775263782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776574654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.773101071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773820453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772202695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.775379712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.77238668 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775731381 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772585367 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.775014346 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775721903 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.772650804 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774615447 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775368651 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776414286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773715715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.775553589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773040003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.775704959 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776108893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776443062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773886625 seconds)
  done (took 40.749110632 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775437908 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776561244 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.773158891 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.776710038 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773313981 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.775889932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778159445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777312916 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776980971 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773932917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774611079 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776216658 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.773812862 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774681197 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774421373 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774888369 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778491471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77452908 seconds)
  done (took 33.668035091 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.774878613 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775595428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.777975047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774905961 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.775394805 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778005811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774966878 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.777046957 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.777177257 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.775042982 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.777505297 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776801732 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.777854026 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77472705 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777036384 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.774802249 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.778742547 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774706868 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77803745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774579634 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.775095752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779941528 seconds)
  done (took 40.79189026 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777700111 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.777949347 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.775153492 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775886965 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.775952083 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.777536492 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.778826849 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.776393681 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.778358424 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.777914194 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7758684 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.778309686 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.77631778 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777045225 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.77563182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777451012 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779297352 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777542888 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779325582 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.776093533 seconds)
  done (took 37.255862875 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779834051 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780124553 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.779280002 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779182401 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781099053 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780152756 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780817214 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781377985 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779956746 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781879374 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781074858 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782186386 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78084346 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.780668109 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781229865 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780654931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781261497 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782003067 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781023491 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781578156 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782009801 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781043334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780794218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781626709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.780942047 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78130193 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781804186 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782224073 seconds)
  done (took 51.581475424 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780677323 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781048036 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.777987113 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.778896251 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.779716097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.778253289 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.778368376 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.778271851 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.780501208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778054258 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.781701005 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.78143588 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781137756 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.78220824 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780612594 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.781349459 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781981079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.779282635 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778989259 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778402147 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.781452171 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782206776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.782449873 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778962539 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779719761 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.781883441 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779749646 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780934067 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783004621 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779218916 seconds)
  done (took 55.12387191 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.801299788 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801486376 seconds)
  done (took 5.316805748 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.779928261 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782158967 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.782881504 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780203943 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780085891 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784288667 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782663106 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779997047 seconds)
  done (took 15.968643403 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.783197628 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.783688999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.782606144 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.783275919 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784636009 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785299542 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792585575 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.78323652 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.787262646 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.786109391 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.791977419 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.794935209 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790583287 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785471348 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.785831963 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786854865 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.783228808 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.784385489 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785037876 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.784052413 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785123328 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788417858 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787772254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.781370645 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.788140713 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.798493518 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.791294184 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.784286851 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786079389 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.792946176 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785980588 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.781027046 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.785026359 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.784891461 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.784894869 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786267758 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794914739 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786920204 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.793061792 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.785262342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785388463 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.781949227 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789832965 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788303685 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788066948 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.786972955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.787945676 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783237394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.786310244 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.789920962 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791050559 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786554965 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.783939978 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796361587 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.78869191 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797542655 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788620416 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790643884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796577332 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.798916627 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802822557 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.795923718 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789507776 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.787760118 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796587179 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.813203628 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7969877 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.784560393 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.785929062 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.786631126 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.797067335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803381343 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.798375645 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.787358462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789196574 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.786419176 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789426607 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786365006 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796734187 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.795726398 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.788267724 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786796196 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798081596 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811104827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.787382546 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.789064036 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.788814318 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.787730193 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789566408 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801509428 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.788717209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788642799 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.789194712 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789895736 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.792196892 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.788971163 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.790989944 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790666781 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786325428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.788268956 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789076924 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791979762 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.802894255 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78937765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789721308 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.798817015 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.790007955 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791073864 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800191218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.789111659 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789854638 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791695311 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.79918906 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.787706956 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794473633 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800504739 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.789454595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.791715743 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791734677 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.789576375 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800495494 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.818631013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.789718526 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.788742072 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.796054678 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.802552235 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790522484 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793975323 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.789276822 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.7870811 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.78764953 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794597191 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.790085135 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.792703702 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791445819 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794176059 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.787776552 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.790311113 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.789442584 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.793451931 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.794651988 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.794143849 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792737779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796419812 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791012615 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793817816 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.800271357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.791943476 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793538182 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794363733 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.787482919 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79391878 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.797557962 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.791651249 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.794012458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792038879 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.792697816 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.792490662 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793079888 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.791420028 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792118537 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.794021133 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797270208 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.793570384 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.800054283 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.79262408 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78966263 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.792470058 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.792290384 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.795823002 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79182675 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792184835 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.796213111 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.800374118 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79161362 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.79262463 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.798234442 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792512694 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79255912 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793148584 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797807698 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.801102206 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.793339216 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.802035118 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.793142976 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794418559 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.792338823 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.794825566 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.793758738 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793249215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797434778 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.800884122 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809571985 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.804743673 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.795208033 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.79671014 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.795275727 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.798463376 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.800447465 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.793546641 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793562541 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792957502 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795232594 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79431645 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.797370861 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.794611348 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.794961003 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.793708586 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.793304796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794404831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794043365 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.796854224 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79836661 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793137406 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794167788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795256407 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.796088238 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.792106081 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.796038401 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.795259407 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.794657558 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.795686254 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.805510977 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.793484117 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798001486 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798398938 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797849754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.795031902 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.795091985 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798778541 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.797792469 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80584808 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.798356479 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.798236127 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804189171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798164045 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.796744495 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.799775325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796964209 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.791933287 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.799802735 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.804497426 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.794566694 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.796324956 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.795609319 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797003458 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79609263 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.805368099 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.793700277 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796512196 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.797032162 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.799490345 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793846328 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.799184798 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.797929948 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.798944867 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800329804 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795732216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.798312243 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799764154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.796601311 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.797144418 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.7973326 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80044668 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805689037 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805103214 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.799426452 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.80327122 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.799565711 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.801955937 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.799974101 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.797962053 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.798500567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814419287 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808056191 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805914159 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.80209267 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.798242934 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806217523 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799952416 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.804715345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800358482 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800875801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.800348485 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799652346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.79705619 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800318065 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.797368779 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799759903 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.799992913 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.80299511 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798426979 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.798676292 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.798901156 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.799738582 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.798353523 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799414782 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.79961692 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804198391 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802817053 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.800754346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.800033164 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808524204 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801011185 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802846441 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800277526 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.80027292 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.800978768 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.803047505 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799831497 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802961917 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.807592785 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803645187 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811485802 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.801357863 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811471112 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.799915724 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.80401188 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.809063625 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.796794337 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.799173611 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.804304818 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.800654746 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811232692 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.800008667 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801956789 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.80469342 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801894797 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.801040953 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801303604 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.801976291 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801139758 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.801294731 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81184007 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.803160376 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.80661159 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804888989 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799009746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.800719359 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.801570046 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801566869 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809542153 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.802849888 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.803569431 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.802946976 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.803115109 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.801603939 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.801976371 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.802773845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.798354393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.800541528 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.811373994 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.803169039 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806495035 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.802819977 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.814534538 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802896641 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81122942 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.8018714 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804613649 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803082753 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.801616013 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806232089 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.805071931 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.80681944 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.801493023 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.804185813 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.806238729 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.802692132 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.808266067 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.803967838 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803257462 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.805223151 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814357065 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82681446 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.805503131 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806537444 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.79997564 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805693695 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.808725689 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804853589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803451098 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.807571664 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814763082 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811947952 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806084215 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.804414809 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805722066 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805986781 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.801779575 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.803664861 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.805615178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.803010661 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807522322 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.805352318 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811522345 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.803894465 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808799864 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807065641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.806082051 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.817667944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.804089669 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808953023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804565015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.804111177 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806744691 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806585968 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.80517897 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807033051 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.8048885 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807553936 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812137375 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813083396 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.810026211 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.805757374 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.805461945 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.807486585 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.807605718 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805685329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.805732815 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804873462 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807799345 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.805540052 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809995286 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.806016376 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.80439341 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808582429 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805252942 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811605696 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814541767 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807506629 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.802770172 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.805706355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80618559 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.805616894 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.808678141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.817635131 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809117785 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.818225262 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.81648327 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.811371236 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.809668656 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810107002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.81734369 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807267188 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.809767015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.80850905 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.811611728 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.808385333 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.811866483 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807312798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.815831495 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809191045 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.807664438 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818419776 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.811191289 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807756333 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.809832489 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.81308669 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.808109289 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.804920957 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.806881954 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.807858836 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816704611 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.811119478 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807795971 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811198034 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806421445 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.810314504 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.811192517 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808311195 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810603053 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.80525934 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809814554 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808997691 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80899298 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.805729203 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.810815749 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.810564554 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.813446436 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817785585 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.804199735 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812067669 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.810384486 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.811464693 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810015765 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808138621 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.805667905 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.806051993 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812501336 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810156502 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.810656911 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.814046592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.811063681 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.810884295 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.809586737 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812928907 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813047256 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.822226199 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.817408615 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.807937141 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.811445571 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.811784049 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.814735364 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810721747 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.810211605 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81281525 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.814284285 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.810861962 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810528102 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.810286027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.813489867 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829264066 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.809973137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812549745 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.813085803 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819159677 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.810950024 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.807721036 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.810428395 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.81644261 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.816466741 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819030844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.812457289 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820925097 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813393469 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.813135148 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.814969122 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.814785672 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822145913 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.817362844 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811815308 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.812314258 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.81731002 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832555968 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811115149 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822783319 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844211826 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.813863782 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.816169153 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.811814868 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.811513332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.813035931 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817323634 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.811933823 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.812173104 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813434419 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.813268617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.814929986 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821012558 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.815322813 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.812212134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812247459 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813155275 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.816518702 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810223381 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.814836239 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.81382056 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.813844195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814116284 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.812780755 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.815963905 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82956966 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.826872903 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.811907513 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.813587796 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.809716807 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.820996515 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.816752782 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825472633 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822131636 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.813069688 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.814463632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818565313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813832116 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.811396855 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815190802 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815333054 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816150695 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.810297733 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830562415 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823438547 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.820669367 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815979661 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814271658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.813242642 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817046607 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813875125 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813379864 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.820692543 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.815605986 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819785613 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.814266492 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.81389355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.818254902 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823974573 seconds)
  done (took 1075.718319074 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.811895032 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812009706 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812512376 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812274523 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812563356 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813035048 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812393738 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812807805 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813413547 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812993742 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.811715617 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81146885 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812132985 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813356964 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813868622 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81313257 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813132624 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811738551 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813043588 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811699515 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81338728 seconds)
  done (took 39.811037116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815433474 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.812725878 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812185076 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.817430972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813786635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816071291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.812905071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815668078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816059507 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813919241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.815091793 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815939345 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.812847655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.812990994 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81300403 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814988844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816050088 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813802151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.8159217 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.813589947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817914971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.813549757 seconds)
  done (took 41.668946351 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.817587053 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.81677179 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817619478 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.814724235 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.817064005 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.814169323 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.816953384 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.817068991 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.81607908 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.820588685 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.816877388 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.819365932 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.824587985 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.821748661 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.820992603 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.816765953 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.960334165 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.818664005 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819183859 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.817859325 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.8160817 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.826620993 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.815599868 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817114781 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.819917701 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.819338323 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818788833 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819203569 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.818727875 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.821495393 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825043402 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.818577031 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820616748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822033168 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.820023902 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820765951 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.823627688 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820679248 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815884727 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.818749447 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830909335 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.840487998 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.8193009 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.829097726 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.820150726 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.818316434 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.824507494 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.828903495 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.816792022 seconds)
  done (took 91.081263762 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.818978766 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.821262014 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.816844655 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818635189 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.818529485 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.818629961 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.818662531 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818349685 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.817157354 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.817049142 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819422167 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817649125 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817659377 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.820540314 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820223856 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816352392 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815714556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.816960582 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.817363 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819331225 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.817004866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.820884216 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820459081 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.817638658 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822033539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818078475 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818019712 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.821617175 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.818019034 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.819424384 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.822066385 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821458182 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820847752 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.818577176 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819293684 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.821404116 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.821515992 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.817721661 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820909179 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818556029 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.821618365 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.821982506 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821210848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821893777 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819910506 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819509238 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820344489 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.81863987 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.819240267 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821956059 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.821890919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819619379 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823323595 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.820326931 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82221441 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.822828765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819699049 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819832425 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.822943366 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821114997 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.819023912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822957152 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.820941161 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.821575037 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.822393775 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.821243103 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.820093288 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823038471 seconds)
  done (took 125.503567362 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824008785 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824434767 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823544859 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825517589 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824355214 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.82428908 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823477465 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824903843 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824179182 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825144116 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824799646 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824114052 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82401982 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823416486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824860904 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825366916 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825088326 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825638362 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.825030143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825590064 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826444389 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.825632376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824659095 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824916998 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825679128 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825075572 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82583855 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824671543 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825087437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824955168 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82561852 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824978954 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825475857 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826462468 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.825568299 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825329663 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824716125 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825454755 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825437771 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.825033605 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826299828 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825296629 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.82490849 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.826976657 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825168838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82621319 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826089334 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.826858038 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827005927 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826615638 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.828291219 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825933938 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826166676 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.826725763 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826625283 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.825526383 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825948971 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825934947 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82636617 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827934621 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825652783 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.826305868 seconds)
  done (took 114.934016039 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826522375 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825545975 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.825353206 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82419104 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826873615 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824252531 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826489269 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.827759439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.826645562 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.827426288 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825846572 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823859322 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823679123 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82696432 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823916606 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825577112 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824431305 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824507432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82841934 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.824221438 seconds)
  done (took 38.268941723 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.824117857 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827072086 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824696132 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.825211171 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827254261 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.82615291 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82699612 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828422279 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825594756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827600856 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828369072 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828299315 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826393288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825964164 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829834186 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825859792 seconds)
  done (took 30.985513071 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82601895 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.828582013 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.829195025 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829117308 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.825735199 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.825964251 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828041648 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825637586 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.825508245 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.828538132 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.829682058 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828533113 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828005531 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830549501 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.826976602 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829791275 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82539552 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825555243 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.829051058 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831090081 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827820503 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.825816125 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.828873977 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.830048088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828311926 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.828291892 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.827264362 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.825727836 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.827754624 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.829888942 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.82866909 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.827804426 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.826459056 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.828169676 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.830713599 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.828726244 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830074194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.830579263 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.829986899 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.829749799 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.830554193 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827347676 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831825119 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.830323164 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.828640354 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.831034376 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828642708 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.827874461 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.82790241 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.827740496 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830204399 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.831638361 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.830775553 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.832611733 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.830482835 seconds)
  done (took 102.337926891 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83133082 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832003166 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.828165883 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832409539 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831085116 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.827434958 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.830581939 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829859383 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828905201 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831344316 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829513906 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831213843 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829283086 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832032609 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831244202 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830566585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.82999248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.830951978 seconds)
  done (took 34.710257546 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830090611 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831960734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.832711739 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.8300242 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.829826666 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833247881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828605987 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.833473957 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833578121 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.830536028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830060142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.832944762 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831959341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.831805313 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833044211 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833501337 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833010406 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832987198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.829515015 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830004767 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832694567 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83238698 seconds)
  done (took 42.060939876 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.832794975 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.833739058 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.852108855 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.881758616 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.868983757 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.833100319 seconds)
  done (took 12.86668222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830804582 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833917655 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830324912 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834754296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833477643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831816197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831145459 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830931914 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833475449 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830811292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830029725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833252987 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834730778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831830342 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833568045 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834749012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831086736 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830884445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831814304 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835026689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831200542 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834901863 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832782456 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83370468 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832966831 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830968212 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834679382 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833147655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832026417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834492448 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83554236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830962913 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835865157 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832691554 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835237113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835949889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833156273 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836209519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835178041 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832549479 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835361604 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835289789 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836193578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832438751 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836677245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833077705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832872086 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833302886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832999932 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836668771 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836708432 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833256435 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836582507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836466537 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836290001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838573677 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834173308 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834482283 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837805175 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834617503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834119918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837677199 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83414902 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834035753 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837333599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835210864 seconds)
  done (took 122.805107625 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834815013 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834901808 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834012758 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836413255 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833711918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835150073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834597577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834617817 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836145715 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835036071 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837904673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835009719 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835796656 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836168601 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835421437 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835637768 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835064281 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835323722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835613644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837758103 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834143034 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835886059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834760195 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835923853 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836063992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838416347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835246622 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83631602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835407877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835312732 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834735439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836331323 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834912246 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835696799 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835811557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835403581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835984661 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836749119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836583393 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838693395 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835794049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839040543 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83661153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836914258 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836543946 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836243064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834583167 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837439732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836464955 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836824317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837162817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837233129 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838439802 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83770093 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836691945 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837254639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837705172 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83633375 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837784831 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840646276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837347909 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837879496 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839533508 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835712327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83820793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838028359 seconds)
  done (took 122.967833099 seconds)
done (took 2506.272587021 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.919514852 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.829780867 seconds)
  done (took 15.518297467 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.004358229 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.956344153 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.841710138 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.848767459 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.839963496 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.859682724 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840219756 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.839318369 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.842493691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.841397502 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.841496712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.027299034 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.847241911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.838097604 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.841585893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.935118061 seconds)
  done (took 51.821755109 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.845408956 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.845934726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.857633534 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.848436341 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.84542585 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.857472805 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880602878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.848983929 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.884040229 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.859633749 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.919847426 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.853281316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.844874952 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.897024544 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.857951217 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.861677341 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.935970614 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.918002175 seconds)
  done (took 35.435702422 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.922179501 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849063934 seconds)
  done (took 10.553069324 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.843982093 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.854159187 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.856262169 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.843538188 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.851500034 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.869282027 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.836207232 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.883722291 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.837029835 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.853933632 seconds)
  done (took 70.311858887 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.85178836 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.84773468 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.848018175 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.845569661 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.838204467 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.839229725 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.846943156 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840872681 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.528372661 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.881365511 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854714065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.852150573 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.847453098 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.847884432 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842725007 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.869336438 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.963059088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.844972659 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.842248667 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.851884892 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.847895377 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.939310944 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.85966731 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.847089679 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.878470975 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531534226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.85471996 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.853086366 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.985044887 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.843030182 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.847087074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.848465031 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.8485142 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.235024115 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.177973172 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.847344585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.851814171 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.855347606 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.844904593 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.015730645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.847407891 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.8532292 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.8400272 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152406747 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930366809 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.890533605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.215586934 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.847667154 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.84937087 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.879174786 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.849400095 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.849833258 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.860261577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361897138 seconds)
  done (took 131.600947521 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.842835699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.415412068 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009041543 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844670225 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123283407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088269999 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843808269 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.892763958 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846166951 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093154716 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022669171 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965553108 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841422206 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.843691371 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83710407 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.837962274 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.9996941 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.917084866 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843594389 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.84146424 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880359539 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113633111 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.971012432 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847121538 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.865807076 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075560941 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970861358 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964148551 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.520913588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.842659517 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912249286 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844646022 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.84164299 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839351485 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.010668554 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955939181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944418829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.846597267 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841016206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841085797 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.507283803 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068677976 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.956968122 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986052884 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095831623 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076185383 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.491767053 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843856077 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.484735829 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042208427 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.054998954 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104693959 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.974715047 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.847961374 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.099322103 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84336945 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844660671 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.10615505 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074519592 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.962863266 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848195257 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.844040869 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84314999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164187289 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848600622 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.953667668 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847496624 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842798616 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.960448722 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963564301 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.075753394 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093111662 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876841556 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.725146228 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.350844986 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.131568449 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918450561 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112953852 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845217857 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846368378 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940210609 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.599220064 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.022435955 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.166837092 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11031612 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88728115 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.450397803 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.844594965 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.096557813 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096687867 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.077237767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.093438146 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.014871067 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.175601566 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845764592 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.844625814 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.048064344 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976660355 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.850589913 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210719697 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096459841 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.578947156 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878525645 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15469473 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988065801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.85177406 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.474419792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848344797 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.054537168 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.892633237 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.849759472 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847571505 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.092520271 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.720199832 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846736635 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.633859317 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.914970412 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84907539 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114859682 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850788231 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091597132 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851220528 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.161608091 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.341736606 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892748165 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.041294053 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.094365889 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.645342432 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11721125 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.164951307 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971803133 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111896057 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.671701018 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.84910153 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132280613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849522699 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.849071888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.018551214 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.849127576 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0044518 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.852737459 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.111013149 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874960241 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019740075 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851537936 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12237466 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893554176 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902185337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852211355 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966702122 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852698015 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.887495684 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.035065218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850818555 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848331255 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.429839952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.848726522 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998345893 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.151404208 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875472363 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921789282 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.377399883 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850549374 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946048422 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87625536 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.456243667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.852689596 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.022037563 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.853996382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.836449498 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.850083393 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.162963077 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.070794537 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.851639177 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.847372726 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.648922151 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.559568529 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852299907 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.027049395 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.09260301 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.503049777 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073676391 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851234507 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983045506 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855404366 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.926739799 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.202408161 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848778251 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.84919845 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852360241 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.85064514 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852459762 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080451342 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878715533 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.535177353 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990260022 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098856393 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.163999645 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.120025681 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896616885 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.854244936 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.117037422 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851550893 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.917796579 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.851050316 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877865323 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102798239 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850503392 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084144622 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138817069 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.897813609 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903544269 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.85036922 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854875785 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.849498409 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999231413 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955122751 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.851198001 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.853398076 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.972495214 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983634164 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043380276 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.450654378 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.031906394 seconds)
  done (took 899.568659788 seconds)
done (took 1216.580089894 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.854464516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853939597 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838806743 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853106571 seconds)
  done (took 29.188941075 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.86037758 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859631703 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.86047864 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.858024867 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860418117 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.85942755 seconds)
  done (took 12.946394203 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.878491936 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853662294 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853734077 seconds)
  done (took 21.374748299 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930664031 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.265594179 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.962906442 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303382786 seconds)
  done (took 10.251964327 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.861122726 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.860549388 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.860562937 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.861959392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.861763099 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.864326534 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860328312 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.862880453 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.863413585 seconds)
  done (took 18.548201533 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.958247016 seconds)
done (took 98.056675414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.382091407 seconds)
    (2/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.981546665 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.210185373 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.954351715 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.76072039 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.244383211 seconds)
    (7/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.043108755 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.24555755 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.929189696 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.041209097 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.205501292 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.98645528 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.103870654 seconds)
    (14/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.155321954 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.199172724 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.153929123 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.546888879 seconds)
    (18/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.995299361 seconds)
    (19/309) benchmarking ("sort", Int8, false)...
    done (took 4.854767943 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.896865608 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88110487 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.002869367 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.19234029 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.154394085 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.926661526 seconds)
    (26/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.883433683 seconds)
    (27/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.994308681 seconds)
    (28/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.071221153 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.839554773 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.378629571 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.692617482 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.104769016 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.967413512 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.83926823 seconds)
    (35/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.300177215 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.15066798 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.10319647 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.845684818 seconds)
    (39/309) benchmarking ("sort", Float32, false)...
    done (took 7.272180039 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.986340993 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.919457975 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.856153518 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.140125651 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.237569323 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.293031097 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.315397967 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.941569727 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.181164862 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.859589686 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.649094496 seconds)
    (51/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.991841012 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.156886962 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.266807734 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.982299212 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.976465619 seconds)
    (56/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.945723738 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.116041577 seconds)
    (58/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.966031276 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.857118398 seconds)
    (60/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.554607636 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.166234396 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.919018868 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.128920692 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.886126962 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.858336689 seconds)
    (66/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.777577986 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.856112957 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.861806914 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.86475471 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.870878142 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.184949615 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.863094713 seconds)
    (73/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.870001727 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.910879309 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.960540793 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.511202057 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064461809 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.456426252 seconds)
    (79/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.921484578 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.143705118 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.119548067 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.845349304 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.329393421 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.813920584 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.730208976 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.881050267 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.036397297 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.175519814 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.997841974 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.454493486 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.204975721 seconds)
    (92/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255091285 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.869715969 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.554282457 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.85823758 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.933590212 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859422183 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.8559196 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.220301247 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.959701569 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.740242653 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.879602432 seconds)
    (103/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.872883664 seconds)
    (104/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.866516545 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.859505605 seconds)
    (106/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.432175048 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.226202255 seconds)
    (108/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.051233991 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.937618411 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.845004533 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.86403542 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.071409774 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.780052215 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.84903239 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.954479731 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.366936946 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.969568144 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.860993662 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.879136296 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.876168751 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.860980284 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.009821437 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.954260895 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.243282179 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.045515566 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.245208684 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.009656617 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.311931479 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.885828433 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.118031782 seconds)
    (131/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.197421444 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.86186766 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.122776897 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.957125239 seconds)
    (135/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.755742537 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077629107 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120340595 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.955933841 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.486105447 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.773399086 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.999348904 seconds)
    (142/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.959805894 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.154154726 seconds)
    (144/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.963373532 seconds)
    (145/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.890959141 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.239827405 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.114383637 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86219766 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.402766125 seconds)
    (150/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.698490729 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.110389991 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892553938 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.0590763 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.048002663 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.888395633 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.170718647 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89339406 seconds)
    (158/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.002329805 seconds)
    (159/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.401063715 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.539786272 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.016758429 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.86509016 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.235464126 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.843019596 seconds)
    (165/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.959705851 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.746004218 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942046904 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.863730716 seconds)
    (169/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.940931471 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.202914707 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889121278 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.848970759 seconds)
    (173/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.18781151 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.959407499 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.666421697 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.110720919 seconds)
    (177/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.888752091 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.864631041 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.246372197 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.894268795 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.087845098 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.00314089 seconds)
    (183/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.374307973 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.105735213 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.149007125 seconds)
    (186/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.388061154 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915838523 seconds)
    (188/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.01936273 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.471956484 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.167779536 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.89274635 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.958493653 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.964319053 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.913666962 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889548971 seconds)
    (196/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.155161739 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.865950928 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.972107049 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.067390194 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.159857506 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.760240984 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.479130642 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.923622877 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.982756085 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.890310273 seconds)
    (206/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.468872729 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.946202132 seconds)
    (208/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.864869789 seconds)
    (209/309) benchmarking ("perf_sum", Float64, false)...
    done (took 4.692803245 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.951051525 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.494055392 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078703887 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.082352123 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.229221372 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.17847522 seconds)
    (216/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.825270868 seconds)
    (217/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.0083402 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.246072662 seconds)
    (219/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.967911673 seconds)
    (220/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.267795248 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84853325 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.009641471 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.894091716 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.877044712 seconds)
    (225/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.442035065 seconds)
    (226/309) benchmarking ("sort", Float64, false)...
    done (took 5.69360709 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.850562134 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.455961728 seconds)
    (229/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.120719425 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.244226869 seconds)
    (231/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.994174186 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.94257655 seconds)
    (233/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.801016357 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.685707389 seconds)
    (235/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.981670664 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.866548886 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.855881016 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.184523281 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.797113194 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.894595496 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.294500211 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.519465 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.898206397 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.244771167 seconds)
    (245/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.93215322 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.866371842 seconds)
    (247/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.368178597 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.372966228 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.969537078 seconds)
    (250/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.425787916 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.176491519 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.920128124 seconds)
    (253/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.024836742 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.85775159 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.438605116 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.930841654 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.900282044 seconds)
    (258/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.951063597 seconds)
    (259/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867555248 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.034814625 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.183248072 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.267017685 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.475460298 seconds)
    (264/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.994249144 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.869132571 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.066448788 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.072757343 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 6.870350668 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.323518351 seconds)
    (270/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.936582342 seconds)
    (271/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.584862885 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.992583102 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.084557334 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.87164988 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.876363028 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.973440835 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.12806796 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.952888254 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.163995585 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.203461423 seconds)
    (281/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.998163828 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.950795482 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.564104714 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.980370391 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.917242399 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.985367273 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.894897112 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.878503931 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.045759055 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.327867889 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.326418001 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.962742634 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.972696757 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.303068115 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524734597 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.906656752 seconds)
    (297/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.155481279 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.941232562 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.282228176 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.189524673 seconds)
    (301/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.142935471 seconds)
    (302/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259945709 seconds)
    (303/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.036602152 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.531887132 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.90025819 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.855400069 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.68815725 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.923273921 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.871987075 seconds)
  done (took 1023.679072719 seconds)
done (took 1025.481386717 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.902639723 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89779096 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.881735153 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904666322 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.992932282 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.910177537 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893748044 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.884566332 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930318451 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.931559774 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.880779498 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909465352 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.883470273 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.883028854 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.881380519 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897411364 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.192534605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.906051255 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.90106978 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.891583378 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.900057424 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.88222855 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.930744384 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.911225886 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.885637486 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.886298675 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.887471048 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.902200333 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.995024823 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.886821326 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.886093725 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895474843 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.191635876 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.902460387 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.87820772 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.902137173 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.894536537 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.891842377 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.88608651 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.916448311 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.331060011 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.884698165 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.886700628 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885687918 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.884764897 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.887707384 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.885642862 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.891188673 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898750222 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899792809 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332157001 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.902082661 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.888255383 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.885750331 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.893939233 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.884821739 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.886875017 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899941276 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.903538834 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900262633 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.183246606 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914711705 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.88835849 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.900485842 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.892502097 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36746192 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.882383317 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.888587306 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332507254 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.891749758 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.3686391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896172426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.886704059 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.899297562 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.918680658 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.194298234 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.902338274 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.885570085 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.892525204 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.88481664 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.895341577 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898223783 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.891939548 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.887697275 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899036536 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.915573043 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.895395561 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.885659933 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.896049039 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.906040944 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.894358527 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.897582676 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.889085181 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.882292817 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.895479688 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.891443784 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.889141902 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.889713503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.892525482 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.897590652 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.332778393 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908065728 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.883654931 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.882891264 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.886001658 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.901136656 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.331405911 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890209831 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.908522645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.935083522 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.889243487 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.185175543 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.913358338 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903087065 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.897432706 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.890277956 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.88186985 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186333905 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.358335678 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.905996618 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.889674617 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.887467269 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902901127 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.888926105 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.883370168 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.196671384 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.912398102 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902637981 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.010342428 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.899172488 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.920467213 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.887318746 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.891074111 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.915733352 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904588646 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.919416503 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.890240209 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904084989 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.903350376 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.885416361 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.899881671 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.900208119 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.891310334 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.894242206 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.882642263 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920975309 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900393582 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902353379 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.910602033 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.00951008 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.886477651 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.185606924 seconds)
done (took 296.410313551 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.955200933 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.877396348 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.987766118 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.885143529 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.969584682 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.968669806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.881401049 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.882789078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.881478724 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.262735669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.882432992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.891729874 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.883319873 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.882211569 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.967420388 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.883970621 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.883050093 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.226974418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.885507339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.955629527 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.884015231 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882911043 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.885171806 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.266506992 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.878673783 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.880429837 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.957808741 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.885739698 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230835193 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.876761487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.88516429 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.230052985 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.976390538 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.904724299 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.895661117 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.892843262 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974625144 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.89328036 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.969497965 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.968525312 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.988670264 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.92725195 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.887531211 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.880748369 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.888233072 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.886942095 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.884281993 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.914202689 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.885920898 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.882744073 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.228229495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.89655793 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.884830218 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.885651719 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.886387065 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.917604157 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.884341099 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.888881594 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.975478198 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.887884407 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.950794105 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.267679416 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.26690411 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.887413803 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.881176164 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.885237155 seconds)
  done (took 185.427943425 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.953670118 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.963332402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.957318299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.892508869 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.939814535 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.960564354 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.894487194 seconds)
  done (took 15.376089887 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.89594592 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.88711105 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.940352951 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.93819757 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887606084 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.039731451 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888113621 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.899370378 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.886531554 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.942429875 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889881013 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.888461688 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.894311583 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.887377818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.937550811 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.900782373 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.004311668 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.89154337 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889928127 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.046817284 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885988912 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.896310761 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.944775255 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.900571033 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890258496 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.896352961 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472441818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889660901 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886031232 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.888083402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885809703 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.931943953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889819141 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.888000121 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887299037 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.007025133 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.889625021 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886680614 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.890826221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.888230633 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.889237306 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.890108346 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.892570379 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.88691106 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.890347447 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.914718898 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.890942565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.891118662 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.891387289 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.890135235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.941776203 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.891067664 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.887071835 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.88875588 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.948588122 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89743576 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.8917454 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.888152452 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.890210361 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888317924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.049585506 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.940265487 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.893030006 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940687335 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890149494 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.890906617 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890816187 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.890364621 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946265058 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.889739699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.940058965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.888259742 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.051689182 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.350006253 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892577676 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.894537695 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.895427764 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891861737 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.884953462 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.898551472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.888581684 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.893731758 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.899810996 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889582209 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888627442 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.005879505 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.001450331 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.890339401 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.90842942 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.901551916 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.889488397 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.946794694 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.892509751 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.889085111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946123093 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.009968653 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.948626245 seconds)
  done (took 208.292779603 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.897145116 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.901310644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.895743927 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.909531046 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.894496366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.894683476 seconds)
  done (took 13.213153792 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.895867927 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.893506215 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.892864924 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.894558104 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.894177417 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.895211605 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.893578753 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895520924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89807324 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.893900761 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.895027372 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.894829678 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.896077892 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.894126823 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.894449141 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.892659561 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.895279752 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.890308523 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.894966639 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893504365 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.038739796 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.894705099 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894878384 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.895880594 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.900076619 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.893872917 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.903364057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.893955002 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.893791408 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.904793023 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.898131279 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.896411351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.896563864 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.902029518 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.901280328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.896570897 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898310741 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.895955143 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891354541 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.897001244 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.896641848 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.895347595 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.89319845 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.896853023 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.897982957 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.902031955 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.900391187 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905140513 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.896888754 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.896670702 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.89709144 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.893729321 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.897710274 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.897315321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899939709 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904080096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.901980036 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.896695148 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.895551118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.899096878 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.89692356 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.898182157 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.898618888 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.901133239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.904314058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.897698028 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.900908666 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.900983987 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897848555 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.897004091 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.897871792 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.893612912 seconds)
  done (took 139.548558661 seconds)
done (took 563.687504429 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.176997515 seconds)
  done (took 8.999299053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.981156031 seconds)
  done (took 8.893367189 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.537767022 seconds)
  done (took 10.366142477 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916131044 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.90940856 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.899634739 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.892967101 seconds)
  done (took 29.458043584 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.92630248 seconds)
  done (took 8.755217509 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.90916983 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.890134179 seconds)
  done (took 15.661314374 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.975008282 seconds)
  done (took 8.804512229 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.090286926 seconds)
  done (took 8.919070895 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.898966824 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.905374349 seconds)
  done (took 15.64454735 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.881968697 seconds)
  done (took 8.709787124 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.613059658 seconds)
  done (took 11.454269025 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.900393559 seconds)
  done (took 8.742804403 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.983250477 seconds)
  done (took 8.8085119 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.102361304 seconds)
  done (took 9.93151049 seconds)
done (took 164.971615322 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.900298068 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.889677726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.89796505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.895036855 seconds)
  done (took 29.410526589 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.933134138 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.934054237 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.933793806 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.94638922 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.938621587 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.93306641 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.926320584 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.928077041 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.946708225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.936895976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.936752522 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.936280308 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.934889637 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.92724243 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.939536461 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.936352101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.946569397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.936214184 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.931611609 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.939434205 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.903027593 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.948065079 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.937322401 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.904098755 seconds)
  done (took 48.24521499 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.100165046 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.97421824 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.056924035 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.954851895 seconds)
  done (took 9.91556458 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.95392226 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.953257368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.966303763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.013797461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.035111385 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.965005222 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.92947261 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.925351479 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.911863604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.956414697 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.030044228 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.971264557 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.038846213 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.899136494 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.085715454 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.901002644 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.9053876 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.955117598 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.005144425 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.020436018 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.904409764 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.955635504 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.95847989 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.96984106 seconds)
  done (took 49.041709349 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.900272995 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.90999448 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.908721316 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.90182914 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.901700426 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.900903863 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.908102332 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.903892492 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.923893766 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904744594 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.90188515 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.902568041 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.902724353 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.901709614 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.903684831 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.915570985 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.913231278 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903080086 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.907630397 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.909430678 seconds)
  done (took 39.954262694 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.895686467 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.751197767 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.249843004 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.152696224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.896812548 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.897376603 seconds)
  done (took 31.675123701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.917844505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.967001335 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.908109343 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.959336852 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.047366534 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.910005911 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.904029976 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.976360802 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.012864418 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978111509 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.924974676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.931795994 seconds)
  done (took 25.270534193 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.917461224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.896835666 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.897972402 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.913778058 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.915723165 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.913603115 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.912619075 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.898063063 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.915146497 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.922770993 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.913991076 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.919246884 seconds)
  done (took 44.772850521 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987962286 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.947578357 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.920263007 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579585363 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273742992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108621614 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.504610429 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.230042249 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.897941381 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174686642 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953739491 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999373444 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158446611 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382038611 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932706058 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366202424 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194894037 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105310318 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926456635 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587922447 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967551228 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063435929 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.650068299 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963078252 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113660244 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034784839 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.160964711 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901948306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037557661 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937990007 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910762159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899596595 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175724264 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275120288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00050756 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909695787 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522206973 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.611282286 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.890708323 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.662935314 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.617381722 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.01945851 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912555069 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903263073 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834277964 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.021699658 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276463069 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.901028821 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.612620599 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901535247 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913161891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998054347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.904479684 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718030444 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852544722 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.899735006 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.898757331 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910584113 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475242878 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.020758025 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080109059 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.876664852 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.997536408 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650004513 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293350239 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.049639769 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.904019176 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904712272 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837715615 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.653410822 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956513968 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231628162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918733517 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552131474 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196364472 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.999557065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845669334 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161248535 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41626832 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.87701684 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129698248 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906160117 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839577619 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.858242478 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838048547 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160563514 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940079332 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.659773967 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938533044 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232738299 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910318607 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920181932 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926547158 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126571844 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.788260915 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903744028 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.687518455 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044560666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923174174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233754336 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833375926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.903422219 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162665002 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.112621755 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.954581527 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.397710765 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058733537 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442467197 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.955950912 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.044732225 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.953506633 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.170888348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962522436 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.019939568 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960752249 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903368004 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230561695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462695685 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.041204706 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.921916309 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0318217 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.216499313 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925307917 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986907999 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91482959 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905255493 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.689587753 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457115814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.904576371 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.906278503 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94581293 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953789473 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.905575106 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850422834 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.533815724 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93557942 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.915963867 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127603388 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.453282095 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217568233 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844403446 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258020735 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.995359552 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.125134398 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.552310443 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.972789501 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170103742 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961504579 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984388145 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956315356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925870688 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005886188 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930278476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.03273589 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203708806 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.910570009 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.910345537 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.684393412 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.941663657 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909856537 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.912780753 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.659870722 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174455809 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930905382 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908412355 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.79985228 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.921938132 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972818649 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913152228 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919947154 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.448900444 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625227304 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.91686869 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.503393792 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13273079 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92146699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.659137269 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024250088 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.991033551 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174691469 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970648242 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.844961708 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.621634201 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.602713399 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909948307 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843981674 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910564634 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91838961 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920692288 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.109763381 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182233318 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950126246 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.597250741 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953881627 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924678548 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.915830928 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912384146 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.422375744 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018553807 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068980635 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95882488 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052336775 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.924745844 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841786382 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.915241581 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916230577 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912025249 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909277876 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941675084 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.601442789 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292636862 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166372295 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562672043 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920297566 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.672259649 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.966020672 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.907235226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71696091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045669177 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.947160047 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928747179 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.921788389 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.598598927 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.608347826 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476770857 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214688578 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215044609 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343679748 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.099085738 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.940183397 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249962327 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84219483 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470598018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972342158 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253581912 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854462382 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994506081 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.557893473 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245113159 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922108417 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139705499 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293296754 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.614937686 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048811888 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126982418 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949152326 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.040450923 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874852772 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.21276802 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056502392 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.596629455 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116878499 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24485619 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.553801703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.029870199 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.917068688 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.589240908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996047963 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.624960731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.08733181 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069275978 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.843548641 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388254392 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91476808 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.140924211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260619031 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.050463848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.038300265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848344211 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928003995 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926074802 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.914228756 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.913987188 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.784812564 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.164855064 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925942465 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850898461 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.99955033 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20259384 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.816892256 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.921026161 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918860067 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205388368 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421432754 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088680681 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.986466251 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.43851973 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921556573 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853588292 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853006267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.610749786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924390617 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893328834 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126231951 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.020842299 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86452356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961222993 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999334522 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174399147 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.930179018 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1870171 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191271239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619849113 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944369289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.020704998 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565706273 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.021075391 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920711733 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154607756 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673789028 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143419542 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.946703617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.872469088 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919957011 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131903366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920541467 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.787792358 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143926735 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.635831918 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.930220754 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218957497 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995537427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.815099836 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.962764225 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.011963628 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927394363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001138841 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931399316 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.93035516 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931734384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967183074 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.812426284 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.038040071 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.93550999 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014403497 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.039121532 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.443552975 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.922438892 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194389013 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270547582 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242429195 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980224266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921655392 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923076104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856889475 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066331485 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.148792685 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19729006 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.051187734 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.033682541 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945642917 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566083564 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103260033 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164626157 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196561372 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.81792831 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407079081 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965321008 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.921714448 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931638749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.135385533 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132590492 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224029002 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.06931849 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.968830685 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28528277 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193792179 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.922892128 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924690874 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517538582 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.009653503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595258941 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.9633526 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80634103 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195339591 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933829864 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299725872 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943598751 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.080772557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.697723615 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701627967 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212068499 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.909551304 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97836416 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192389481 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302701583 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234605563 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992167052 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933901834 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.037522606 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070179361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.801270628 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922251299 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923410443 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974068061 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.633345354 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934957383 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19704107 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231215918 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.920561432 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.812267106 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943870368 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.933346774 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150022822 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185592215 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173680922 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934750732 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930116157 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.740932375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192786555 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985338855 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860069073 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.924420131 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024965608 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170023264 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947477604 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.377374643 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.636271093 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189667107 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.922724921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946898459 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.055152083 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284469641 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245237156 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.457712753 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125597212 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.511823668 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.518348266 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226714773 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.930075762 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.052442374 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231616946 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.932980163 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.973043174 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967449785 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.193460591 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240551607 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.037452983 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605520669 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.894383213 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26905638 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.489145912 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865993357 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934676554 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.986893355 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924685486 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058227093 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934011739 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.806835718 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054405511 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.706451782 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207112251 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.929373643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.914414273 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.619051501 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181004013 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967430792 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088285097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926204453 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.603503938 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.278180707 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18415856 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.979020551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.93618455 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.934380572 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930286359 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.917677513 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.126968314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.125089064 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203005645 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.002480411 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.967791222 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933648215 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.146851381 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141460831 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.789157321 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065670395 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980694989 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972782273 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.835713723 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.434314159 seconds)
  done (took 1693.846867737 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966574692 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.946922226 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.965320921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.061931428 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93929433 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017221972 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.01513046 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.011871213 seconds)
  done (took 57.787452217 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.931867157 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.146407413 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.936767794 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.932328825 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.935741032 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.930065485 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.10040188 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.938903951 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.936552136 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.942605069 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.933475741 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.927138119 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.234990832 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.952625755 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.934180718 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.916017872 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936233538 seconds)
  done (took 75.451523175 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.932717936 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.967022686 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.949569559 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.939415938 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.969712232 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.937738965 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.767654724 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.942651688 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.932044646 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.072784721 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.562800685 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.953377889 seconds)
  done (took 87.794205807 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.943692331 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.940124967 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.940169474 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.940028604 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.939967656 seconds)
  done (took 11.571389707 seconds)
done (took 2206.592502458 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.319053523 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.150742817 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161671979 seconds)
  done (took 6.176838644 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.079668623 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.127705481 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.247021609 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.26582116 seconds)
  done (took 10.582587996 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.219707305 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.316367002 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.131307655 seconds)
  done (took 8.526426496 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.33226848 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.933715814 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.037039342 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.930902834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.92723226 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.929498105 seconds)
  done (took 22.649680175 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.933621798 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.935841963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.934596714 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.936371125 seconds)
  done (took 9.601657089 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.91482693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.745164763 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.915880855 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.929838757 seconds)
  done (took 21.367503435 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.681313241 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.69476878 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.675963746 seconds)
  done (took 9.91382107 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.50710745 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.835742299 seconds)
  done (took 9.204652161 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.194617788 seconds)
  done (took 4.055860227 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.063661668 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.197786922 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.400017537 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.423089318 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.479188728 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.795989195 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.243595621 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.176478102 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.31502979 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.366134844 seconds)
  done (took 25.323056093 seconds)
done (took 142.890653703 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.319007293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.167584412 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.138808691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.276409227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.153459327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.137369534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.357757174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.259570881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.782049991 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.77999353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.27453072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.156013099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.088096263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.17120811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.087424263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.170527442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.154231781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.337185411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.003707031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.167021721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.350378678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.915087884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.111977823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.924886409 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.152354132 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.09039594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.507191522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.168454625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.163061394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.509715452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.086868228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.322618735 seconds)
  done (took 175.147462687 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.714938851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928958419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.928802743 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929446843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.399973562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931545357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931454232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93054028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.118154685 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.094707549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930677469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.391217301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.932865777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93021343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930503586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929983419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.254412864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.76446776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.939936962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943078775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947968756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.345387531 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.950388095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.390370906 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.278741422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949801338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931027424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.95002416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931442777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941311676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943601803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.931060775 seconds)
  done (took 210.214111422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.934850415 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.931934024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930872628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930408771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.936663248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.935160805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932232567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932587106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.699072549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.709758278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959220271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.93770512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.9330501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931807776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936002017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937342278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.940528163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.940877082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938630242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.942101405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942456905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.669258967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.933614134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.670728966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.934190827 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936855095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932175734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938657869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.941414098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941354607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.94056327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.933893314 seconds)
  done (took 222.868466544 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.132596858 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.943257317 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.943411502 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.879286115 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.94256994 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.943709952 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.938832379 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.133563893 seconds)
  done (took 19.738126373 seconds)
done (took 629.844156416 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.422012775 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.250915101 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.110653314 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.967957747 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.194613223 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.99381163 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.963312015 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.025923841 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.680168891 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.025532014 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.657749535 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.976926068 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.755754306 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.981489305 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.090801253 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.015250497 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.512362174 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.595049745 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.145300266 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.036964014 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.126650237 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.931195732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031535312 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.713117126 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.769362679 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.966237182 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.147924196 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.507602327 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.971959509 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.133286318 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.70995479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353843849 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.969491176 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.962653089 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.016038568 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.998120132 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.32766174 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.967183604 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.088689897 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738898738 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.017315346 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.562628942 seconds)
  done (took 106.283423924 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.93502715 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.933546437 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.934137318 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.934678842 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.936713611 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.93467799 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.935284591 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.934150465 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.934645898 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.933670453 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.933877831 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.935821604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.934581573 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.935322199 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.935273819 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.934571098 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.934547142 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.937196167 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.934264239 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.934045163 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.935675823 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.933440097 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.935497587 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.934016211 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.936352685 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.935144148 seconds)
  done (took 52.186820093 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.946979948 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.088766067 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.171449171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964891849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.947498753 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.950046374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.965906438 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.950972159 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.950516544 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.950421422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.040911943 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95481477 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.965735535 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.170934998 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.957860309 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.948768466 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.947694342 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.948012067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.09569556 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96256199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.968502561 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.95032559 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.96503457 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.95689164 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950087582 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949844701 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.952251196 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.382976661 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.957874754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.040065139 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98808217 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.97142774 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.345981133 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.173330154 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.99654983 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.956258895 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.950045679 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045319776 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949108529 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.950663979 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.967499604 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.953053191 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.17204823 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.442321398 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.957839156 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.949346212 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.392152897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.047153187 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.986633144 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959983349 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.17600139 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.96275199 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.950746489 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.950961331 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.987326274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.960305719 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.950977253 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257523849 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.958778172 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.968262222 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.951316342 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.952375265 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.105827581 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.954258942 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.093099342 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.955742771 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.957420326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.950983595 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.171599933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965391046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.445302157 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.95977497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.950088705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.040003641 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.096691504 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.415087207 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.958158692 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.108586079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.353394917 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.974527806 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.959960597 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.374870851 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.978463452 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.958882053 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.953747114 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.952275602 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.951776153 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.996400856 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968032788 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.389194524 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.446626216 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.266746316 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.97886935 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.968309202 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.953727317 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.259205572 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.954474062 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.951346454 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.167560671 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.460085821 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.964536913 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.961808349 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.433284295 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.966127323 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.972061015 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.962052087 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.180302627 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.96751317 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.996943522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953366813 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.961160458 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.957146732 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.97255794 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.961371613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.953819966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.426777176 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.058627293 seconds)
  done (took 241.00891839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.948988525 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.94542648 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.94600554 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.944033584 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.946593773 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.952883414 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.945178439 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.947667351 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.952069869 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.947258034 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.946968006 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.949001879 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.949487705 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.946998693 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.435602544 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.957378556 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.560174916 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.949742489 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.948950642 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.946040018 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.629735216 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.955341369 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.949709472 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.953437534 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.951511228 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.949008337 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.959230677 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.982868767 seconds)
  done (took 170.278579342 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.956923876 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.140312461 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.973789736 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.993750521 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.960674928 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.954134533 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.981353682 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.977553029 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.963761319 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.954701529 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.955933351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.01875629 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.963521732 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.084458962 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.986032373 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.987950129 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057815224 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.960775113 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955352477 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.953434266 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.987708561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.952501192 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.018476923 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.079909962 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.969196419 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077065878 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.962547967 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.958452781 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.956387869 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.078462393 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.969574785 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.01853937 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.980902535 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.976543626 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.080711423 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.077198812 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.061068745 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.982780649 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.957705582 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.954691531 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.955198457 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.94614146 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.075741086 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.974847487 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.959278306 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.066661326 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.97747422 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.959681327 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.966683718 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.956959575 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.971176654 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.975775544 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.02549562 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086271064 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.991794411 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.982749039 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.982730046 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.242222106 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.967981756 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.060328671 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.948277041 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.077189366 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.978508594 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.946307298 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.958756638 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.963114977 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.986647704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.989587209 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.066370967 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.961430288 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.062016223 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.987108148 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.96685209 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.957063059 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.960631988 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.076915654 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.078149977 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.989372825 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.998011926 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.990940931 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.956996475 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.960905706 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.94840157 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.977075294 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.962388738 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.074680556 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080694974 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.962372576 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.961199668 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.961867514 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.961432834 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.984360818 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087853473 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.996223716 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.058987762 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.022150251 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030328719 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.968179241 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.97218299 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.962672027 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025970669 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.969954155 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.970877129 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.291482515 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.032425172 seconds)
  done (took 212.016488802 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.055383091 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.439162549 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.011001109 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.01727793 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.251088191 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.374651245 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.738886229 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.002613662 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.010513838 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.03675048 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.170371967 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.066113161 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.023037935 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.998157971 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.41107214 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.001416776 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.008281944 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.031509278 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.013086904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.595025915 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.321177991 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.12293797 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.001034011 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.121342421 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.992340503 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.299848592 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.331188393 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.38410138 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.041883589 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.35393672 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.344540109 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.69132969 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.2153107 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.253572713 seconds)
  done (took 77.621642369 seconds)
done (took 861.264248738 seconds)
SAVING RESULT...
DONE!
