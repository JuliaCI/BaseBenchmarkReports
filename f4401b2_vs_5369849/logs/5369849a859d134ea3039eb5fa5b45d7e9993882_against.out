cset: moving following pidspec: 24620
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.397862537 seconds)
loading group "string"... done (took 0.51292477 seconds)
loading group "linalg"... done (took 8.548578344 seconds)
loading group "parallel"... done (took 0.175356928 seconds)
loading group "find"... done (took 1.381857534 seconds)
loading group "tuple"... done (took 1.969423366 seconds)
loading group "dates"... done (took 1.345019821 seconds)
loading group "micro"... done (took 0.212852544 seconds)
loading group "io"... done (took 0.578671994 seconds)
loading group "scalar"... done (took 42.05703362 seconds)
loading group "sparse"... done (took 12.922156357 seconds)
loading group "broadcast"... done (took 1.033507306 seconds)
loading group "union"... done (took 14.391980608 seconds)
loading group "simd"... done (took 4.867855621 seconds)
loading group "random"... done (took 9.739117928 seconds)
loading group "problem"... done (took 2.070804972 seconds)
loading group "array"... done (took 23.359832957 seconds)
loading group "misc"... done (took 1.069379375 seconds)
loading group "sort"... done (took 3.542294227 seconds)
loading group "collection"... done (took 20.955596165 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580529788 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132282635 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145389865 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172251429 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205399987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13617264 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154075673 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.458749369 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.032012083 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.226134546 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124116324 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528776774 seconds)
done (took 5.642697807 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222788805 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073041063 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125380715 seconds)
  done (took 0.89418126 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073011925 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170438491 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091447977 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107036302 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108216235 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106416178 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092247544 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107058226 seconds)
  done (took 1.477972413 seconds)
done (took 3.372429815 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.766807785 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.833436065 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.492543 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126930024 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154003873 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126491353 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.307684178 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160019624 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11209949 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111774782 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177268188 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.374761633 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.420602825 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956244847 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091168436 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127257174 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.07718378 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.708003157 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077821976 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1293819 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.496148976 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108869582 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114869003 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122443582 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205051533 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129378843 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178798551 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101094656 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.685509522 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098933164 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181057509 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09497493 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15870753 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.223945787 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075093121 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105050681 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684138998 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.185834558 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108722647 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091599401 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682314344 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080428172 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191452426 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105326057 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107284289 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186468251 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114976652 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07431808 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098259588 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084650895 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173510963 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.479630358 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103969809 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141930943 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106760184 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689604586 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09241483 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156262549 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121765161 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.108044265 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095022304 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114572171 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159217387 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.119576908 seconds)
  done (took 19.604921083 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114026369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138321486 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09106351 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137624591 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136328777 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094366924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081008859 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092189929 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106047238 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179472365 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133184735 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141751041 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08898958 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077523785 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114609033 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24497384 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101202904 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116984997 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077998836 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103894163 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.134859126 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093054367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106291618 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091551424 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16671714 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21606203 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104749306 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121487332 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090618133 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096913358 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140105271 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158621428 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072526249 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09121913 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176753325 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117942531 seconds)
  done (took 5.062754642 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194631088 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117333506 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189849905 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172859434 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145537981 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162063391 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114839071 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259740419 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.24479278 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164090108 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130414327 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117040928 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077129886 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093656876 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075477885 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.761228191 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.186042399 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145854205 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121934088 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100240343 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082227591 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369984529 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097113734 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07866234 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099548752 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069738557 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168054287 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099814961 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.231711667 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099904071 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106651186 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128978028 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19720159 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128822799 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116705387 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100916535 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077727441 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.214245817 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088061627 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093306879 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101094825 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132972845 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135310743 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095397567 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088267784 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244717969 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080220163 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114317552 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.159261102 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.047135335 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199063308 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095095768 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096498258 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342302778 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116282214 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083113482 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098523155 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287603914 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133121394 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079084907 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077015207 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10293316 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077340315 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.410947255 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087189373 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.01675047 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095065748 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156266994 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098437697 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087160266 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102682633 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100654817 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0817926 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116797286 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078722559 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096325604 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079183588 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076435116 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101338891 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115199898 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079490997 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098781917 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077133606 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162431361 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083838677 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116465313 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116401432 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123929736 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083963227 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094838816 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112581394 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094440595 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080025807 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138737529 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103761525 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11536765 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08292284 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141938902 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097105037 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.171062108 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093693956 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1234262 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083999778 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128578082 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119496137 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077790683 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101528529 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075910022 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097219896 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145551603 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094724065 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078625803 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099054607 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092158468 seconds)
  done (took 23.534155033 seconds)
done (took 48.895402741 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.41867068 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107721588 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107414992 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10681006 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105968137 seconds)
  done (took 1.618373188 seconds)
done (took 2.367551257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317685239 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193548525 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083453124 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186417236 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083806491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192811365 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159296903 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096768637 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.203938568 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078571586 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180851757 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080170784 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100755727 seconds)
  done (took 2.73189526 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08987733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113285511 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078629261 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103160943 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071778469 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086708595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1039397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123667287 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086664005 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080856107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08890204 seconds)
  done (took 1.770499008 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087698087 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110989493 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078069158 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086726284 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089626821 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087682883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104081126 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098098882 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105022642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084504044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090828421 seconds)
  done (took 1.768933079 seconds)
done (took 7.009515032 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.120422261 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.766392496 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.09895568 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.192858271 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.339267694 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.218768544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.640426928 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115806655 seconds)
  done (took 16.418401257 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107304673 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094586111 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093854455 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093555022 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078982712 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093229828 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079169096 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093122386 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075101058 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093874642 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076433334 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094580697 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075780886 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093876449 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079029573 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.0922998 seconds)
  done (took 2.225951858 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112207753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110782079 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099379018 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085507495 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098157827 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096646907 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082616579 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097843217 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078369666 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095650397 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085548759 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099987068 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082404349 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094051784 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098320114 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.086362873 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094876507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082583595 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.099521917 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082785044 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102124712 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096049771 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083696012 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10144117 seconds)
  done (took 3.098542612 seconds)
done (took 22.493154254 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162535157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080503867 seconds)
  done (took 0.995144525 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098557881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114774157 seconds)
  done (took 0.972140199 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102433464 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092748376 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131894998 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111816816 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077887454 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076686805 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127810695 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094688333 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077198352 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094798129 seconds)
  done (took 1.747102127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081496161 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097562591 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085958355 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115167254 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105367984 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079963183 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098405407 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081565707 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099531906 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075902096 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102186472 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096408418 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100089937 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115123215 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.08246257 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099688505 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103828628 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081813977 seconds)
  done (took 2.459660484 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076366165 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078474113 seconds)
  done (took 0.916264841 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080091811 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091918676 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079167407 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096344046 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076022253 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091499972 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075661115 seconds)
  done (took 1.351797504 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46544761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178351309 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318258199 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111026751 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128781817 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338976539 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148645457 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090719356 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10816582 seconds)
  done (took 2.689725606 seconds)
done (took 11.888499293 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088153233 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128926275 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.591340781 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111401907 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073757956 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15487614 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.255832434 seconds)
done (took 2.165443927 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333703688 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11785968 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084279715 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074748911 seconds)
  done (took 1.369597061 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074878979 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081256886 seconds)
  done (took 0.921228033 seconds)
done (took 3.055851909 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0739851 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.124275881 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075853967 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094164427 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.073453303 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07378648 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09064119 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.071087832 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090048399 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073604574 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090172938 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.074711799 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07455463 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091653383 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071482547 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088747178 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073884762 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088191494 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071785459 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072100393 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090552702 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072593216 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088930493 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071701624 seconds)
  done (took 2.759499509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099584042 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092158429 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080174134 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097748089 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078712146 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097556509 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097192506 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.075719767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.097113459 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077471642 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095284169 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078079735 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09438363 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078623664 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094185549 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078347866 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097591835 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075430556 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094778172 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079641514 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097850208 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075582683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095628173 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097739741 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079727962 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095996914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077375321 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09237906 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080579254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096569136 seconds)
  done (took 3.41704598 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081268451 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071938949 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090277046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084239697 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088670118 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076726455 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089433556 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075338874 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093472703 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.071677124 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094217023 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072391972 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0743299 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093577757 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076218413 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096321849 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089797226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092379393 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074936198 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095255933 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077583093 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092864923 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074837103 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07197876 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089471255 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.071294688 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09015526 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072412426 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090242351 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072138507 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078401674 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09647984 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072237342 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102168059 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078975639 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089839879 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080107471 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089446741 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076623224 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089504942 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072212921 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07181173 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093444281 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08350672 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092793232 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074111506 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092467379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077646597 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093603003 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078927026 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08918717 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075454472 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078052412 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093622507 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078280894 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089334182 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073364439 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088781859 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076409151 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089576869 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071291936 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071949607 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096242516 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073089483 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112745065 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100208103 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075623875 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077928582 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093151879 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079526762 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094971333 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091323711 seconds)
  done (took 6.810930863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076927496 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100689822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074738826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091217882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070948859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072169343 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097747725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073698975 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090936169 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091720729 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089726032 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07447884 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091320452 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076777213 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090402621 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074420337 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10028212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070567772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09057227 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076520888 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090700311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080039307 seconds)
  done (took 2.624362457 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215151271 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101747654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13698705 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109728766 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0928622 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109649492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08070038 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099620129 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097220735 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083329344 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100810809 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081173137 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110440393 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100870166 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083172784 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103680204 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081529307 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104156375 seconds)
  done (took 2.670212739 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088447366 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093669415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101070912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093572719 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078451515 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098734815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085166809 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112621668 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080634081 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097297778 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.104870668 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078226886 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095310778 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075549332 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09619003 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077194201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097715485 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078746752 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107625984 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084474241 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103106204 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088691537 seconds)
  done (took 2.79534386 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092726864 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095739059 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096440283 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097550988 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075224942 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095097079 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084915658 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09349476 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08884977 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095606306 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07694165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095332052 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082868524 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09429813 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099448054 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077416702 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096080618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07776859 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079186176 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095544371 seconds)
  done (took 2.572443096 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116805189 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107136137 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090058501 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119423842 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108861597 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093360652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119263081 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089691226 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108078969 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120766275 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089966698 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108147549 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101898254 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115679982 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108390734 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101962545 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119310114 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11957868 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091806422 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106471168 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121146891 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090323807 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119951552 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089888973 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107558718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090605255 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107248336 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115502531 seconds)
  done (took 3.762396005 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075427898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074637215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090953841 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072561697 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090962984 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073770399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072955319 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091438812 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075430918 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092735885 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076317963 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094000435 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077217079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076753966 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095408125 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077040564 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095389716 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074291951 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093268681 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074561142 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076987298 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095289817 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076714617 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09265725 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075484502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095749363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074826522 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074973933 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095023923 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074530955 seconds)
  done (took 3.261282143 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083704995 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104313944 seconds)
  done (took 0.974343407 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07397254 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110671138 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073523564 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.098287441 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084315062 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097128851 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087796566 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101970886 seconds)
  done (took 1.51292859 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099998513 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113719743 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08147726 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10571347 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095161264 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112620884 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158081301 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084360857 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103718224 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079486042 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116003759 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078033006 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106046515 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084152387 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105966889 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093631537 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097980073 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087934639 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101690311 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078741123 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099917021 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110478554 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086861358 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103010981 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079085397 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106859291 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089440907 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106692172 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081747767 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106051497 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08358316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087361658 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08084752 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099671096 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077807753 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111886608 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111635329 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081717482 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103564584 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082449241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103350799 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07547237 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10569852 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08332008 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107089492 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081455021 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100731389 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074327299 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095563362 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080542956 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093674745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080559987 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071759499 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104645574 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103893344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094463968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096603549 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081178077 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099937168 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079589429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101944724 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081184557 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105213936 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080576695 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1045916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087016492 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104219618 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075785399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090664845 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080334175 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107696694 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104638025 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108194672 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100656575 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082978183 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095701071 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082936937 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101669067 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085518715 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106480635 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081935248 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101564423 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087214449 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099127166 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08081208 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102021589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078681899 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097621262 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077311502 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115541587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079191868 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095583637 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077648022 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106428231 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08106376 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09855898 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07793699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10401758 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070660048 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100104088 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083445718 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101980063 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088888342 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100057416 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083361878 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10394101 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088205851 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100267233 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0809563 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092475521 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082923502 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096897544 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08490854 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088943167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081895589 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099755753 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082221989 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105414589 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079804927 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099355709 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088249331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107125808 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0793691 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091363533 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082304518 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099995445 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086417055 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106793967 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079172467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093925081 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076233688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103437203 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081534325 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101447762 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08254369 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100524207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071485438 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096236202 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081539362 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106411547 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079981729 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102208375 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105895439 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08398094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098155531 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086897695 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09780271 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077232653 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104528823 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081310776 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093367831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086789607 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.098901528 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079944945 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099899741 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087014422 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099977458 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082323645 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096891564 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082403181 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101011036 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076952663 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101806101 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080274659 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107807202 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081064037 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093949242 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074695248 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10176805 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07833659 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080479283 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09482779 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081535704 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100841027 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078242442 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098886572 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080877169 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110612146 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089726816 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101587 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102270631 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087828527 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098842331 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083798803 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09972015 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083062515 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101929163 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085637308 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102158241 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082854931 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099254096 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073402551 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102139116 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087624332 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095880306 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078322414 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077476666 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099986934 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106507972 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081260765 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101572948 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079054872 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084149171 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105303265 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099640181 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081519607 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.076485411 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09943608 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086067058 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101471501 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083595024 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107168506 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101683073 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076026332 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105086124 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0786348 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103843528 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075790689 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07932633 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096133111 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083231377 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100577402 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08016844 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089665208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087141687 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107252122 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082508987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095749534 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08222073 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110183277 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080285783 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103622446 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081799541 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102949075 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114038491 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077968216 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10019792 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089513775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109875265 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070988757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.1038983 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079966795 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095283303 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079974895 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078622387 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101728086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10252008 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083134342 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070911683 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099670341 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080094704 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096082947 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076557243 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104890647 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082871274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.099467671 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108815503 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083936263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100771272 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082781699 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09979044 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083550111 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10194653 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083453371 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101259334 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079874218 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095901108 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082367303 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095790324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078550645 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080573666 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101682202 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08285068 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102680784 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080704377 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106859156 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.100930944 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084170653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118903083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078903928 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097606751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083497295 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10346561 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082072459 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100263388 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076908652 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10593334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081675157 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106118924 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081286831 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092946478 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082860204 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100413458 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085085136 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104777055 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087111842 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102747388 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084679697 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103829448 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094739646 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100753306 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092240611 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105494825 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087462485 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104864981 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085046942 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103572472 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080300437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100137058 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083484892 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101942179 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080693363 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103383741 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081911003 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099758009 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07966943 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102653127 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082837521 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101882748 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071661751 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096508 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07797044 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100360918 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086303613 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101234892 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080431464 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098626436 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084544822 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099732312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074193537 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103859024 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084524502 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101493107 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091294859 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096573581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08239217 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110611081 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072078989 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09833867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07837094 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098102416 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087468362 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102003502 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08883094 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104202225 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08014673 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096295191 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086929372 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102507893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074148945 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100491809 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089406266 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101787982 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082031374 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103634201 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08470539 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10262349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086011255 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099158877 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08221342 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100777023 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074907509 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097319666 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077229029 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081948618 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101960556 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078046576 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.093370999 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081458425 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100316333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082394647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100352367 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080630635 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106052805 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081420332 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101264693 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087527275 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091220942 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08186435 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099962427 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082058868 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096679152 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084320749 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10261475 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084757727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10690873 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082450801 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104133387 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082312147 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098204135 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082558424 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101564461 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083367339 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097544923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084423707 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107329892 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079445648 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101425343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083289217 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098531363 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084305581 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102591546 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082870332 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104267795 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083007234 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101853608 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086277363 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101207819 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083367033 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103242511 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081267463 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105318543 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079102369 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108091812 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083222689 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103305356 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08112936 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098155171 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081528736 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099920431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081511763 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106613125 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083484835 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096678383 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078358926 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098487688 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084412028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106220165 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088687071 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103031662 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083291321 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095079495 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075204103 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103256864 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079668432 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100918988 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085064259 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105254152 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082898431 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098400464 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081249618 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106921757 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086936357 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103949619 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079387721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103639393 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083738452 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101645203 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080977215 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100845331 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084407201 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103503483 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081847526 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097213894 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091611621 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106485356 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102977884 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081350767 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104920895 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082291112 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076367014 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103891488 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082408112 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104903048 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101768905 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082500911 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111657722 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078490692 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100837588 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088461365 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100787871 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088387838 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09560467 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083799288 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103353942 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084811342 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095924987 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081095602 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101631281 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086453435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10070428 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079539707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115105286 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090526019 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106195334 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084098026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104052818 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080383321 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100832019 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082042024 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087731125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105099821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111380096 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07866141 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078400692 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096628693 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083014984 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103179702 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085419014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094402188 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077310872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098224813 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083725234 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108794203 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0809775 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10143154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084000677 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101981479 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079191941 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107939168 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075224049 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103189224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093608319 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103574229 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10311322 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086470576 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107533135 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084279821 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09561032 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084035668 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102269092 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084851815 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102898423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087234238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116923712 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083574947 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097995856 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081354511 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102564923 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07931444 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109024317 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085306846 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103374535 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085020613 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101093629 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084914283 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108876023 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084503925 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.102366375 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083410328 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101036192 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082199887 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099505301 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081102536 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103909123 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084387417 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10105649 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085129707 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09790794 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093400026 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108519282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083827849 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094557769 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079301132 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098546015 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078310735 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103703659 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077014958 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099626815 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080357557 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100063722 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08629976 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10434333 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083053058 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103397704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082775821 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091939175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087541405 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103388088 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086067889 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093915995 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082969237 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103365862 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087885508 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107646899 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08148062 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102704672 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081915875 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104016261 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077554632 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104896637 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081585164 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100027326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079338883 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08233013 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103531125 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084471705 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103863111 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103912142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083619559 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106087552 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086212987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094455213 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075677128 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08559225 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099428005 seconds)
  done (took 55.843910843 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143430169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083553778 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072912985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094607712 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119499167 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078433524 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093656031 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078588903 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097250858 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087748084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093385283 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07391965 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116148942 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121762264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118871259 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08887602 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0931093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07835363 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093043675 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078856726 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114600663 seconds)
  done (took 2.857173494 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099600046 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111895152 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110057043 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095609731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104265899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112882015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091311012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111588119 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115230871 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087226622 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116218752 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112192096 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086297594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107348312 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105885159 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089855468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116206828 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104732438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094433169 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110523646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108586972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090279128 seconds)
  done (took 3.115744708 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087379877 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081537879 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106888819 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.07643905 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102874917 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076930353 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10781474 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.079540688 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107248124 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083205492 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100134626 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08332253 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108403867 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076333285 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100320473 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.07889767 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108162276 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082735918 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103737997 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076854987 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122512339 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076782568 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097746472 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080575276 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112128614 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084089245 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.10197853 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083030212 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099935463 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.083115746 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098104647 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084650105 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105464959 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08097685 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.100305414 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082934497 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082881648 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096206282 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.078994513 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105609604 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077433524 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103524062 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089568865 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099001697 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.079515668 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104336502 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083317413 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096392921 seconds)
  done (took 5.257544809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114602608 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15293133 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081250133 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141709246 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.11822191 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09253731 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103774605 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140241355 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076465326 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101305643 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120351147 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095640756 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103946175 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107871113 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.082799107 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102831445 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084401491 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097670566 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087991171 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101464316 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088540786 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105578073 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11550775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114307597 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08759075 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101029341 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078505879 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108461895 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11312952 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089395068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108563448 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090382559 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117518153 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101023593 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082411565 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105066004 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119522417 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083367063 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104637742 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077751376 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10581673 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08893421 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104988982 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.11961787 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084119794 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103116746 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08315606 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095696355 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093189547 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10593529 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112396344 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.097023771 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10819565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103253774 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088328119 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117274044 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102791735 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081630929 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.1057717 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093933119 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09651174 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0873755 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115729273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104641676 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092263387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116230642 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103776173 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087076929 seconds)
  done (took 7.878909169 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11096329 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108650221 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119542363 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100319267 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107865406 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087149296 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10949664 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107078089 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088294806 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115118112 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088177191 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155216124 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105653995 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114845985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089198346 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108674262 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.088701506 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108446598 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0884341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108495568 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108607719 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100169801 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108893258 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121327351 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122288077 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08664467 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109391081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092020063 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124117035 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111741632 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105480499 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.1128328 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11260266 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104401263 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12337451 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111140765 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085789081 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111884761 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09089319 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108347797 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084637551 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119832778 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107903773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085750808 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108277788 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08752673 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119666346 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121566578 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115455708 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097309448 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112312272 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123865238 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090977916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108614975 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120089365 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128859056 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100605372 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120053465 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108554414 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121223271 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100199258 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128238939 seconds)
  done (took 7.522527172 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080491728 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079974316 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098395291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.080730555 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103860979 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08162873 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082028424 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105420915 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085837327 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104338188 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082841363 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100186777 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080904003 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082718685 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101612648 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079978805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097355135 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080411906 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099802813 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077720875 seconds)
  done (took 2.634504286 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088393783 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120573014 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080819462 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107961885 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082895765 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107554863 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081639205 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103227898 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080519752 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102775999 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113031743 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094187515 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100121054 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087822022 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113787728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107338731 seconds)
  done (took 2.426200087 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100597272 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120539194 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125916846 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085572521 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097574396 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088303386 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102212487 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076070672 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095823443 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.089062907 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106484943 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085904063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103496286 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082904602 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083205804 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111809806 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.07849651 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.108217431 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085674696 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.128818456 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108172884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086356443 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107568565 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086918078 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10680878 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087490608 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107427943 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079178787 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100287952 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086276073 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107314637 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089993469 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097583984 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084466847 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098314943 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07799828 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103012273 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083592193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106931816 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082971817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099520259 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082942065 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103512089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.08504282 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096745786 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083343648 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.095870696 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.086059324 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101681597 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083838125 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103339419 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088280257 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107674384 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.091450486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111260158 seconds)
  done (took 6.11755686 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095333416 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104364751 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08482097 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098199066 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083781714 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109401339 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088489793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107060502 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086223347 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102084803 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086656998 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108107128 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086642239 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10714476 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086267947 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106023396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077290096 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103925473 seconds)
  done (took 2.578432008 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085788117 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078975327 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107987944 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079321709 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100659998 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082231503 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096750123 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078429485 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098850356 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080611966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09987734 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082429657 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098609352 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082792986 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100573858 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080985803 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102173993 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079011812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079278459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096084976 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082508133 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098377404 seconds)
  done (took 2.828876705 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097623169 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132226938 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094655288 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143495323 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.106027251 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086645926 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115358598 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087461254 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124444792 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.085569315 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104379855 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.084347395 seconds)
  done (took 2.119610357 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106014233 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137800373 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081650675 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103300793 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114882559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085613038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1054672 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086026503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121135477 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118709041 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086193099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119242987 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118584035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116841602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093682339 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114327603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104772362 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086404948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101853092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107420285 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106041689 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119467845 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085200523 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106591024 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10536097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097169565 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119203047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11844099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08548347 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120201018 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113417793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084958456 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119256332 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119116524 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082543116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121821095 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105391092 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128524615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097380857 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118080031 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103779007 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094811702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119689693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112903781 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101337845 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106564185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113608169 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085720025 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105919894 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134745493 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114822541 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098140649 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114520719 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120252626 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099267078 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135052125 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120333048 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118101587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114743713 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119222546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097658432 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114641598 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117852037 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119733534 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093687635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117222024 seconds)
  done (took 8.021708999 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120080013 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104312535 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084803015 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121117163 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118043316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105953857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085967527 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106115431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085799119 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102803727 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152082939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085910223 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119040546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118162898 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08529733 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107249881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106197979 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097203624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102288385 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135605132 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085613506 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118755697 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118209343 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118121743 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119785726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093921139 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106267414 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085573889 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106839019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105932605 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093103972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105673088 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117427802 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082261272 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117329918 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086167381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106697502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114247322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086649503 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114973641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118251941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129341496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086214844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106444711 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.336362772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106345403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106796276 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082328821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105725787 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083392727 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119536251 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119045974 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120664516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0978082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107211704 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106369013 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086643463 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105883192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085670084 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114507089 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117834123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086637172 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134915441 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105595326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084810816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119049426 seconds)
  done (took 8.066402299 seconds)
done (took 151.195317987 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098342366 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137017647 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096630272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1634878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080678079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136588078 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114086828 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116732918 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080995691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101562962 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081450683 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104579852 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146338409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101879307 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080799051 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104206121 seconds)
  done (took 2.608735008 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177038342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282709108 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100408835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107334142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087037636 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104328251 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085190415 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107957505 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081627328 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113776603 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10330347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083571836 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113481289 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083289835 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101988999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082880287 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11216935 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086211116 seconds)
  done (took 2.884519222 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111382473 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14606927 seconds)
  done (took 1.131492694 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116781679 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182348784 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291596498 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154022163 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109545826 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123370862 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155771963 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120467609 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197688305 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124217987 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102984487 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107840202 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133369462 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094090563 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111061868 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086707783 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135392912 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109869992 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089406842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109233402 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11157046 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108828585 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092061825 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.109806489 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184130627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124417163 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087621288 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108529986 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108991778 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088232808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113913986 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101188792 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123617466 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1853231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093251824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180387654 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095462452 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106939773 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088428119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106968357 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091082911 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111817864 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123375234 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087236142 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108522219 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094996863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108631364 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087833655 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115724295 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117151636 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095727174 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113539867 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159866422 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118266298 seconds)
  done (took 7.37835293 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796168733 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149055702 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087598933 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.901410472 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141421565 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101478733 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.797738056 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13356955 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240700784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.814552175 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101335252 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12304494 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229624342 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.250455824 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150982057 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314747631 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697754424 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099607759 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136884851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14836428 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092466419 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136178975 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12753618 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426558478 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108754315 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087298138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114915692 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099742684 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179695914 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087451807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111205299 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179045256 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264243556 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202249037 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092301574 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107178425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085560057 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165535217 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270948707 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218082207 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173677749 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083298742 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107143504 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099297341 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129708952 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081741873 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186277762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172644431 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172696897 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1124916 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12127226 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095389671 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120156665 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160388982 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0829593 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.337452196 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343640102 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109363394 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09918379 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126610525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272645492 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089760098 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227963966 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135783636 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192594331 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106930496 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832666439 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164738103 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086548331 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118183952 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092851705 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114513536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11891421 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163888013 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38890385 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10131035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111657254 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085016516 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227853589 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086686132 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106904637 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162596169 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087421547 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116520675 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124352416 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100818992 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192567448 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248760847 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122649206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095014914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113412071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098867508 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.1104024 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213974826 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222925684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158074521 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21541052 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121524464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162022163 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188155192 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101840162 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167978936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115149779 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126409023 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120890437 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192998819 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13975013 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108336038 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092497682 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115978777 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143223025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089691259 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115598135 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16767822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457380884 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186833937 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083137386 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111604774 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096251886 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1595242 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115930955 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264918729 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096699041 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164725946 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116898736 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103951658 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095066724 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161784055 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123155716 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117199445 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099284113 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116437022 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247883918 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223155752 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125200711 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219311623 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176168721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119464808 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172815377 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116986794 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168851315 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096479578 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120279607 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109107392 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80308912 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122327827 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116103639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092450211 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183810114 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107825259 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087696778 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108260163 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082582586 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839924142 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09035724 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10488023 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087859343 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118566481 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093946092 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114670168 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091492859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182977598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210896659 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122626713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11527951 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086830731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158937484 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109326894 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086052319 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109059046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086922327 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118461406 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091042186 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110233677 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170772542 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156920889 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223611239 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578464818 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089598258 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108692538 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208264041 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109536637 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.314127573 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097372456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226988011 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165883269 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106138487 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339604839 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172635516 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184604475 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089719319 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192530511 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083000949 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115416008 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160713145 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086544545 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116273493 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157325252 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125931679 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104724071 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149063436 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109133733 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237410033 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086540697 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195932329 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092279843 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122108387 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316296917 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09228116 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129023337 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160122187 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112910643 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086806282 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.711009204 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110351651 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118556051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097354846 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223640874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164439497 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116806416 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116668758 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100578912 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159590209 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.237308839 seconds)
  done (took 43.785794309 seconds)
done (took 58.656209594 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307770873 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.259039124 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.290167042 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192026209 seconds)
  done (took 2.021382041 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175732035 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149042996 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12054443 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106123344 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150156385 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08351954 seconds)
  done (took 1.686213539 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.467045406 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.368441723 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344025066 seconds)
  done (took 2.081938973 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249348266 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275379437 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.319411978 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42345359 seconds)
  done (took 2.27097589 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202654205 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122217122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094421855 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.135882245 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16781966 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.172574488 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138628972 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.148394019 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12616605 seconds)
  done (took 2.253104135 seconds)
done (took 11.216287025 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.275711473 seconds)
    (2/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.260788173 seconds)
    (3/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.20311206 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.160069333 seconds)
    (5/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.275226719 seconds)
    (6/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201922884 seconds)
    (7/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.233050537 seconds)
    (8/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.265241492 seconds)
    (9/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12084689 seconds)
    (10/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.115582604 seconds)
    (11/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.251493969 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.111291376 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095749325 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13773498 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122862596 seconds)
    (16/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088218771 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.214638265 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090943976 seconds)
    (19/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115301384 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173833849 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.185549172 seconds)
    (22/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094592744 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195661891 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123900537 seconds)
    (25/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119882082 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098784592 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.23122869 seconds)
    (28/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123847546 seconds)
    (29/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.102566155 seconds)
    (30/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.220678364 seconds)
    (31/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.184376718 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113559787 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115592912 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112748052 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137627939 seconds)
    (36/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095366991 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.154264708 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.217602763 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118306058 seconds)
    (40/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088825862 seconds)
    (41/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.110577045 seconds)
    (42/286) benchmarking ("sort", Float64, true)...
    done (took 0.227218891 seconds)
    (43/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096877759 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.112779693 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089703614 seconds)
    (46/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124917013 seconds)
    (47/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.158926944 seconds)
    (48/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.200753556 seconds)
    (49/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.128698502 seconds)
    (50/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111077917 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091104533 seconds)
    (52/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131415577 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119767148 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109949321 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111869515 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122215322 seconds)
    (57/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19778184 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123528066 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086317489 seconds)
    (60/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161039825 seconds)
    (61/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.226299773 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.204354924 seconds)
    (63/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.158218141 seconds)
    (64/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072165014 seconds)
    (65/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.154491906 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.189916278 seconds)
    (67/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.134704846 seconds)
    (68/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118212501 seconds)
    (69/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.079244704 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115798581 seconds)
    (71/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082022933 seconds)
    (72/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248184525 seconds)
    (73/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.15851644 seconds)
    (74/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.081474091 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.196668624 seconds)
    (76/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135375314 seconds)
    (77/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092463305 seconds)
    (78/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096179966 seconds)
    (79/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.129347754 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10715234 seconds)
    (81/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179576502 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077331494 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114263297 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092006913 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118092592 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.083604926 seconds)
    (87/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117580127 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072358765 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121042914 seconds)
    (90/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073208841 seconds)
    (91/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.193401347 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131842306 seconds)
    (93/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086955815 seconds)
    (94/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132966759 seconds)
    (95/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089011781 seconds)
    (96/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176353144 seconds)
    (97/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.146099487 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098685997 seconds)
    (99/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191763221 seconds)
    (100/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.096060607 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155968701 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.13903233 seconds)
    (103/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072242416 seconds)
    (104/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.105625535 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090244579 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.17705432 seconds)
    (107/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095416143 seconds)
    (108/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071719521 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119022016 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090457905 seconds)
    (111/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072003049 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130942499 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09834539 seconds)
    (114/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225924418 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.071322448 seconds)
    (116/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.181473451 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.16859811 seconds)
    (118/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119389082 seconds)
    (119/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.096464097 seconds)
    (120/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084411661 seconds)
    (121/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110161174 seconds)
    (122/286) benchmarking ("sort", Float32, false)...
    done (took 0.17212766 seconds)
    (123/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096442305 seconds)
    (124/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121681431 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192186016 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.181543461 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095260389 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12006498 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089434412 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118935376 seconds)
    (131/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096710828 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163133629 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.208976421 seconds)
    (134/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.146261981 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156212726 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121375589 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171015568 seconds)
    (138/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.185047002 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088892116 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119734716 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072907872 seconds)
    (142/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.10907244 seconds)
    (143/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087379748 seconds)
    (144/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190886928 seconds)
    (145/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112446222 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075737712 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083963375 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.140945635 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114747543 seconds)
    (150/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.072946971 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.071958957 seconds)
    (152/286) benchmarking ("sort", Float64, false)...
    done (took 0.169054432 seconds)
    (153/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096274795 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095631189 seconds)
    (155/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095735894 seconds)
    (156/286) benchmarking ("sort", Float32, true)...
    done (took 0.225878976 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090147448 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114444051 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11240853 seconds)
    (160/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.199577379 seconds)
    (161/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.1580654 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122602968 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089929891 seconds)
    (164/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.106335336 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.165932828 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122814468 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088960857 seconds)
    (168/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113573997 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178528608 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089625218 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.146671509 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.101848234 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092512558 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138520876 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093888833 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116408791 seconds)
    (177/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190702298 seconds)
    (178/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09597421 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11449555 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.088712917 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120301035 seconds)
    (182/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075858062 seconds)
    (183/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.1121762 seconds)
    (184/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087325293 seconds)
    (185/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.097423454 seconds)
    (186/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091154174 seconds)
    (187/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.19397979 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.217537038 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086611467 seconds)
    (190/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12315126 seconds)
    (191/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075808159 seconds)
    (192/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.11220881 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114265971 seconds)
    (194/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.180915115 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177983911 seconds)
    (196/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11467884 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100295901 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120733503 seconds)
    (199/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.073259515 seconds)
    (200/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152421326 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116222744 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092702946 seconds)
    (203/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.182242976 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09178149 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109114883 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.089732165 seconds)
    (207/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118925487 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091731635 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107078682 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.135117633 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111801919 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113622348 seconds)
    (213/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078473108 seconds)
    (214/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072981597 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.113317738 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089642308 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.099295319 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086894242 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115866242 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091343199 seconds)
    (221/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.1074991 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.130371834 seconds)
    (223/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075550807 seconds)
    (224/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073403389 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184282771 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.097038697 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.108121495 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096969322 seconds)
    (229/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.078315365 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111891538 seconds)
    (231/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.076175859 seconds)
    (232/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073642454 seconds)
    (233/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120890824 seconds)
    (234/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113055101 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085005515 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.098293174 seconds)
    (237/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079500993 seconds)
    (238/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.073336159 seconds)
    (239/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.09656842 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099900813 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.095477651 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.091036099 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121615854 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072598362 seconds)
    (245/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.095114816 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076241316 seconds)
    (247/286) benchmarking ("sort", Int8, true)...
    done (took 0.216667219 seconds)
    (248/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116491718 seconds)
    (249/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093987037 seconds)
    (250/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.097666942 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090196527 seconds)
    (252/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.07280754 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116173479 seconds)
    (254/286) benchmarking ("sort", Int8, false)...
    done (took 0.189900349 seconds)
    (255/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113573654 seconds)
    (256/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.072640243 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080637395 seconds)
    (258/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.09927003 seconds)
    (259/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084931973 seconds)
    (260/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09926856 seconds)
    (261/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073615274 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116862968 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085303115 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.104589338 seconds)
    (265/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086452821 seconds)
    (266/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112949581 seconds)
    (267/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0887844 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.1107257 seconds)
    (269/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110699739 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124733763 seconds)
    (271/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076400251 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108599768 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075134682 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111403026 seconds)
    (275/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.072462149 seconds)
    (276/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243603986 seconds)
    (277/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.100584426 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091492867 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.132600678 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086587597 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112441372 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13335566 seconds)
    (283/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.159263957 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.100549908 seconds)
    (285/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075394728 seconds)
    (286/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113529265 seconds)
  done (took 36.748229037 seconds)
done (took 37.655247738 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09956954 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149351642 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095334679 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138522899 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122985371 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100373772 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118809425 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098232144 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122700194 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.100394725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.122489684 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079156161 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119384526 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094801853 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.11971761 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138640742 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097567129 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.115615502 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.087135996 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111523316 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086820584 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111900116 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088765547 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103271365 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095216434 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117945845 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090759325 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119896372 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088110437 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110243031 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085822282 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116684714 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085228601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122153412 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.08921197 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111722385 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096667322 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117742811 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089089706 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11273732 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092765484 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112439736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09139659 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116156056 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088075163 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110716016 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087696895 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123317544 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114380444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112728074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092352806 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118671805 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094598871 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115874755 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0857792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112023314 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087614717 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138067766 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110650785 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088132313 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116690384 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091387642 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.111777492 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087262334 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111941713 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09507435 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119950404 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087300484 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118770728 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091105372 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108194643 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.087765813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110429153 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.085141529 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09337809 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118502174 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082912647 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.111804787 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091204712 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113320579 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086956441 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110451136 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089043826 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112414945 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086720447 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103328306 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086131078 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113743274 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086723614 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111747081 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090353526 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.11489635 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089166638 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119676708 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08774824 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112580978 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088360954 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113394901 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089573157 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110387043 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083641866 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110443545 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091938318 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.108855118 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088417889 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122419476 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086714031 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114745331 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087157465 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111511661 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101417868 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118655771 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088898949 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113439021 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083785413 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114643954 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085456628 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110239494 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090914861 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.132387021 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093504809 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113553067 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090581076 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.115485882 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102174896 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.112253164 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090701599 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110753195 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091962808 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114504534 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092742981 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109742961 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09001828 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.107423393 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086786164 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109888997 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09048998 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110777399 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.088301613 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11196828 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.087795244 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113340654 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088538764 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112478416 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085192445 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.105704315 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089342373 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085995257 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112441327 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087810373 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11217235 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083275765 seconds)
done (took 16.603041819 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094919274 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186094661 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145678867 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149725224 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152213185 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.109335102 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123850048 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143960907 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.100484046 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142406903 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144745853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112993089 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148879029 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120900825 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.131184928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093952494 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119855785 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107750412 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152864055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139986898 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145994562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.095902339 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140792413 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139171354 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093431485 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148692632 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122877223 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094102673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122521023 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103123549 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135342395 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122742038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.097150426 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131464803 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101690551 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118796091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130650406 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090110719 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119809865 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094800324 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133917918 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132073107 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091864079 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126402112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119570254 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.098832995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118378994 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093333903 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120728064 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089107512 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124399472 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141675973 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092906926 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121992119 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.095543807 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118886896 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121663131 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097650378 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121752261 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.098049274 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.118784128 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122455164 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.09930236 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13717593 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119024903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097146364 seconds)
  done (took 8.879176685 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108729968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146456719 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125775384 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101728553 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122728725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083584732 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108038303 seconds)
  done (took 1.766601817 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084996346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140214462 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117266942 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14228181 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133903079 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12049922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126947985 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085267668 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134756123 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120498512 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112557788 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164567516 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113930534 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097276905 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146112853 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085409744 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147179593 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.112544301 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09296957 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14215409 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090443569 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132275975 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.124098956 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085615438 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131662753 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086901382 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176491803 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122134932 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084562011 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090881632 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114633606 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180161702 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13236007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.097548813 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108586263 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114184619 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13093759 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115129967 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.110330135 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.115558555 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.105839992 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117766179 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092806724 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116515593 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093147306 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125865747 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122336917 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093580129 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115798178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113297596 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122678062 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107505269 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112864122 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089931244 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.122153268 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091817583 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124835416 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115615195 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116396986 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11843922 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114024578 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137802998 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132392258 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115678056 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128913966 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132903144 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106800127 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117009221 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09464316 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121202948 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.115929659 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115820502 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.098423625 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126756702 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119929141 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113478631 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138163289 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09059024 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125148746 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090054275 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113768155 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086318861 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127812683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089667333 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113577259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103475606 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123087989 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116832069 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08951103 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13377441 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089534574 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122932431 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096528924 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114690188 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127074458 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114361006 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.122519147 seconds)
  done (took 12.176730445 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087883804 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08829482 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117174266 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087907094 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112611898 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088156209 seconds)
  done (took 1.561664616 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117369938 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116778116 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102927702 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11902828 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155206177 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111191882 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135792664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096934602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13087609 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127156758 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110992966 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137800507 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142594628 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093419691 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13614548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093391969 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136751279 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091229789 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12604606 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095338343 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13283496 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119099545 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090329601 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133903468 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095308818 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122549274 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098303186 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126833167 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128069157 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.101627934 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122504394 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.099349254 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120742102 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.102025325 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141533429 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124456742 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094080402 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122174773 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096305585 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121082696 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.114979803 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116587031 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.103501395 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122476125 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122363313 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095320331 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121348923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093492958 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135872797 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096230306 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123124284 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097765796 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121755925 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097377658 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120799838 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122787346 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09589932 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137521518 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094135464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120981918 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090694084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121570926 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096482669 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120397176 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120098407 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096708671 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119974381 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092570814 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115758032 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.093300247 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123122925 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09312431 seconds)
  done (took 9.193015947 seconds)
done (took 34.541395136 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669624747 seconds)
  done (took 1.64499497 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824161342 seconds)
  done (took 1.802640399 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.81721842 seconds)
  done (took 18.824766562 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.48823624 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589384197 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980876203 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160329055 seconds)
  done (took 3.197672325 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.973677504 seconds)
  done (took 1.972588985 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300736784 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265332159 seconds)
  done (took 1.54934596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816999968 seconds)
  done (took 1.807090392 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494530007 seconds)
  done (took 2.486119466 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351442162 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.198397266 seconds)
  done (took 1.550248111 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566854708 seconds)
  done (took 1.561894704 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.766393986 seconds)
  done (took 15.76714007 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239218733 seconds)
  done (took 1.246828268 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294293939 seconds)
  done (took 1.291155096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.666116726 seconds)
  done (took 4.665513805 seconds)
done (took 60.357981015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096138375 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125382084 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.099644522 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122918355 seconds)
  done (took 1.43750079 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100787335 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121740764 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103081711 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121162053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10392705 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121356792 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093469851 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163998314 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119175215 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095399603 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121654184 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093401845 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122316689 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092605093 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118322473 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096815094 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123570996 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094555213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120998382 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120588106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091316436 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120985815 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09604259 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118834211 seconds)
  done (took 3.677823973 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096022549 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090402132 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118057788 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089938467 seconds)
  done (took 1.397870062 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100082003 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133790054 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.110599345 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126772496 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.109945432 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132260028 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11536303 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08886027 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118442455 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103564464 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118136347 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114208263 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132458372 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084622669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127495795 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08688049 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112331132 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105731618 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12494832 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126829644 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.089052699 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124359593 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096790383 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131404096 seconds)
  done (took 3.723464466 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170873723 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128321985 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139897293 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.100176461 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16582158 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142171237 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09193022 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142143919 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090015856 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126742254 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093125132 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167543608 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126040538 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.0957104 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115844436 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121898351 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098872965 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124062056 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.094675164 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.132163704 seconds)
  done (took 3.473740212 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096558386 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115893786 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087137108 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088148271 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122927638 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0922311 seconds)
  done (took 1.610847374 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086443809 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084920745 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112880042 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087399922 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11658482 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.088650244 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11042667 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0856681 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084984261 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113141775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087995118 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110797342 seconds)
  done (took 2.182583337 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382066299 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114773025 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11356186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090134112 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122364068 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088541519 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128435694 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090635717 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145601892 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.092634946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115153552 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095837128 seconds)
  done (took 2.589976291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208948697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096877384 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264773192 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37421263 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13198986 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163990371 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280379017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160014142 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208713986 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109936206 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220844929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128182192 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152757244 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178422339 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139222466 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.179464583 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176589765 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203745911 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150316844 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207888318 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164259643 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167269649 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179996856 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150655856 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134484202 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15591688 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090513441 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128010231 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174051525 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171022 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177203277 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149668701 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138079533 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201672844 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212835289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208068149 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312230733 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131587742 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1873784 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.183120217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233235093 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139425621 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195084082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155176115 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129352511 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188474654 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164730356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189251388 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110451692 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147791422 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188365338 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177458842 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20536226 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10929738 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327614607 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125698318 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145490125 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180673928 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185125226 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216251993 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167736919 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092453535 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187935899 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182232338 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177841156 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142875082 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166639163 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125089172 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183078452 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194713511 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176811779 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166474324 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212351369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111618094 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16607964 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166606045 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15367881 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1780849 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169041861 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127847938 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130051278 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139328978 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127323319 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.162323113 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120460499 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202298048 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134401649 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189026346 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205602729 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157556619 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161688434 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165110569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166608268 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149950637 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093001105 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148231463 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161441028 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160280669 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103106602 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155133414 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142865246 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.1311973 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158738152 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10042649 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165003055 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134677859 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174441944 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169715663 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099095047 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164017756 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150767633 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.160332642 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17299302 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193110133 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136953467 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107782388 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192867448 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164166282 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139424374 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177967784 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190718204 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169007594 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142167706 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170659972 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198493042 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113160204 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214402389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11219189 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132468543 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.150920543 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160118819 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156919329 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.128469438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128235683 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152203219 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194177777 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125266502 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107661056 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173989867 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125977175 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127155401 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11326554 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135960441 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142105184 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119331706 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138183295 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155374638 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159436918 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154358685 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159310229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140509254 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19186417 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131877398 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131504782 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146396199 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117869049 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17783884 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184444348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099579404 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228124417 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167751669 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196419632 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163234613 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131011997 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178304437 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097594618 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.1190238 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166636452 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160449855 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162611361 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183122933 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193558337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16450815 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151694488 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151638569 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167663753 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.173331275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155505274 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144824258 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162513379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16889069 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092985956 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123753896 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097077716 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142321079 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129556454 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103338403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181151809 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165011286 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213870752 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159169881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113062057 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179597108 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123643883 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165337646 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171098358 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138587113 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183313287 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181012859 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168099132 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141852677 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176429538 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089424236 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122385101 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103498009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163812213 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130915611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133497431 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11336168 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180580672 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204412417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121398501 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228389333 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168639017 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191016782 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120623357 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133548719 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17033999 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161739568 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184413179 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10600137 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156717457 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176747799 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140898744 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189495083 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162153797 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167720125 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22824182 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.157957353 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10118003 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148348974 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167156406 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139020146 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135441175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14470459 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136082194 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154786743 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104521813 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125408347 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181741105 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143679735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179604442 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156138246 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17231142 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125957171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141164616 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134283304 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145120105 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116312918 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17306978 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188183106 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143371845 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159516606 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176008756 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0996778 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309989563 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217042897 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188617613 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135307045 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113250122 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160473305 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158745719 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164594584 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177606951 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144146843 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183833539 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160133253 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115200091 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134240493 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150166239 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153325856 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122310691 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131336827 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153159616 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143677345 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189409148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144758135 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160340541 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163239993 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117633502 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149001427 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146221852 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20169999 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160180697 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179208757 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.156749756 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136039357 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228346495 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093840205 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12784923 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.097058169 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178349959 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132727815 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160321795 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186955387 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223995814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130871941 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166498031 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137558035 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118419815 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129613412 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149781372 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22324015 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112093057 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13324405 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1914012 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.151011922 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128129139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133442015 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314146637 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115991121 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172524534 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115841163 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280095544 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122340957 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101976977 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160079824 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171654271 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137808452 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155524968 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162595801 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144877952 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160372943 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139112432 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186598373 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202338746 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170323513 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175989581 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142757273 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159512888 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164788145 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176345839 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142490901 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143576747 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132717606 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18132785 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.214792483 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102554001 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164517722 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163522491 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159908359 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17338242 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132898334 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201253718 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129887535 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167558634 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11285874 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123072536 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159244252 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184370545 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13271033 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178262224 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161601448 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102181552 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125293342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152057555 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161637801 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112870563 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127616953 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179547654 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123116984 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163088589 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1506101 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129307258 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155188767 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143441547 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10718375 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142979409 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145378151 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105285104 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170981826 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184268777 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129542554 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177354263 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176910048 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166417966 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159400736 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143018649 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635423872 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128096329 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182132317 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147350193 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18442101 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147561789 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166105153 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132189504 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149201135 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168101572 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150101144 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222032098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168298957 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158243836 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099786266 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144351264 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143718524 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129230654 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120938808 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165134205 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141977403 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135388083 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156701615 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116041037 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144672271 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137829128 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182393954 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11697944 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2115558 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177898102 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107700394 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166319727 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172100146 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129212496 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159554959 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17185363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140127693 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149674914 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100190607 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134157974 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18022746 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093982586 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1605094 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161113548 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160534165 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162993146 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132280669 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130493312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141841426 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160642007 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129750776 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151599883 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127090512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129678726 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125214087 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125849906 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15897419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157623427 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125099312 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142044548 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178163912 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123912809 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10270198 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311926048 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130884275 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220064626 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121453988 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133704229 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143517321 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154868343 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.124198353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158880758 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128750061 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130463801 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100813336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181627434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152899451 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15586181 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182991539 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161271569 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2007637 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133221678 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233077154 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138290883 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154586576 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099540721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127335528 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142961643 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10431092 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143665509 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188372576 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177890352 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.151047288 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143676854 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096190052 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126269602 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131227509 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131475995 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153668731 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159176026 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142042411 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086367377 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143289352 seconds)
  done (took 76.48632883 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14374778 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129691047 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146926183 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192651915 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163682815 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240908792 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203018 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223575118 seconds)
  done (took 2.542970545 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.099470662 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155410534 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137141286 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.123150846 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089846616 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.331485355 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135647833 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120976385 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.149176466 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.132317023 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.089860333 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561022358 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.092124653 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.124138931 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111677608 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087728637 seconds)
  done (took 3.630689563 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.312979363 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537053425 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.160886696 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244700911 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.225118902 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.15122698 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.754339189 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.180842146 seconds)
  done (took 12.667131014 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119659107 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137932753 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132180609 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160516226 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116353068 seconds)
  done (took 1.770199603 seconds)
done (took 118.183966295 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092209931 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12395673 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094475282 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125661469 seconds)
  done (took 1.52559125 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105132189 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078543609 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.1092056 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07727886 seconds)
  done (took 1.466641666 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422339189 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107327972 seconds)
  done (took 1.664562919 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11312736 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132585162 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103565188 seconds)
  done (took 1.450837534 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101841667 seconds)
  done (took 1.207364874 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094917159 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097070363 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138542049 seconds)
  done (took 1.435951222 seconds)
done (took 9.854616796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109281441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.429694971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386089772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135800171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719163477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.377621391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037272169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15800851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135949383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117605041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107889358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697954088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0206266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344533788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005155924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.344311784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670061783 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118875204 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094444884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118755803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012626114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088079738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089618211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119693524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667375944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421744293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088473545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38562749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116357726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092943271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405869169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089651249 seconds)
  done (took 16.79851807 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094243649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177216596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096160756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119795281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092780858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11971699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099346572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131122766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179175327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087793877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136087776 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087492773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123516408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088543148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139087467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091179804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119712997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090765944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124427353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090648606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138343435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091831936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120200194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093502529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118640926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101171028 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117769934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10103299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117388048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09350252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121856931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089011424 seconds)
  done (took 4.702903364 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138767092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185703876 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125844708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122809103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16716997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118909337 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171545182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154876909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181470525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120836717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109303903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117752762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12650476 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118897782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109140202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118151286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091345324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120040394 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094832534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118626877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1083162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116249393 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089633137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119143891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088107401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130998478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088535311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130250926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115925715 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093007811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122009072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089436136 seconds)
  done (took 5.016744076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096064782 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126061092 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105981956 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133859759 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093567928 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125990453 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100968402 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120767193 seconds)
  done (took 2.01692717 seconds)
done (took 29.639352378 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105275658 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093671958 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130415335 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100512619 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127428885 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101494831 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.11545348 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099569396 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131043724 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102379804 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134415891 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088024164 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118659905 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.087267167 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130066518 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094089444 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133176168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098161009 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137710497 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.103663375 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118697649 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.102561732 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.0982998 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138668628 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138745776 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.112450926 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133331776 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094829022 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118356227 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089410774 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132474174 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114132364 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120564717 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105451849 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126399545 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092213905 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118826099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093330359 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132240569 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099290192 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123405431 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099266082 seconds)
  done (took 5.838646521 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.11537739 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162010679 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088427874 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118967414 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089898367 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.157154511 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.15345285 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089902354 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.11885055 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.11429246 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143878164 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.090301176 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.119160353 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.093590696 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.118724261 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089913575 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.142799637 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.114703747 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.149857618 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120020221 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163207337 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149734778 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.123956273 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142599405 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.161459687 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.153827829 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.111177252 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155626046 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116322326 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117878839 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.148766126 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.121342533 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118164522 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.089160696 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.16010211 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124835309 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146292606 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.160790197 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.149656004 seconds)
  done (took 6.128371242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098840574 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132269895 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.110721071 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183768709 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126387876 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.131785901 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099084606 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137237916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105145027 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118710098 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090133464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149247299 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135188675 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097700837 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089702451 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133299835 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13879443 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090798832 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122800721 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109454445 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137683708 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102243887 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132635765 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099948383 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118994756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098078963 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121872653 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104021359 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124317632 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097160252 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122078148 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093504197 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121606093 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.101577893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122420331 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096950793 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140926204 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098467616 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130971199 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120655685 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130624062 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093038458 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140946539 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15761941 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09249598 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12549081 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095785789 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097906373 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11749599 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107356891 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128392484 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089070986 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134097776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118138653 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087808776 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103058343 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119269287 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091578611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126528773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096280591 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138471341 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093695146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134193309 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089795093 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124710472 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089140895 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118681275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09408558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140669956 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093180771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157716891 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.12805528 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094857885 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127247991 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095046978 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127973511 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089273317 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10268317 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129046627 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093995651 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12872574 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092160139 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123152433 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106670577 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133705041 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125785208 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09566103 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125456093 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092670144 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118848364 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103971896 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092203393 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123243936 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106091836 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119282254 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092456928 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124689347 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093787707 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117994106 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103115725 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124396673 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088846161 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128902325 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090143925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122875831 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098251783 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122667657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089140882 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123922643 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095770588 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118652401 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092606477 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122338649 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091353644 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133134407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096910908 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122477606 seconds)
  done (took 14.411631483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234869934 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216449395 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192213318 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301156111 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.142554379 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11636657 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213223594 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16504067 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089543577 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159731581 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17648847 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186949682 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175696843 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186170578 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172226641 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120837703 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107919644 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172789218 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.2158889 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.298820585 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108552697 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134723042 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162204706 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160245373 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108071989 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135203116 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142771414 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111785247 seconds)
  done (took 5.839450362 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104754336 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156065073 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096521608 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145796848 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146720449 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089939723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124779862 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.090152217 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132877804 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.10458757 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.120691565 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097077296 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.126595179 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099730658 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120408164 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.099258028 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130497124 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098328498 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123345376 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093753348 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134433122 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108214266 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125560541 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093183604 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137168298 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122323677 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0926377 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141703678 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127081477 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115417456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117437177 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099334931 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135583141 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090297776 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092907508 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.124031691 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092431437 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.123404595 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092311072 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118392404 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089839749 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111599125 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092205358 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135558019 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096894149 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118215046 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095568976 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124969576 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097709816 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116955508 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092665125 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092859934 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124357692 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100870719 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124337661 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096858992 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.12541736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091835758 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.12987566 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.093116108 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118914419 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091916833 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128116145 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094093648 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129511634 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.096770282 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122510729 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092303138 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.126700629 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097632749 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123115245 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099069367 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116893133 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091440614 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131382872 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098291948 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123978568 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09215329 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093639899 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119988892 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078636176 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119473693 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077494217 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12508433 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089163881 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091758691 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12321267 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095562894 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136345314 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130162942 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097480097 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118655566 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092583473 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125569383 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087945702 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124392841 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107892269 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14044275 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089654237 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118286557 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105865682 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122438117 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088452751 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.113259819 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102350676 seconds)
  done (took 12.77478711 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130459673 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171477243 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121897337 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109313197 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155325319 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162344687 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099452724 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128004283 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.631587481 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108408855 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124082569 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099565613 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123819437 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103898063 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161401204 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130082202 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.091418858 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135453622 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095495817 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174597049 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139977203 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.129228416 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161591587 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124579414 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095805923 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.159006075 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165029943 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104158291 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133738933 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131725668 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134724451 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165862699 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162720995 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096405997 seconds)
  done (took 6.11413263 seconds)
done (took 52.215227882 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.249191789 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430367154 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.203057821 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.20290495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.258043966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.228382276 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.224253247 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.397471105 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.989561962 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.194868704 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.203164374 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203544873 seconds)
done (took 27.922071488 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.350628232 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364113156 seconds)
    (2/2) benchmarking "String"...
    done (took 1.498435532 seconds)
  done (took 4.008634012 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.205260101 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.204340289 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.454533898 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.214433183 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.209468379 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.227650346 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.209498715 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.213012201 seconds)
  done (took 15.869003862 seconds)
done (took 25.571231676 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.272332683 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.397016319 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.462377002 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.222835189 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.211818681 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.222054224 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.210909955 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.242767406 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.205427544 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.229219041 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.205906458 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.471640973 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.226599467 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.586998196 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.2200227 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.212155362 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.22594849 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.461359476 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.211897803 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.279903498 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.192568238 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.198209268 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.217156505 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.234309383 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.216291098 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.222837596 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248440094 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212077137 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.501906527 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.230908839 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.25574857 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.209310908 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.259824631 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.219699667 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321556168 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.238726199 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.559194757 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.217684546 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.195618306 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.214374098 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.514203377 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631761066 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.213354984 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.220823888 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.214170145 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.298881558 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.200504622 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.935271815 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.215073686 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.218930524 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.26632464 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.598318632 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.212444294 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.207710854 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.220407048 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.50754532 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.215191427 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.279678004 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.243345624 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.210082433 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.225485228 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.212820597 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.268192697 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.22074895 seconds)
  done (took 144.635265343 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.210482813 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.208303928 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.208088318 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.217832747 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.209806407 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.20929917 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.209489314 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.210446459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.209338131 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210384716 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.210839969 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211353295 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.215133257 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188747688 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212139361 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.223904363 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.215461326 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.227049222 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229808304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.211174487 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.232871158 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.210609779 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.228158455 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.210713386 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.216632694 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.29854354 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.273085479 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.223649459 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.215448052 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.211420683 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.212074506 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.218170477 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.843921211 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07023832 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.228243668 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.240558817 seconds)
  done (took 80.524305612 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210544132 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.210495381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211690574 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245044033 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21135534 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811266533 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816891124 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.96943124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.549272403 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.707258753 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543321708 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.217655843 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308987866 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224640402 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213729892 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228135178 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239881128 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220047852 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211831898 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813142634 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231819351 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.213134396 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.415414012 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228553659 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245970096 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612246909 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212920323 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245774507 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.550419289 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.263137098 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213322861 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.611400245 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.813698689 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334330697 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214698751 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246410803 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.214678871 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.49707404 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213348506 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214875353 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.217953347 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917570399 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220527688 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.818014472 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221297427 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.220212372 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22047225 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215014607 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.215215982 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.721350691 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.006981657 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237312047 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21475198 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216571325 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214538233 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215250189 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24971161 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.939667245 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.339435483 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215558498 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218840375 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.248382274 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215127867 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.669914815 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221735692 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.944776633 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.297045625 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.426625293 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818020324 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221881386 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313767818 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33678205 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216665821 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.216387095 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215021219 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217279077 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214860206 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.326901511 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215792981 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.654011372 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216627787 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394884582 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232256053 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.653542335 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.220535752 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314947457 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.215053981 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677198253 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.222565282 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.216330047 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.992905116 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314491051 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215762522 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.217250088 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216710103 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.664324922 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.819128831 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.577352011 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222323052 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.030742398 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.223369566 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.668428087 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.816748684 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90433113 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21938007 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332408769 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396477933 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234327904 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.21744149 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.675929934 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224799083 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269214176 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217829171 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.618240312 seconds)
  done (took 370.806708664 seconds)
done (took 597.102866643 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.946743159 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.894552442 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.02858911 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.929120311 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.889935274 seconds)
  done (took 10.83637967 seconds)
done (took 11.983797475 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4131818 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.419462786 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286659032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.418448345 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255766851 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436207897 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402151816 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245119079 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325998324 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306898548 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328917955 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276267213 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257443647 seconds)
  done (took 18.520604917 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560993189 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.221383694 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301550622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538635862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260868038 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57097687 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420494062 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.240251545 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427340784 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236842859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233975148 seconds)
  done (took 18.163770031 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563528131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.221383647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306112384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545838648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261932685 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572397198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438676263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241007509 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.426477217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237621715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234621058 seconds)
  done (took 18.200363844 seconds)
done (took 56.032914654 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263806125 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.39094968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.254907666 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237728818 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.231791683 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.233121636 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237844204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232734023 seconds)
  done (took 11.234116499 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226376166 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.228412046 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.23123351 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.227419558 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228638126 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.228422564 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.230759028 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230362926 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228849681 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.23155642 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227155257 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230788724 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.229458147 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.23226779 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232065258 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.230358634 seconds)
  done (took 20.825168448 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229781341 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230335888 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.230855855 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.23014255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230699046 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229218933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.230635679 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.230058605 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.228977813 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22926252 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229997474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23074815 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.228967161 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.228697781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.230463413 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.230506399 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.230026195 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.230960257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234387675 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230687869 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22999265 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.229019804 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229075928 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.230814805 seconds)
  done (took 30.678790348 seconds)
done (took 63.888548588 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.222641902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.242090399 seconds)
  done (took 5.617645788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288651657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.293055277 seconds)
  done (took 3.7356939 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233032928 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231951069 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.233618907 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.232462422 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232423825 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.231897969 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.232171674 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.23242898 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231789263 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.232400705 seconds)
  done (took 13.478049458 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.233493035 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.232123996 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.230389386 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.234192701 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231817956 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.230368496 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.233507601 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.233166022 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234389872 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231053673 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.232866763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232414225 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233611358 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23101904 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234433036 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232703515 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232334785 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.232330754 seconds)
  done (took 23.34068897 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.247693237 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.255207216 seconds)
  done (took 3.657534772 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.3610158 seconds)
    (2/7) benchmarking "second"...
    done (took 1.274713927 seconds)
    (3/7) benchmarking "month"...
    done (took 1.341707885 seconds)
    (4/7) benchmarking "year"...
    done (took 1.33090516 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.274423585 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.253681742 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.27520261 seconds)
  done (took 10.266051412 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.236057914 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.425032941 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536477164 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.812889566 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236759333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.239684004 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.108825962 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.238628743 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.241473878 seconds)
  done (took 14.231198493 seconds)
done (took 75.479850475 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.226320714 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.252691407 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.256363036 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.247430719 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.571682223 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.262656709 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.233059142 seconds)
done (took 16.20615902 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.222950565 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.220075033 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.248205855 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.23646466 seconds)
  done (took 10.083508887 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.233720282 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552588686 seconds)
  done (took 4.942560793 seconds)
done (took 16.181442728 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236998058 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.237539115 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.237984128 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236080373 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.235357779 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.236917991 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234522263 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.234575503 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.232326065 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.23620422 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23595169 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.235647 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.236019114 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235622567 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234433721 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234608905 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236795905 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236262784 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23433875 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233835572 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237610795 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234546092 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.236272505 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.235100498 seconds)
  done (took 30.811840404 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.236957421 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.2367618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.237796789 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239000981 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23607726 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237458754 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236251972 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.236297098 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.238330722 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237544859 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235224361 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235623496 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238574381 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236499472 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238449885 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.236208013 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238582508 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236377154 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239332422 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.236291183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.239189845 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234976305 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.236221707 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238910269 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23634369 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235770568 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238800312 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235598088 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23815328 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.236632537 seconds)
  done (took 38.273267421 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.244420501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.246177508 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.239581948 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238706042 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239522675 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.238908727 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239802245 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.2404578 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.23999755 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239825694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.23982123 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240025997 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239329939 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239243918 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.23999379 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.240602761 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.241115608 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239844005 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239605042 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.239713988 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.239920264 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.241346275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.240008213 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.241435266 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.240723454 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.241262933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239891092 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240464562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239892428 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.24148082 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.240358992 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24170639 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242081167 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242091402 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.241840304 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.241138001 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246647006 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.249278374 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242740342 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.241147271 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.24139012 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.242414671 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24387928 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2430912 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.241111326 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.243098455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243103741 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241271906 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241168606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241483564 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241449089 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241918306 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.242538903 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.242792369 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.243000983 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.243117696 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241344909 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.243337614 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241732285 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.242480853 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.242636966 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242481191 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.242198054 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241895783 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.242921703 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2429965 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.242674345 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.243398597 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.243435828 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.243309664 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.243406028 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243564531 seconds)
  done (took 90.565064899 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242142499 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241037577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.241048165 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240817552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239894833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243585963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241547097 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242021625 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24158717 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243557704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243342801 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.241160855 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241370855 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245448275 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244254694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24193086 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.244175738 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242029806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.244521535 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24315998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243761294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243036738 seconds)
  done (took 28.499952694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244199165 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246562757 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.242425662 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245952609 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243689382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246404303 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24572566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245951837 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244191057 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243671803 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242250361 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245097373 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244182696 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242720541 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244495808 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24406543 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246741237 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.244880694 seconds)
  done (took 23.567358893 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.244433238 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.243254641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.245801338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242862755 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.243826556 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246058673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244112115 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246670105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245514679 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.244120903 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.246385107 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245291867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.246628587 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244881991 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245724253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243836022 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.248487388 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245685017 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246879535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244850717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24436938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248571007 seconds)
  done (took 28.565553823 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24718187 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247179723 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.244672907 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245301995 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.244405581 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.247594827 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248325511 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.246240805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.248868396 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248604822 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24528194 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248085361 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246238909 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245990754 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.246429935 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246228901 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24733527 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245718764 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248029549 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246067664 seconds)
  done (took 26.101878774 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249610803 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250235036 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249233439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.249057864 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250288421 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.249249313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250948031 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249034188 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250538495 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250512662 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25030823 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250284882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2507732 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.250041984 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249881248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250146705 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250607872 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250997213 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250223643 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250627677 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251657055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251367013 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250669297 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.251396569 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250025795 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251524336 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251001425 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251020033 seconds)
  done (took 36.180586725 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249714059 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250250221 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249889482 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247368038 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.2489277 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.249061244 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250070093 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.249169324 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250901411 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248874213 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250838143 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250943835 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250901341 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250367438 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251734988 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252847152 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25281208 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248846517 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249848772 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249140502 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.252547245 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252344677 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.252918573 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249006586 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249341409 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.251919829 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249971988 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249357452 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252571019 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250008852 seconds)
  done (took 38.683769257 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.300751946 seconds)
    (2/2) benchmarking "in"...
    done (took 1.297072587 seconds)
  done (took 3.77023803 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.250257467 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252706932 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252401719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251483389 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250381565 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253565065 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253881059 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251238931 seconds)
  done (took 11.188793862 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252347291 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255575548 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.254121492 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253251375 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.254403877 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252592889 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261460046 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2753378 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.25391962 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255125294 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.261878782 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.261420442 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.25712885 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25557049 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256037545 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258104834 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257029989 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.257493328 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254915617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255811738 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256991201 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257588952 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257668392 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254755408 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255983694 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265751744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259651106 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.25569885 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255127983 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259054175 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253797022 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.253307221 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25540377 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254259033 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255752984 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255261622 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26416203 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278147117 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260262897 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255116846 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257227393 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253275773 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254683881 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.25560197 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25805364 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.256872055 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256475449 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.254016298 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254988498 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260316139 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260575182 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255329789 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253817047 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259543509 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.257286833 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262769411 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278332742 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260250326 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266015338 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.267595783 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270279524 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281198394 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256879379 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.25803019 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266806759 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280482595 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264151356 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275810745 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255390892 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.258184648 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262544813 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269934416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286913583 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257419859 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259286905 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25736344 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258055514 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259349619 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263544735 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.281552471 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259160463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258542228 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268630321 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281247893 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.257712843 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.258970101 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25916591 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259009176 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.260459049 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267550382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279808533 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259788073 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257576456 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258819948 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259347112 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.260516828 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258591692 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25973587 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.257346645 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.260980678 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259588931 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264689313 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268791944 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260008531 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259080028 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267060481 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259423123 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259954035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265930711 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260357924 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259788659 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.260174581 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.266506272 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.257940361 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263390485 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.269354818 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262687181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262470994 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263376796 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.262055328 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270485517 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288304685 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.262433935 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261258844 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266944251 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274269857 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263358821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262837542 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263071383 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26089638 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25896971 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262565796 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261960826 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261831587 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26215332 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262557507 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259671466 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264581334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263147363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.263481657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263122734 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.26333627 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262747171 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.264166694 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.263875418 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264041313 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.269560387 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.261571019 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263471866 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263469439 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.261654245 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263990832 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263627279 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264176789 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262505576 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26451247 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263667034 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.263879891 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264271873 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265143964 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264159146 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265149886 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.26869885 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263684495 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.266397335 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263630366 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.26204123 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263242665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264159562 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263803878 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264541528 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.263211135 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267757256 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27225733 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.264289224 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.265456682 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266440739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264500937 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265077676 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265219407 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.268039906 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.273169947 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265962425 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270261563 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.265519909 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266092443 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266369725 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26446867 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264571122 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266585202 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.268488812 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.27304721 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278415904 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29421774 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266547322 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.26994068 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.265625551 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270962989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267934187 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265454992 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266190666 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265528663 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265662908 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266510349 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268502992 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26712985 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265311135 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266608727 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.26750471 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266527895 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267252664 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.267551984 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267456556 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264808788 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268067671 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269084042 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.266694508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264409952 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266256369 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266623353 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267370183 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270967673 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273161788 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267873437 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2740383 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271469502 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.268163303 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.267725391 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.269014311 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270104796 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.268433464 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275580047 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.288003326 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268086952 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274451232 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287875697 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266952662 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270816087 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268591793 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266380075 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272234032 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279751911 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270293858 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270480928 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269496514 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269801565 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269841456 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276591601 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26761452 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.269718149 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.270301124 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270594731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268344543 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270391736 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.271035614 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271080791 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270891451 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27207883 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.2713856 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270576433 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.271112942 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27149998 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271272613 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274307711 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280169821 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276625201 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270290684 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272079107 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.27279806 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275618024 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271686153 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273392827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272355644 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286168312 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.30068973 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278908522 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.293557676 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27487325 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278203523 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294684241 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277078891 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273353881 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272629625 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27207422 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.271747153 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271793287 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271939174 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.272417614 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273568688 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27304248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277893451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27340104 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.272128021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272802139 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271632824 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272719363 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270494795 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272289842 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.274681045 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27499106 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270618308 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272760845 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279333808 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293758488 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274581278 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273078467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272557248 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271369412 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274167331 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.273167568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276867088 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.281763022 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276545479 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.282918257 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275395565 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28238732 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.27437994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276768559 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28241519 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270564645 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273054171 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274764656 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273544121 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280162212 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293729441 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.275370261 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278686532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275349548 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274621705 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273609772 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275654211 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27612146 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275193247 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282218091 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298638336 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277714368 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276392165 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.27299671 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276365949 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27435692 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272153823 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278537802 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.276782718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275986178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274872957 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274754763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275032883 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277351356 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275965286 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.274475926 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.27534139 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281636757 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298488022 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279510424 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275658612 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283621671 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276316676 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282982234 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29736637 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275323622 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276064397 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275725872 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278231014 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275862974 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.277309746 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276679139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.277008166 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280634485 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.278614794 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278677788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278345171 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277347314 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.277025992 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286756162 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30376546 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.279742825 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284186072 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.276131445 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280309449 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283912694 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.282194724 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278366661 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281554825 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290486897 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287430344 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277976014 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279896769 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279981109 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279219631 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.280380511 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.280460299 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281439399 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279999972 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.279316228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.279799775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282059763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.279753386 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279579352 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280595844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.278750078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288954385 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279090261 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.279285063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280949955 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283243358 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279660005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281091186 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.28118702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280885203 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281056208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280920961 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287907525 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.286855163 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.281360165 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.279861779 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281204329 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280701314 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281080801 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280940654 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281108176 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281862066 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.281736384 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281149331 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280798351 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27958822 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.281308958 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280604915 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282377409 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284272701 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289138604 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281649927 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279953051 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.280875379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282923731 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280890127 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.28126692 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287961271 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285163185 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293379978 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290597721 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.287227332 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280849341 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28654503 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.289632707 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280949266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282872685 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282614091 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283015585 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283338914 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.285366138 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283231136 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289597037 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2820745 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282682678 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290184753 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.307433347 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.284004548 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284699961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288294298 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283747317 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281414214 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283876267 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283225902 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28938841 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304200562 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283843067 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283607393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283623665 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285266613 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287826054 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284998113 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.28460683 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28178018 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284298174 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285509186 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284546604 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281839275 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282276842 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.2824721 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286670178 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291541701 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28275082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28603139 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.285144363 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284190937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286292543 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287593718 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.28259566 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282619894 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283674488 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286117191 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283082403 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.285923409 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284377621 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285896119 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287869776 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286176051 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287617415 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296353014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293350542 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284014839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28509383 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285759753 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.286409729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286270355 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.285452456 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285455302 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.286716861 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.286511679 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286337377 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286461949 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289044389 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302335693 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.309717361 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287388455 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.286769232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289494771 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287187951 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.28514528 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.288882173 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289418303 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290692263 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294561506 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28878 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292963663 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306482734 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.288630444 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291208286 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290345247 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.295494127 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288633815 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288167772 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287605337 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.293682485 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304447715 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287593751 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298573649 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318220038 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.308666381 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289806006 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.28843864 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286012448 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289434972 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.289797374 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.28921609 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.290398516 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289384942 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289920208 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289603727 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294114834 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.290209996 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290601827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.289977805 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.288635829 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288513675 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.286704889 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291198413 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.289381677 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290124236 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289356902 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.290820321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.291668633 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302701023 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.3171051 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290745279 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.290412215 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28764349 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292225011 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292728651 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302346803 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298224365 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.290080468 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292167524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291479502 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291798022 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291077211 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289681472 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288916538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291121617 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290102625 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303118341 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319230372 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294875694 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289434901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291551996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292133639 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291476572 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291875773 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291184265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.291140622 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293807448 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295877994 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.292368507 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.292073242 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295236045 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300940986 seconds)
  done (took 761.395208216 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290202502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288584739 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288740619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289651549 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291218079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291456237 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288597624 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290474669 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291372321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290518061 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291035799 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291481536 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291807657 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291035365 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289937055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290511688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292017875 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290933011 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291300226 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291984141 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292182391 seconds)
  done (took 28.31424204 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293321866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.291253627 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291475504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293150713 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291976974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293044668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291898137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29487304 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294895275 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292406887 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29611281 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294549221 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294135175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292679233 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292508002 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294513241 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295850219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29378149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295673796 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292606323 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29480759 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292147171 seconds)
  done (took 29.667993406 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.295550208 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294322359 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.294281653 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.293544949 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2957029 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.293112474 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29696202 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.295288502 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296787334 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.294565106 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.294709206 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.297089814 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.302552033 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.300259709 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.297095305 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.296267854 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.29574015 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297592096 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.295940906 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.295220945 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30127036 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.316453636 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.292803436 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.295060931 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297303854 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.296559609 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.297060303 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.297056969 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.29652585 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301475373 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.297434623 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295665108 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.298102797 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.295590342 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.297108964 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302880662 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298605084 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.294183073 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.297687208 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.308912689 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.318822678 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.297773176 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304217776 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.319605895 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.299162052 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302635574 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.307700254 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.296040605 seconds)
  done (took 63.559236301 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298338941 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.299996316 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294586386 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299203119 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298727822 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298776018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299172883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298172741 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295209656 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296101081 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.299749488 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296400022 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297027861 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299248881 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300656012 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297308466 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297008535 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297021326 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.296591792 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297243333 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.295753289 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298622297 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.300265859 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298479649 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29973821 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296983977 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297043321 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.299929707 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298206424 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297965521 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300230836 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301116306 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.299510326 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298452063 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299500761 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.301677237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300429624 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297323877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300295737 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.297442487 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300448021 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300457686 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.301421221 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.302331517 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298638252 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299522375 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298596453 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.29930657 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299931149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.301930486 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301273862 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301733094 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301635418 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298166199 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302974528 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.301618435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.299621356 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300427908 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.300585121 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.300648498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299840195 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303637884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.30078555 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302587375 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302500034 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300636623 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300511299 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303182376 seconds)
  done (took 89.575745347 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302512174 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.302834722 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303285669 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30211833 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302830257 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303060008 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302496134 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303834828 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303537232 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304246774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304052027 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304835059 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.302808544 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303562464 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303467029 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304131117 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303860045 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304853391 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30594069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303994159 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.303013775 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305245608 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304722763 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305627369 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304422627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304131362 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304080084 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304705032 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304784934 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305442964 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305020481 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302810474 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305063359 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305255635 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304993292 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30375352 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304078596 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30621931 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306512432 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304259544 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304771666 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306153298 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306010713 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30514275 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306114791 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306624279 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306289233 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.306554008 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305034058 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305351022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307532691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305166996 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306225137 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30501371 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305431777 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306001135 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305749662 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308452938 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306979322 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306980547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306643099 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306059255 seconds)
  done (took 82.120989414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306746712 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306276362 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304031886 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.30278824 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306390737 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305280686 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307829547 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.307260526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30687697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306559076 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306309106 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30521212 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306295082 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308635252 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304654244 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30595845 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30502466 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305419345 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307488173 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305365794 seconds)
  done (took 27.342718198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.304354178 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308473558 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.306191486 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304983092 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307947114 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305911405 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.308670609 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30775311 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305584649 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308708301 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307633324 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309614765 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30557916 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308042364 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309449614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305614673 seconds)
  done (took 22.13796312 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.307580259 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309711488 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309870059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308451848 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305876967 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306479609 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309894713 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306415967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.30634474 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30940456 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311049185 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.310222076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310178009 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309697405 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306345522 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310195498 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.306351659 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.306353762 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.31221133 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.310541201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.309746678 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307667482 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.310684667 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310805646 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.308475285 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308840659 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30806766 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.307606178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309548763 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312048927 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.30806087 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309583834 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.308077228 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.307675787 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309783767 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.308163242 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.311320259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310616123 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.311350549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311330624 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.309998265 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308697678 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312425889 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312066075 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309564197 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.312642305 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.308984584 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.309386242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.308602747 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309983073 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.312980526 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312140812 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311303341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31220696 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.312735787 seconds)
  done (took 73.250931272 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312893042 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312652627 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310686026 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313079258 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.3137952 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310689182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311712073 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312183808 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310601671 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313883576 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310099721 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315294841 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310644588 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314161866 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312504751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313363699 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311209345 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311753843 seconds)
  done (took 24.848782677 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310949939 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310260158 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313379616 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310673534 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311641434 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315287967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311399728 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314206602 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313623354 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311894716 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313150545 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315762535 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313517645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315210545 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311905493 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312708623 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.314786212 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313021637 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312552906 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315288122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314526148 seconds)
  done (took 30.119195208 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.313239498 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.314524446 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.313594789 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.329400853 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.333230952 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313186413 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.313033648 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.314210581 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338342881 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368717246 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.362092608 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.333904617 seconds)
  done (took 17.175675128 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313613609 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317610597 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315684068 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315881345 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315872704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315423542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313222607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313900691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316301217 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31317577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314526713 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315068475 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317542247 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314752293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315686238 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316624369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314010995 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31400544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314040637 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318506454 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315321596 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317976507 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316044471 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31485824 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314836287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316230657 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317393793 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314965062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315926227 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317715114 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317075945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315757471 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317951903 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316532441 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31982103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317060609 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316925347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318611102 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318900165 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317351643 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319273018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318928501 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319807187 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317147295 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319370835 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317659897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317136143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317649056 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316759994 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319547674 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320047133 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316801274 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320300244 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318946043 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319301969 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320499364 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318705423 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318033703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319746937 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3179497 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318149841 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320136701 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317955595 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318227547 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320397807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31754073 seconds)
  done (took 88.159700873 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320204558 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318733317 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317012683 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318476935 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319555139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31829017 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319242562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31724377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319080245 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318563576 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321063661 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320293525 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320121311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319323663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317952125 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318280804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319729596 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318873496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318861489 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322410544 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319428599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319964265 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319415558 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319690024 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320084396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323166021 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318005293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320438004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319508941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319688416 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31986706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320157211 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31902737 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319380016 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320776699 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320918195 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32095303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320111215 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32250557 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321468822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323476189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321729468 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319580943 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320578404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321030085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320344771 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319402139 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321216757 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320395956 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320152987 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321683808 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320588911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32135207 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31985778 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320220669 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32111775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319779561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319946754 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323086541 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320638563 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321221523 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324476925 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321267194 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320902368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321562049 seconds)
  done (took 88.369975229 seconds)
done (took 1783.40339828 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489491904 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.460702158 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322367622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.329957867 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321880693 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.327715058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.333159366 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.321343244 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322636207 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.32196058 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321964064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.540001426 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.31921961 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.324710965 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32336732 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41793775 seconds)
  done (took 27.037725365 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352908889 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.32949788 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.453777155 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.354668482 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352610863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.53229664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.392148048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.333922436 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518919837 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.383771637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.330447285 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.360814563 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329470451 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.323600724 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.355465727 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.53153916 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.606915633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.340906703 seconds)
  done (took 29.423786741 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.832264469 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.357425457 seconds)
  done (took 5.427530167 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349044679 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330988021 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328953451 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327529372 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.319392974 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.339264603 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328169025 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.322463687 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.323355202 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47494812 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337165799 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338572531 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.352378831 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.330193383 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32650101 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.369174617 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.481771735 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328854176 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325765415 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.333675062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327886669 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43916993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.37511975 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.331541955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.469647303 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.333710732 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.339312738 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.337645213 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465530312 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32874398 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329682118 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.32975372 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.331270158 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.296402399 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.831620233 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.329669156 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376559338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34321574 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328589701 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480086328 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.332382031 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.336032363 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.323296287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.829579733 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.501365445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45808311 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.350880178 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.358472512 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332724691 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.397944986 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.340081326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.3332059 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376160018 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.179407331 seconds)
  done (took 85.394091867 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.369769102 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.323083292 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504587557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.3495712 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325161755 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331534093 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.331022177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.657172209 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.332761006 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324869968 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.625929136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940135002 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.356173343 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.370492765 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.182196937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.381193969 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342524811 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.324931055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.333207039 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.330768456 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906215299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337095744 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.330527668 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.486695722 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366328971 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.873350175 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332218688 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.33278697 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.35750176 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.324848757 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884247528 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.35992389 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.387571138 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327640507 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.608274003 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.764645135 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.726182814 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.336529135 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375377389 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325812755 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.345673884 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.872335695 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.738416376 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.334202586 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.345888453 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.879127023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334984412 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.338512121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.337988725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57813821 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329743553 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.328267079 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.346438045 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.335543166 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.327118358 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.406030055 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.397526998 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.877773701 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335256935 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.32760912 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.384420649 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.328465283 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.33773892 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329246426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.330628652 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.739749023 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600685593 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.330526292 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.740096418 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888831233 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353073561 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945040758 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.353191179 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.350361556 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.339754848 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332921921 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.343109275 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884665464 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.350495974 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.329059069 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.723409037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.339101006 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.633597129 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.356324098 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329343017 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923461122 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.347211073 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.333343382 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.32895801 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.334899793 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.329848557 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331927858 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.635507044 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.403686141 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.329677628 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.331512283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.349537801 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331180737 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.33022012 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.335562392 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946731447 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.356647779 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.32942924 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333012681 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329204139 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.355440315 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332829717 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.330056759 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.599072973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.338339595 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.340224074 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332315797 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.329544021 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.34303627 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.472900836 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.338980521 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.693730688 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.339085876 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349726307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.343348745 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330966909 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395413453 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332725359 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.345806514 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.288075935 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.646128179 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.360028633 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.329264029 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331301011 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331664096 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333241181 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342608327 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.363187236 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.333686328 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127155067 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.376590331 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.360418869 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.331893055 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.346639977 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.33187263 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.344444242 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.33347042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641808925 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.625397308 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604444822 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337620503 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332417222 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.113341175 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.362197931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515489733 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356409289 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331291909 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582531888 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.59456348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.333128759 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.333733722 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.337226457 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595682619 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.334895409 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657265451 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916434225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.361325446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337156275 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.137834107 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.094308442 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.340510013 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.337673681 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.632090512 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.36281027 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332493163 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.33298747 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.33443373 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.35492402 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.353527262 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.342491105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.333729693 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.335081784 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.467333001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.526127109 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.355144844 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334280493 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.887932938 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348928022 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335156353 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.346401599 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.342086868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.334882291 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.395427875 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.334799412 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.335666956 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.337372352 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.336531195 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.953973581 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.342307032 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.341693 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52759698 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060043062 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.363201363 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.337849826 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.356559252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.236579003 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91369663 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.35823543 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.700133871 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.346139384 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377855869 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.33682132 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421217125 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.916251421 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.345956038 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335935827 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.028146884 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.364915792 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.868177498 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.337315393 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.336354469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992753509 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.363846736 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.337029197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.335175797 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.345999144 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.641944125 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.343949314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.372220484 seconds)
  done (took 500.337284275 seconds)
done (took 648.857325902 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.338366204 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337758476 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.332537468 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.346411752 seconds)
  done (took 10.612212321 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.349832326 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.345562335 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346600634 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343976154 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.347634219 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.345092172 seconds)
  done (took 9.338648008 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.338976829 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.341386874 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.346642911 seconds)
  done (took 8.285916525 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.572903947 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.375017158 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.705878806 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.373085018 seconds)
  done (took 9.286213712 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34625343 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.347594164 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.346706186 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346769371 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.349307225 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351134233 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.348474376 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.348577719 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.350059771 seconds)
  done (took 13.392344309 seconds)
done (took 52.171571626 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.326275001 seconds)
    (2/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.333802178 seconds)
    (3/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.32229762 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.435076722 seconds)
    (5/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.326281899 seconds)
    (6/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.338260534 seconds)
    (7/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.339758059 seconds)
    (8/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.333416598 seconds)
    (9/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.43406007 seconds)
    (10/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.348967394 seconds)
    (11/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.904738681 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.627693019 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.47209789 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.347895924 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.388969814 seconds)
    (16/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.405207642 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.372071328 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368254831 seconds)
    (19/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423762967 seconds)
    (20/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.337390838 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.349350185 seconds)
    (22/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399854254 seconds)
    (23/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.329929123 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.343269918 seconds)
    (25/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.358396405 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.338607917 seconds)
    (27/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.250805235 seconds)
    (28/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.362958242 seconds)
    (29/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37523695 seconds)
    (30/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.341884995 seconds)
    (31/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.337306937 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.368357531 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.358646951 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.31245725 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.707711086 seconds)
    (36/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395260748 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.764395166 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 2.370879189 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.47583426 seconds)
    (40/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.861967194 seconds)
    (41/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.477179709 seconds)
    (42/286) benchmarking ("sort", Float64, true)...
    done (took 2.342510177 seconds)
    (43/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.354099836 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.493166556 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.342900264 seconds)
    (46/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.3885556 seconds)
    (47/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.027860299 seconds)
    (48/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.74015989 seconds)
    (49/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.214528108 seconds)
    (50/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.380074073 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.453770624 seconds)
    (52/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.361164976 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.602669148 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.341918112 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.360180468 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.342141722 seconds)
    (57/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.350966323 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.413533413 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.408326726 seconds)
    (60/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.346900325 seconds)
    (61/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.332123565 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.357553367 seconds)
    (63/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.202735336 seconds)
    (64/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.337934141 seconds)
    (65/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.340834992 seconds)
    (66/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.346645182 seconds)
    (67/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.341051434 seconds)
    (68/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.486337189 seconds)
    (69/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.340347372 seconds)
    (70/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.378521571 seconds)
    (71/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.346735275 seconds)
    (72/286) benchmarking ("sort", BigInt, true)...
    done (took 2.345223411 seconds)
    (73/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.49855455 seconds)
    (74/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.729303265 seconds)
    (75/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.337670336 seconds)
    (76/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.38001281 seconds)
    (77/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.371799873 seconds)
    (78/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.337537945 seconds)
    (79/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.722279706 seconds)
    (80/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.86538479 seconds)
    (81/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.353169364 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.3386315 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.231578337 seconds)
    (84/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.377379013 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.345461651 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 2.350957121 seconds)
    (87/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.408358545 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.344475722 seconds)
    (89/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.477535189 seconds)
    (90/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.339125884 seconds)
    (91/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.332918797 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.354559858 seconds)
    (93/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.380355187 seconds)
    (94/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.346043188 seconds)
    (95/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.418475033 seconds)
    (96/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.333989453 seconds)
    (97/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.726202898 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.352302237 seconds)
    (99/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.348385254 seconds)
    (100/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.538731527 seconds)
    (101/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.458519832 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.013844723 seconds)
    (103/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.619800238 seconds)
    (104/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.356109838 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.721527274 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.507625414 seconds)
    (107/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.334236436 seconds)
    (108/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.509454166 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.568610294 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.758002002 seconds)
    (111/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.227596345 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.373144166 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.333648059 seconds)
    (114/286) benchmarking ("sort", BigInt, false)...
    done (took 2.371408789 seconds)
    (115/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.028986656 seconds)
    (116/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.340430847 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.410215185 seconds)
    (118/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.348799663 seconds)
    (119/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.343149768 seconds)
    (120/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.371216658 seconds)
    (121/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.345508004 seconds)
    (122/286) benchmarking ("sort", Float32, false)...
    done (took 2.37677592 seconds)
    (123/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.452708455 seconds)
    (124/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.459989329 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.334260228 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.884423111 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.380889731 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.608040798 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.209970926 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.616321199 seconds)
    (131/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.133351621 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.362654366 seconds)
    (133/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.34290903 seconds)
    (134/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.031440579 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.477426831 seconds)
    (136/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.475585608 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.337184254 seconds)
    (138/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.340058443 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.583805231 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.48639619 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.337817776 seconds)
    (142/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.342248671 seconds)
    (143/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.436994487 seconds)
    (144/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.902010385 seconds)
    (145/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.378780001 seconds)
    (146/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.338178379 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.234798259 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.279385214 seconds)
    (149/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.37674913 seconds)
    (150/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.350332106 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.356416492 seconds)
    (152/286) benchmarking ("sort", Float64, false)...
    done (took 2.360992846 seconds)
    (153/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.904803919 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.379503096 seconds)
    (155/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.622945496 seconds)
    (156/286) benchmarking ("sort", Float32, true)...
    done (took 2.350173838 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.333431301 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.020441673 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.359263836 seconds)
    (160/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.371428097 seconds)
    (161/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.340404924 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.359410965 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.391803701 seconds)
    (164/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.164629064 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.252553401 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.477506778 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.436442127 seconds)
    (168/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.438914016 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.338297318 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.234196007 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.356921654 seconds)
    (172/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.384178848 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.398708708 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396932981 seconds)
    (175/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.355822561 seconds)
    (176/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.379091536 seconds)
    (177/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.338269908 seconds)
    (178/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.385202524 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377535166 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.376403889 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.393546984 seconds)
    (182/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.338776273 seconds)
    (183/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363394045 seconds)
    (184/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.393587127 seconds)
    (185/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.906073161 seconds)
    (186/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.388311532 seconds)
    (187/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.339432755 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 2.393277816 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.411384397 seconds)
    (190/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.364206357 seconds)
    (191/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.342929013 seconds)
    (192/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543466438 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.764041496 seconds)
    (194/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.366043379 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.343806941 seconds)
    (196/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.378830474 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.349990753 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.565227603 seconds)
    (199/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.195490276 seconds)
    (200/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.351448161 seconds)
    (201/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.362981137 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.431285228 seconds)
    (203/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.360453741 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.387162025 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.62219596 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.351482709 seconds)
    (207/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.421327167 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.376021951 seconds)
    (209/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.339896375 seconds)
    (210/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.748452146 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.400425603 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.957030504 seconds)
    (213/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.340940069 seconds)
    (214/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.358666316 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.359211161 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.378106241 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.340054201 seconds)
    (218/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378051797 seconds)
    (219/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.371033935 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.49467063 seconds)
    (221/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.340763698 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.363713825 seconds)
    (223/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.348477929 seconds)
    (224/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.245817403 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.34973063 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.92678864 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.370516445 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.353489231 seconds)
    (229/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.729477623 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.427785057 seconds)
    (231/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.341393735 seconds)
    (232/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.367243091 seconds)
    (233/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.35540099 seconds)
    (234/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.414939281 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.598062572 seconds)
    (236/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.370754828 seconds)
    (237/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.342724382 seconds)
    (238/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.366727087 seconds)
    (239/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.349107101 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.148132499 seconds)
    (241/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.078823103 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.388198806 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.743933683 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.219879826 seconds)
    (245/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.517899146 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.343052949 seconds)
    (247/286) benchmarking ("sort", Int8, true)...
    done (took 2.355398718 seconds)
    (248/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.375076956 seconds)
    (249/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.494826774 seconds)
    (250/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.34327855 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.356715874 seconds)
    (252/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.3826929 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.355259496 seconds)
    (254/286) benchmarking ("sort", Int8, false)...
    done (took 2.363410177 seconds)
    (255/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422291018 seconds)
    (256/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.348488046 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.350796356 seconds)
    (258/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.350643353 seconds)
    (259/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.471396155 seconds)
    (260/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.343839896 seconds)
    (261/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.363760065 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.448638547 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.440225234 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348286243 seconds)
    (265/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.447390128 seconds)
    (266/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.358096935 seconds)
    (267/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.450261363 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.500710446 seconds)
    (269/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.356189463 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.421475014 seconds)
    (271/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.345239867 seconds)
    (272/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.266499646 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.354109475 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.421643631 seconds)
    (275/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.346346951 seconds)
    (276/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.367304607 seconds)
    (277/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.364694566 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.769906751 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.252772661 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.408198767 seconds)
    (281/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.334825781 seconds)
    (282/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.363481572 seconds)
    (283/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.496851481 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.344938672 seconds)
    (285/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.348553104 seconds)
    (286/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.467430303 seconds)
  done (took 575.549094983 seconds)
done (took 576.807726345 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392463977 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40221514 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.370706984 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.392851248 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.481013838 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.54662898 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.380454141 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.373237359 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419752554 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.420086171 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.367906757 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.544653044 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370694327 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.368265307 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.369714194 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397503995 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.362650108 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.376200184 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386728168 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.38173882 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.385407303 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.367915559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.421020865 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.544185411 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.375433816 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.373414446 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.372510418 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.390814772 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.481820625 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.37270283 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374238567 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382454191 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.362208631 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.376228726 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.367883527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.390620268 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.381631412 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.38144354 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37517982 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403804612 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.369077312 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375289891 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.373352353 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.374076907 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373853906 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376967622 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.37373702 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380212746 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402198121 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401727659 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.376993411 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.391354745 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.374780658 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.372885308 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38354292 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372325785 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.376455459 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405067443 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.392061603 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405514164 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.361033774 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.38786502 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.376358323 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.388254917 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.380566019 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377642103 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.376845036 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.378416002 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.378062274 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.386041995 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.361707769 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40779831 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.375980268 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.388311553 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.405202887 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.370097733 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.377619337 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.37460117 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.381792972 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.371445811 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.385513194 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.404834049 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.38093236 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375453809 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403177044 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.550888233 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.385916895 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.3747667 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.384908324 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393920983 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.381654626 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.384152292 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.379910927 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371867847 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.38651322 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.380776951 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.377541747 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.377728049 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.381563925 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.388090533 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.37793198 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408977296 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.372521939 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.374029514 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.377051282 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389012539 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.376169281 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381872497 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.399862857 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.425162859 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.379090899 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.364676739 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.38508224 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.409063618 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.387964207 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381143843 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37256727 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.365030067 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.372147846 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396772958 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379755935 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375093461 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40980593 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.381005316 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.375084567 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.366853045 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.388445894 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406514714 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498911125 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.389783248 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.409009676 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.37622473 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382880849 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.40948389 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409931094 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409582523 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.381836724 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410545707 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.393235841 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.376231997 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388937405 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.391255255 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.381829858 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.384848027 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373950425 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.41430943 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407921302 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408589076 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.401691245 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499447897 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.377466207 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.379879536 seconds)
done (took 228.814137484 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.452746789 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.375178718 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461573866 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37821606 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.492719057 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.478454109 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.374817765 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.374980518 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.374525522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.775915433 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.37561394 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.373501119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.37456527 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.374984482 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.475868224 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376974594 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.375421146 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.719218949 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.377299853 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.448626762 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.374084443 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.375171066 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.377242807 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.759103096 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.375117275 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.371953127 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.446247923 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.378102114 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.742436109 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.371821337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.373198833 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.724536584 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.466755735 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.396209655 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.389255952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.385887674 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483090696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.39903183 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.457943222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.472911075 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.463474427 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.418503874 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.37331328 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.375745477 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.38107422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.379967088 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.377025104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406216574 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.376934886 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375971872 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.738161757 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388292523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376804817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376257678 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.378087013 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.408329065 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377846414 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380762925 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.468495461 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.381633485 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.441388758 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.782144192 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.760803333 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37956805 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.375534403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.377871125 seconds)
  done (took 107.538937101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.445417656 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.454780089 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.498214491 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.399753642 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430331543 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505022747 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.399966054 seconds)
  done (took 11.42266607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.387457059 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38102136 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430164799 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42927471 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380135872 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.591415119 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381625526 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.390893795 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377883829 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.455272915 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.383555193 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383932556 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.386685714 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.376865465 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.430266039 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.393639581 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.496519677 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.38374007 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383094375 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.532920858 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379806112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.389526431 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.455619138 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.392594112 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383781951 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.38737066 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.344029818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383803785 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380679149 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.381832192 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382258815 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.492050668 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383959972 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.380297639 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379571759 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.541693146 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.38284167 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381822396 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.383765955 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.382062785 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.384487691 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384925164 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.384807799 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381102507 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.3864967 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.408136109 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.383936818 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.384203713 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.384099254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.384321477 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.45710701 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38403586 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.382060824 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.38350566 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.46359987 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39046934 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385155458 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380663702 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385412811 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381960137 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.537680446 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.432518081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.384414931 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435302027 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384107788 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386806474 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.384747695 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38450152 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476526257 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.387187825 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.433692221 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.384493007 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.605010872 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.407837944 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388056849 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.386531057 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.388422016 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387640802 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.381722106 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.391564758 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383273142 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.386603428 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.391836799 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38531079 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383613493 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.573112383 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.542697463 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384754277 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.398463729 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.393915855 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.3844793 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.46105909 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387160899 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.385221136 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437642621 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.500486337 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.464226733 seconds)
  done (took 143.072353864 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.390786525 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396528815 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.390202572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.408802423 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.386968831 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.386840653 seconds)
  done (took 9.656142223 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.389759386 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391596667 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.389123924 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.390133639 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.389488555 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389689177 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.389098903 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390223601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.396123239 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.389391384 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.389969894 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390196656 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.391566547 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.389387371 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.390407878 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.389463604 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388327306 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.38615417 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390100927 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389761776 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.386706423 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388885198 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389712291 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.390775296 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39481302 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3902956 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396029673 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.390139203 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.389221028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.397605356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.413332752 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391250477 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.390685554 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.396290404 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.395278993 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.391700208 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395325156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.392299397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388056841 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.391881879 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.393020676 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392351331 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392349014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393164105 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.393184476 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39607199 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397159087 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39903633 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.391382494 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392915197 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.393083572 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392347866 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.392376056 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.393893452 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393363351 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.416848444 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.398847442 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.393365564 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.393100987 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.392751068 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394677881 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391909354 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394983876 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.396311751 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391302602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395578273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.394068618 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397018564 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393802371 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392983387 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394379045 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.390920669 seconds)
  done (took 102.586728984 seconds)
done (took 375.562364835 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.407837652 seconds)
  done (took 3.70870141 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.507664759 seconds)
  done (took 3.809827511 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.857323488 seconds)
  done (took 26.166296235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.442382373 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.483353933 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.41012081 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.387312397 seconds)
  done (took 11.025776516 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.768822485 seconds)
  done (took 4.069984504 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.4024334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.385764882 seconds)
  done (took 6.090621631 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.772435854 seconds)
  done (took 4.074121317 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.831647642 seconds)
  done (took 4.140817099 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.408142682 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.404379794 seconds)
  done (took 6.121906766 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.374077261 seconds)
  done (took 3.675391392 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.299136394 seconds)
  done (took 17.602630369 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.392985386 seconds)
  done (took 3.697433878 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.437223452 seconds)
  done (took 3.740002083 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.513847301 seconds)
  done (took 6.817319979 seconds)
done (took 106.041836335 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.385487996 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.394090668 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.388425785 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.385993862 seconds)
  done (took 10.856798746 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.42872452 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.429802666 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.429943509 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.439955725 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432636874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.447420067 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.421118917 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.439918088 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.440299049 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.432151173 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.431343173 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.430933806 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.436230555 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.421076986 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431036845 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.430744369 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.440052793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.44061822 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.42178278 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.432062904 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.395853099 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441978058 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.431514571 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.395609289 seconds)
  done (took 35.626660156 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.898628126 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.471063119 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.551146137 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.44934852 seconds)
  done (took 7.672311216 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.448180207 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450621696 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.462125961 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.501995031 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.530390546 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.459307221 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.42344284 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.420126343 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.403873153 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450398807 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.52456552 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.466289538 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.556224352 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39676043 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.583981299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.397324808 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.397535117 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.448921642 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.502193457 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.52141099 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.396860944 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.450086415 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.456564585 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.466563893 seconds)
  done (took 36.421670375 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398582639 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.418078795 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.397529161 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.396093361 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.405364156 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39732935 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.397018234 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.39813084 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.398465261 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.404292825 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.397746622 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.41099879 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.396822938 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397935831 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405048303 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.400667356 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405027113 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397025729 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.39778214 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.405303131 seconds)
  done (took 29.330629529 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.390717334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.391583906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.744278187 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648301695 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.392214303 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.399490706 seconds)
  done (took 14.275023735 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.479012153 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.665256604 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.405653266 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.82284568 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.895340739 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.398531348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.398847102 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.68339894 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.071672077 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.046990538 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.472194642 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.474673925 seconds)
  done (took 21.123613654 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.393336627 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.399745216 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.410180527 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.416165372 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.46173794 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.42157126 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.406438562 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.393129283 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462038859 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.48503046 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.423537437 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.462715743 seconds)
  done (took 22.444828457 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481782193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394363423 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393285106 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477185797 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394628847 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607252349 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466896947 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158293783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.422561244 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66980834 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398464258 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493822227 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653380646 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400348864 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403754394 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.393343459 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630895555 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969789559 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403568704 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397749982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429551908 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396020585 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407376045 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652890397 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399724688 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396719618 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.657462526 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396758104 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728743373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420579967 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408672257 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396063486 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6728861 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112963072 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515780255 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641563999 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405885907 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399244468 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.395886002 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401630201 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406896722 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40681775 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40771761 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39866902 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396689789 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413739991 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179252015 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.425118877 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.396134811 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396507412 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702861151 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502544816 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403394838 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398042832 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406882288 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399933293 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40380797 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499522111 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967197222 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402203778 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408884001 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.427140259 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401750244 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403146648 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119845073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.412861591 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.40296355 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405721342 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399401435 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403299556 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425554482 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400384073 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.424044425 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398934595 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237614839 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412456985 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410451003 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043156927 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411707489 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.407649245 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62949098 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398848492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398366705 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.39902616 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399951073 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227887947 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417218191 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.404223 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429904826 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190804289 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669151644 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422856177 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42482625 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626079021 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.386490754 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401134818 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.420215134 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411105005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42372182 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174662768 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424014508 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.406484481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659909997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.615817613 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408365532 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40547161 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946477484 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433113751 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.427243208 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402186064 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.677240228 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.081580534 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425932606 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41108835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426417997 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403210896 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268430769 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42097226 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.511785233 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415803705 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702570612 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.311634679 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411190342 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473222013 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407660673 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403403063 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414683609 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411642462 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402520073 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.642905859 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433548269 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421625198 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.404743418 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403833689 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.419493699 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429011541 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.414653166 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628805909 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41848991 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687858723 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404119678 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405118335 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404867481 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.630407056 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409590139 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.742916244 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666433749 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413174402 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420102474 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42447422 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424081516 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505700033 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427745127 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.404395257 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672363887 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409774521 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.411421826 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424758402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415144012 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414583528 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.412573988 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405292785 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083895735 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399882723 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408713046 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300755689 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.420558444 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474638796 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412590077 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65369106 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404303796 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447433807 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.412988391 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.418590731 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639351951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417751119 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.412788829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494458438 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.941477849 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106385404 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42869358 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.406846248 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.404608744 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.404438001 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408752238 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407997283 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408885445 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653595799 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422028498 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423220455 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089041225 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418359437 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414783298 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.421584354 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422171784 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.415483572 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408162074 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.414277389 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425926797 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418394515 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.428870877 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552765911 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.423621382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408279572 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.926490747 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416113501 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409432131 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409849769 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444196928 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421866898 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301504921 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671551921 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412281252 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716854738 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424721733 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.434628358 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.409219975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424490938 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420120739 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.423500259 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420019497 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.42253953 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421933937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420282245 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978065175 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286592957 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048404973 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437089591 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.416161976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418051664 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188038053 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433090801 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409924339 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674090105 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20504626 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433582671 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949446818 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.439691341 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292407229 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726246988 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650239391 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428331067 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.421767803 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728736818 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633194969 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445771724 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415567696 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4194906 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.397683325 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030649481 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445110724 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501367697 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190305908 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43493958 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420782202 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.44283845 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411657827 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915062238 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438789223 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412750728 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419672346 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439937412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296431197 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413572632 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412798928 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110300425 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414246179 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.956493043 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433888838 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663649658 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428793083 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.418159055 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.409601479 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.427687412 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.678978754 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722043667 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422920385 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414660809 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053737569 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.280940831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.419867806 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414304764 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280525073 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438300156 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756587174 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.423051652 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.420876368 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447417816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413950272 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414883161 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.411647733 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416423934 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389074341 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995132954 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.427688564 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441716164 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421183553 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272683645 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675442536 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.43025776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094825241 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650991061 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424153587 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440546909 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420457443 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421763978 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.412008571 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416553564 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653611584 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500780184 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641517622 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416129636 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.409774561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471250406 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629400191 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416962076 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417085373 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699882437 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.415724222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.419225972 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305551344 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450670338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429059072 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425634967 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417097073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438333009 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488496693 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670067344 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.435147305 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428138355 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900251564 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451754068 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427661869 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.432844418 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511428195 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417772095 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.445098418 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.200142692 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105984405 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301310357 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117740063 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737756576 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427640625 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42291025 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419772016 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570566875 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419529038 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692203943 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420243013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.423341727 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443832993 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421343256 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440835467 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640960828 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695919333 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420613872 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421017917 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42838033 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.419262646 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429936899 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632514349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007581898 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081787381 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42955617 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429080583 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208278514 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717856875 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421479229 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421787734 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421795717 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.422174346 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.45120642 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.434777208 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430059088 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578414427 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729150991 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157769317 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.455290513 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.448447118 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.196008842 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42105033 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708035912 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424997181 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.681487742 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115042306 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.255058265 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694906583 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491762442 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676876452 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.429976624 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569893006 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.419886596 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430372181 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423440106 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271727084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.420705902 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43401262 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117455303 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69662526 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.42655819 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.438937164 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454086677 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.433476397 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648092147 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266304767 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657507722 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433494526 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431238469 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424058902 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113650451 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.743056782 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432728024 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.430408922 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696205146 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426111502 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450026424 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.876301535 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.421760275 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080274281 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.40892988 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445469111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425503975 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261312411 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12539984 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.433435341 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022138192 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434847844 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431395149 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707253131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.429824112 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425407258 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710464963 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.430756019 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440043999 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689801206 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.121556338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331718436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.448769376 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443205612 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.436238142 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426029697 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447359986 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43426416 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437013454 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.92495904 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453618685 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427034884 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438812656 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.429984344 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436532693 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.432593721 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427182101 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.43322594 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.440654146 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.426034044 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438958782 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534903575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054332379 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450202099 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10185021 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758303067 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685395751 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439951472 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.421607802 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.43122051 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428563222 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427879111 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427094385 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430813497 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085371403 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.450274924 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.446256884 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431556996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.645874761 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639405162 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428643794 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71246723 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449469581 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452631119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.414555608 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42873543 seconds)
  done (took 999.998802692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436920572 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.472532585 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.447259238 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.478476956 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456267209 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.496293715 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.530010182 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.476089299 seconds)
  done (took 21.135359983 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.435118702 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.446632713 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.434079381 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.446679322 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.432294236 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.985556409 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.465881316 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.448239261 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.439854835 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.430850366 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.447102893 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.218912257 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.467286763 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.434576044 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.432175278 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.4460883 seconds)
  done (took 33.760560735 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.842060944 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.709991263 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.226503381 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.431596934 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.454526861 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.428869984 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.837887628 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.449585026 seconds)
  done (took 28.723846818 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.442534569 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.440167501 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.440566866 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.442521761 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.442580781 seconds)
  done (took 8.550344189 seconds)
done (took 1271.225088936 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.436156296 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.438208663 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.435123132 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437683054 seconds)
  done (took 7.091107169 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.419720669 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.418694935 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.419296974 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.439980107 seconds)
  done (took 10.041539069 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.277619685 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.183064927 seconds)
  done (took 5.803030366 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.43362709 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194406526 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.169877149 seconds)
  done (took 8.142329395 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.749567793 seconds)
  done (took 3.093237857 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.857233348 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.799054124 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.627132393 seconds)
  done (took 6.627744892 seconds)
done (took 42.140707689 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.437014399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.687772227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.589276231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.431891644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.5941629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.587058862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.194865904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.445492183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.443549875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.453570186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.432307285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.595554754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.178747127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.688253724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.176527239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.69017477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.595915151 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.44873032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.445400812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.43259916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.194434054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.43890449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.439991649 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.448192287 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.60252557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.578248276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.433094952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689758762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.433678345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.452525066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.580784661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.431606439 seconds)
  done (took 84.616994656 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.436485658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.431996321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.434438271 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.458794713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.448505275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.435338213 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.453348789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.455280191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434209964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434182847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.435730768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.449296974 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.451769869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.433694884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.458367482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.45651166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.458367375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.439763999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447143731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434442872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.456293246 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.45939723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435170595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.440617711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433946847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.435005259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.455823391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.450126175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.435040152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.454499677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.436079178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.454694161 seconds)
  done (took 79.581652465 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.435584381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.434055263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.454649447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.442274542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.435622685 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.454425252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.436980782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439350506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438273013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.43645742 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.449398452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.435937339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.435380055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.446211712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.435793296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.436009676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.469428075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.436816343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.436597845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.436999459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.437994554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.435862687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437622618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.439895124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.44445602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442281833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.435717136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.461046154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.437490064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.437095052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.46024254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.450332766 seconds)
  done (took 79.494815054 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.641163453 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.445861608 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445604718 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384000982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.446755332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.445957718 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.438879774 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636866457 seconds)
  done (took 15.233224402 seconds)
done (took 260.270071507 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.453416239 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.456428966 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.659630337 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.468603078 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.437288031 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.466351173 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.466184119 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.691906685 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.466779167 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.695328919 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.466774132 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.464169573 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.440957003 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.465450434 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745890338 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.60752535 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.436128463 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.441515994 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.820009068 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.466949583 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.734421019 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.449461887 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.780309443 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.4497901 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.452855713 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.465618908 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.460012267 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.429826833 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.484850257 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.828553983 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.457455719 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.444953397 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.544299447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.558651908 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.676083281 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.621659001 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.445381201 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545127507 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.682495019 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.458004654 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.460614574 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.265048246 seconds)
  done (took 86.664787104 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.445901384 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.568076952 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.448434909 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.448833313 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.449109734 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.572953852 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.545277425 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.448080456 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.447315309 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.446122617 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.447366306 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.448417897 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.448637506 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.447870423 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.448650086 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.448520044 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.447254591 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.451924401 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.45306554 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.49503484 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.576904781 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.477229192 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.448170542 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.449579484 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.554238795 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.596976955 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.449618463 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.442973761 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.494865143 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.451950841 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.45398198 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.499305962 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.451004321 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.450740387 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.572334714 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.551264009 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.476804063 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.447238401 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.568551113 seconds)
  done (took 59.124644988 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.45236017 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.721021315 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.919929674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.46572035 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451808032 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.456022571 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.544111226 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.459989634 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.455040553 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455155562 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.638532027 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.456001684 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489432442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.941879385 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454490447 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.453388039 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.451204061 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.451789742 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.732425575 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.461521483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.566708667 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.462046134 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.542989193 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.464550464 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.477542973 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.453444499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.458321514 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.052106684 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.456359225 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.63573037 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.389259076 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.549542433 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.994654228 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.94002467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.39882794 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.465004681 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454562982 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.640884349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.456801361 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.453740426 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.545034042 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.464429685 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.933544166 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.166776716 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.476111167 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.455926251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.078584274 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.641563524 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.745957993 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47125274 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.951079621 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.45763635 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455369679 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.456651072 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.747986296 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.470562686 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.454945145 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.100734969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.479940869 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.546629301 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.459527016 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.455512529 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.735675169 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.455875176 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.721857398 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.458058462 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.463137907 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.479849321 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.928377899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458136471 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.189303741 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.488675411 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.457168798 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.640805308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.727545861 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.121663153 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.460484172 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.741460156 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.008440813 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.54534368 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.463312082 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.044477183 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551769771 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.469450374 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.459490954 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.458609131 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.458370398 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508327895 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.545423217 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.124508579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.17230753 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.146768198 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.576163068 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.473988226 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.45769541 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.118277886 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487502671 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.458341587 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.922568707 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.19151148 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.47928831 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.464855775 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.189165496 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.482366308 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551223595 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.46497298 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.938808838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.460691342 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510252017 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.458814319 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.465991114 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485431561 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.55097505 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.465190781 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.46079426 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.154665709 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.674549035 seconds)
  done (took 193.030127417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.453182173 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.452117869 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.453648742 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.473192083 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.452174128 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460375511 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.451827961 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.451521588 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.458783666 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.451990028 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.453603834 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.452482507 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.45372732 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.461600043 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.465736287 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.460365888 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.4524886 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.451717242 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.45321456 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.453583443 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.452737918 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.48143526 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.45418898 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.454042661 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.455461497 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.453195104 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.455426459 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.455871954 seconds)
  done (took 66.14352676 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.461867493 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.140483458 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.46846814 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.616835918 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.493781217 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.459075027 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.613956607 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.533226772 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.463042663 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.459069341 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.460561416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.813771543 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.464297138 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.057465928 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.692220749 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.626336539 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.086515904 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.49211745 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.459750017 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.46165247 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.620369916 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.486257273 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.812859299 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.118357136 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.465462479 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.116087168 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.453521473 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.463650081 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.462069085 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.117162243 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462832516 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.81422537 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.554102706 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.539654952 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.118412221 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087866392 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.116985773 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.649492923 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.471105143 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.463300763 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.462635374 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.453541428 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.119329018 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.466571383 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.463100527 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.113460239 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.484610673 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.465168445 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.471192585 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.462970511 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.531680215 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.534091794 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.821582994 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.124377298 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.55686444 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.483415953 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.623227293 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.869569051 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.468049008 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.090124171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.482007746 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.124551229 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.487708575 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.45573801 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.465309116 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471080814 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.645439832 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.634898155 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.104259463 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.495572959 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.095574446 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.675273955 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.473295694 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.46575237 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.467643504 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.124999664 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.094904751 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.674250881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.634409135 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.705972274 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.466099205 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.466145981 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.456734714 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.557409833 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.473465742 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.125193983 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.11552423 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.497823737 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.46873137 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.46814935 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.468134332 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.676823856 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.154328895 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.558157225 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.10441954 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.849517517 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.821300888 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.469586728 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537257941 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.493352321 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.822863185 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.468978067 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.53467441 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.953807672 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.823896561 seconds)
  done (took 176.764239008 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.742194979 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.505728128 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.580783745 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.640585819 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.12398974 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.108336445 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.472829546 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596493317 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.591161231 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751078473 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.478407322 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.559066527 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.716807624 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.56053922 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.241706044 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.544693171 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.574880419 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.628619389 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.62770443 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.483836128 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.194486474 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.804696405 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.694215391 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.502882602 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.580998838 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.357409081 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.124265346 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.015855725 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.658004256 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.471924551 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.033936086 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.465808191 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.51158126 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.217491919 seconds)
  done (took 68.535915127 seconds)
done (took 651.612777934 seconds)
SAVING RESULT...
DONE!
