cset: moving following pidspec: 20981
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382159858 seconds)
loading group "string"... done (took 0.507228564 seconds)
loading group "linalg"... done (took 8.470128142 seconds)
loading group "parallel"... done (took 0.172322775 seconds)
loading group "find"... done (took 1.372596124 seconds)
loading group "tuple"... done (took 1.937498054 seconds)
loading group "dates"... done (took 1.326128072 seconds)
loading group "micro"... done (took 0.203608802 seconds)
loading group "io"... done (took 0.57627654 seconds)
loading group "scalar"... done (took 41.468022121 seconds)
loading group "sparse"... done (took 12.89704943 seconds)
loading group "broadcast"... done (took 1.0342722 seconds)
loading group "union"... done (took 14.076007797 seconds)
loading group "simd"... done (took 4.858741096 seconds)
loading group "random"... done (took 9.742098389 seconds)
loading group "problem"... done (took 2.075919301 seconds)
loading group "array"... done (took 23.355841323 seconds)
loading group "misc"... done (took 1.070322546 seconds)
loading group "sort"... done (took 3.541364152 seconds)
loading group "collection"... done (took 20.941517085 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578132315 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132664938 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144398059 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1732621 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20583714 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136565021 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154222389 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460093479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.021956732 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225001369 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123484043 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530673051 seconds)
done (took 5.630046591 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.22244805 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073212616 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126211532 seconds)
  done (took 0.891736352 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073062832 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171600098 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091354976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107296771 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108002365 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106975402 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092407021 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108085503 seconds)
  done (took 1.484069833 seconds)
done (took 3.37135702 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.761042453 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.829122559 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.494212966 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.128605131 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154870876 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128724051 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.30722744 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160078765 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10330211 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112003374 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175129614 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.35669667 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.422713361 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.936428132 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092336228 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128926286 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078262258 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699311121 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078767562 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130199492 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500960222 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109148911 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11583441 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123886507 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205841445 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130361824 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179735914 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101349532 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.692179736 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099330924 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182334324 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095781557 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161314164 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.226884717 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076870384 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105798564 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672917954 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187280888 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114101344 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092106388 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684911902 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076481252 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192544404 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106383093 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108280053 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18810931 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115189264 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075425598 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098730354 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085257878 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169756501 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477103698 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104629273 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.142692962 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107511437 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699041428 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093036558 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.158242438 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12224478 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107776838 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095549263 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114569854 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156303428 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121816757 seconds)
  done (took 19.586863916 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11608395 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139126058 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091850601 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138025879 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137106426 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09442181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080991522 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091642856 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108038396 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179636214 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134656397 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141757942 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088588952 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078081557 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114764629 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246384107 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.102123033 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11770329 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078769382 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10566614 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136487499 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094517616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107018797 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091540637 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167323266 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215680582 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1056438 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121554754 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092027328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096825936 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140636144 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15741311 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072986949 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092106535 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176989749 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11911241 seconds)
  done (took 5.083837979 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195324998 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118063682 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189600933 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174624888 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146380081 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16236442 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116348335 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260378922 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.231195396 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160986714 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125937386 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114414655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076221057 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094082212 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077238095 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757001934 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185187223 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145547825 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121142443 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100052363 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082708996 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380967331 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097504151 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078590846 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099100602 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069629277 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168242291 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099698492 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.230569778 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098485839 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106149515 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12839412 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191036732 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129949758 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106445952 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133107933 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101287371 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079040402 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213684751 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088220484 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.091672504 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101299055 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133105049 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13216859 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096361635 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088013764 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240944694 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07933103 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113222699 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.026969676 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198387416 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091862386 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094386663 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336095552 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11350219 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082353498 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095601929 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280312484 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133756908 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108660921 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094210426 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076417123 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099822557 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078248073 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386324394 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101423494 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.937069517 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080181144 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15194365 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096781868 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100927224 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083535092 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098798619 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097434976 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096478256 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077020138 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095300114 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077915089 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094178849 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075754177 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098300933 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111770185 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081604041 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093317755 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146106645 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11440612 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096744466 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123215945 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097908959 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076440702 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124590495 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07846649 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097627514 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118665011 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101376117 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112224888 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095764884 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124130429 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0940502 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177832698 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078568227 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121449892 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096009387 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109338902 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114692532 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093934695 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081172866 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.091549371 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077187987 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157546475 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077302944 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077096429 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096931722 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10660079 seconds)
  done (took 23.251735272 seconds)
done (took 48.614516554 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416376836 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107467975 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107503811 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107361712 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10609655 seconds)
  done (took 1.617184748 seconds)
done (took 2.365195766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319215006 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19409823 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083247985 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186777677 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084198991 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193563128 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161040399 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097259132 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204289359 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079987758 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181878066 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080003825 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101211911 seconds)
  done (took 2.740951636 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088918063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113881558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0778628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103847189 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071996079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086801079 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103639206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124286271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086406462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080680509 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088740915 seconds)
  done (took 1.770727229 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087969008 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112523264 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077345049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087079892 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088692322 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087127506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103522831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096898389 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104422391 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083842184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088870117 seconds)
  done (took 1.76577212 seconds)
done (took 7.016433595 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.11673687 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.016187692 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099960213 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172727013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330344553 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.197410135 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.641494622 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133721676 seconds)
  done (took 16.651341083 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.123731759 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095368096 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075204183 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092460479 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075971047 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092135015 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076538152 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09186085 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078095547 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094503285 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078285532 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093157925 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077981546 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091295793 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078032528 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090897176 seconds)
  done (took 2.216738802 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111301692 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110129608 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097908434 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084442483 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096636189 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079229118 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099125527 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096408153 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079239192 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095680106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.084707691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099456784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.081755901 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094207133 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081397926 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101296726 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094101422 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082164399 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.098382429 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082962614 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099837031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080405435 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.098975659 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098722222 seconds)
  done (took 3.076813447 seconds)
done (took 22.692285303 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160864208 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080751695 seconds)
  done (took 0.991697098 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097500149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115311164 seconds)
  done (took 0.97102371 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10326358 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092746842 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131909204 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110855142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078136016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076615981 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127210978 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09439937 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077514784 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09337228 seconds)
  done (took 1.744160474 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081371988 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096308405 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086316646 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114537208 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104116786 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080193922 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097437497 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081382364 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097544819 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075818447 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101143637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096302604 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100196033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114010651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082196548 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098948623 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104013351 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081322603 seconds)
  done (took 2.449030515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076950787 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078570807 seconds)
  done (took 0.913905068 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079987866 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090889195 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079931051 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095230537 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07581698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090668655 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075508742 seconds)
  done (took 1.347166792 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.463726103 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177064207 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317516576 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109186763 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.127975333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.335963537 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147191098 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090335387 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107898574 seconds)
  done (took 2.675187077 seconds)
done (took 11.846114701 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087685151 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127697751 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.472205594 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.231703576 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073852462 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154157361 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.254919469 seconds)
done (took 2.161001147 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334652436 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117772028 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084077072 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075529259 seconds)
  done (took 1.3688906 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075682662 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081846684 seconds)
  done (took 0.920790746 seconds)
done (took 3.053850732 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074712532 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074796784 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088120508 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073880703 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.087425695 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07185585 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08919693 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073867365 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.074086799 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.090479838 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073939404 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086915485 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071583413 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.121571702 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073866924 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091258818 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071908701 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087914671 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071485053 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073036924 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091698531 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071935122 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088458414 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072134181 seconds)
  done (took 2.741886869 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099347747 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092436705 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080254434 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099137834 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079245389 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097707121 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096204059 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.075539586 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.097717273 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.077819783 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095081513 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.078818641 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093838353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079466928 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094096779 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.079404111 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097434575 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075611669 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094937748 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.078957983 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09674986 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075291516 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095852587 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097633269 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07924192 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096281733 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077100693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091524776 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080079022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095753296 seconds)
  done (took 3.41504353 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081557717 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071053049 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088653992 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083724384 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089236542 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077637068 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.088707404 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075591701 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092906177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.072387902 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093774031 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072870622 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074695135 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09296858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077084708 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096517018 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090140662 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091499929 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07527539 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093672697 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078337461 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092073376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07572636 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071590989 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088450062 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072747237 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090127115 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071973457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089213451 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.072889514 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077492147 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095370773 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072456868 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101779836 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078529563 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088521457 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081101174 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089722887 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076657102 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088465334 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071805765 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071646493 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092744495 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083037406 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093458261 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074071837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092362514 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077237393 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092939539 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078948898 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088429455 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076039486 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078011506 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094530391 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077496327 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088518985 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073448318 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088198332 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076771406 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08893292 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072925845 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071526672 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095849954 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073061642 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112987267 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099125421 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075323681 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077879372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093395051 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079814016 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095324673 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090099535 seconds)
  done (took 6.796935358 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077480844 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1002266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074757372 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091133699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071321773 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072928096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096712211 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072599796 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091298898 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091505485 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089918011 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073662721 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0920017 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077231129 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090586425 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074933131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100795524 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070690637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090733116 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076555782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090688477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080027263 seconds)
  done (took 2.62233434 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215788011 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100931158 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136129669 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108836227 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09264261 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109181654 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079905564 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098949098 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096619659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083494419 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100314693 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079797282 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110511442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100198329 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082964896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102427654 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079028212 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102084805 seconds)
  done (took 2.655874975 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087729773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093235325 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099295259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09334748 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076041137 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096167807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081265435 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110052977 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077626904 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093853897 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102679284 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077713888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094932947 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07606986 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095273488 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075739903 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095116306 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077255306 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102925836 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082230511 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099365014 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086336998 seconds)
  done (took 2.750398443 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092426183 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095412874 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096956723 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098132933 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0752338 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095474159 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083826207 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093787498 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087979332 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095297948 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075963626 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095377501 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083902512 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093721713 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099797875 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07712774 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09590245 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076634465 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077560312 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092167068 seconds)
  done (took 2.56292914 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116701149 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107671275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090391747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119540162 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108326062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090792245 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121983085 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089474541 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107091774 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120885322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089896602 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107446463 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102043356 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114997856 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107446396 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101663832 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119076257 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119212762 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08961915 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107250943 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121327581 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090638568 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119039783 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091098173 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107944972 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090227339 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107593222 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115455801 seconds)
  done (took 3.755653495 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076152324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075175491 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090936464 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073162718 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09099447 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.072853261 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072614723 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09190033 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074788657 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090640595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075247345 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091275668 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074957236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074926527 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09261673 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074870266 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09289895 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073618608 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089899786 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073488599 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074827329 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092997646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075252247 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09043027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073029143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092855798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073554686 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072213071 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093110274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072321867 seconds)
  done (took 3.214106679 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084442848 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104210022 seconds)
  done (took 0.973502549 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07414431 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109744866 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073024463 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096854474 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081139775 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094127159 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085846317 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099638146 seconds)
  done (took 1.497152427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100079722 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114183287 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082416966 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10620698 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094010411 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112549974 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156607809 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08189265 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102113479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077320433 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113810842 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075770163 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.101831673 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081758213 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102796869 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090448111 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094801665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085700572 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102627044 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07803624 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099965698 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110119328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087523406 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101422214 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078825131 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106813139 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089472053 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106389047 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080769957 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10652109 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083714696 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087503221 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080587675 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100147403 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077146801 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112086133 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111462605 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081647496 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103418093 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082577038 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103204793 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075468167 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105994322 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083381206 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106737939 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082324795 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101124613 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075416452 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095483693 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081117316 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092642636 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081426279 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070531484 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104408518 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103985071 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094885547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096933656 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080848363 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099280799 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080102272 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.101827374 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080736196 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105940708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080477409 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105390358 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086056505 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103521801 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.075236874 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.089008186 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077250481 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104801823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101699447 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106147156 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100772993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083434751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095809145 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082948579 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101516162 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084467726 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106403711 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081315035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102956099 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087314977 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098897366 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081187311 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101732419 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079188591 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097583849 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077992763 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115043679 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078833455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095490611 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07777276 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106122337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08113787 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098712009 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076893177 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10434235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071518702 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100527341 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082718814 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101953018 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089124436 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100855546 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082971797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104648776 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087453755 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10012543 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.080417571 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091805594 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082837874 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097898609 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085909286 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089282137 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083574262 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099363847 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081691038 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106202283 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078285667 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100578115 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087377918 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106642639 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078759152 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091101587 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081469721 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100578947 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086040604 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107611785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07898085 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093669385 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076205544 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103632062 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081429494 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102183277 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082158037 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100575783 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070552212 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096951571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082010217 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106671605 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080034223 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101469618 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105055407 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084132161 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098091477 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087094565 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098348656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077065018 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104251898 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081024736 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094346252 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087116164 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099881007 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079884845 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101178248 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087516301 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100505904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083164478 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098076879 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082705778 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101530589 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077306246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100800245 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080210879 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107566055 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081674362 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093416463 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074061978 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102089385 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.078972289 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081293304 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095943772 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081918388 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10190506 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078492593 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098734943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08165872 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111559734 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090459781 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10238482 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102834311 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08886196 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099657495 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084185436 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099459865 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083840325 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102549989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087009171 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10204527 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083422721 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099520723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074490558 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102007939 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088007571 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096374917 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079010582 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077954835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099867906 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106517695 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081223404 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101300022 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078795537 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083081351 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105102306 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099710797 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082485149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077085414 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099762339 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086043946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101665435 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083487212 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107350932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100878583 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07636852 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106482121 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079878094 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103531188 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076517089 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077799805 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096811332 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083459528 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101146341 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080812535 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.089632184 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087901374 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10698276 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082658508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096851167 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082479002 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109858567 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080516638 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105027578 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081809181 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104073478 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114243251 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077869511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100267834 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090806634 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109523366 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07172831 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103421791 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079249269 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094714204 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079799443 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078601291 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100975757 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101764189 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084110789 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070517091 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099477691 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079251115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096277484 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075900287 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10589837 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082387263 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100511345 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108928518 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08494429 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10159931 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08394075 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100251945 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08256731 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101649879 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083183886 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101804828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080961826 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096271427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082750546 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09551205 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.078467698 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080628849 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100689208 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082658978 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102834341 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081058337 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107076618 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.100465236 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083040908 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118593303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079958368 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097620556 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082673698 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103124322 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08224866 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100143401 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075899524 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106334241 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081580922 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106575673 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081622771 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092095069 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082368675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101133789 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083326272 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102726568 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083423348 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099417755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081887339 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100760534 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090234264 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097346188 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089281899 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103116019 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084290916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100862314 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082414584 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099387864 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077024741 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100869277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083078842 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101581556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080973205 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103583696 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081725125 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10041439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080576966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102313886 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082924119 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102161889 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.072001679 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096557051 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078245352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101419524 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086248171 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102717572 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080271565 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098836775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083896772 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099050411 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074282964 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105031981 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084180652 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102637494 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091918199 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097092697 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082990466 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111722605 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07186274 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098805446 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079142846 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098710451 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087746064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10224264 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087116013 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103248012 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078107114 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093707196 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084046691 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099302001 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072631172 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098025061 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085650914 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.099170085 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080669819 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101659449 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085248976 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103775158 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086052403 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099486897 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08246658 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101947777 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075849785 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09737433 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078972461 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08285541 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101838713 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079062106 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094272808 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081810732 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100700073 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083305485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100284345 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081586322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106457159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081437287 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101867254 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088059411 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091491655 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083212363 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101038575 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082251966 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096761376 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083947931 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103639544 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084360082 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105895674 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081932432 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104111999 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082483204 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098852938 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08184238 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101062393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082643397 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.097639504 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083905598 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108061163 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079110501 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102015063 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083153964 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099906863 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084115435 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103128863 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082806406 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104100819 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082773525 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101933449 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086465656 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102306325 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083676494 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103854035 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081658522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106764121 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078964834 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108247981 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083191835 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103145406 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081091195 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098957316 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081543533 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100403222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081308776 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107508941 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083620758 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098015885 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077731793 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098689524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082226015 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107621155 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088564455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102302985 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083140699 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09559721 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.074798183 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104231428 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079730396 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100239948 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085467921 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105861042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082420933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099247712 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.079967778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10675886 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087423179 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104606409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078818683 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104194793 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083545869 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101928221 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081057322 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101270908 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084498344 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104391878 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081790122 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097596463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090835596 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106344903 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103571621 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082058741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104396007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082907883 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076674285 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103495519 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081632314 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10555593 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101612783 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082942887 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112083893 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078650934 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100534822 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088804452 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101300252 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088110389 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095935407 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082998165 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104094967 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084635748 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095937714 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.079008307 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098714953 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082686044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097475757 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07681218 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112402537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087308198 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102053178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080704166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099417935 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077372371 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095004219 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079582038 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085206303 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101415687 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109301638 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078990239 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078457137 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096588582 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083174516 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103958206 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084687116 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09529376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076744543 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098983012 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083367764 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109545559 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081560615 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102516494 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084413872 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103370431 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080283243 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108659437 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075062325 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104442928 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094301786 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104596482 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103707591 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086523622 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108961064 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084739782 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096335005 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084534062 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102976955 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084545939 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10376083 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087513905 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118460804 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085355876 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09850454 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081693376 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103023309 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079307411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110952474 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085790651 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104721056 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.084889304 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101044249 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086304385 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110719625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08589033 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10298302 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083362646 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101036361 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082412335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100392632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082044478 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104625888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084315524 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102273857 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086313781 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099494997 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094275574 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10942681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085654456 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095055204 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079824126 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098992572 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078126435 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104997164 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077672038 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100589623 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081852652 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101300991 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086682017 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105781783 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08333866 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104189384 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082753217 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09196357 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08700362 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10296818 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085943821 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094393191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083510825 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103934428 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087496462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107864895 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081718908 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10334289 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081969062 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10494295 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077957988 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105194111 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081705704 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101426326 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079641291 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083697491 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10498931 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08516554 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104629487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10524841 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083915145 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10672048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087346518 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095358069 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077450627 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085975491 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100435602 seconds)
  done (took 55.801929535 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144545664 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084011024 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074209198 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095335454 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120520493 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079113458 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093050027 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078697142 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097608639 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089092346 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093709499 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075216383 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117163545 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121447707 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12055146 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089204467 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094315636 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079275067 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094382887 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079209526 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115613592 seconds)
  done (took 2.868198263 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100292343 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112938086 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110834561 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096395816 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104731343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111694805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091011448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112942995 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116073607 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086784411 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116259107 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112045442 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087043858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107050901 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10618901 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090524654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116676147 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105309743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093302584 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110315443 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109314284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091372696 seconds)
  done (took 3.120286822 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087637946 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082031387 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108151904 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.076257626 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.1027133 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076475238 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107991858 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080183946 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107418297 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083422411 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100697651 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.084183227 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10765841 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076600371 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100504577 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.079603443 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107643241 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083059684 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104376798 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076375091 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122323555 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076726709 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097088242 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081225728 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11177652 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084470293 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103049814 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083412303 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.1008256 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.083187151 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098889172 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.085788591 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105724872 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080606063 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.100311955 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082465424 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082586447 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097143877 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079052312 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106251496 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.078084048 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103976203 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089717821 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099278147 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.079149384 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.104778194 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08330472 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096676213 seconds)
  done (took 5.268222667 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113364608 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151576494 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081508278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141644021 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118720329 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092778523 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10384998 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142628833 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076808141 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102313381 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12054785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.096497694 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104605329 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108789941 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086605646 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10274947 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085281571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097203263 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087621922 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101711102 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108592112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085999195 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117619762 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.11413006 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08754498 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101271548 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079661706 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108568352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114061867 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089031623 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10802899 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089940101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118392132 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101182261 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08180388 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10544487 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118966674 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084090927 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104781447 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077458189 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105751493 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089007038 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105894925 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119766137 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083810701 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103223647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08362525 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096248174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114849937 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086122486 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112976281 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115925813 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088009368 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103331019 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088564288 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117544379 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102721431 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080697357 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107040369 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093754844 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096922828 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088404119 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116311811 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104810077 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092715879 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116744546 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103946722 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087420985 seconds)
  done (took 7.898438814 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111155435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108271689 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120110237 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099641843 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108889081 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088233009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108542767 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107167147 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088426938 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114961176 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08832712 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155627549 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105685493 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113614814 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089146172 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108367298 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087705259 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108466676 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087814674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109098671 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107928303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100322484 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108414697 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120184431 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120875109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085276014 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108364353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088210055 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119917462 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107885887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101596913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10853385 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10908978 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100033313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122019852 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108922042 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082931959 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108415328 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088611824 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108286143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085985815 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120188464 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10862401 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085694842 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108815652 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088826001 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120960929 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121855416 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115981127 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09593604 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108592648 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121381836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089279504 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108283548 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120683435 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128881239 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101251908 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121391805 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108977449 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120138853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100683867 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128961323 seconds)
  done (took 7.473838538 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080472091 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079679846 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097870087 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077706104 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100055516 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077347592 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079194432 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100653204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081796778 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098841171 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079449333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097338737 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076950966 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079108848 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097362123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076879434 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09750483 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077670439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099997322 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077517531 seconds)
  done (took 2.581254441 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087906606 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120964325 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080889047 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108007404 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08271649 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107717795 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082379254 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103196921 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080636311 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102825347 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.113798322 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093627581 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101071255 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088070702 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112301988 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106655152 seconds)
  done (took 2.424128238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101459882 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120967777 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125993321 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084877526 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.09845075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.0876208 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102727685 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076354483 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096413687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.088143524 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106510855 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085570667 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103182314 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078501619 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07984395 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106644376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075706811 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104488546 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.082455271 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126136634 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106005668 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083742915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104198122 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.082519406 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103871104 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08520561 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106850982 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078331482 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098613067 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082849708 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103394965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087368762 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097033892 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085477416 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098318405 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077562495 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103500322 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084282582 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107017842 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083370935 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.098705017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082867458 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102310649 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.085380306 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096616971 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083657012 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.097021894 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.086080066 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102709691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083235522 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103229892 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088206182 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107677978 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.092114199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111437002 seconds)
  done (took 6.06439963 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095668453 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104562102 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084700071 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098582907 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083664603 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108502125 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084359984 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103270079 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0826228 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097583094 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083215695 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105512902 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083006162 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104436601 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082687484 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104457316 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075400982 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102159916 seconds)
  done (took 2.539960109 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086077779 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079337299 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108850019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079846529 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100595963 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0822537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096029822 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078349766 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098655525 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079513481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101227279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082065335 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098536147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082678186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100465245 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080322057 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102291632 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078122958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079771578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096812917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082414752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098953037 seconds)
  done (took 2.828192671 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097688933 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132009944 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094686506 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143390143 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10614986 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.085084669 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11531332 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084215727 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.123567988 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084410559 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.104332422 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.084640291 seconds)
  done (took 2.112046349 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104730226 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138139857 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08094474 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104233122 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115536476 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086256708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105684445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085324481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119124397 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119748334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08581647 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119213502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118945896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117553224 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094793647 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11398347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106913003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085348914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101682238 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107186654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106013592 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120048009 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085428186 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105587298 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105708128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097429834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119936477 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118989255 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086059438 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120617825 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116205664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085704988 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11982319 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119305091 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08289454 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120089697 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105438664 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130045504 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094231899 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116640278 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103671781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094889832 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119806473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113324199 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098900649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107076704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113649397 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085078625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106528051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13574526 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114764487 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097478567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114492144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120345475 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099508336 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135301071 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120054675 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117728311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114716101 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12032495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096878399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114091862 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118415516 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119299009 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094546782 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118271109 seconds)
  done (took 8.025003377 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119891131 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103022575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085007881 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120648403 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119045315 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10610864 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086637483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106341681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086438162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103841446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153218924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08543351 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1186815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11785368 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085767128 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107137001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105934496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097458199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102471556 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135184866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085142736 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118324365 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118779713 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118115834 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119146472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094389705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106013746 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085328199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1075693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10582217 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093200436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107277287 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118524776 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08183697 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118509738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08546378 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106838088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114424072 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086259194 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11567165 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117513061 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129095952 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085512919 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106988745 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098858448 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106828172 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.347123584 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082876436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105826884 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082578833 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12021767 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120101986 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119513625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097136659 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106850861 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106163089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085676612 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106173671 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085387383 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115397404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118228356 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08531972 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135955994 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105546867 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085973163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119175044 seconds)
  done (took 8.072496542 seconds)
done (took 150.827869994 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098524701 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136398684 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094564048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164229058 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081077665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136568834 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114699701 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118200059 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080765872 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.101465683 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.080984244 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104489673 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146397382 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10199192 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081579151 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104467828 seconds)
  done (took 2.608545442 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176689728 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281551234 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100096633 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107953768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086682024 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104619033 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085584047 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108055779 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082499086 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113584034 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102623306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08259261 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113272651 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.082950587 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103125277 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083538616 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113699345 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085491873 seconds)
  done (took 2.88188313 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111368435 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146461169 seconds)
  done (took 1.131602196 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11715444 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181081239 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290877162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154727377 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108961926 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12460757 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156841712 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120441039 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200473609 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12466531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103920472 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107984003 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133489371 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092449997 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111031691 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086195965 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.134873702 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109624959 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088099388 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109555414 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.111866547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108661896 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092061055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11012722 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182325418 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124802513 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088840916 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10979729 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087517206 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109246297 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114233067 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.102755864 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122501509 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.185464472 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093271831 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182238815 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095850739 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107817707 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089133954 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107848266 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091907432 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112484005 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123898443 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088579049 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.109288106 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095005069 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109463516 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087950987 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116248678 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117676444 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095714158 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114899099 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160676037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118165677 seconds)
  done (took 7.395384732 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795382514 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150461034 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086802303 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.898994075 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140902176 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100667077 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.797791016 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132328779 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236520886 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.818103565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102267234 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124262384 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230159188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249546506 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.144185739 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314480805 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69590388 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099987989 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137251736 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148510519 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093035891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137754553 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128039716 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427484035 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109921929 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086535398 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114201118 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099356554 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179132779 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087078423 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111134496 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180246833 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263171974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203891388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087485334 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107334921 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085024802 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165185937 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266291708 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217605607 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175732721 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083179456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107419321 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098745747 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128559193 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082038044 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18499837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172030814 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173448133 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112167435 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120797869 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097132859 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120662091 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.160438319 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083715571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.335303308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34074045 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107643741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095329059 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12871895 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264501089 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086768215 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22558993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136165837 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190521023 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107544804 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777317246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164986426 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086035531 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117645048 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094186019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114334305 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119562436 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16543359 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40309019 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101838699 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113318404 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085814337 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229745742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086257879 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10731079 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162641683 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087235657 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115909348 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124943691 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100420874 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191128043 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246899866 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123489689 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095551437 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113786153 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097858891 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109936993 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210068185 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220291834 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157023354 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212110267 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121259816 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162151394 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185868227 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0992341 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168622067 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11589983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127396188 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120828189 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19262667 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13995491 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10864281 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091926742 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115622323 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143836999 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089850622 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11492772 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167909257 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457777931 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187155492 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082813962 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111852674 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095394707 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16003212 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115554157 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258143014 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095439632 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166661197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116736387 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104152903 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09538145 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161910124 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123483548 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118723699 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098789029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116321757 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248724585 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220018142 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124091084 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222072919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179197191 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119167074 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173297193 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118190984 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167190456 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096571267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120866239 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109868782 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756630073 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121974088 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116654542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091689045 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185570601 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10740339 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087293964 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10756925 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083618317 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776553226 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089251313 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105982747 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087942497 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119375195 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095543639 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115260374 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091536385 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181645547 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209726138 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122516527 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116401814 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086287731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159208971 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109924395 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086368257 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108729783 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087516089 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118336135 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090952961 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110366966 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17169539 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157355257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22105416 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.605305776 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086814659 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108957211 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208887395 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108102506 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305237377 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09472312 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22571081 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165854575 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10720567 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337419428 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168206137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185737114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089307029 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190891874 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083216218 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115691802 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160877845 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085992187 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116659554 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157710573 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126525786 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101183337 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.14806734 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109365316 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226727406 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082527355 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190135497 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089056543 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121104006 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310529322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086040292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12966029 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161054375 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113574625 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08715827 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.835408676 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109785994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120079782 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096446538 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224810667 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16350225 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116921573 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115571004 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099525493 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159907398 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234518501 seconds)
  done (took 43.670627081 seconds)
done (took 58.554328136 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308374305 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.260955203 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.292500482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192518291 seconds)
  done (took 2.02585849 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176721546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149272659 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120052525 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105672612 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151163014 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082884596 seconds)
  done (took 1.684167683 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.467048135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.369166176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.345145956 seconds)
  done (took 2.083477316 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249691225 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276055941 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320044559 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424390306 seconds)
  done (took 2.273565028 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202811641 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122647428 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09561065 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.13546352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168587788 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17256335 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139804292 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.150396669 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126503853 seconds)
  done (took 2.257750738 seconds)
done (took 11.225564893 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.136998979 seconds)
    (2/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115639551 seconds)
    (3/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123772779 seconds)
    (4/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.281843983 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.229495938 seconds)
    (6/286) benchmarking ("sort", Int8, true)...
    done (took 0.217718922 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.243976769 seconds)
    (8/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.252446238 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219278539 seconds)
    (10/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.225622502 seconds)
    (11/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182044986 seconds)
    (12/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092103287 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128398795 seconds)
    (14/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097850795 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122520764 seconds)
    (16/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.222028249 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115357938 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.238110781 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.183933012 seconds)
    (20/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.229030181 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.197486462 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12341689 seconds)
    (23/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.1591526 seconds)
    (24/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158754712 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.206071662 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196266276 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139587687 seconds)
    (28/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.209938448 seconds)
    (29/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.198796086 seconds)
    (30/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122089187 seconds)
    (31/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.120262383 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108874994 seconds)
    (33/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.152491101 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.218049038 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.154624537 seconds)
    (36/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11788891 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095365685 seconds)
    (38/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.193202632 seconds)
    (39/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134077687 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 0.226526991 seconds)
    (41/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090808133 seconds)
    (42/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.12265008 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.194124527 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.253237398 seconds)
    (45/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070925281 seconds)
    (46/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120229532 seconds)
    (47/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.148643211 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08393145 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179755167 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091147128 seconds)
    (51/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119460005 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.227370384 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095691775 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155240748 seconds)
    (55/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.196824313 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.23390291 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120834312 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099213202 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113201812 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156895736 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111604826 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089202854 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11034929 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121259138 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116334688 seconds)
    (66/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.109325495 seconds)
    (67/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094013799 seconds)
    (68/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.101873018 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087519613 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133530608 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.138079698 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.156418072 seconds)
    (73/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.102717161 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 0.225730949 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089874882 seconds)
    (76/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188035551 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114735225 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.075871645 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225975329 seconds)
    (80/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.097297948 seconds)
    (81/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092042838 seconds)
    (82/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.070681575 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113520242 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122194834 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104798596 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13509233 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099275619 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.107517523 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189669912 seconds)
    (90/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185872807 seconds)
    (91/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087775115 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.149247479 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.07485639 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183221021 seconds)
    (95/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.155397639 seconds)
    (96/286) benchmarking ("sort", Float32, false)...
    done (took 0.147173597 seconds)
    (97/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121957517 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075739913 seconds)
    (99/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.096015943 seconds)
    (100/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179859245 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077933012 seconds)
    (102/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.096286943 seconds)
    (103/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151865319 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167907212 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115155736 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.188756089 seconds)
    (107/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094114915 seconds)
    (108/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123852362 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087370232 seconds)
    (110/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095309235 seconds)
    (111/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098980054 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170985472 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121407777 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117795836 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120798939 seconds)
    (116/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087607797 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095936739 seconds)
    (118/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087468722 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.10187853 seconds)
    (120/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072114238 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.096805404 seconds)
    (122/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.072144561 seconds)
    (123/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162389707 seconds)
    (124/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071064236 seconds)
    (125/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122103223 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.108185468 seconds)
    (127/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111813231 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.181323789 seconds)
    (129/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109147145 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118876478 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088524874 seconds)
    (132/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110526708 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158756976 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113303354 seconds)
    (135/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111122092 seconds)
    (136/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112160201 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09035623 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119915341 seconds)
    (139/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103061075 seconds)
    (140/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122231665 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094916376 seconds)
    (142/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121547713 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.133515445 seconds)
    (144/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243869943 seconds)
    (145/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.138890644 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115019249 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.148159925 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092442255 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.115059686 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0840329 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115477913 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090554215 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.121948155 seconds)
    (154/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086124182 seconds)
    (155/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154937753 seconds)
    (156/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122287983 seconds)
    (157/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08979111 seconds)
    (158/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102632351 seconds)
    (159/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094812034 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.097400761 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096241332 seconds)
    (162/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.122196559 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072557873 seconds)
    (164/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096734594 seconds)
    (165/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095308465 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.201458273 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.132075815 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090360317 seconds)
    (169/286) benchmarking ("sort", Float64, false)...
    done (took 0.170622044 seconds)
    (170/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078304295 seconds)
    (171/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111302359 seconds)
    (172/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.1566223 seconds)
    (173/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.088642529 seconds)
    (174/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108853349 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090926484 seconds)
    (176/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095692936 seconds)
    (177/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.165502782 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115296496 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.073016224 seconds)
    (180/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.103747982 seconds)
    (181/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.24438281 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090900294 seconds)
    (183/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11574916 seconds)
    (184/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087053453 seconds)
    (185/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136183461 seconds)
    (186/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091913641 seconds)
    (187/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.100014425 seconds)
    (188/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109519599 seconds)
    (189/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.153642344 seconds)
    (190/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114633169 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097783179 seconds)
    (192/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072875716 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.115872239 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114708961 seconds)
    (195/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.088875792 seconds)
    (196/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114474671 seconds)
    (197/286) benchmarking ("sort", Int8, false)...
    done (took 0.192772608 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 0.216759933 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110760652 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074231785 seconds)
    (201/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073488329 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136266431 seconds)
    (203/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.161729056 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075597592 seconds)
    (205/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.160106604 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096758519 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124895805 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121179552 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092268303 seconds)
    (210/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072309424 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.096670225 seconds)
    (212/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160233231 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084555837 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117828511 seconds)
    (215/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089590115 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110441064 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091262437 seconds)
    (218/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.106997244 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073353105 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181077512 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086685086 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.100274677 seconds)
    (223/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090272818 seconds)
    (224/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112552337 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075850353 seconds)
    (226/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.096804312 seconds)
    (227/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089715796 seconds)
    (228/286) benchmarking ("sort", Float64, true)...
    done (took 0.22733177 seconds)
    (229/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114313931 seconds)
    (230/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079630518 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.121808104 seconds)
    (232/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075893477 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116175305 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090769142 seconds)
    (235/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.098621489 seconds)
    (236/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.123526776 seconds)
    (237/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101413571 seconds)
    (238/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073768155 seconds)
    (239/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115556218 seconds)
    (240/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09142864 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108288459 seconds)
    (242/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.123540431 seconds)
    (243/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136766698 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09225085 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.102132463 seconds)
    (246/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.076243658 seconds)
    (247/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101798042 seconds)
    (248/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076378391 seconds)
    (249/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.113352223 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092099682 seconds)
    (251/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09972456 seconds)
    (252/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071487091 seconds)
    (253/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07388225 seconds)
    (254/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113365951 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121418022 seconds)
    (256/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072126593 seconds)
    (257/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.079344229 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.134047762 seconds)
    (259/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089184105 seconds)
    (260/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096654303 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.073541717 seconds)
    (262/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103084239 seconds)
    (263/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154933528 seconds)
    (264/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112806653 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084067311 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116793745 seconds)
    (267/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091342151 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11868031 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108466083 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154867421 seconds)
    (271/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110497352 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086305818 seconds)
    (273/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11459061 seconds)
    (274/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073320343 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.100085421 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099061788 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111661222 seconds)
    (278/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083848171 seconds)
    (279/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.095965327 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074019509 seconds)
    (281/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086701447 seconds)
    (282/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122909715 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.109955603 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.155699805 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134540953 seconds)
    (286/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073757842 seconds)
  done (took 36.681572707 seconds)
done (took 37.587045564 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098297944 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15107856 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094774684 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13838811 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097481742 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123291609 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117744361 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.095760853 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121481541 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09911683 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121108806 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078693255 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.119369092 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095548352 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.119430663 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.13997162 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098577204 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114609379 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.087049794 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110904635 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.087341609 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112327559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.089185414 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10292148 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095862154 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117467043 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090188541 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120134768 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087938937 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109144403 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085867553 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115425114 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086289085 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121600338 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089099303 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111022819 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095784247 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117672083 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088985421 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111726182 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092329941 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112933809 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090588811 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116254668 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088578761 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110587385 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087085616 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12295706 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115832706 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113385114 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092000292 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.11970898 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095725585 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116161965 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08627714 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11248719 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.088201259 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141628267 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.087309215 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113570001 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.092036155 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115975032 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086001167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.112555638 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087574971 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118998959 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095710482 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110377885 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09471124 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114938321 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083965972 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112512257 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085762371 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109960041 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094935286 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119084064 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.082485502 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11330908 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091375616 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114510203 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086696527 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110740829 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08924002 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112300306 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086191372 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10314309 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086350701 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089216379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111110718 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087400756 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114059162 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08991443 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112721518 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09507617 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111473124 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.112792353 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088980273 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112032232 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089150755 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1100532 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084037248 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08676626 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116560071 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084980533 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.112615717 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096736863 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110713918 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090256154 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111202131 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086583242 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124528769 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094804412 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112729289 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088846182 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108660043 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090357105 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109300721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085916904 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110389031 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105910398 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.112579179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086904134 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110729574 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089709918 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122863769 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083771924 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.111352052 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086612604 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112678519 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090472843 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11259837 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085298664 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111421912 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082872551 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111211617 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.084824198 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115482938 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086084605 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111830394 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087825057 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112157111 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089332259 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113583047 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089443691 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109332031 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081311888 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113545218 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086381576 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08931095 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113075576 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.087613984 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108230848 seconds)
done (took 16.560084333 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094931297 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186800275 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146878669 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148859726 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145169126 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.10524488 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124354374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.144748761 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096201663 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14178378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144773472 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134146251 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.12517729 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.120283731 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.130241686 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094064527 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118497015 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104319741 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153216423 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139458517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146070399 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09605279 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140363377 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140105421 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093729798 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14856578 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.123283279 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094158444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.123408422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104037137 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135507595 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122807822 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096927461 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132051941 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126800284 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094209012 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130735413 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090621971 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120600203 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094889587 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.134676948 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13173581 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092514588 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127420225 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120031308 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.097448786 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11901768 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0937882 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120304339 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088700085 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124621983 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140358133 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09267355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12209706 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119573826 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095564171 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121443658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098042723 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121762902 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123684198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095877045 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122937832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100574782 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136586604 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119389539 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096708703 seconds)
  done (took 8.865950272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109996789 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14714495 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125967969 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.101640724 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122936262 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084184017 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108811144 seconds)
  done (took 1.772795205 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0853679 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139033329 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117406742 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143135544 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134718145 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.120949036 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127048332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085759735 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134101026 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120004368 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113076131 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165524034 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114060262 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097480725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147247965 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085217623 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146462059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.1129694 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093456544 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142711764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090439964 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132781672 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.124286239 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086650401 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131196988 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086980821 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176547141 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121800585 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084670016 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090100105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115276445 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181076752 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132972914 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.095062601 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109318772 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113576861 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13161402 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115429624 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.109783231 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.116196027 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107104011 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117077249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092172985 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117261197 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092316329 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.1265896 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122431898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094151184 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115923606 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113299151 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122738282 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106628268 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112510903 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089655937 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121287568 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091784309 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124800229 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115095009 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113764497 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119183743 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111094717 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13757597 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13250784 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112068231 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129031538 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132995241 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106812261 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11679788 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093016153 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121305348 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112444315 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116352606 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095669084 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126510337 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11927375 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112699053 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138390155 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089668511 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125277886 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089354873 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114775338 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08623957 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127443313 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089319772 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114179842 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103110734 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123986898 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090457351 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115108808 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133325267 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089580255 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123271252 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096420236 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116468488 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126848578 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114356963 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123147146 seconds)
  done (took 12.166771649 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08836187 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08734723 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117980439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088414402 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112950348 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087438851 seconds)
  done (took 1.561910015 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116847154 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116394723 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102283282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119508795 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155615792 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111036725 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136947346 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096165359 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132231028 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127187377 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110873785 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138097636 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142593462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.093785905 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137731306 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.093038576 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137303086 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090748599 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126555989 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090483 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128918322 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119311666 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091283894 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135282848 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094031582 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120448734 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093389211 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128116398 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100336875 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122447259 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119881703 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.094410475 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.120302076 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097366063 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.138139996 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119676435 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089375132 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122178885 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095083698 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120451317 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112558504 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116761433 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099585183 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122791525 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.097280844 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120260758 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121302897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094073537 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136299419 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096461376 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122752316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094270257 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12022359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097070286 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120959542 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122563518 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097128787 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137118212 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.093434551 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120884764 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090038559 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121639922 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096511684 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120147386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121133835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096740042 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121452133 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090154284 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116742717 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09375553 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122207268 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090582995 seconds)
  done (took 9.136567333 seconds)
done (took 34.467400305 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669650989 seconds)
  done (took 1.64696665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824956828 seconds)
  done (took 1.805504535 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.660667435 seconds)
  done (took 18.669377969 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491410159 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582527032 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984412565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16226724 seconds)
  done (took 3.201135294 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960714046 seconds)
  done (took 1.961785852 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296220991 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235836218 seconds)
  done (took 1.518852688 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.813575828 seconds)
  done (took 1.812730124 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.501988467 seconds)
  done (took 2.491174317 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349618696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.199051744 seconds)
  done (took 1.548534469 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568087467 seconds)
  done (took 1.56351419 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.787062729 seconds)
  done (took 15.786924067 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237968202 seconds)
  done (took 1.246512017 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29272287 seconds)
  done (took 1.290173207 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.648843132 seconds)
  done (took 4.64465982 seconds)
done (took 60.17880078 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096852636 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125231294 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100942179 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122401656 seconds)
  done (took 1.437877232 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102270762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120655988 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098217555 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119797309 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102244212 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122269865 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093261206 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164194921 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119023965 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096633169 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121310732 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093798552 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123190234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093147062 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118628104 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096200335 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124215158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093540787 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121572358 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120897825 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091104497 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.121033783 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096756891 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118364951 seconds)
  done (took 3.670443852 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097239861 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091175212 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119048826 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090679306 seconds)
  done (took 1.4019408 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100232149 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132746919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1063324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126754304 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106763445 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.131866755 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115687209 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090074609 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11730164 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099580119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117209333 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10988568 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13381762 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085459909 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128243228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087471745 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113478443 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10656381 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125554351 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12688456 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.089562833 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125639939 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097284142 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130175354 seconds)
  done (took 3.712258238 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171592836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12785782 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14060675 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095523924 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165816875 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142454714 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088295439 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14200267 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089274407 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127045434 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092630709 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167207157 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125095404 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.091733053 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117579112 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.095565318 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124978229 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124674358 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091123688 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131566618 seconds)
  done (took 3.458347267 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096744535 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11586517 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086013574 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087784766 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122737065 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091635936 seconds)
  done (took 1.608978274 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08715021 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085158469 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112849463 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084788647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11631886 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085433044 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110287356 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.085846959 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084965236 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11197235 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085077043 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110327733 seconds)
  done (took 2.172704547 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.37891089 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115253112 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114762952 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090774529 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122388855 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088835821 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129088207 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.088343402 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146391038 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089085942 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115064484 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091312394 seconds)
  done (took 2.579240302 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208014791 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093454962 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26417448 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372409898 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130101707 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163174931 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277579881 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160628259 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208093136 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108952322 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220374293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129073168 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153077507 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177934347 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138272137 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.175763093 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175703522 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199723194 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148280048 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203864821 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162634516 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166608977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178915751 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150887847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108257213 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156024406 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11813932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09939091 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198226626 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170292072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173987793 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147369162 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110657088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228714396 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211900159 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205619862 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304775503 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106148409 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.187336625 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.176496254 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254845714 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139097472 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19539185 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155127239 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100313489 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206894238 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157691748 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178557177 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101975078 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140870602 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182460839 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176072896 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.178288186 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137463465 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304414495 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144377276 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146427528 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182911226 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184609421 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190013492 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166343639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118982516 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18375815 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178758338 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178441004 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144152989 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166710376 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123048977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17573203 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193462405 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176164939 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165220752 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209417283 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105925761 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163099577 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168497947 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154497826 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178177919 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160350172 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.092163891 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151447067 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136847259 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099135299 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185067215 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120832402 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202893062 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133682925 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.188620494 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202901532 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157180345 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160547513 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164099146 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165148893 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117927161 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11856564 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146461655 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159047176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130000886 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129872354 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156510129 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141921997 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097968083 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153382242 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121994173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158736743 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105368979 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167819948 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165006373 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127354152 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162706468 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120496263 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156630604 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169891444 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183563272 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129628824 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131215544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192694859 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160184702 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104583321 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173939394 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183197169 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.162837414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13745429 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168815793 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191715837 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140645345 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186411538 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141090421 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105089166 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.150150438 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158045823 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156103361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156850959 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129238389 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122336729 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220721888 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097847061 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135426104 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174496722 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097145468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128800482 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142905171 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107213662 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14124635 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147939486 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134483087 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128311065 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158649304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153062982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159117333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140846523 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191003663 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131989706 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158947018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119137681 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118189685 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.178277192 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183820739 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128746513 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198186448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168101304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22310799 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163927438 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103320186 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177110134 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126816867 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.090822611 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166238028 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159818473 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162127474 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181251507 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21960986 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166634419 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123517126 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149278882 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167478659 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.171843539 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153559691 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144248619 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161743512 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168963706 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092740694 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124033132 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12519424 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113379689 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130666171 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102676258 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210196683 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164772298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185057931 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159032333 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143119829 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180330246 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.096343125 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164920904 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171306485 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138131728 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182233768 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180129154 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165853091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141833425 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176089411 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089705198 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122167991 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131471305 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164317073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103106774 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133755146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142195204 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179798394 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176970008 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121055299 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228556244 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169181791 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190046419 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121605237 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134036601 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169259186 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157397559 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183075997 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105558323 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15581819 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175012667 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142805921 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187314 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161294835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167337048 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226514922 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15617189 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101161278 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148846457 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166534649 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139654367 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136238235 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146645809 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134629548 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154611622 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104465812 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125025048 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181782568 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144107964 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178409132 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15668613 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171866349 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125343675 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14292024 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161125205 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116631481 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.116290213 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171753692 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185198791 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143300498 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159416162 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174375597 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100289092 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309668105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216330259 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184486495 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135279033 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113608275 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160982873 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15823796 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165126266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177304741 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143004974 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178333666 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157498095 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113864089 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133965543 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146480551 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148831089 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122211102 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131172194 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151697097 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141992843 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185383403 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1425859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128256382 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162855453 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145945682 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146797928 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113523791 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227830401 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128826 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204355905 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125536528 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165213593 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228453432 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093709308 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128159802 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096729039 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176873135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131217898 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157417405 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18331547 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19691652 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156563097 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165754654 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137484359 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089665289 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158287067 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14845803 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195444971 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139782954 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135404454 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191105475 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.150816071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099471753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163429151 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287020374 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140537907 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17491693 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.116674143 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274641836 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09483539 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128338196 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158845918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171150778 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136304619 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153933095 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163359529 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143680809 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158939059 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107672901 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215774533 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203339834 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171157834 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175874758 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143145085 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157856446 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1638935 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176485272 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142725858 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.115599201 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161938508 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182647795 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.188080971 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132603531 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16225154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163063655 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158436384 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172554844 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103529066 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227565219 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101474968 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16593904 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13970464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122491397 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158638126 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.183442834 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10432267 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201721059 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128141931 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131449559 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125079588 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12162489 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157751622 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141985005 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127880001 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180426216 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094379686 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163135488 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177782017 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129850306 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124366884 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143890608 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137270239 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14220414 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115704422 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134383521 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167231756 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182528274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099798467 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177133605 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204170548 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165881054 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160292263 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113641016 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665999412 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12607987 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179682572 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11841455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182304886 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14684322 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166840366 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161424992 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15079342 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169537366 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149532352 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190898718 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193758189 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.128163651 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129757827 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144670018 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143465956 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101180096 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151983898 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163680569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110964571 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136820746 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156163014 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143866689 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14315508 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10873226 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182624868 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147603105 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183108669 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178971242 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138380498 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164826456 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173755031 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129113044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1592885 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170515768 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112183584 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150542165 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129917994 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103946906 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179779324 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122994301 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160598701 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158699702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129992074 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161684216 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133793728 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15770903 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142049591 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15898886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101095037 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153612299 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156495823 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099992857 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127273788 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153816963 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160251489 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157097174 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095401393 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169698192 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180250866 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095160915 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131810209 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283385699 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159164091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191173808 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.152752547 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103784056 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144431186 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155633333 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153721806 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159746205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098632411 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132224132 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129144674 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.153053368 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.150693733 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156609283 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184384525 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161550711 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198419265 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134455199 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265776176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10875153 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154530568 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.128419022 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098995667 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142522697 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133723722 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114973955 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21708244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177536044 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121386694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143309434 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12645868 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096982243 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133234024 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158894464 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153977155 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127789324 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143051314 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.116806211 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113607321 seconds)
  done (took 75.972420554 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144501774 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130399987 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145761303 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192632387 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164214076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240526632 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20382591 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223118241 seconds)
  done (took 2.544350596 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098065297 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154922398 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137709552 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121760752 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089322144 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.331645116 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136542783 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121099919 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.146625356 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.132528872 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090530739 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561693027 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.092172249 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12322144 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111988431 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.087974855 seconds)
  done (took 3.624890748 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.268737526 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538212839 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.080815554 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.24526691 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.225242554 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.15095846 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.75507616 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.182812817 seconds)
  done (took 12.544725621 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120224605 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138125659 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.1315071 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161330768 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116255425 seconds)
  done (took 1.769880291 seconds)
done (took 117.492377875 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093401138 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123691604 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09384453 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.124626183 seconds)
  done (took 1.524021 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105618707 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078206205 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.108635915 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07749904 seconds)
  done (took 1.465411751 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.423756361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107545771 seconds)
  done (took 1.665343755 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113540301 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131547811 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103790922 seconds)
  done (took 1.450057766 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100301729 seconds)
  done (took 1.203917837 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096036254 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096903148 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138380849 seconds)
  done (took 1.434059711 seconds)
done (took 9.845871391 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109262594 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.530888474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383098445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134981715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719275417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.376554786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075676554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154532197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136644959 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117423542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104683873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698226889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021636237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.435479918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009631908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.34018098 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671320617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118618321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095667811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119071088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.0523707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087980219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089713886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119192723 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669038654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421546151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088011732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38201965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11552755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092843642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406172724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089307338 seconds)
  done (took 17.058711156 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093871691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177967652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096554123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119455942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09186248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119532755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097890616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.131100933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179824922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088217788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135850011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0878497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123003252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088351064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138255623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088676287 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120584495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090671018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124938453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090283042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137308498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087569059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119456577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091215656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117666153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100897881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117956211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101678027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117545043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09359476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122518206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08916993 seconds)
  done (took 4.689325191 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139745274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186006402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126158374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123638652 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168913997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11841717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173268163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156072099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182543296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117625489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105741709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11712951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124384354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118442587 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.10918276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117603398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091411198 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11966586 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095217044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118836884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108226668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116329647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08978986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119263743 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088714204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131806375 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088795679 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.131359248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116540334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093310688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122733864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089888112 seconds)
  done (took 5.018631406 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096288247 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12659796 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105024539 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134197848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091517744 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125918015 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096862294 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119893644 seconds)
  done (took 2.009710452 seconds)
done (took 29.881026883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106346856 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094041174 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130227289 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101071181 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127994083 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.10255887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116200956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099995149 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130641056 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096221024 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133787287 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087885968 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118602727 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.08746161 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130027308 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093631887 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132892796 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098096281 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137866427 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104656309 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119341315 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101630843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098170036 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138466223 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138284179 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.110036044 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135430662 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094271466 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119163449 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089771452 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131784069 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110911493 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121556512 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105182839 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125084134 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092451824 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119041756 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090703456 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132619161 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098993619 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123467428 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099576181 seconds)
  done (took 5.827852722 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115458915 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161623549 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089064106 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.120005658 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.090003299 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156987741 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153287715 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089609866 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.119561976 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.11360699 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.144045804 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089249203 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.118928955 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.088951282 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.118116282 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.090041795 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141796718 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.113893575 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148530603 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120048362 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.164265629 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149899542 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.123889106 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142901222 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.161693965 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.154879551 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110685071 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155457349 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116832407 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118625995 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.149276927 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.122132913 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.11881239 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.088741801 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.159282333 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124953212 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.146174365 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.160243416 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.149763566 seconds)
  done (took 6.123470518 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098268261 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133042712 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.109970767 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182831638 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126061007 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.132137861 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098797183 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13632006 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105354798 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118292067 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090337743 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147833928 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134970804 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097418529 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089540228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132906243 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138342242 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091200064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123162772 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107984252 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137679078 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102321526 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131529554 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100048489 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118385905 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097545725 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122133027 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104094218 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12374339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096920826 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124057139 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.094234391 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122222866 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100923996 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122666484 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096320806 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141465755 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097953117 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130744638 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120775564 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131294356 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092593881 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141314921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158091627 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088905293 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125822642 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096051007 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097421829 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118133381 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106070556 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1285699 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089174721 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134483697 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118307024 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088101369 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10353533 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119782666 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091449298 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126512915 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095996594 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138250412 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093152979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134400353 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089652263 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125429848 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088727869 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118700836 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095278486 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141108237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092545365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158649676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089658356 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124892163 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096833664 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125874062 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098632484 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119437951 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102480542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129903053 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094864724 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130340855 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.093849117 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123604457 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.107032735 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134241572 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096822508 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12415138 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.096497836 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123032238 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090604221 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132830316 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092338394 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123109553 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106147241 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11973861 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092570285 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125976845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094157473 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118061367 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10224825 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12449578 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088945806 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129488316 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090203668 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123026249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097906467 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123384492 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089279138 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123905992 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095587321 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118328714 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092961753 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093944312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121349109 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102553145 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126405474 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092000008 seconds)
  done (took 14.376911281 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234755567 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215331997 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191679832 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300635142 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141407913 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115444434 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212724456 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165321596 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121349192 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.128981617 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.1772891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188179916 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176299606 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18665883 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172711182 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12096372 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108021043 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172499374 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215671494 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.297540655 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109375424 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133832879 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160882208 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161181709 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108209517 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136447032 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143405288 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111189263 seconds)
  done (took 5.845000075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105660706 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156043106 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096719462 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144948957 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148426005 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090735514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125196823 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089892094 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.132977431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.104720567 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121112777 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097021269 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.126438805 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.098991309 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120070325 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.0985733 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131344066 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098611025 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123063122 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09343493 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134827348 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107198654 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12638245 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091700621 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137096101 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12271021 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091519899 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141805813 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.126592982 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116179587 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118007851 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099813186 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13564442 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090252609 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093454509 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123413918 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091947412 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.122672352 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091671447 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117698226 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089195478 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111123525 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092589438 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135754653 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096644943 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118456633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09544179 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12557739 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097622081 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116790344 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092270223 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092721195 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124480589 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101096644 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124487647 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09762526 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.126111473 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092717504 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129464532 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092324646 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.119391092 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091096968 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126909356 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094176676 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129909805 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095950721 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121884368 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.09239257 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.126214193 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096920913 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123170993 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099115494 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117186392 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091683323 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130927901 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098839561 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123315335 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091379132 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092703483 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119723125 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078555444 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119635896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076674432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124261533 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089323928 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091571193 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12273156 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095220339 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13558836 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130778178 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097530991 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119320437 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092653523 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.125167643 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088136135 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124005266 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.10824554 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14093352 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089431114 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11804433 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106302923 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122394174 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.08858629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.112770402 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102297901 seconds)
  done (took 12.766398579 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131410569 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170903694 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122140684 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108650279 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155480083 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163071334 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099222324 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128147727 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090929889 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108245606 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124318398 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099727247 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124669928 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.10451968 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162070534 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13105563 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090938955 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135790091 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0960079 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175224794 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140106727 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.625884637 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161650011 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124341208 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095074045 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157746937 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.165876554 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104409182 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133367303 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131839742 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.13455456 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164891191 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163022394 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097033313 seconds)
  done (took 6.0746792 seconds)
done (took 52.121732332 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.21389615 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425178163 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.203832102 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.203247466 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.266952714 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.253075676 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.204223543 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.397652853 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.982479136 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192121981 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.204199713 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.203978531 seconds)
done (took 27.893585946 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.279060115 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364057657 seconds)
    (2/2) benchmarking "String"...
    done (took 1.498977566 seconds)
  done (took 3.999095287 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.204480977 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.204656515 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.449245784 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210784895 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.203951235 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.221134544 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.204038602 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.21070956 seconds)
  done (took 15.839536583 seconds)
done (took 25.457642153 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.262974353 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.40553224 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.463258233 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.223347196 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.224334179 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.217110301 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.205229349 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.254723642 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.219106245 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.204010402 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.207109358 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.470841853 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.223279261 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.582878362 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.216264892 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.22042848 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223753608 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.423256011 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.221334666 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.193187809 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.211186225 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192642815 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.226344209 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.243747179 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.215712928 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.206339506 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.241389788 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.207021434 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.404022109 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.214684382 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250836871 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.210594775 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.252120759 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.218561968 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320678735 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.234653254 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.386873997 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.216145035 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.202487652 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.209466963 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.381949242 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.619454255 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.207506179 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.210950281 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.208760698 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.278508393 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.196677939 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.936532811 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.214874575 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.20972032 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.217290694 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.593428278 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.211332549 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.220988438 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.217876775 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.450053138 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.209219111 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.255114686 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.243543147 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.218657324 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.208741065 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.212782915 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.232433335 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.210916009 seconds)
  done (took 143.834722853 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.20835214 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.208822385 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.208856403 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.230539687 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.209045538 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.209953732 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.208458501 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.209144908 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.209271373 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.230547361 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.21105634 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.210274842 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.214247273 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170994106 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212254471 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.222596182 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.215007749 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.225863174 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.212516541 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.212270102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.233010817 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.211984603 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.227849336 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.210308823 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.25476845 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.287708643 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.230033584 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.236960567 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.209331501 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.210527903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.210847647 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.258564547 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847912706 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065946467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.221051003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.232977316 seconds)
  done (took 80.530471805 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.210297765 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209736909 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211696981 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24237145 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209865285 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789349201 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807231719 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.929664684 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.51782961 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.635333859 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521875151 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21245135 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304020423 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223160107 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208724541 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22389528 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236171302 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208212487 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20643005 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802747329 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222913936 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.293592271 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387199582 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218449049 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238395866 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604232095 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205910659 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236476667 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.538204206 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.256140877 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206513568 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586375788 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.394905006 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206095385 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318347242 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206835116 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237537459 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204129113 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486194938 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204341592 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205232444 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208193216 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887247233 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209337187 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.773706056 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20631522 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145262465 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206959457 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206013418 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.157525433 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.89783817 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.2283576 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208156979 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208941929 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.208962524 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208432557 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239318365 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.196653811 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301837748 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.205147135 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206764875 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209520777 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237507428 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206901316 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.237538877 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208973145 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.835675469 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269200984 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.418155624 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793355243 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211073261 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304908946 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328183381 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206638657 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207994573 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206702538 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206836598 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207026248 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206659811 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319385592 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207839614 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.629535386 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.383238989 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225130757 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.597206938 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309288658 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20833142 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601853462 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214462922 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206029783 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954296737 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303936715 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209961264 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209600721 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20828763 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.631885432 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793718876 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469868246 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211841465 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.338833591 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.217860129 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.638664948 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.765152912 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904229111 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.213209871 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32479757 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383147199 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227737217 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208791878 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.584898716 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211518433 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265274972 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208184481 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606002981 seconds)
  done (took 368.126568411 seconds)
done (took 593.627311898 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.919788084 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.874964229 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.008404868 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.902601682 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.867860639 seconds)
  done (took 10.714813851 seconds)
done (took 11.852978448 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401129797 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398162537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271207466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.405946014 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243030409 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416855376 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38670581 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.235440635 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317104267 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.296207712 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321049449 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26607474 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.252673667 seconds)
  done (took 18.352025613 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534748799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.218264211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29904043 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559955826 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254692592 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550581571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417877079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.230833349 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423538574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232037132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231962425 seconds)
  done (took 18.096887163 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557326076 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.217788952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.300210284 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560919212 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257470701 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559434017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42770755 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.231538352 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425778203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23627545 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234806772 seconds)
  done (took 18.155776449 seconds)
done (took 55.742275295 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258821576 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384631464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24613074 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231833419 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222836395 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.228838911 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.234202604 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228639213 seconds)
  done (took 11.182179373 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.226049517 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.226160826 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225533397 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.223837315 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22427315 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.22237868 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223290449 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22541636 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227331201 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227183063 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227387448 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22478754 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.231167901 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.226247691 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228181438 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222802363 seconds)
  done (took 20.763059366 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.226272238 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.228311798 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.226276469 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.227618117 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.226278191 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224925463 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223080144 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221868548 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222827171 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.225298869 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.224711581 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225079635 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223386748 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.227402711 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226311137 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227634941 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22120024 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.224942436 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226935987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226902827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226284328 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226210788 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.226487307 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227561026 seconds)
  done (took 30.565694148 seconds)
done (took 63.656526024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.218851374 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.242142884 seconds)
  done (took 5.611603604 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.284744585 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.288615116 seconds)
  done (took 3.722098869 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232352272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229408625 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229278248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229306685 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.229883915 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226458572 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.229427525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229852733 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.23341182 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.228996689 seconds)
  done (took 13.444579304 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.229360564 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230298815 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227492458 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.229877011 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229818123 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.232286806 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229043274 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.230493617 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231986487 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.226610482 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229437296 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227903636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230419303 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.22904978 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.22848835 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225118552 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225807507 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.227058856 seconds)
  done (took 23.268967557 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.241483673 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.251370512 seconds)
  done (took 3.639629512 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.358994317 seconds)
    (2/7) benchmarking "second"...
    done (took 1.27063051 seconds)
    (3/7) benchmarking "month"...
    done (took 1.336561474 seconds)
    (4/7) benchmarking "year"...
    done (took 1.324914269 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270286607 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.247240972 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.267924479 seconds)
  done (took 10.225401082 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227829215 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.424792653 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.522775698 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79632264 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229868885 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.233470037 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.126130867 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230064059 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231213136 seconds)
  done (took 14.171950088 seconds)
done (took 75.231214254 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.219805567 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.235769083 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.244438768 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.235419147 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.562389043 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.228363591 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.221622453 seconds)
done (took 16.095521944 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.206534593 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.220066997 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.20262367 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.221408336 seconds)
  done (took 9.995285798 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.221268455 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538476667 seconds)
  done (took 4.905243463 seconds)
done (took 16.050648669 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22748859 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.228166733 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.226133001 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22898869 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.223658267 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223977619 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22852328 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223778359 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.227995011 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.227286508 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229272978 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221470505 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224059432 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224265612 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22884815 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225768155 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228437911 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227828468 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223004956 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23051815 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229611296 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225021783 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22820992 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223769795 seconds)
  done (took 30.582464456 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226990739 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228040337 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.228306991 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224447088 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226440508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.228997686 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22584444 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223522362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.228261115 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22865373 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22532567 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224477892 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228785788 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225428013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224305904 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226457507 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.228889579 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225447427 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230765812 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224885464 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.228392548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222261772 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224145369 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229593928 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225655451 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224792094 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228243097 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.22500974 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228891083 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.223660846 seconds)
  done (took 37.945400168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.233950382 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237601479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.229230185 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228766823 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229424189 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223538781 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225001985 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226593732 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22662578 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227996031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229249581 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227355015 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227644268 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227434029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227864679 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228254857 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227121925 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227683449 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226480347 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228350499 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229426032 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.230594224 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.230588906 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226612977 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228637095 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227091081 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230528283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229001028 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229231974 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229069444 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232279089 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229391908 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229401341 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226357886 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.227556396 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230763028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231562015 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238839356 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231494561 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228889346 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229102629 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227725238 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.231818463 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233049571 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.228288656 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229096834 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.231449056 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229881378 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230068238 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228506675 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.232386058 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234592127 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226932569 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.229341654 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22931921 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228677819 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226388789 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225993662 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227354897 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230662291 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233529476 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231769499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22996588 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23191494 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231160299 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233887064 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230071331 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23254457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232890995 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.233070635 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230992512 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23089711 seconds)
  done (took 89.689372098 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.232090676 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231760639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228006057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229868151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22959882 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231149049 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229702837 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23261438 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22999743 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232829963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233014153 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230593337 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229743645 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232806735 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231634605 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229661484 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233351695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231749589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232438556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234284408 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235091968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230524405 seconds)
  done (took 28.241644613 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234085264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232577284 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231234925 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231241274 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229131853 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231936462 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231305581 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232460303 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231579964 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230387688 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230598901 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231557876 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232742391 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230610259 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231734464 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234421489 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233826621 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233082095 seconds)
  done (took 23.325278436 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23231162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.234375036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233553625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232081045 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230304701 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233812217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231787541 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231618186 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.234377939 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229959598 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231980604 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232977433 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234728322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231892915 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235515858 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231371289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233632408 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230870406 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23529146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233991365 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232465346 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233663097 seconds)
  done (took 28.272687123 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236490018 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234733167 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235130192 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232219502 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.232357136 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234618838 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233279471 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232964335 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235088006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23687561 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23539333 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238749141 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.2371588 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236201876 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236727643 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234868859 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.235575342 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234437671 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235276367 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23269575 seconds)
  done (took 25.853410622 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237515191 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237109379 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237091195 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23712106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232121687 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240184326 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237848618 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234328357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237939134 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23694919 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237994856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235760909 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23902423 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236425316 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237962331 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236488932 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239562058 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23803447 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239474511 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235881723 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234818055 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234481433 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236606492 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238020606 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238660117 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23678189 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239165552 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238200397 seconds)
  done (took 35.79391178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23789709 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237960914 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.235645731 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.237401706 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236082557 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236947664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232283456 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233474005 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235965288 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231919997 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237492792 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23882124 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236300344 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236023022 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236227497 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240592901 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238170504 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233157645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233222295 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233294774 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236793802 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238133282 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237767277 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23487872 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237669251 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235902128 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235383251 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236461553 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233264739 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235488645 seconds)
  done (took 38.237646341 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.283570494 seconds)
    (2/2) benchmarking "in"...
    done (took 1.283705197 seconds)
  done (took 3.724341183 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238218815 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237520458 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24159654 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235612273 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235978262 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243833452 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240862336 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240255087 seconds)
  done (took 11.072140274 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.237564351 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.24003899 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238547259 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240323879 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.242403685 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238552212 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247411348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257755586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237078895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243728115 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244620321 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247082221 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238246394 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238534621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238852037 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242705883 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239901271 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238494211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240031159 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240087714 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243518312 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243588873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243071233 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.243088105 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242285673 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251513223 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.240091504 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243009909 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239208726 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243602152 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238758816 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241158038 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242665193 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240890619 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24008199 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.243839344 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248892481 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262994418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248968748 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240035823 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243204302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.240072299 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244279078 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.244146289 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243292968 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241302356 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.24483708 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243152482 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241339084 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246617365 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249083643 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239665715 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241962244 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245992247 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243856716 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249693339 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261800631 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245835755 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.251933125 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.256853821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.256484225 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26570016 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245729414 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240923678 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253291673 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266638493 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25109168 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25882203 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243497876 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.243954944 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.250209566 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259473479 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266143246 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246460758 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244622586 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244316437 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245309601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245339714 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254236075 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264295085 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245464347 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242619371 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253549709 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266624643 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24221297 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241981371 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.24408869 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245557377 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247621574 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257646737 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264060181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243440362 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.2406803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244221128 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247360774 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246855149 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246151408 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245268995 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.243015235 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24627449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24701336 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24818499 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258427919 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248431711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248645953 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250514821 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.243673214 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249135264 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254357335 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24576202 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249967662 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.247857144 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252112235 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246444476 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253334506 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.257066188 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.247259121 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246698762 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248236511 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.249306818 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257414188 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.271580668 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248789342 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250767459 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255654473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.260512613 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248200628 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.245701526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24698581 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.2441313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246729463 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.248479617 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247129974 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.249693396 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251443348 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248833843 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247234055 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246187594 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248335386 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248418661 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248633489 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.250502373 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252119995 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249703226 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247048229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247371003 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254793992 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.244801862 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.249562129 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.250433268 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248443688 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247846679 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249249814 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249044825 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248926443 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249728549 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247874866 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250501375 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250749769 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249572956 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248676253 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252098621 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253066979 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252565172 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253393302 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.248587691 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253811138 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252093487 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250967199 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.250253876 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255889104 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250971898 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256573211 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256626092 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254567309 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25329349 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.254853729 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252094973 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251644613 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250767467 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253344134 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260141244 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253821604 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25936232 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250283787 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249884317 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253681755 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.251166449 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.251391627 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256134772 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258314925 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264811886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267272148 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276341422 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257002111 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260629326 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255045588 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263042693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257567267 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257697532 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255002245 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254902354 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254010323 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253901274 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255429767 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254306954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249976385 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255156672 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256974009 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255126888 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254777728 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257393305 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255560789 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.254960895 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255298911 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256382765 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.253293415 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.253600639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255088351 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255088353 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258633105 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256725437 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262883849 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250224272 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255426533 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256029011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255953109 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255682583 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260393321 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258855016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256093992 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26481209 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272597 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25865196 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2636912 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272293272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253111908 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259858298 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255583875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254469878 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261138486 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267798316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257988557 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255733645 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259636127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257787379 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256936349 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264546719 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.253023111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257159245 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260476182 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258136675 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25397988 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259142441 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258729511 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257760318 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259048538 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256094341 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260016744 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257014326 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258958849 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258645691 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257902918 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260529575 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26728992 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261555768 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.256390708 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258684401 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260105673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263573491 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.2576257 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259967442 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26011498 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267120039 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281925287 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260639047 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275178732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261065046 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267382235 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272204267 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259575197 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25669167 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256034571 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25724969 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.258953321 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257779747 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258431707 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260929332 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261195165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260401283 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264508954 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260809285 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257937446 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.26364519 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261698938 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260535315 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.257382073 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.261290688 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261888965 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262630771 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26010549 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260846869 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267575663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277542413 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260478355 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262782798 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.2619587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260588976 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.260894055 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.258606261 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.263217903 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.266283918 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265998047 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270144816 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.261156793 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27106847 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261366704 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263792371 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.269247342 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257266077 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259140814 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.258836906 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.2584817 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265258164 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278905431 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263003761 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.265933994 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260408892 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.260930704 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258897074 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263288989 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263171447 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260204243 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268136211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283893945 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266019522 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264849648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261494361 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263955751 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.264829313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25906727 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265718259 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263473163 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257508183 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266090118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263941529 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26383733 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261545661 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261979219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262824586 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265884876 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267381629 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282456012 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268028576 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.265317714 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269705093 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263276748 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269726832 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284446318 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262740407 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262101465 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.264265284 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261446758 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26424674 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261276172 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268513393 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264899033 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267886519 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.26347005 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265717802 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263262143 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.263325641 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264461519 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273421861 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282826105 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266650049 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270953188 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261931354 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259986424 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267436882 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.265575899 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261459937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268334737 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275943906 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275465183 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264991722 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264675391 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263175213 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265071203 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264359901 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264640119 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267711691 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261445154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263941202 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262522194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267499618 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.2663601 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26269618 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266279419 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268234536 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275733687 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263108714 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263515264 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265156705 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265977439 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263606683 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267580985 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268588304 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26273683 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262918117 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269822278 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271538574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272960814 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266890833 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267718977 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266380385 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26750117 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264983369 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26474956 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268213261 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272724202 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.265694499 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265539615 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267336336 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267961889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267419984 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268805874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266750347 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273515219 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275206295 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268998044 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265772843 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272070682 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270754108 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270461046 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265336369 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276257067 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270476227 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280281643 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27390408 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270828808 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.270363958 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274150288 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276848522 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269817295 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271527896 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270899082 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270984981 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.272767677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.274312941 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272855345 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.278534241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267194796 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269922701 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278034223 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.292336021 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271622327 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270255079 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.277231512 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271048438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.271460184 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273208034 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273471321 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277835558 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290024674 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274336962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27172762 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272790535 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2760413 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278302683 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273952174 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273255739 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.270130235 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273760449 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273354576 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273554311 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271692185 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.272028382 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272800815 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277215718 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281037975 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272815355 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274792202 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272594019 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272655892 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274000687 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273077355 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271984195 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272618859 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270766089 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276055189 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271712046 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276606593 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273614288 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.275156235 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277088065 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273970759 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277880818 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286638844 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.283661123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272576609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273037071 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274291534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275553244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275899755 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27481421 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274797477 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27741358 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.276199737 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276337626 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.275178355 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27951458 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292738797 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.296491472 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276026719 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27751444 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278462495 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274961286 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274228121 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.27659704 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275815877 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278411325 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284050709 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276750221 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277436568 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291148291 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277223239 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280861109 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.278359194 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.285914731 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277641851 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276471505 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275104471 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.278434911 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293342126 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275078806 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28510668 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301999509 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.295635181 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.276093838 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276557713 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272891942 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276970643 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275833333 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.276056184 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279544946 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277876875 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.27751624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.278304258 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281312477 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276473265 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.27857338 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277089969 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.277536274 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277892713 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.275270314 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278364881 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277751275 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279050541 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278085293 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278168792 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278787618 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290517831 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.302488692 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277557356 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.277848549 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.276825153 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280349539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282266108 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289918461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.289289367 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278330475 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.277507818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.27956696 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276920149 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275351535 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279062954 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280103541 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279459978 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276962693 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290129749 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.299205289 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282036468 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277899648 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278460783 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277125566 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280745944 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280106126 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278814649 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276778689 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.281728452 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2853826 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278090048 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280342457 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282477619 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290749388 seconds)
  done (took 753.571004208 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279875372 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276862459 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277946379 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279493681 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278968402 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277195204 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278691696 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274114522 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277264372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277821786 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278523924 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278171778 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278763136 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277791959 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277324295 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27639351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278915884 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278219966 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278108802 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280148638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278216482 seconds)
  done (took 28.032727679 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.282935689 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276064323 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276568208 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280930651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276160966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2791941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277538583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275585491 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27876362 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277438808 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278115078 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279105519 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278015114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274050504 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27854508 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281629392 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.280693173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279124334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281259098 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274579553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280639267 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280581157 seconds)
  done (took 29.322555543 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28420305 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280145449 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277988423 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.278212031 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278819147 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.278573931 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282667349 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.281379379 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285984986 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.283305002 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.278780465 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.280018883 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.28715519 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.288994705 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.280242817 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.281404128 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282437981 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281794081 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280800155 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.276406915 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.28555962 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.295427405 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279034536 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.279536482 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278366349 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280311263 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.27758157 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280334366 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.279195855 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.285333928 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.279403635 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277948077 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.2843597 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.28023693 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.281657158 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286698073 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284913029 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.279244315 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.280003364 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290169753 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.301149677 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283306009 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.287760562 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.299313933 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.281387591 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280955195 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29376042 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281777019 seconds)
  done (took 62.781389907 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.283896055 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280005482 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278707511 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282182127 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285018329 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283422318 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.287327462 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281510334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281747677 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.282552832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283746221 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283885945 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282197975 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284150323 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.286201747 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284711176 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280239668 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279078958 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280740164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277629557 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282356681 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285945603 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282360914 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278790498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283877155 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279873906 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282924494 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283948774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283282743 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280432544 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284521009 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28498178 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282290596 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.279247332 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279216884 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285384313 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.2839044 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284934041 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285565365 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282323362 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283717107 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288160967 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28664291 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285321916 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281693384 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281596749 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282654487 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.281182443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280897122 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285327254 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.287335128 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286022855 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284650758 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285377226 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281393888 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285418003 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283541522 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281567232 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284239402 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283730328 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.281199644 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284771329 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284021487 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284414977 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286718634 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282643582 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282988513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284901066 seconds)
  done (took 88.460153165 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289068373 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287201082 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283315648 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286435544 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285394266 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286149164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286725388 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289185788 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28655123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28203266 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288147472 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284663225 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.284893684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28843603 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284454783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288107773 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28908221 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283791983 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287487463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284886429 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283823191 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289816342 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28864031 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285937119 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291040656 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287949609 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287225605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286719961 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286835364 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286959634 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287645161 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288318386 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289941112 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286298618 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286671817 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28853456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287437201 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287659681 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.2855458 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285618846 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286780959 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286330286 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286642328 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286886838 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28727893 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284922682 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28752541 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.283458664 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286903061 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285187475 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285521486 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285120796 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286843981 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286312442 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286513364 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287030242 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286556555 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289021254 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288222905 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286514725 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285578168 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289620451 seconds)
  done (took 80.983777053 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29188835 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286506947 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286941219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.285430375 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290697677 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287812161 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292594759 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.287619072 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.286872301 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289091992 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292787258 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283583872 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287230289 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292747303 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29079579 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288546584 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285924287 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290420358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291989693 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.28836329 seconds)
  done (took 26.983444865 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289817685 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288138598 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291717042 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289023262 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294354966 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289541449 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.288710235 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290736583 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288294876 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292142446 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287540876 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292726276 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287979274 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288748042 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294737376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.287996165 seconds)
  done (took 21.850216882 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291362649 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289827416 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292832002 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29082511 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.289024328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288730953 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293480479 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288923674 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287843631 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290638533 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291701288 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.291218675 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.290449888 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289271569 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286399444 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293811956 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289828586 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289816237 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.290033192 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289432239 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290348055 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293391138 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29222771 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292231128 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291321233 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.293569079 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295585991 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294142587 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293031203 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293071308 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290152896 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292326016 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.287532437 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291792551 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297164886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290068839 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293400161 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293513886 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293808773 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.291517192 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293221241 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288434258 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292140081 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295153006 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287508444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297299712 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.288389597 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287660539 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290617295 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.295431051 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.291015429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29494178 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29143663 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292341199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291210509 seconds)
  done (took 72.2412471 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295050069 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293371459 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292601549 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293408904 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291974361 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28955583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292541572 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291578048 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291099247 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295704485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289979045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293174683 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291814373 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293653424 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288873184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292422897 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289070199 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289903207 seconds)
  done (took 24.467828136 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294191124 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290492437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292513333 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290694954 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287848487 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295972721 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291199663 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.293223286 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294701554 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291987771 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289822372 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295888089 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295027317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29565106 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297624613 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291404288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293647858 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294124197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292297742 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291630034 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293319319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295708589 seconds)
  done (took 29.6591178 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.295191512 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.291767848 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.293340162 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.310070281 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.311806504 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.291868839 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292172325 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.290084092 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.316321805 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.346483728 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.341727636 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.31964024 seconds)
  done (took 16.912726231 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296757098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297225539 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297317468 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29943547 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300441693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297275621 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297606089 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299960092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299816334 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296617907 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29482001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298367554 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299228011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300728543 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300894592 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301561634 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299524418 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302084481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298969242 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301177107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298229256 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29806864 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297034676 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29672059 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302627142 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298488271 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299413974 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299568843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299269839 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303015508 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305760158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302027249 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304314546 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303541317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304114363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305371618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297725466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301847158 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300472024 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297704364 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304867922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303052069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300617864 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300303075 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306412093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302379775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302938957 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30191703 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302733509 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301759912 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305854374 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303801423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305604168 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302899901 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304129537 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303026443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301252075 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300593102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302243768 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300518077 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300923627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305240025 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302164145 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301234198 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306236525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302733774 seconds)
  done (took 87.087387953 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302967896 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299247333 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300201722 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299860157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302396376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299573334 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302490584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3057494 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301236948 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302838542 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305239627 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302196788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300415417 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302117112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302886841 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301667933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301479752 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301596182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302324447 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301172884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302136003 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302757243 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304854539 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305258046 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30655452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304715449 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303881202 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302075852 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301086937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302843904 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304971986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303499847 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302776756 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3028152 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302275515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305109873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306222641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305531271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302514359 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305393358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302195713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306552122 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307879013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303598007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304652634 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30404465 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304082094 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304660402 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303802088 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304274206 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303490974 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305813806 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30897324 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305709184 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308195078 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30785175 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30476859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305048578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302356262 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310438612 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308492408 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302564464 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307690978 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305806249 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308790323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305659688 seconds)
  done (took 87.283660606 seconds)
done (took 1763.52101101 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473598271 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.425254966 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.308234926 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.312872859 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305516417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.326231482 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.316997494 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304052391 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.306243449 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.3086103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.305476395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492795601 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.304600895 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303019865 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30503455 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400079343 seconds)
  done (took 26.722286523 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.338876143 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311231094 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424515107 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327224743 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.338750979 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497794325 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36347202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.315205005 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484732969 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.349871921 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.31137669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333622412 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309700396 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.30874451 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329177216 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.498294695 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558002369 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.310602072 seconds)
  done (took 28.932224648 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.765551775 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.306012774 seconds)
  done (took 5.293488317 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.334543158 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312157748 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314702298 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.313895765 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.304796602 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.301682426 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313432002 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.309218626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.309894847 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441299594 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.318244396 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.324834487 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.333803998 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.314815887 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312092426 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350789303 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.47302486 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315116231 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310147174 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.320486508 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.314820775 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43336861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357221847 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.313664484 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.44162202 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.318840227 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318611932 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321231517 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442659858 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312039242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311599942 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316539925 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.314389771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238467519 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.777931903 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.305313097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336271754 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320503454 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31375725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.480294572 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31629789 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320030764 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.306215449 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756737075 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469888868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429856605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.325190198 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320316799 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320850533 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.374538211 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.318382626 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317649731 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.360817058 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.117930425 seconds)
  done (took 84.204164746 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.345445346 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.305842811 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486382763 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339604106 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.305862925 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312612308 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325013837 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600477278 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.329816958 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310704528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.619193325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866401166 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330365368 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.346330226 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.216470786 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.361752216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314047711 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.310620497 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309869971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.313910698 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863170698 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312082506 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.30787537 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.467026784 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346907331 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.824148905 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.311071933 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.332857021 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.312175795 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.308145478 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828355906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.339713915 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365663489 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.308476622 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58246762 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710606989 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657133202 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.311763816 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.322712098 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308788557 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.319381767 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815843238 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.682702183 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.311756833 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.32212721 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.823428947 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308835971 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.318187913 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.317956748 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555909456 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308284404 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.310910346 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.308037995 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332518956 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.312142962 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.322354461 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.374942007 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828998519 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30921166 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.321347115 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351806294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311501651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315938295 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.317856331 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.313001784 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68645781 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.448097687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.321754961 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691973438 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825741748 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.336271518 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888434191 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330089482 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.316534178 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.382471673 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313726927 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325269603 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824348997 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314562055 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309681791 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66784179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312325054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603968576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333564683 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.312571981 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896513951 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.320241894 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.401307164 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310232974 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.315759242 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.334798932 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319824802 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.581773652 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.390710503 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315683908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.315234843 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.330183224 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311766998 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.328653433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315805237 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890317216 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.333989951 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314992275 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316125198 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320736608 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.315045721 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.314666809 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.316954169 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.576791933 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.318163037 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.31559122 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.317271903 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.314541482 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.31953056 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.466699343 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.321004073 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637252337 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317271419 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3125999 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323012189 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311962069 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324162751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3129716 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.317008858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.212262413 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.598234955 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.339200502 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.312532008 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320009233 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316993712 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.343056494 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317814594 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.362445889 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.318092796 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067890899 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337974422 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.329610493 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.317487779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330895464 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.327958024 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324633212 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319441215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614218109 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591272603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.44925297 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317781118 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314812633 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.067992177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.351016727 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492277463 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336585873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310659561 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.558724616 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.496953042 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317397288 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.312647942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.316411685 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573926225 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.33328245 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622165391 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861898639 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335185191 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323305082 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.071192296 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024063023 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.321428951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.31992924 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.597621489 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.336008292 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316704191 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.31639241 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318423498 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.320842553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.340800207 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.314730579 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.319068404 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.317198167 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.532759539 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511188354 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336784307 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325853853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83361781 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324250451 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329907603 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.328916595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.321273 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319577221 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.368905442 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.318654475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343261107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.320130079 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.32414637 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856974601 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.321911999 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.325526026 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512838227 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000919591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.343366428 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.325215006 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324241294 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.207075298 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.861359165 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.361453755 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.64634515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.327113058 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.360641757 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317507937 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.381856337 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856432078 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323254114 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.318927115 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973395121 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.34182732 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.99050814 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.318486281 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.319863081 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906179201 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342510097 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.324001815 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33143863 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324474593 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626295025 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.32207942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.359684696 seconds)
  done (took 494.607650844 seconds)
done (took 640.981673825 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.324206825 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327267489 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.313692272 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323677381 seconds)
  done (took 10.527111541 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335962964 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.32940699 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.329032579 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325432168 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331530741 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327406315 seconds)
  done (took 9.222818408 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325229407 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327098807 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.325128269 seconds)
  done (took 8.219716932 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.54056716 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346908895 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.66008823 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343869801 seconds)
  done (took 9.135198926 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333356315 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327304125 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330408906 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.332848682 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334984795 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336894558 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331493752 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.3309189 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.33106984 seconds)
  done (took 13.232278552 seconds)
done (took 51.580318495 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.113046984 seconds)
    (2/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.348418657 seconds)
    (3/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432546783 seconds)
    (4/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.595526877 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.099033163 seconds)
    (6/286) benchmarking ("sort", Int8, true)...
    done (took 2.327293332 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.312551699 seconds)
    (8/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.314434076 seconds)
    (9/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.314328693 seconds)
    (10/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.949266852 seconds)
    (11/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.106904274 seconds)
    (12/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.409679444 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.576555366 seconds)
    (14/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.343451711 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.363095524 seconds)
    (16/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.453929317 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.353616263 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31301088 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.216860549 seconds)
    (20/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.313818462 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.342779513 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.326212051 seconds)
    (23/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.309883446 seconds)
    (24/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.368617103 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.315905431 seconds)
    (26/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.333230854 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.669548657 seconds)
    (28/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.333270315 seconds)
    (29/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.490168234 seconds)
    (30/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.338147302 seconds)
    (31/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.818371395 seconds)
    (32/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.421285277 seconds)
    (33/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.32675055 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 2.329693604 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.331805106 seconds)
    (36/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.413241018 seconds)
    (37/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.430478184 seconds)
    (38/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.322010903 seconds)
    (39/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346184104 seconds)
    (40/286) benchmarking ("sort", BigInt, false)...
    done (took 2.324420298 seconds)
    (41/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.357156072 seconds)
    (42/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.323453189 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.328720461 seconds)
    (44/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.314131647 seconds)
    (45/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.313583678 seconds)
    (46/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.324724817 seconds)
    (47/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.688913887 seconds)
    (48/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.095879939 seconds)
    (49/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.317147529 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.469070593 seconds)
    (51/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351375566 seconds)
    (52/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.314654838 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588998935 seconds)
    (54/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.323983951 seconds)
    (55/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.332289811 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.227855352 seconds)
    (57/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.550515114 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.082654175 seconds)
    (59/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.359099916 seconds)
    (60/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.318560033 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.396285778 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.343760578 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386062755 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.412380754 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.970827172 seconds)
    (66/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.31680645 seconds)
    (67/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.352208176 seconds)
    (68/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.664738324 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347465487 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.340054289 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.663495784 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.370834759 seconds)
    (73/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.106109777 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 2.331553662 seconds)
    (75/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.797288305 seconds)
    (76/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.23570058 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.986336147 seconds)
    (78/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.313721383 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.333033735 seconds)
    (80/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.320119553 seconds)
    (81/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.361582334 seconds)
    (82/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.934164956 seconds)
    (83/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235256348 seconds)
    (84/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440835432 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.329345051 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.335920346 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.336430201 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 2.328748486 seconds)
    (89/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.326897024 seconds)
    (90/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.326144756 seconds)
    (91/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.39295584 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.329177977 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.321642836 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.316410265 seconds)
    (95/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.670995352 seconds)
    (96/286) benchmarking ("sort", Float32, false)...
    done (took 2.330009676 seconds)
    (97/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.413992209 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.323930758 seconds)
    (99/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.320718355 seconds)
    (100/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.320956225 seconds)
    (101/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.355278561 seconds)
    (102/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.176430927 seconds)
    (103/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.317096568 seconds)
    (104/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.314762365 seconds)
    (105/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.229831876 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.313148139 seconds)
    (107/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414105282 seconds)
    (108/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.414996965 seconds)
    (109/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455999432 seconds)
    (110/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.332010064 seconds)
    (111/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.339058328 seconds)
    (112/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.315883422 seconds)
    (113/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.402914683 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.340703562 seconds)
    (115/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.566370998 seconds)
    (116/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456540244 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.327034207 seconds)
    (118/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.32739954 seconds)
    (119/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.356472667 seconds)
    (120/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.824649235 seconds)
    (121/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.324318314 seconds)
    (122/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.327473322 seconds)
    (123/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.331264812 seconds)
    (124/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.183977444 seconds)
    (125/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.356136766 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.328467928 seconds)
    (127/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.335374495 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.853215887 seconds)
    (129/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36061565 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.354905807 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.611959497 seconds)
    (132/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.434161769 seconds)
    (133/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.432437409 seconds)
    (134/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.589322795 seconds)
    (135/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.33195066 seconds)
    (136/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.3492805 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.099187997 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58954167 seconds)
    (139/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.339039372 seconds)
    (140/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.445524103 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.462767749 seconds)
    (142/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.343231098 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.332255569 seconds)
    (144/286) benchmarking ("sort", BigInt, true)...
    done (took 2.337096146 seconds)
    (145/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.33271458 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.72752775 seconds)
    (147/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.350796871 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.350344785 seconds)
    (149/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.442783387 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.123045417 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360611308 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.738130623 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.267836524 seconds)
    (154/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357978783 seconds)
    (155/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.33030341 seconds)
    (156/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.413248671 seconds)
    (157/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419694671 seconds)
    (158/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.349395298 seconds)
    (159/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.334406363 seconds)
    (160/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.93961328 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.362190579 seconds)
    (162/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.344713107 seconds)
    (163/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.83880274 seconds)
    (164/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.331966217 seconds)
    (165/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.468146759 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.320889358 seconds)
    (167/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.191589775 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.756259456 seconds)
    (169/286) benchmarking ("sort", Float64, false)...
    done (took 2.352824374 seconds)
    (170/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.318294517 seconds)
    (171/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.332580573 seconds)
    (172/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.110948019 seconds)
    (173/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.418412048 seconds)
    (174/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.452170002 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.188463191 seconds)
    (176/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.171035878 seconds)
    (177/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.832134236 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.256735233 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.319448524 seconds)
    (180/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.328233441 seconds)
    (181/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.336458859 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.2325133 seconds)
    (183/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.363419399 seconds)
    (184/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.436078379 seconds)
    (185/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.375094152 seconds)
    (186/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360611446 seconds)
    (187/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.324636304 seconds)
    (188/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358948179 seconds)
    (189/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.685904175 seconds)
    (190/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.364243667 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377854701 seconds)
    (192/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.334386394 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.336463503 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.354461384 seconds)
    (195/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.33450302 seconds)
    (196/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.340767447 seconds)
    (197/286) benchmarking ("sort", Int8, false)...
    done (took 2.335769804 seconds)
    (198/286) benchmarking ("sort", Bool, true)...
    done (took 2.340374656 seconds)
    (199/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392145576 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.337932455 seconds)
    (201/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.324322263 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.183846669 seconds)
    (203/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.346514767 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.323555593 seconds)
    (205/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.38655725 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.090683665 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.353747585 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.542195822 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.363102024 seconds)
    (210/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.322837576 seconds)
    (211/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.588674076 seconds)
    (212/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.325074612 seconds)
    (213/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.574124803 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.356300434 seconds)
    (215/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403693329 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.361822501 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277445327 seconds)
    (218/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.323117601 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.326233641 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.339574733 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.380306735 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.32548006 seconds)
    (223/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.407725605 seconds)
    (224/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.403417846 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.325372319 seconds)
    (226/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.509414241 seconds)
    (227/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.456927056 seconds)
    (228/286) benchmarking ("sort", Float64, true)...
    done (took 2.335322029 seconds)
    (229/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.49034101 seconds)
    (230/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.326834864 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.343764937 seconds)
    (232/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.341021134 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.921949283 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.742382011 seconds)
    (235/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.353433115 seconds)
    (236/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.953544514 seconds)
    (237/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.328896488 seconds)
    (238/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.323368923 seconds)
    (239/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.36668473 seconds)
    (240/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.365324044 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557890639 seconds)
    (242/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.544340945 seconds)
    (243/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.370946157 seconds)
    (244/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.341060589 seconds)
    (245/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.327167929 seconds)
    (246/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.379410831 seconds)
    (247/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.325556311 seconds)
    (248/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.345540253 seconds)
    (249/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.366515121 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367993951 seconds)
    (251/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.327887736 seconds)
    (252/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.494265651 seconds)
    (253/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.388226515 seconds)
    (254/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.423897374 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73458398 seconds)
    (256/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.340293294 seconds)
    (257/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.333612801 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.354632116 seconds)
    (259/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.358382437 seconds)
    (260/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327144041 seconds)
    (261/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.327157715 seconds)
    (262/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.707155848 seconds)
    (263/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.333014254 seconds)
    (264/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.34993963 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.142249397 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422857163 seconds)
    (267/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.445931915 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.348733022 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.42355178 seconds)
    (270/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.464063087 seconds)
    (271/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.205268894 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.458237123 seconds)
    (273/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.352553409 seconds)
    (274/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.858341427 seconds)
    (275/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.334378234 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.339697326 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.382190624 seconds)
    (278/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.850685392 seconds)
    (279/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.692156794 seconds)
    (280/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.327521614 seconds)
    (281/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.350370064 seconds)
    (282/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.342827399 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.365038276 seconds)
    (284/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.452433017 seconds)
    (285/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.340476939 seconds)
    (286/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.327867367 seconds)
  done (took 567.048639989 seconds)
done (took 568.294760946 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376284607 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369821351 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354184115 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.376204797 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465735563 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531187454 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365082495 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.356923644 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402330911 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403014738 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352299688 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.529827216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.355959665 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354064941 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.352611368 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372919787 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.341468411 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.37161428 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372755046 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365240933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371481643 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353380097 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405754884 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531014199 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359732927 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358951263 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.359257982 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376606064 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.468331672 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357075783 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359281641 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366626724 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.344716052 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352873663 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.352742236 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375562854 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366500636 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366881679 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359304451 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.38816625 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.346329836 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.357062054 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.360299532 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357033466 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.357700669 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361602646 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357238234 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363220943 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36944766 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371668015 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.352107789 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369244965 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360764756 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.359225944 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.367351181 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359034874 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.362271824 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377518626 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377939223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375207892 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.35047766 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362403206 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361690891 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.376091509 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363840654 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.362221107 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350435196 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.361714138 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34797115 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.359575352 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.359946718 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364020737 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.359664773 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.370660972 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.389319464 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.347760947 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.353356611 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359477258 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.363763893 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357026243 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365946706 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369406416 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367505674 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360232186 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373558548 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.535484924 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372216598 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.359358133 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.369332123 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.375775816 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366088685 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370368919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364006756 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.359930255 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.371592815 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.362582902 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362243805 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360696533 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364380951 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.372905714 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.349014295 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380355419 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35816261 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.359004002 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.359441827 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373001448 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.351133815 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.360065242 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.38258981 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.406419789 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363586564 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.358978526 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.360569354 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376270394 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372110262 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36617328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357579004 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.357506339 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.36211023 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372260965 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.36046347 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.358400063 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378493944 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.362301615 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.358524049 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.348259019 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.363461498 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376214966 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.482154332 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372053477 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.391311217 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360630242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365468335 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.39221071 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379667725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.393718862 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.364915276 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379079627 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377789956 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358941149 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372509147 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372859618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.365198078 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370366621 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359686989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.395017463 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376780064 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376992528 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384663427 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482480862 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.362265285 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.365950099 seconds)
done (took 226.033556482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422654687 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.350752438 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.456005218 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361825341 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462541217 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.465211385 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358113635 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358407101 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357427583 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.743565138 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358177935 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358265193 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.354052157 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358396206 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.441581747 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361567953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.361610206 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705696314 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360567383 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.43148668 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.357565179 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.361096512 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362606132 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.750244256 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.351652691 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.360197325 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432808757 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363226805 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.710759797 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.355225569 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.361862967 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.706548685 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453369237 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.380828648 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.374990607 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.370087853 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.469385066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381388115 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.446584977 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443353802 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.457009853 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.401853906 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.356292851 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.364251481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364634643 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364079986 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.361476491 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.389383133 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.363646319 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.363841429 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704384856 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.372054545 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.373034036 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.367166375 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.361985867 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.387200151 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359678389 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36592084 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.451553698 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366058116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426864788 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.745236082 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.745541111 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.366620998 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.364021211 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.365543175 seconds)
  done (took 106.402828803 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429308144 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.439097203 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48404618 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.38039446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417481761 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.484158204 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.382798758 seconds)
  done (took 11.292172044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373952276 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368218107 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412407283 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.412128038 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367913 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.58073166 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369225595 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376777448 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365287322 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.442271617 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367407783 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368253684 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.374052498 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.359494818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415004621 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378195529 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484249173 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36907939 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365408661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.518871401 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366465027 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.378292162 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445168579 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37966878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367872485 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.375496323 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.282083323 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366888162 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365717682 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368708076 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364636826 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.471709152 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.370040319 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.364850649 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368529065 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.525586383 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.370170943 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366620429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.368977778 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.368032444 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370520379 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370359555 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.368070316 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.366670399 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.367367848 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391213559 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368672434 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374117937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368274944 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367858756 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.443549221 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370399668 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.369116574 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.369129929 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.448506779 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380042582 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372728004 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.370059359 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370322473 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371370651 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.521589967 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41757824 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368641866 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417772421 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369994649 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371942283 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372211271 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369742046 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462640096 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.37199607 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416779191 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367725086 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.591026911 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393498904 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375092595 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372458305 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378352197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372317957 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.363819604 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377503912 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369027272 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371365051 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.378250012 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372848832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372100599 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55686457 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528862969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.371065958 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383730048 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.379891313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.371516657 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448470611 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37165622 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371006965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421886583 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486111085 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.450124809 seconds)
  done (took 141.619181947 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376201652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38139851 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375961386 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39758827 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377815983 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.375895287 seconds)
  done (took 9.565700979 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.376333517 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380567125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374615981 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.375271511 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368993878 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369663578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372393639 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372332198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375913074 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.373705514 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37479452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.376402046 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.378129594 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.374883368 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372727415 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372432196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374871337 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370669502 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37564562 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373195152 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.373695625 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.376760511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376019865 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375941516 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378550553 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.378107206 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384964246 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.378025919 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378397171 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383837822 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.397462837 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.378621602 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.377193987 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.38008307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377690776 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.378096905 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380429705 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.381747885 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375468339 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376704149 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.379386372 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380654749 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37644757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380791718 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381470449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38036776 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.385197226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387905731 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377680666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.380769916 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383586638 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380450788 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38079637 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384463389 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384388198 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400667714 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386524032 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.382730033 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.380298722 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378118849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376806271 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.375970202 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381109375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.384203129 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.377727192 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38321424 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383961414 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382102955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38010947 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.380271509 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379363658 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378849498 seconds)
  done (took 101.569406218 seconds)
done (took 371.718869556 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.831244247 seconds)
  done (took 4.116149268 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.474447806 seconds)
  done (took 3.760837784 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.078124932 seconds)
  done (took 23.372670851 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.438186895 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.485415604 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.375770312 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.376427767 seconds)
  done (took 10.959230461 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.689203715 seconds)
  done (took 3.975906386 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.373586438 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.370794232 seconds)
  done (took 6.032785769 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.718012143 seconds)
  done (took 4.001582784 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.784532886 seconds)
  done (took 4.076089772 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.396331237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.390400602 seconds)
  done (took 6.083496253 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.354807151 seconds)
  done (took 3.642889493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.654587912 seconds)
  done (took 16.939670634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.385276026 seconds)
  done (took 3.674738127 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.42691834 seconds)
  done (took 3.716096043 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.140776941 seconds)
  done (took 6.427675226 seconds)
done (took 102.066951183 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.36861942 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.371398998 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.369924256 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.37004024 seconds)
  done (took 10.765445448 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416509418 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412551831 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.41790629 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427231322 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.41953744 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.432997837 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404483797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402711414 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.425924431 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418308824 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.419183418 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.419001048 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.415332475 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.408460715 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421732364 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.417931579 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425782681 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416897201 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.421614693 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.420435048 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383102142 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428663847 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416766076 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384988018 seconds)
  done (took 35.265126771 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.904905121 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.458594999 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540782806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.436925137 seconds)
  done (took 7.629841863 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.437882701 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437748368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450704133 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492102996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.520805656 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.449333135 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.412502702 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405773708 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391272194 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440928132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514157466 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451456208 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51954181 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38461932 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570383472 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38246789 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385932908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441219713 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485458641 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.505350638 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38431079 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.438759655 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.442791234 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.450187505 seconds)
  done (took 36.085939981 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.384971304 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.399964667 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.383573971 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381585705 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389458294 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.38289772 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.384783992 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383270289 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.384017353 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.391732567 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.381774113 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.391451 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387300835 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.385914748 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.391678395 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386130641 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.3916522 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382754351 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.38362963 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390760654 seconds)
  done (took 29.032435913 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.377537859 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.376601456 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727174962 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.634600846 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.378121939 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.381773807 seconds)
  done (took 14.168187956 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458136055 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.626322611 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.382836329 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765273294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.855097201 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391861593 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.387982522 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.646317383 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990546305 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.962510998 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.450886086 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461021134 seconds)
  done (took 20.672970027 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.378942963 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382679094 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.39150747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.402200729 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.445202072 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.407933642 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39757509 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379674929 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.448646819 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.463830764 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.408930587 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440957559 seconds)
  done (took 22.242711995 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468810747 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383926777 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382240769 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451615461 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3818143 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590783294 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421759213 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113544279 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398871445 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657319127 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383477319 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493180331 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643523374 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380398152 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381874079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.379347513 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614979079 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916282246 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385631455 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378200293 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408291253 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381271517 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38817958 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634998313 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598788585 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3812689 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.643116426 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382995436 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686035021 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3974232 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398822965 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381508453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657171084 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063745516 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497076316 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610227277 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402772041 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390370326 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.393089167 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.407382436 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408483577 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410619242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395545752 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386740377 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384198396 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380368296 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145939556 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405805528 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.382687431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385713687 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660610786 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479484737 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.395007665 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38632194 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401352488 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389557837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.395222788 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491547731 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956861911 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385668375 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387399577 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.388883587 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382156257 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390372044 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053975909 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394905671 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.389394017 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394774345 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38885186 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38540201 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404820567 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387870155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408362055 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387743854 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143183913 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392282213 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39265603 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991710837 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396710951 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.388440721 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614764643 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385093597 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388680248 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.385187811 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388031814 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158319757 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400894242 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.375061431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410493579 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142941646 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634915249 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407015725 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412865018 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614601769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.374277475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388841863 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.388988259 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3914409 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411591334 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129911969 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408340736 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.392290023 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650258092 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.604743503 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397892504 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.377352326 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893606165 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413782495 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.412183106 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391773696 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.623437063 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.017695969 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411002552 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390795894 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408862702 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396277398 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199440381 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40817546 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.401186595 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396973067 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686332162 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.246689817 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398917627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461491696 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400967805 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390689185 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397880866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397501944 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390394071 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.612887169 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424504481 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.407184429 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.400642482 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392344355 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.383761621 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410360876 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.398596977 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61808359 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404331664 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671042095 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397347879 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396657083 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39259945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.615430098 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.392661029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.40379099 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657464077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399049422 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402656248 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412054738 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414713591 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494176546 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416062909 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.392336329 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656010071 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.397127848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398978443 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395256226 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397438108 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395332121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.399970604 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401931044 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035102592 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369077299 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396501404 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28246826 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402214454 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460551877 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399092826 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624476265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402865687 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396698357 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.422599342 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.390233098 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635208376 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404331686 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.392618257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477609094 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.893507272 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031178404 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410477316 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.397443202 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.389053076 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.390858641 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392284627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39343032 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393748331 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625048079 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411944386 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40081342 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027364899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404016529 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394818546 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404879026 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408409615 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.402310699 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397302972 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.393327668 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420635454 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401724962 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407045381 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545099516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410404416 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395050395 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913763754 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404367844 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398000328 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397608761 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431065903 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398860154 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234880424 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654761731 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398952519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679905085 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403724522 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418871444 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400985756 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409589863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400915511 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.421469472 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411071228 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.409107152 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398307019 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401699699 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965634707 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177678413 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97656217 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420760404 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396605631 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402803705 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143926302 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414420639 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398401329 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648764257 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161431421 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416190272 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904538712 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.414313432 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213925616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682323637 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63191249 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416939698 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.406098657 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683938054 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614741543 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436717317 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402413752 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40346854 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.384477702 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981592626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415105655 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483222476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143736383 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423241416 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404656756 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.468411349 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417181236 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844960717 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420274926 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399136037 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397949815 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405497475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237733658 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406205531 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402289674 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056118474 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413042271 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.91261306 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41752432 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634398924 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.419759963 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411771684 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.403549884 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.412861061 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.660876536 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675987506 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399733861 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415605673 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978595146 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263133137 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.409691449 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401702951 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216133666 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416367155 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70950942 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.416290602 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406436959 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413763751 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402364283 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399694568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.399092857 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410609422 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375972487 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939319757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.413532179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432475249 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420477845 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330018646 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658595567 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416689956 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025939305 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634182535 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404210604 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430055059 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415564606 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42084161 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.398364866 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404140532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639178973 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490665376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629863991 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407167489 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.39415337 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483383696 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620294447 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407762477 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419201794 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670547966 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.406736908 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.41452922 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172711246 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435488516 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42351758 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413193877 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410301206 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431733264 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480473192 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637834613 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.421593641 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.419493894 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849526583 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426238156 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412329915 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420375968 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504824953 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415895155 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411142573 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183220347 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038225332 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213795808 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.046903224 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69379519 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409980566 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412940661 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408106393 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553638298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408568651 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684965578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411878406 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.402518503 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432869659 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414457328 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410429501 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636254532 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684398035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409961777 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418736324 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412755972 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.405070604 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419053456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620501556 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955544226 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024580407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415671579 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409568658 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18402654 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695538384 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412244189 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40939213 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407473849 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.416175412 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.43555196 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.42056421 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413347434 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560191074 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69050938 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113309252 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438481708 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.43828758 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.184956807 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419544258 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672649805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407343789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.646355733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047260586 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166550119 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682698564 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481367445 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647706499 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.41475304 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558379471 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.412395348 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431679154 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411686869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262665749 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.410037536 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421555003 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053269978 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680783251 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412751645 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.428539805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432618911 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.422573769 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637514864 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197840441 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638413555 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425465523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420836019 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411712046 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048917743 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698382373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414736493 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.413601207 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.669063613 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653445236 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442545729 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.867710293 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.413196285 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029584 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.419956972 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434072357 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42173777 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178167209 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055415582 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.41759921 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962745237 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418491123 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414609419 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692386145 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.422698854 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421313923 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69361659 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.419021288 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414504526 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671481232 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.048666208 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238737093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.424280663 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428998421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.420461519 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414818629 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485559381 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416909679 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41104285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.875719756 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.437348959 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414877095 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423586705 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.413277331 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425110188 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.416280466 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416098588 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.416015803 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.414817005 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.401647924 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451549587 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514435978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004993219 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432958878 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.094193955 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.746427693 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676053983 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414408994 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.404933081 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420150601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417884822 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416912788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411351259 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416321555 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037203287 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.419319432 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.430848827 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420850677 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.636956354 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629557044 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416064974 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657185594 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419895303 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435452897 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.406000911 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421652635 seconds)
  done (took 988.109407735 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.454190999 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.467416219 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.42444115 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.453313126 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.455808537 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.462231903 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.490380313 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437346646 seconds)
  done (took 20.969678995 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.428857006 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.431201578 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.426199882 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.432027804 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.419437694 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.936317017 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.443978783 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.423996296 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.428344828 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.426962846 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.432412243 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.154486966 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.447682903 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.421090808 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.420754031 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.431683379 seconds)
  done (took 33.435504666 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.570894182 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.602233636 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.665634825 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.424338876 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.462691619 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.430303264 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.707007574 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.433928326 seconds)
  done (took 27.621933407 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43177007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.431817811 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.430868193 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433663693 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.4300124 seconds)
  done (took 8.482263583 seconds)
done (took 1255.769093634 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426680395 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.42831453 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.428937091 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.429764053 seconds)
  done (took 7.037005695 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.410927255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.402440352 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.408102027 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.420109623 seconds)
  done (took 9.966422117 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.185798993 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.100456897 seconds)
  done (took 5.61335565 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.424345836 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.186386016 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162363457 seconds)
  done (took 8.100446546 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.740533703 seconds)
  done (took 3.065036141 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.828180207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.809971778 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.626034082 seconds)
  done (took 6.591441246 seconds)
done (took 41.700703973 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420111871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.758797026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.572630107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432307188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.578754878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578705781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.224179362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424430144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42853187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427653585 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41558911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.580695346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.136589671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.762466744 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.138749182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.66908222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.583064832 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432289512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426678553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427004088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.22539066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422924449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.419776181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426503292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.594761642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.56573559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.420127907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.666518824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419723605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.451345919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567799374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420287655 seconds)
  done (took 84.346199526 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422692123 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.417184599 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.434060449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.439932613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432256979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.441873738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.437612763 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419538753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.447293327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431158125 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416393669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.431397147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417538297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416097467 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.42142385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420305341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420096401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.427088036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422263625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420142407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422466946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432301086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43297603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428616659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423629206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420648765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.44052411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.420206101 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41975285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421603583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.446067588 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.458948815 seconds)
  done (took 79.032529141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425060087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420010897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.420647261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432624655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428676482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.429544378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.422837985 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.431272348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43163946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.441497392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.431969318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418640209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423799506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.429579122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419576887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431298412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.42334993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424440393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.425034522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424319077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42207479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422984058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422631844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.421977875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.428422268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.446683718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421227284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421139918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.426695196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422156941 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.440599024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428426585 seconds)
  done (took 78.994117679 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.621733064 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.437814491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.440139355 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.390348074 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439334569 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437967301 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430050216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.700105775 seconds)
  done (took 15.231914302 seconds)
done (took 258.93092833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.429375978 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.431721749 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.644906535 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.458604184 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.426866358 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459314598 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.454615784 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.666760673 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.448357755 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.670509683 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.450326621 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.461559 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.444554485 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448039087 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.723433666 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58073007 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.356213197 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.428840948 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.798151233 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.458356192 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.721700897 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.430194966 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.738310783 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.430221397 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.437004934 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.437388085 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.429711236 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.332589578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.466858402 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.789359489 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.439431933 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.414903796 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.539750436 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.539674062 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.657936239 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.596324974 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.439067538 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521617475 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662335818 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.431505271 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.428110724 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.250064476 seconds)
  done (took 85.710580497 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.43476938 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.557619239 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.44198653 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.437822443 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.440533487 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.5598975 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.531917275 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.438132842 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.441061792 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.438360342 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.436436809 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.437341478 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.442437764 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.438273342 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.437375864 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.438864501 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.440440409 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.438729271 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.439884981 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.484144431 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.56124869 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.462786274 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.439102302 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.437782105 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.540027504 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.578487689 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.436282235 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.431069141 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.483219223 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.438981994 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.440705013 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.488104445 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.440520716 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.440225432 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.557080483 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.541933061 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.461874522 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.435979496 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.554659061 seconds)
  done (took 58.666908428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438287454 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.695997732 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.884172006 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.450633857 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.440317983 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.442169323 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.522603996 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.444285309 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.443268319 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.442773227 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.599912731 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.446254167 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47534858 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.911079222 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44285737 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440162886 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.444086804 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.441886649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708270083 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449468792 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.544344779 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443624246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.525877529 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455352476 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464235754 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440438488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444770732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.041895509 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447924311 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.606847411 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.286148018 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.523596398 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.984368092 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.900685059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.288970531 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445443126 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441079806 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.607745492 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444403841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440340405 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.525469425 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.445595339 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.896483225 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.14303602 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.46369883 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.442560333 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.065737713 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606776927 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.71098792 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452906896 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.929872233 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446112932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.444020586 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.444492519 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.705414857 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.452422875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439875862 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.075962829 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.464487917 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.525305261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444155538 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441795283 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.709661753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.440109829 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.706650035 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.443613428 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.451242806 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.462616482 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.899308327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445321028 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.163991541 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462738269 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443005535 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.607872509 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.707102372 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.089122339 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.44251864 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.718054592 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988436191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524932574 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.449180379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.032429841 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.529606395 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.447712476 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448160241 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.446823496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.445993294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.495024898 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.526846665 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.13225413 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149706472 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.103593871 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.551936251 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45880724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445226825 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.079743463 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463052148 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.448941587 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.899765623 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.167146086 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.458284316 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449936685 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.168290269 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465132511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.529170642 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.454497273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.909412551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450407515 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495566986 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.446043465 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.452334116 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.467423224 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529874247 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45080964 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.446310775 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.137171198 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633478261 seconds)
  done (took 190.626020175 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.438433033 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.435391274 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.437671711 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.435918514 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.437763605 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.452584411 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.438499003 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.440935749 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.447091901 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.437865553 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.441837141 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.443104356 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.444175598 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.443318793 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44950214 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.446619465 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.439464598 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.441048324 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.44675639 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.437309026 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.440086068 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.464263905 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.453221361 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.436426855 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.445079166 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.444472237 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.45309065 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.459333664 seconds)
  done (took 65.777840511 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.448553365 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.067628422 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.454864341 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.590125473 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.469681225 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449790773 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.588717029 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.514402896 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.451671136 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.447692529 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.446972982 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.78231605 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.453467865 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.016456392 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.658190596 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.58762488 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.017408304 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.470296399 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.453788789 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.449759049 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.592519827 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458960408 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.780103514 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.072430622 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.45811855 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.072873242 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.440347706 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.457505977 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.448954839 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.072465778 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.44940539 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.785050561 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532748474 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.51183443 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.049288867 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.012633928 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.034608339 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.60650541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.446993895 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445795953 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449712246 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440463315 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.044182445 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446995656 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.450772854 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039175823 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.464991499 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.452668526 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.458566667 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451047839 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514241355 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.51735249 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.773757168 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.046254949 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.531934386 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459887853 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.59026448 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.837523549 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.45647114 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.01879263 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.457347037 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.048544204 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.467020936 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.441816521 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450677038 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455733168 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.615708006 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.591184718 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.01788285 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.472110933 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.01920285 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.634747691 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451627811 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.451234008 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453503366 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.052057492 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.004139674 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.628795387 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.600206182 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661878078 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.438437625 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451985764 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.443014995 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.535775492 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.452577555 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.055157335 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.017347491 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467322874 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454448163 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457682089 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455678528 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.642175776 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.065846025 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.533133516 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.012764297 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.794318761 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.771931301 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450546065 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.515958552 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47339701 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.779379936 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.451041699 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518265831 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.926049905 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.783932557 seconds)
  done (took 173.268193914 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.706764552 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.465539702 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549771893 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.615576347 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.076008083 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.048486169 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.447027473 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.580502714 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.571082681 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.721633536 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.450946817 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.542617618 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.675372822 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.538597016 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.222588302 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528225301 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.558845576 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.612762239 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605719278 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.447570301 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.113606177 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.757992611 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.65096834 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.481193166 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.556216722 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.297637971 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.06028578 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.993433445 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.639875174 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.447158685 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.010697941 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.456088831 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.43424485 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.168783807 seconds)
  done (took 67.388779485 seconds)
done (took 642.774105584 seconds)
SAVING RESULT...
DONE!
