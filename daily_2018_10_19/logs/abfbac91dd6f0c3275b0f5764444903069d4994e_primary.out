cset: moving following pidspec: 18101
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23067695 seconds)
loading group "string"... done (took 0.462156368 seconds)
loading group "linalg"... done (took 7.584739115 seconds)
loading group "parallel"... done (took 0.171867562 seconds)
loading group "find"... done (took 1.155824498 seconds)
loading group "tuple"... done (took 2.087769848 seconds)
loading group "dates"... done (took 1.345129715 seconds)
loading group "micro"... done (took 0.251339787 seconds)
loading group "io"... done (took 0.653788642 seconds)
loading group "scalar"... done (took 40.956820332 seconds)
loading group "sparse"... done (took 12.487199152 seconds)
loading group "broadcast"... done (took 1.113161059 seconds)
loading group "union"... done (took 13.692629836 seconds)
loading group "simd"... done (took 4.775649652 seconds)
loading group "random"... done (took 9.650794197 seconds)
loading group "problem"... done (took 1.97286723 seconds)
loading group "array"... done (took 22.541853429 seconds)
loading group "misc"... done (took 1.421860875 seconds)
loading group "sort"... done (took 3.589774347 seconds)
loading group "collection"... done (took 19.454407862 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513447903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137085963 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132116595 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147669691 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203857197 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142310441 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159385352 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114412324 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.965974203 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.188072015 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154224253 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519276442 seconds)
done (took 5.126293845 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.239150515 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093141944 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102623951 seconds)
  done (took 0.867475783 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076957727 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144713355 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094067884 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078445083 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094500599 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078246569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094830004 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077621872 seconds)
  done (took 1.340081314 seconds)
done (took 3.210864206 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741857925 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276223881 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203575723 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465947749 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194760318 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212584699 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67748649 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34271546 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254259918 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099818202 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.146353606 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393669661 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140593126 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687584539 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092711701 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126310135 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180074761 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449099741 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081697009 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111495727 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117211655 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140938919 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131356667 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093035664 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185866432 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082129477 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19444439 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.11105531 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080342109 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.293467533 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20310547 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.684143991 seconds)
  done (took 10.908850005 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110787167 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134574592 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100361986 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140223092 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136904357 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101450951 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086055841 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097889195 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124518791 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178815953 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132295817 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122667091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097336494 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084194745 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116654356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247454683 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122648237 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105982727 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102011768 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.1058761 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1234327 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115398121 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110735656 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094472274 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169459919 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222994783 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111227455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125169243 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097621179 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112991158 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144741539 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143516119 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096764473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08229331 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174427778 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127259572 seconds)
  done (took 5.194111655 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187273097 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120201016 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167267077 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154480006 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162137368 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141401928 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160823068 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113432293 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244093799 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.104293392 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1660677 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142019449 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118524678 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080158745 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098264519 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095470603 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.662610555 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163126077 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134260904 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11471301 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087965051 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099402375 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365585879 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103451583 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07985364 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098677174 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065739355 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159621826 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099199378 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.160012855 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122596851 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081484972 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135151114 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205685177 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11438884 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135144434 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096058428 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079661954 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177866957 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105056704 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079709894 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122055544 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134614279 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136643692 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097815354 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081122677 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.206375848 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097374611 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076289123 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115016991 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978389719 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181996672 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104373004 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097508341 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327145587 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100663802 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100312498 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078465371 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291357441 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187309312 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099795338 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080927701 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097233862 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081567838 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404217993 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080527013 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.784063027 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081567101 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105890354 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081954998 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096740378 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103857947 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08714523 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116461986 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079404359 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099528305 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07831325 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096518575 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080886665 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108220401 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093736263 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084414965 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097874592 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148623496 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096207532 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100210025 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131288656 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102470141 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080331547 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134741766 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094760495 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081268357 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098319847 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132603202 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081548213 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108487596 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098626578 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126700812 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096718891 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.194348179 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080900216 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128327465 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099076579 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114557653 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111559947 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099388757 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084529073 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09583017 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07741488 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166523951 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082106337 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098047976 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081015174 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111072444 seconds)
  done (took 22.776731229 seconds)
done (took 39.557126099 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.332042313 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103467599 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102621967 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102212802 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100066624 seconds)
  done (took 1.489619639 seconds)
done (took 2.214759239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287647198 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17255244 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095498537 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167083166 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093061009 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174804262 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159718444 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111496167 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219453615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077121744 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162765971 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093712707 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076582361 seconds)
  done (took 2.63974422 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094600909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116189073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082332495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111445739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07692123 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111551343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092254035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116962586 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109631151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084072135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092956295 seconds)
  done (took 1.813220144 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093837129 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112776488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08160379 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110067996 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076879693 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110229653 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092982826 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11558358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109069654 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085180483 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092823581 seconds)
  done (took 1.802391913 seconds)
done (took 6.968211956 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090038064 seconds)
  done (took 0.809024892 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925766166 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.94716042 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113241962 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.14949127 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300619468 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193519734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482658197 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128261837 seconds)
  done (took 11.169649498 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.144437842 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086848775 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101234892 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085314312 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101473145 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086369031 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101792035 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098433785 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083749958 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101584341 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08536501 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099448648 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103385448 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082604264 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099593454 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083907279 seconds)
  done (took 2.333174206 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119949778 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117546077 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106208228 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108652798 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087104954 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10480003 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105749251 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088689517 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101156209 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103808606 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091047791 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105072952 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10433201 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079517781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10569248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109008165 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085552816 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106487671 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106159706 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090545662 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106371088 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095366326 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08757019 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106302865 seconds)
  done (took 3.252920246 seconds)
done (took 18.288873675 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160094831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108339367 seconds)
  done (took 0.995329407 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094859337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112687123 seconds)
  done (took 0.935821389 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097380688 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094836118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122543903 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110556698 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079609701 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095639087 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120247878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080174875 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096437962 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080028109 seconds)
  done (took 1.709976167 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082818377 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110322322 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102069349 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09439192 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105116222 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094823523 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088184884 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098687886 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109528442 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077704415 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101845889 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114518112 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08603774 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115971468 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104700298 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083648442 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10185377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099032989 seconds)
  done (took 2.510061139 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079377129 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096574194 seconds)
  done (took 0.911401134 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081812136 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0942535 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080997975 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097575438 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09385242 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076837507 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094172149 seconds)
  done (took 1.353716802 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470566738 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135565196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251672434 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084709975 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119972571 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303220253 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097765122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084545309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102429358 seconds)
  done (took 2.441676725 seconds)
done (took 11.589615894 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092828527 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117667468 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113103794 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466378384 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106557693 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097318095 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159852354 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253771969 seconds)
done (took 2.147943656 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148227549 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325112127 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113099101 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066774949 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094850489 seconds)
  done (took 1.34017307 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080189852 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099966642 seconds)
  done (took 0.918077221 seconds)
done (took 3.1478165 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080402718 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096853329 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.112145888 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096484429 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07974506 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096066311 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078212312 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095437712 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080182813 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096276404 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096617223 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080472689 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096600681 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080440843 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093904712 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077572 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097009577 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077154415 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094573809 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07938978 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094435536 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079723194 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095057999 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077248689 seconds)
  done (took 2.904668853 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099626333 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098824418 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103460163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085595775 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101702809 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086268363 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101759438 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097160491 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085523794 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099371988 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101007454 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084064109 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099468825 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084593918 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099093915 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10049969 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085523929 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097947011 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082175528 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100996435 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102272321 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081476348 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101138208 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103256394 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084477293 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100599651 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083261425 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097343186 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102246295 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083952941 seconds)
  done (took 3.577496388 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084232857 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093761501 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078057749 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101564307 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078317969 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096908568 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077399018 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095559857 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07895426 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095127553 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079403583 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094221008 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077576731 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095785735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079927561 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098825194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10778404 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078667129 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094796235 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078432622 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098178459 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078926214 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094532208 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077766812 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094564647 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077947087 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095388737 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078268917 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096336579 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077987892 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097982571 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081734596 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095050022 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085169289 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098000516 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078034332 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098660052 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094967795 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078484527 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094351607 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078360112 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095250021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077898168 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101820749 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078646206 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097799815 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078081817 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09658587 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078605051 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098210786 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078576759 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094671381 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079322508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096107808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098460357 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077642307 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096088993 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077729323 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096450654 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078519688 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094378487 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077314719 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09764235 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078832553 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11054792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084900388 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095773603 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079614329 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095438881 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080871116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096978041 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109422251 seconds)
  done (took 7.140960886 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083494527 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105836727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080184515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097824955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075641379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096348514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098465833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078682091 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097660749 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085866274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095988252 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080064211 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096877475 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107730177 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079365184 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097723115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084695839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093214833 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079254142 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098413908 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079891015 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098305911 seconds)
  done (took 2.741370575 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208785254 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105126265 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141954601 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108640274 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083934279 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106985901 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101767286 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08655089 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103183484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083763242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100660942 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102715291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082838525 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099987495 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100560863 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084803144 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102081046 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084416451 seconds)
  done (took 2.643230217 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092885131 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098714414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102177957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097924732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099255066 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083725718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103674422 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107727833 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083621562 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098114501 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090875882 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100144891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101338093 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081197314 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100492823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080948457 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100613509 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081767685 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108127922 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104962219 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103612044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091884971 seconds)
  done (took 2.871503699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096918824 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100618853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11729152 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083735481 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094580701 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079406997 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106508636 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080749324 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10725578 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100626725 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08115731 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097375232 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088418246 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097199765 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103463535 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081431042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101084803 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081795016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100588753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0774189 seconds)
  done (took 2.636685186 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103069939 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100007869 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099544834 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093223831 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10004658 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082433393 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109796595 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099923193 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083434359 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124900477 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100128174 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083446342 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109749139 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105886228 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100649263 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091907643 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109031752 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109788906 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082667679 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099948835 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125111816 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082731573 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109258882 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.210510842 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082623605 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100854423 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100168898 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088830549 seconds)
  done (took 3.650516254 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082062186 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099127497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07898491 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096848013 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079145681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097086588 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07857386 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.0967488 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081226606 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096528415 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08104885 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098629351 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080542766 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098572551 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081762651 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098539082 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083780746 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096468471 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079634505 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096316442 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081234078 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098119852 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081147343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095653725 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078819575 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099104007 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078579218 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095796174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081064649 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09538543 seconds)
  done (took 3.42953241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090859522 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106079654 seconds)
  done (took 0.960486142 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079173828 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115032365 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078128011 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102383539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085973157 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099656334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108615053 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086747064 seconds)
  done (took 1.518694831 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096391249 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110464292 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08336484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112044339 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109239844 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095312722 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159574216 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101191224 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087907811 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096940571 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112422737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081018777 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104666177 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081402529 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10527267 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08835817 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097291834 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088229022 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102376857 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097940206 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083931675 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110260858 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084719391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096248292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08263189 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109821257 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109132868 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083115351 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102524137 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108337206 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087581859 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093180773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082158591 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10108766 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080044366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108869759 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112407941 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084526144 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107537406 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083499727 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112278825 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094800456 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087492421 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104969451 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091840399 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100631938 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083922994 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094827586 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096769945 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084856839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095394209 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082395769 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094969214 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088709926 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103819132 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112238481 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080279498 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101224296 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084662827 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102489909 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087749379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101661489 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084806679 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098882469 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106733751 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085284244 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107370758 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077028314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094050946 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079580497 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10899541 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123024145 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090395981 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10060531 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082811863 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098332203 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103284405 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083674207 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107080806 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090480606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099995202 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106712344 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090331135 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099706526 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08567691 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107894649 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098786075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083598568 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096996011 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096620857 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098318319 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07975553 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097316359 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108546138 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085495595 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100417149 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080238525 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107517649 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078603399 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101222106 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083918702 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101440754 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109920588 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089206688 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106697317 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107278533 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089300996 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10101708 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086005356 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096852783 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084642688 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102971533 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107411169 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076575401 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10332621 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0840114 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10224315 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089860096 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099237928 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082891679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107146311 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10711314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080660765 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097381432 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084927753 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100047566 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086130172 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106286823 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098520864 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077240952 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095126991 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086980602 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100621373 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086557782 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106002632 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103152937 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076891881 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098422819 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087163357 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10739909 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099455501 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083017447 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104754546 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082643118 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099677869 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087981105 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102456942 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081537815 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104119006 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101041043 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077959585 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104725033 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085653527 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099081841 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085926322 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104020134 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102954236 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083672344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099615721 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088303839 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101800821 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081242641 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1000855 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099276712 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091979347 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.1026677 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077937359 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097663133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090508545 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097342278 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09931009 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081613683 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102706736 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083304918 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098116818 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082809947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101851912 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113451787 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087207495 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102357835 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088575538 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110595679 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100110141 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084167643 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099806433 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08423571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101421383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090049929 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105684338 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106894334 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085760336 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09693823 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089498129 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108059266 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081761712 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098590262 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081580385 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10431618 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107124436 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08601962 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102072796 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080458008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101379856 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104964169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085431177 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100835661 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081415184 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105204102 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081551331 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107553541 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101877062 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092009528 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104332604 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079180417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105713573 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098545915 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087841887 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096036058 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079920556 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099074733 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084132682 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100179983 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085321369 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094969737 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107888575 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09063955 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10060985 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082123633 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101285958 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09226382 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102567538 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104323452 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086085783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105710513 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095476218 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099907535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085425769 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110063379 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100472385 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077063778 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106167321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081263183 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0996137 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081598983 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099607656 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085583266 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111032883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105689901 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076377338 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103724514 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081078406 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099869112 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078903385 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107110173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10489769 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084392575 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109642266 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084607243 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102831296 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104924377 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083238451 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102344325 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08435241 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104656035 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083862513 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103084852 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082012827 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102596884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099715754 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081403944 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102225484 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084175704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101807493 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088782446 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102966958 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083897919 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103823644 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102365926 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083847857 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101381443 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082497333 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105050743 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083945889 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102081495 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085643687 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096381638 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108396711 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083165641 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109833981 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083225886 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098219722 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088597147 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104552375 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106287459 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085102459 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102724239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08444395 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100571687 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085698659 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109693918 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098694445 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091831874 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107246313 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084012236 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10507139 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082452566 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102779704 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.10044654 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084940582 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102379939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083342732 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100724043 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088159166 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104629347 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082449533 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104369859 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102703891 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083770128 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103463161 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077615751 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100799657 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083609242 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102378553 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109127877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08478122 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103980867 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081396793 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103561683 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082703345 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098429863 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11028595 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09286829 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102158029 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091898934 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10065236 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102783848 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092405865 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095033081 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081424544 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099384116 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080912581 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109690269 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084170651 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110192517 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100703069 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082306081 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098213829 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084520982 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100564892 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078483438 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098971497 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086080535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104502209 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081931666 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102416758 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104308167 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084588626 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109336986 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082931433 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103869338 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08384239 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098322479 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08189508 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100752104 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105117587 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083393615 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099047413 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08035271 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101448981 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085005094 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110183099 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0835142 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103756123 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109099755 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08296855 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105139994 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087967728 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096313125 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086759387 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101882024 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083078263 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101894424 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105477174 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086588339 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103617651 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090293041 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101175957 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084799992 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102164256 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100098296 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08352488 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101391826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084171331 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101462098 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084908584 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110179366 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080985737 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104501803 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101615773 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083644399 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106835706 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084323603 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103902713 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110243716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086541777 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102863104 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089457724 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105763355 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087703303 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104759264 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103148448 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089997649 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100310856 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092022768 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102841799 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084727404 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103556667 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081303912 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101836227 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101124751 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082419145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107130713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084321415 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101410099 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08228922 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099868373 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084670799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105784941 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109785313 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085549042 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10531213 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078995215 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0989243 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084932365 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099745073 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103381687 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086284775 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107997349 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086196234 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102850602 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083064414 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109180576 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108191677 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089008698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099854647 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088194148 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10350614 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08638038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10401394 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084312121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105267261 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107235722 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085320277 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102796546 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092479048 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106403228 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104620048 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085085452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102647603 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083389895 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097784912 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084828001 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104547422 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090507335 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104764712 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102952247 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0934768 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101370963 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083957894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106353854 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083547242 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109024289 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097804042 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084409207 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104295935 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085359304 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097666854 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082934323 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100537539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086426871 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101500788 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079100228 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112833456 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109389779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08661277 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101146232 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082269161 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097032436 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078947402 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102251287 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103415635 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085199458 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111907667 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083395492 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101384379 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078695275 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10316626 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087166757 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106482806 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099194478 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.07949449 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101542627 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085827913 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109742505 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083111159 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102421941 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086645618 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105639787 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100605084 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087415854 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09903499 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08803917 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112821646 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085092196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1030991 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107845272 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091660329 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104032351 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079005827 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104454862 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085453678 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103262794 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104033506 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08524141 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116928655 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086940007 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102871489 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082262983 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106048823 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101524058 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09090335 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104148061 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08547795 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107102788 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086833326 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112611475 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104703546 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089463251 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105050197 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08600256 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102300946 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102430946 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081946541 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100225906 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085438884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103803819 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088562178 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112382626 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102579115 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092950719 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110786139 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08767888 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099351908 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083300396 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102403213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078482454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10407239 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10053107 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081941507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100359382 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083014411 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103022067 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089722569 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104829965 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084678467 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103110039 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097534894 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085901958 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105447837 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085785431 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099610535 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084640611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103825002 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089860907 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109548101 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103066511 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085760181 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105044329 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085534243 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098193503 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089838523 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101755951 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086157671 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102482513 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10290255 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085443773 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106398221 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090826116 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104872071 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086180639 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115649574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106412899 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081483391 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100221222 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090301902 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101628366 seconds)
  done (took 57.720742321 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145845936 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081131628 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098635646 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079662528 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113553732 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099012778 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08034723 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100183086 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081137899 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102034442 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079256458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098848528 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109357747 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123490268 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093701525 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104471188 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098292837 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081561961 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098015806 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080887317 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10997657 seconds)
  done (took 2.87316421 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105252531 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117413121 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115025574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11899699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089351819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116310959 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114183836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115847305 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099687784 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111910112 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120019539 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115788722 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092074734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111416235 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109953462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092916273 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118920585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109205872 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115662257 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094946778 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113514078 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114379193 seconds)
  done (took 3.227018436 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084083352 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101997328 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085097136 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09797424 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.0839834 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09770367 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088104837 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100619668 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086869699 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101993067 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081418005 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102312944 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10454489 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079061227 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101664694 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081528493 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151087386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107285817 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08299716 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105140632 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09806979 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085523445 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099041985 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079621881 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102016735 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088359263 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104366404 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08200918 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102757257 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082146205 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103504436 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080866568 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105376049 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103219716 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083063719 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101259723 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083641157 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102950552 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079564168 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100658892 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085236501 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099638351 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084828361 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104614873 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081846608 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101531059 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084840046 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103220726 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09771608 seconds)
  done (took 5.453310788 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106098235 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160882341 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086340746 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142938684 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121355753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112727226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088001413 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142296039 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102703488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082605747 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124625127 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120518543 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10415799 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090387006 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111264513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1032049 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086690054 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102940449 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108500137 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083968476 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10851819 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090677713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120173115 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119170769 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10877771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083428581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104031776 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109182927 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098064152 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110717449 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109303724 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090074714 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121831417 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104953457 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084061327 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106415727 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122159385 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104364654 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08729593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102033446 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087188629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109484985 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110194429 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102883706 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104732154 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10944309 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086151721 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102280082 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117363047 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087163369 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114270628 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120397216 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108460343 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086598647 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109754235 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121271676 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085350206 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103094074 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08844492 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118292612 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10192435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08947252 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119612792 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106347939 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113066488 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100444927 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109885406 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108694449 seconds)
  done (took 8.144645445 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095259935 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111650142 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120821502 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12165648 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092381778 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111554231 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112138918 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091377604 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112267495 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117269084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112409202 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135311476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087330315 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115372454 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111463827 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092642353 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112212428 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111754349 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091209019 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111775107 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111043316 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120999539 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092018154 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120780252 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143069543 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106846198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092094091 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11222573 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121239026 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111147917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124002375 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091955516 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111983458 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122008306 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123312902 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091923096 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104152988 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11134432 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090952103 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111674315 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106193429 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121703606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091638404 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105455938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110946007 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091688083 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120999332 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124412357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114859298 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098234939 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112551434 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122030139 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111656866 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091883734 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121645011 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148152685 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122205031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122053802 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110792502 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121377321 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102317484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129841351 seconds)
  done (took 7.709498524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108622428 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116087207 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11918422 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100176002 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082873153 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109315579 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083327297 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102891364 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114998323 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095219678 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118088867 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109546092 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111695107 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097679004 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109682685 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113551912 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089667289 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110049804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114791874 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109776332 seconds)
  done (took 2.944414063 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093311374 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124650323 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08593635 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112777696 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108105161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092138679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107783536 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108048806 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086344148 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108379812 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096634422 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118201875 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105041901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092723861 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116760467 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112472555 seconds)
  done (took 2.49655936 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096959962 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117717089 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120440273 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085121797 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104941065 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081257597 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106203676 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101030116 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081567426 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122298896 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08490598 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108994365 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105820147 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0833266 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10208891 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08886223 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101739555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082565793 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106241136 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121345208 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097277079 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10433895 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10539733 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088183771 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106001477 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090127482 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106514626 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10267294 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084354142 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105697163 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085185065 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113889818 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101816587 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083871717 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104049087 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082427553 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104617699 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085978278 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108945441 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105268546 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083217445 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105393828 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085518298 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10741931 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080828807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106993049 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101014669 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09179791 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10405731 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084986009 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105326222 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107731079 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08595525 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.1161681 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089466807 seconds)
  done (took 6.257408551 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099849397 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109090962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080974924 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103429834 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088795866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108977981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109451104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088903941 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106994829 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083333971 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107463393 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089510823 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107719956 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110218786 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087643089 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109679532 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081132744 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108014012 seconds)
  done (took 2.619459482 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090756237 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105116798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092503651 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105879661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085615099 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108912196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080945777 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105201857 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103739812 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086205448 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105473982 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087805164 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103949367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088379604 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105290026 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085326566 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108300088 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103859927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086226694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100832279 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088652735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104192466 seconds)
  done (took 2.969108641 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118460155 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125816133 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092074403 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22967301 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104312099 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132533393 seconds)
  done (took 1.640632939 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109635816 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122213303 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10651603 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10722105 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115770613 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107432467 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088334118 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107690729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118297887 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102333103 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108997522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118870522 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118500557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098769243 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115589621 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115196461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107588679 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088333134 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106679263 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129347228 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089004721 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120091357 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108459369 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087845652 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108179352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117792438 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117818274 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121713325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088467197 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118462354 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115137149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08952516 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118954015 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123279228 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109251011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099625435 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108396852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1300024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114897392 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097382373 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109839333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115319584 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097665813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114484435 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119220169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107899299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094547933 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109090697 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108477088 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137471913 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095803622 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118240904 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11608659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119569572 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119377245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135053233 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102523472 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118710817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116656901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123759295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118224209 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094285576 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118352935 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124084814 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114961208 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118706798 seconds)
  done (took 8.187268155 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104497526 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126408348 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109131892 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124004988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098164697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108438733 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10843479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087924165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108322336 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107973671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153427096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088940467 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119048305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118366009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108951211 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08908202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108763245 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118193557 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087714831 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136359923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109407395 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118978498 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119025633 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097413062 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122931821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115823854 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108508672 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089159227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109024374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108361241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09465785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110017706 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118189449 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086157814 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118829107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109175038 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088047253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116309323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109120712 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115615831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098601842 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109710405 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109349066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12384195 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089127295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108617398 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087254969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109872647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106873342 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123664527 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104109303 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123201285 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118448001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10991908 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089124037 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108713111 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109078238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089137087 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116161933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118065993 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11007674 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137464443 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089344934 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108567986 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118649224 seconds)
  done (took 8.068043826 seconds)
done (took 155.123707863 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098448378 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137085065 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096844934 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168574875 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107099328 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119161875 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139029397 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097789216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107453181 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08574597 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10668178 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087941432 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171628548 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086250812 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108156438 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108970474 seconds)
  done (took 2.670158411 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20074551 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254487409 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10355093 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105972508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089677159 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111017778 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1060676 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092102479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109732684 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085428337 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109349633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087178409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105867108 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086199058 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11025954 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088684889 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106712937 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088376962 seconds)
  done (took 2.890214385 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114060167 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1591006 seconds)
  done (took 1.13084058 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119434252 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180860584 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296014154 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155480128 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118908371 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128883902 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156913729 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130853202 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197229591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123996345 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124032911 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09796434 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140594946 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116082114 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09387674 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118920501 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14255596 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093226284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116532942 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116764238 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117698846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106821107 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115942181 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093994688 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18205896 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120392652 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085632847 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106767678 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116114648 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09487403 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11352568 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125246715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099785106 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1765681 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103075657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17822224 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09885622 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112239963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115263801 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092316755 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119581892 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119366326 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1052243 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119253554 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087274566 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119113483 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106739296 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086148916 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115706709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098862077 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115914115 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113882802 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155714841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119134927 seconds)
  done (took 7.557045587 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793504194 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164457664 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09080884 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886537335 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139649153 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105049949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784989765 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134574164 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235045537 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761187306 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13531129 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122752836 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229156732 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237412537 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929778973 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309684577 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674151723 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10323981 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149908309 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15507905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120686748 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138862298 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130847817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45176179 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096699786 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113904433 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117873402 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100039472 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161481207 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127111723 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115308948 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180403744 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267043124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186882721 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116684761 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089642242 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11243049 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170908808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269172837 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216792658 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182350225 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087180097 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112543144 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123014413 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111784451 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109377141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164789849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197138108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173631919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093133418 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122834381 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120549928 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121633871 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167796791 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121465443 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288790216 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.324163381 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112910099 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121306525 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106286026 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264875703 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122861379 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226360818 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117959287 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215061795 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111592874 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779906843 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.193002852 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09037639 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119077924 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119734092 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09539943 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121975757 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171665213 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393693263 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125322104 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093367334 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113145745 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20705824 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125902456 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111960688 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164943021 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1173843 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099818006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127094895 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12357391 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172134728 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232885845 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125135125 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120614415 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09359945 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126298709 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117387551 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213424499 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220471672 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164961791 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211055637 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125419487 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187453051 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169243022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09849174 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196117444 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09882106 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126244586 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12333394 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217836458 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146871306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123451863 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095602959 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120640088 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150151091 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127494658 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098208894 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192999767 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487436622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169912764 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10941273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128362362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098929941 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184071287 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096658846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26346928 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121977122 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172106149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120817244 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08778368 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121215115 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165566346 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123652733 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120972906 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102475551 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120018201 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231929121 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220881405 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124494998 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224867218 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184877474 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119977953 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174925834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122865586 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168378002 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121326126 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122930476 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095576777 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794331451 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124574141 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099525743 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117412578 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197272232 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112354919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103056216 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126269872 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108981121 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755391771 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129038695 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122064122 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10282877 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119264855 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121825037 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117897077 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095211297 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163877458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232337753 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122764086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120291603 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103931516 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183845014 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095690758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12636848 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125000408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126398092 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1008797 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116573145 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124320435 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172095844 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163587399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22406367 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597111588 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090723746 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125671068 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231657391 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089789086 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289275762 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121378676 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22721703 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166469795 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122941641 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320859143 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16787227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196806004 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127434042 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174812466 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08779428 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119513785 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165200915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113150784 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11851148 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164845945 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126434581 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102148489 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964963859 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113625098 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227828201 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109245265 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17413177 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116360036 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100272538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294021132 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112284449 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10838784 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187288595 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094004583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125449668 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738511916 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104753248 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123188666 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118528374 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224805532 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166453458 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119489633 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098982861 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122843499 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163892076 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207420765 seconds)
  done (took 44.324889651 seconds)
done (took 59.420729541 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2775338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213921984 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260340925 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174010608 seconds)
  done (took 1.879440884 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171139708 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14918032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119987048 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108064535 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149941103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085975116 seconds)
  done (took 1.664107753 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353619726 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272123801 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24080984 seconds)
  done (took 1.751923581 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289584249 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252736251 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356739869 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421290624 seconds)
  done (took 2.324542119 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210152671 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13257842 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111359532 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104055508 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197574351 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251175639 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142839176 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203404734 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123153451 seconds)
  done (took 2.408393434 seconds)
done (took 10.911548141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135618079 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.125343706 seconds)
    (3/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.281235363 seconds)
    (4/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.252946838 seconds)
    (5/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.233173135 seconds)
    (6/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234923763 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.217306963 seconds)
    (8/286) benchmarking ("sort", Float64, true)...
    done (took 0.231741435 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102947712 seconds)
    (10/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200988687 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123360995 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094579236 seconds)
    (13/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.234561368 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.221885911 seconds)
    (15/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202334303 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127087098 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.170461552 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.105756236 seconds)
    (19/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.199103201 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139664621 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134836869 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.202243807 seconds)
    (23/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.205422517 seconds)
    (24/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212618891 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.2257928 seconds)
    (26/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118866473 seconds)
    (27/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.131671184 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.127050032 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11704354 seconds)
    (30/286) benchmarking ("sort", Float64, false)...
    done (took 0.147711809 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117787239 seconds)
    (32/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.09582136 seconds)
    (33/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121977497 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17471909 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086618077 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.188079931 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135373049 seconds)
    (38/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094467127 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145885668 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139496905 seconds)
    (41/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.217398529 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094980618 seconds)
    (43/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.148164212 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094773903 seconds)
    (45/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122022863 seconds)
    (46/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.203967717 seconds)
    (47/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.188098548 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094154866 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150946804 seconds)
    (50/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120403544 seconds)
    (51/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09162918 seconds)
    (52/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.213294427 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130838449 seconds)
    (54/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118265713 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111938221 seconds)
    (56/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093211741 seconds)
    (57/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109961533 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173744686 seconds)
    (59/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169644269 seconds)
    (60/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092890221 seconds)
    (61/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066682475 seconds)
    (62/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.239648504 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138526632 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.175608658 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140452469 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124963425 seconds)
    (67/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.118817613 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133803532 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167688701 seconds)
    (70/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.192835276 seconds)
    (71/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067151393 seconds)
    (72/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070096755 seconds)
    (73/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121267698 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126590345 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19927032 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169092317 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172909245 seconds)
    (78/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.0673442 seconds)
    (79/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.18500794 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.088275942 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111001458 seconds)
    (82/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125629133 seconds)
    (83/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.077829308 seconds)
    (84/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110487162 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099553332 seconds)
    (86/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.127942712 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086996641 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185984878 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115277477 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093639187 seconds)
    (91/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.178241405 seconds)
    (92/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077599572 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089475162 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.146592944 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123040827 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067584837 seconds)
    (97/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090528953 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11026007 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.1108141 seconds)
    (100/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120688911 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092994251 seconds)
    (102/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125021271 seconds)
    (103/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.131835374 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131524728 seconds)
    (105/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091237867 seconds)
    (106/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090640683 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 0.190728659 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096266288 seconds)
    (109/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174246821 seconds)
    (110/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118715144 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132796394 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06774696 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138636546 seconds)
    (114/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095427499 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120255009 seconds)
    (116/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068077531 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116478779 seconds)
    (118/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.095210172 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118364985 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160204002 seconds)
    (121/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089685198 seconds)
    (122/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06725739 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120457142 seconds)
    (124/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.120246783 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118975104 seconds)
    (126/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102859373 seconds)
    (127/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.152030197 seconds)
    (128/286) benchmarking ("sort", Float32, false)...
    done (took 0.175028465 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086774852 seconds)
    (130/286) benchmarking ("sort", Float32, true)...
    done (took 0.233860314 seconds)
    (131/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.146011637 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136999241 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.120020618 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110649303 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094501817 seconds)
    (136/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090943715 seconds)
    (137/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086888094 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090122917 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.16900928 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109661681 seconds)
    (141/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087792398 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121427265 seconds)
    (143/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.142063522 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15252089 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110491623 seconds)
    (146/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084806335 seconds)
    (147/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117318289 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088085446 seconds)
    (149/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090873888 seconds)
    (150/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093946709 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110613501 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.08622077 seconds)
    (153/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184642572 seconds)
    (154/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192748763 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093932849 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106306733 seconds)
    (157/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102714246 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120537632 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112404017 seconds)
    (160/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118459783 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120841694 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090912251 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119833897 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09366043 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11004925 seconds)
    (166/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099060267 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119937542 seconds)
    (168/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.128778781 seconds)
    (169/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141345722 seconds)
    (170/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093673487 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185987891 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135479888 seconds)
    (173/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07997158 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093076565 seconds)
    (175/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095434766 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187901338 seconds)
    (177/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067850662 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.224619061 seconds)
    (179/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102952214 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086959833 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091409648 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.135238668 seconds)
    (183/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091943976 seconds)
    (184/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075997738 seconds)
    (185/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088184619 seconds)
    (186/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114416188 seconds)
    (187/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067950971 seconds)
    (188/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090005275 seconds)
    (189/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093038627 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11947301 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094899767 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110528865 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086302658 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110407638 seconds)
    (195/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086913674 seconds)
    (196/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116836745 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076282438 seconds)
    (198/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090565413 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077009235 seconds)
    (200/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089507379 seconds)
    (201/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.154631516 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124307216 seconds)
    (203/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095447304 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117145794 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088687654 seconds)
    (206/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12335459 seconds)
    (207/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067020244 seconds)
    (208/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091413076 seconds)
    (209/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068042518 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088570427 seconds)
    (211/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.150235089 seconds)
    (212/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165761973 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086421105 seconds)
    (214/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092047508 seconds)
    (215/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087785398 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11837681 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.318202949 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109849481 seconds)
    (219/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068813754 seconds)
    (220/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087685124 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102242314 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068496306 seconds)
    (223/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065822963 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090955663 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133784038 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09056908 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066968997 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109925002 seconds)
    (229/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067483632 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110673679 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086475908 seconds)
    (232/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.091034181 seconds)
    (233/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086352246 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091062701 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066453986 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093746975 seconds)
    (237/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101729667 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095832883 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112497046 seconds)
    (240/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067195699 seconds)
    (241/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219611378 seconds)
    (242/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090951502 seconds)
    (243/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067796599 seconds)
    (244/286) benchmarking ("sort", Int8, false)...
    done (took 0.190462774 seconds)
    (245/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076357487 seconds)
    (246/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091800931 seconds)
    (247/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067177509 seconds)
    (248/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119201255 seconds)
    (249/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112841856 seconds)
    (250/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112396053 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068006314 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110360963 seconds)
    (253/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087859067 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189104906 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135806673 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.109802656 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111154407 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086854403 seconds)
    (259/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.231619746 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124398607 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118793144 seconds)
    (262/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067962357 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08532181 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109685856 seconds)
    (265/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085917094 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118694481 seconds)
    (267/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111115999 seconds)
    (268/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068191119 seconds)
    (269/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067589917 seconds)
    (270/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091997543 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093381873 seconds)
    (272/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067247398 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10971076 seconds)
    (274/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068519946 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115883051 seconds)
    (276/286) benchmarking ("sort", Int8, true)...
    done (took 0.22163773 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182118835 seconds)
    (278/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075921196 seconds)
    (279/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067255206 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113381351 seconds)
    (281/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094411462 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116944478 seconds)
    (283/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105968374 seconds)
    (284/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162595349 seconds)
    (285/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066585367 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1359452 seconds)
  done (took 36.183037237 seconds)
done (took 37.073419146 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100166264 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148961633 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096952582 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13545283 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12451845 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091212235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118737626 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098207768 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12496838 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125233772 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098416303 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09364935 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098096078 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121052413 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096595474 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138539237 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123645196 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094377899 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119438335 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08674193 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119168354 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086673062 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111843371 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070377287 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121953935 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094873099 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116160442 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120566443 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086514529 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111122479 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092964035 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11771535 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086558611 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125140144 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093575968 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11894618 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097737456 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120898273 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111988606 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08663109 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119044244 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086903546 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11700734 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094947022 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115769373 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093073722 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11935932 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100015323 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140634676 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116146772 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095602374 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122128996 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096238332 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118407696 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091050657 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11926662 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09225616 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140743703 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120257214 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091576971 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118798031 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09440164 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116141607 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095183589 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119166928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120968024 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09849626 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117248991 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096938441 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116965657 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087995543 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119660805 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090297906 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110784264 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09632143 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121577926 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110397139 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092010171 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117891099 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092769569 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110041392 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089952373 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112197011 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093045775 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112937258 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069694513 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114410434 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09324822 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110975258 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097234142 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117691505 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093693472 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113228738 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099530011 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110966576 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092739306 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111381908 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087810521 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113079948 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090920924 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11161726 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090542433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120522182 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11331102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093107186 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124660683 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087236724 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118175963 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087096753 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111301654 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101975544 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121680834 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087970294 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117019469 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086515221 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119127641 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087814289 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111677772 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11169126 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087684072 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117513966 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087113456 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11420351 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093731916 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125495931 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086853651 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114893376 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090078165 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111345608 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092852246 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111589882 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087977734 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113615863 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078000976 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114669203 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088475919 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118162299 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090745827 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120289371 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089367491 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120526376 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092457462 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117089887 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116216093 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086089261 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074434101 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117318444 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090120631 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114188565 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087559153 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113588279 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087154532 seconds)
done (took 16.984556552 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087769948 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185181438 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152003281 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143168223 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107659043 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112271688 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122799382 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119053749 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114249094 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143323199 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110934032 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133122952 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148729161 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08699165 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112624244 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092268358 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113693027 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102581323 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146539698 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133301483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165440228 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086930543 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148923901 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135073767 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122520229 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105525138 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112642427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09186221 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115983834 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1126729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133365624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115998324 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088482971 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133959613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105157828 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121003664 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087991356 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119559878 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088499653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112327617 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141680704 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134308224 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092848821 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118512573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09265873 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114817133 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090172147 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121199176 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098992891 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11613443 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127169128 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157103302 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092082754 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122343433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087769245 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122621042 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122018253 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09064382 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112118631 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090692292 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112141166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09158734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128261081 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142990675 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092231787 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122010933 seconds)
  done (took 8.645270105 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105226731 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140768762 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105216503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131990487 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112127341 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089040435 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113546208 seconds)
  done (took 1.744993408 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088783533 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135350738 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111925914 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136472925 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133358314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112276997 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124003103 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089231783 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133998252 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089853488 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135661152 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151828112 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090628433 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122173885 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138689808 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088793965 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137896369 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089891192 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117309966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138355119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091804457 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136162356 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091396273 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114021767 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103058755 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115410318 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164101672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094697473 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114750154 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093036012 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112546289 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151649065 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104023507 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125297056 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090075702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130310372 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129161394 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086803725 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125743209 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094941301 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128953369 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090303889 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116080707 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088342915 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119243533 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099819484 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118241163 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132759974 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092417148 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13450896 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09047404 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127973709 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088989537 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117971679 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091070489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119796999 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098796206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115335272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13434878 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091130463 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131443463 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106399516 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129095701 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131101233 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093333621 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129383437 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104413764 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117351417 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090830373 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118860695 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10605402 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112543344 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11603511 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100513499 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117519722 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113247974 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138661831 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091637031 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125846382 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114608244 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090695078 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11531752 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113275205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11901373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089820604 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118681025 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092579394 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112833024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089030733 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117705714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088208923 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11556072 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092901116 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114813211 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092041778 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132086839 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116033361 seconds)
  done (took 11.882010436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0906828 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115817236 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092581541 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115746995 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091785489 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115769627 seconds)
  done (took 1.584813964 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117875961 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117804618 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104060095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121608573 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156307687 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104580975 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130741066 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124442109 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108476756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129173584 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130323695 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105959837 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136566556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122093469 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105521641 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126633769 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10658646 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12562635 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129944268 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096358873 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138534759 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121225101 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097313477 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132956291 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118955293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095712177 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127545743 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103929904 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127934702 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125349021 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0969157 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119058903 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097374399 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12377942 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130598969 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096252458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121749195 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120094194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100989831 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118565717 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104915804 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122108346 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127917048 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095596116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124210026 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121357958 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094660769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125619788 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104781809 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12160532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122237834 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095869184 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121082919 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094975782 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124716412 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124884777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094645834 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130839816 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122232879 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096451898 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119159807 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094069712 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124456972 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119421996 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10446332 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119529992 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121502951 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09691305 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122467734 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097092309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120348862 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092768535 seconds)
  done (took 9.283120131 seconds)
done (took 34.087356293 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688748651 seconds)
  done (took 1.65021504 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83857052 seconds)
  done (took 1.803066372 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.539404883 seconds)
  done (took 17.530996245 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496355015 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579871816 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987250625 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179637856 seconds)
  done (took 3.205268656 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.952088489 seconds)
  done (took 1.936559381 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283405173 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23612218 seconds)
  done (took 1.490036666 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780936451 seconds)
  done (took 1.758726812 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.377917789 seconds)
  done (took 2.345283001 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326734037 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184238963 seconds)
  done (took 1.489990383 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548207665 seconds)
  done (took 1.527286957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.734588414 seconds)
  done (took 11.717991552 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.266619603 seconds)
  done (took 1.255888876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302514478 seconds)
  done (took 1.282522306 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.45927641 seconds)
  done (took 4.442058717 seconds)
done (took 54.409840846 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098748278 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127438488 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102693615 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124940569 seconds)
  done (took 1.432764851 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100896735 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121741844 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100684172 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12107106 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126964163 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096538871 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124348128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102480906 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121364635 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097346127 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120750952 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120719971 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099229241 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123442939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094593015 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124238292 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124377755 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096411588 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12576381 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097462569 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119860654 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098272324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124999554 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09532409 seconds)
  done (took 3.667944553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101147736 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1198645 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096469543 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11904542 seconds)
  done (took 1.431152202 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100189716 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131914192 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106027372 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125004413 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131053928 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106194893 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118303715 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092747692 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120254462 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100430798 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116733498 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139619612 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106607644 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125696807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102297137 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114303759 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092267644 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131383872 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12567585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101490334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118669205 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100300614 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.11565077 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109278094 seconds)
  done (took 3.722609546 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169459973 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127702427 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138663242 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096152004 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161387381 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141058439 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088513502 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142412675 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088093622 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132098314 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118454355 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133220959 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130028601 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088416824 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114861002 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088105523 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128963769 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129714824 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091386633 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127870268 seconds)
  done (took 3.434616311 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097767223 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11780087 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088447448 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117262858 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099548328 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121004654 seconds)
  done (took 1.636770307 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092062196 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115159866 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09073131 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114398858 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094220631 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115871217 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089788446 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115093887 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090452789 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115085469 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090350142 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114761457 seconds)
  done (took 2.232878595 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507737397 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120348906 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120585984 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089011036 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122515017 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090026986 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130166587 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09306455 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142145436 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090354538 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116581506 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093592975 seconds)
  done (took 2.709226416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238906392 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126544752 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285648062 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367074405 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157327422 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166331192 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280258922 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161949481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200501636 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150673643 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231963509 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198790621 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15246341 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192307631 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138377315 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145725228 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191883302 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252038638 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15356402 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21456244 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208205407 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167754756 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180668462 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152421606 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111998949 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194556039 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095711533 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130929658 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234800952 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180712958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189996611 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16186097 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148002107 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239271882 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252793469 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204185625 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282619197 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134653714 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167350545 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143313488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265585359 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140065109 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23836801 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156677901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105082468 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22338723 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165929888 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177526561 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145896087 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13941711 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199045425 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248313401 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195190195 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138981985 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301926406 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149975382 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160345158 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190628173 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253931888 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230881278 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190283605 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121258364 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189876844 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191363144 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212748322 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153640814 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183988885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148731224 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185138195 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190162355 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166366277 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206430334 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181431109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14028891 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171280502 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173358157 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175561974 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261742615 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186251666 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123548715 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171060089 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150386279 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131160967 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16818816 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126006331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216210679 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143873604 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1646781 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209200727 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16000728 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161998273 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223870274 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185041234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149713745 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084239716 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15502454 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156237512 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178269128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141215882 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159254444 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157808812 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131325176 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171402406 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097941393 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212701177 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092800136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175045039 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211463335 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100713309 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162779144 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154547982 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151085615 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178393616 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199877995 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141047476 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135163683 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21121472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181156319 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142364185 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178579202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230947318 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117973396 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149275979 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228473456 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246492782 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114367969 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23168251 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153940769 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108318726 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134484475 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182063761 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157177063 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162043293 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133831198 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185014587 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234371471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099279062 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139476979 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196864512 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134586838 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1327987 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1559063 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148506894 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111537927 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143861294 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145511616 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178649567 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179318103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15508691 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166093849 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151809052 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249032493 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140837852 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151293616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123840903 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121952083 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194537642 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227297949 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104363721 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234694358 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173198663 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225151255 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171532817 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108239346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177464052 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130903639 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121367764 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194853173 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169087975 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163388151 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199128181 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222993376 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180781856 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212505823 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167698994 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177098102 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165870719 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157578873 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111411834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161618989 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158036715 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124407882 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139028042 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108505915 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149951134 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143388154 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133674023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198278307 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171723532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216902635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16181811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14865806 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181316706 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102784447 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204600717 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180417074 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147483663 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200276967 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193906945 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213463873 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117517475 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227767555 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.1208013 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098593075 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143626136 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172164442 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13353752 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108567574 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163756182 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207765957 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182428096 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173240994 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232704489 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178418061 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193487523 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09593421 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169249358 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185724327 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203486502 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155944914 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138753773 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152183395 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17878263 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15571545 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258575728 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169357208 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177046634 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236487377 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123918765 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132604815 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151260885 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179181489 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15370873 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176708963 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147857394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140129009 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161253941 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102738695 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188240939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18785234 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166684509 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188974475 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151082891 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215056693 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100414364 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161961887 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160815572 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166896594 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110190238 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176448974 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204510439 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149579114 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167654241 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216801774 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104789792 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308814758 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23700525 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196680286 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139009375 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156766877 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162139022 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164011176 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171558598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179426658 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159011836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189350747 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161234019 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136708342 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139343828 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123172906 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153004297 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133261158 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149381912 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177639232 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1399066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189778925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156426571 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160809291 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173674105 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150468042 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145871447 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123733171 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244981479 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184105895 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241689507 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15180461 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180989223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207158996 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126457631 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132980198 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106252394 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178532739 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137024508 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192297611 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.216653603 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200025941 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180457043 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140192655 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093940362 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15877965 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170199162 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230487166 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150882348 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.122419277 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233233462 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109150845 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133129114 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167187287 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289258775 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15092331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223735444 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080954141 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280985926 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127822181 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105469652 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164298809 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23743285 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136370785 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15191519 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16873177 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162967075 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163131414 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150943032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217284434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21491427 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230345561 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184582338 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10569907 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157389973 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204797729 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193941878 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157227984 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138382246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206799719 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19606197 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224041202 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11560364 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196758117 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169352428 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158066061 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187957964 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135877868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209823099 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135584417 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193537601 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152328814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138995886 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178805677 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216216494 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114586425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216851238 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184376618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134711681 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106782279 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19512678 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178589211 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1548104 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099318579 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210614056 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098733703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192297919 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263578868 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134582242 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156378483 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146863472 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109635072 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155409209 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159074301 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140186271 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163331596 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204150234 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136049832 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191225784 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233323851 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173936675 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173838038 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147097111 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694456356 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132256641 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197131914 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14829476 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208545377 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152688189 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173841054 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160628067 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170297015 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226300925 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162493061 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23240905 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194040489 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179668572 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133993349 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158966005 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156433864 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14539534 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154442394 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170875591 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162267749 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146489621 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181185642 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16623247 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135581048 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114356585 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228128353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12143333 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215998266 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181271362 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111826715 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202608309 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18824698 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134320552 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18247371 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237566207 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113966611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149697383 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135158527 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152566964 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264643703 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098423209 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2198457 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186511827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160019768 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170594483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148188997 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19242654 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158874504 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215069845 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116401929 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160469575 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158105406 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139827263 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131129032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1560481 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169402385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121861394 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188745381 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139355137 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196612749 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125521881 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146596154 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283338378 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181261291 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247283865 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108154654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137108966 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165214162 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151436258 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178279195 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178474746 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137780636 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13577075 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108656321 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156494221 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113210307 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156306173 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191507415 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191574223 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208509668 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136192675 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277189171 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112700231 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155692188 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115481345 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104748923 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150427489 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146652081 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155341422 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193903207 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263516796 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148060503 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133094762 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122309346 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126922158 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13568214 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163898075 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164885236 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180935437 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144146745 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081590167 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156250355 seconds)
  done (took 82.914075015 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167362624 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133346249 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148055885 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202744675 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1770308 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269824094 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210491387 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254260767 seconds)
  done (took 2.646217868 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094470598 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146488699 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157006262 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133646311 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091882493 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120114227 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343558607 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132409181 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116909416 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122075325 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.1734073 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094813025 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548302414 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090912433 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119648856 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107674025 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092228424 seconds)
  done (took 3.761725684 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.186097699 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49366992 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.006422686 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195748558 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159624854 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117666536 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707446871 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095996963 seconds)
  done (took 12.047182277 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116098281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136583497 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124293588 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152763538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141706459 seconds)
  done (took 1.767521058 seconds)
done (took 124.386378234 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097909855 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128725462 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098634825 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.1304032 seconds)
  done (took 1.531777848 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095434057 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071253915 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100597873 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074850402 seconds)
  done (took 1.427790547 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.192294751 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167594767 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383678225 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075447068 seconds)
  done (took 1.577765307 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115199694 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132422792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104665022 seconds)
  done (took 1.446233528 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107552911 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129604404 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103372578 seconds)
  done (took 1.43144454 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106784201 seconds)
  done (took 1.198626908 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108538191 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137797985 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108680836 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136646465 seconds)
  done (took 1.58324903 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098823249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127402263 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109376674 seconds)
  done (took 1.426091634 seconds)
done (took 13.069740525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103218964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422091001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412181259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11051666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722380418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380633662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041386016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145773778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167745018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09638066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138679327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671770577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030756543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371802258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988709461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371484931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675889022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12153327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091527102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122205937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022597601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09284353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122389544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092729946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701073747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398191618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123191281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371248835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093251645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126290459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382956451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123512144 seconds)
  done (took 16.917370803 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095535837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173911879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098288898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124318885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123734573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094499394 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124177001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093830895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179775822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122871235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110943771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121734161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125352694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095636238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141369597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096303553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126323392 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093112569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121924401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09443293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140711429 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120647985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094596761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121804229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094109727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135990961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09438823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121340006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120282599 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099244265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12806187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095081531 seconds)
  done (took 4.815064617 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141307192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182439273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127915509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127167585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16878522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123249559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199045878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117895304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1837114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123017228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140432507 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093153744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157875848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122402159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114905081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122447762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097903245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122171846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0933276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124087236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140497741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094041928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122522856 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094185903 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12326203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108327569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123867052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120732773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094057298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12777646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099838615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1241785 seconds)
  done (took 5.153960179 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097491719 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126033857 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109720664 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138518455 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094960421 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12596594 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096782694 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124809628 seconds)
  done (took 2.008081572 seconds)
done (took 29.98898776 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110596069 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126883375 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106554731 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135035471 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103190276 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131878255 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091413701 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134314458 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134519455 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103525104 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13802794 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09214558 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122357436 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093030842 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135231795 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097891632 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133372216 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10258701 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13393501 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132138829 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09510215 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132957763 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103245338 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133717429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104929734 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133211314 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136656958 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09964098 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122436499 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095510953 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124298292 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103760891 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124371781 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105882802 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127660253 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097793428 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123692811 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095513635 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132610671 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133049863 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100178249 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134217541 seconds)
  done (took 6.005968882 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107657805 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138913547 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105003315 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081678878 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117083667 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080009895 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137635628 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079414718 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110105148 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108383289 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074057218 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105933568 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078434656 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101379846 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0775864 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075987939 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108195342 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076159503 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076683187 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105455663 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080123664 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07235239 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107997201 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078904003 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074729845 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109920422 seconds)
  done (took 3.570807728 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101265213 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134081936 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113896649 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18397529 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161166049 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100908101 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13262643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140676375 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109900261 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121103532 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097280401 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15039804 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110172204 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129630073 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092351325 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138201738 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13552337 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094887246 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127893921 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113235583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138785237 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103252247 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141456391 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132529496 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092541382 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122779337 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097297405 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134700519 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098018731 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131420383 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097039172 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124772329 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123006428 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104653519 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126088455 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093692092 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142552897 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104597117 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130843379 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121352123 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100990224 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121961587 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114395147 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161381245 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0923515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129290748 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124624177 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104148918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121280966 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112227332 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130636036 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092197685 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125445843 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091089845 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122493437 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107490722 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123750035 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094558868 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131558856 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127713613 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106761529 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126007761 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109114335 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122531882 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100587717 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122085565 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093898321 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121684898 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143786565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095717448 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161982669 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094427706 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12435979 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102227258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129873037 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128355049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09490278 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137881019 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103122883 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125902374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102691745 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126248513 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095913277 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140371552 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124310667 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095397716 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122262869 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100339882 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124667046 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094142121 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13652043 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092422311 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125969482 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110623565 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122121386 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123099626 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100210619 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126211272 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093742327 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135622076 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.10008011 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12427429 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132622677 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093994492 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125808067 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103527564 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127639601 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092438062 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129117891 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100147874 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122982023 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095644132 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125665043 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094551446 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132735321 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129743172 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098288538 seconds)
  done (took 14.858690638 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228287415 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21528558 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207866446 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292635743 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135767329 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114231098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212788953 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15643768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123940225 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160750807 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171461373 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18181181 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170158389 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183405984 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171682391 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093438128 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143538442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134789402 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244991078 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259367457 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.152396397 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131500845 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.13393519 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162103332 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137067537 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133154816 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110228599 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134643232 seconds)
  done (took 5.818400042 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110583041 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155726163 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09916316 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145666297 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149689043 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093283104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128820877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094204451 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136271118 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136682997 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093696535 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129839341 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101009012 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132912027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12352008 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103209679 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132275816 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095048565 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127264518 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097724783 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133960964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103101604 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127884193 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121703068 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.1044696 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123004612 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088778084 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142915222 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123483802 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116533473 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122104316 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102995053 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13755454 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095173172 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123340237 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09621708 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127259792 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095507155 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125953937 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091623739 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123181703 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077685455 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122475313 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137034364 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100946328 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080383105 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13032726 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128228116 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095515841 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121005623 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09782691 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12590532 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097446706 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131683654 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096691907 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124596901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097636412 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116532999 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10083383 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12526315 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085582854 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121888024 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099042885 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11952715 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101370368 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128529717 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092432829 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125692466 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097926948 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130825958 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095221206 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130268351 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091522346 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126379096 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096052891 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129090698 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126121863 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093306658 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123652638 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09446766 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07535088 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124348002 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074383937 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127518454 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092783646 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12298047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095345077 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130713568 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139557141 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095910231 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13343611 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094811025 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123655604 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096502411 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114598883 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096733273 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140775902 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142519964 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094354633 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122148844 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108156575 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126905523 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093246103 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10690279 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103975146 seconds)
  done (took 13.030350396 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130446017 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154664527 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12432903 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112629844 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156805669 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158660717 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101771619 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130253026 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095906551 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142463539 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094582592 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132441397 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094410076 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138062616 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156510235 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10492022 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125930528 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107737695 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128286956 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170624687 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116035213 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143966073 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109949824 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12450724 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129297179 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11169701 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161352984 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107139659 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13799343 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142195334 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108356023 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161027512 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143408152 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098981927 seconds)
  done (took 5.492774434 seconds)
done (took 49.872609877 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211026219 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424263937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199864908 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.162522235 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.199122726 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215922082 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.21212854 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196138597 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.805085019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.197825207 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440413303 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.765021306 seconds)
done (took 60.152447843 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.206497598 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.357131838 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52445795 seconds)
  done (took 4.011204881 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.821953662 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.142265619 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467519313 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201772588 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203488204 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489213336 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.922544691 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.585307548 seconds)
  done (took 28.140111864 seconds)
done (took 42.305035866 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.1973097 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221954653 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.232799633 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183029905 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.337732607 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.253684687 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.533447714 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.23581236 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.2207499 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183187478 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229563958 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.234929179 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210266361 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.517729789 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.21505467 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207933366 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.230428497 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.713955098 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.623788556 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.223677014 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.246454005 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.208053021 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.211745485 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21143747 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.23259997 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205433345 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205379498 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.215280319 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.805790253 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.212403092 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217304548 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.799199746 seconds)
  done (took 190.908587598 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.205591435 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.229792966 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.343334288 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.2424918 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.645361234 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408601431 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.353906983 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.731660002 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.227883199 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217241074 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44183051 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.209657429 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.510151471 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.198618902 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236714356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.272961912 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.415337527 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.518032199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.248678872 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34386245 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.208648345 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.454855565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.366986031 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.396426217 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.252043129 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.298147516 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.233094404 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236099065 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.40029037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.360450567 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.213173608 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.266400177 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834413956 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063125058 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.222319402 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233911133 seconds)
  done (took 150.172242742 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207250431 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.207927727 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207199875 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207353561 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238727569 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210003276 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789745905 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795670471 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.722316683 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.336601732 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619686288 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469960075 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209702954 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304128391 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220841422 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209042016 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224044002 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251916496 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207778769 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208357452 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792951031 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.225378283 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.421756999 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403984762 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.22492895 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241936471 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59924302 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209410603 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.242070863 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540706003 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.259478033 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209598183 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.604364036 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.605315422 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326332484 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209650643 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24205698 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211109311 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489454614 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210823803 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.210545172 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212569282 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905783051 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213639944 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793800815 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215402237 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192594336 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214184629 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210703801 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209793787 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.76570042 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.915923997 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231643674 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209261094 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213457433 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210265415 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210809612 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.24374393 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.559455442 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307383888 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230993359 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212699667 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242812068 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210189988 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.422558664 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206098009 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.554185677 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.274622586 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313243808 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775546804 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209653876 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302133761 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326660124 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2047859 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206316419 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206368719 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205575667 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315427496 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204830438 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.608000748 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.204264437 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.377031862 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220685588 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.549655423 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305557791 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204530052 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587992715 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210397207 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20389315 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991626185 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209457091 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300635166 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204158744 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20614615 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204855537 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.606594506 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771581324 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.468185415 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211150061 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.809636557 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211094062 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.623624269 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747247452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.83268164 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.206043208 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317205218 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.379527988 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222585722 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205891952 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.562340798 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21233715 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266396665 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206105597 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.603718208 seconds)
  done (took 367.18172422 seconds)
done (took 709.394346238 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.798462562 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.79849973 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.905751589 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.790428064 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.754739304 seconds)
  done (took 10.1806588 seconds)
done (took 11.314856881 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39184899 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.395198067 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271895177 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.397342746 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241750011 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.413859975 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37520474 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230927195 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306432088 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289707199 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309429291 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260625837 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243805467 seconds)
  done (took 18.260297237 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536129742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531073462 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273718726 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525045447 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24774127 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528751413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401800458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417104525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4256856 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241719836 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221569798 seconds)
  done (took 16.485891502 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535462863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533084354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279329401 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.574073995 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253310448 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535259251 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422326862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42834422 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425061649 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243371188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221929061 seconds)
  done (took 16.586916587 seconds)
done (took 52.468572852 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.219502937 seconds)
  done (took 2.354508802 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255745889 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41545326 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238981382 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226379018 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219036514 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.220549175 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227020298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220461324 seconds)
  done (took 11.159946659 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219078243 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219789592 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215119837 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.21771303 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215338372 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218893009 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218220205 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21614062 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216555337 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218771849 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219445433 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.215005575 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218316536 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21587697 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216706327 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217125254 seconds)
  done (took 20.613685988 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218919393 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217257234 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216364992 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216358106 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215296425 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217936635 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217897258 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216596656 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217610798 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217199108 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218144002 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218753711 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217892582 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217000418 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219313216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21928011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21714106 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217710368 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222307881 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216969817 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.2183337 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217442371 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217812975 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218501562 seconds)
  done (took 30.366862205 seconds)
done (took 65.632112638 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.824391514 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.857563988 seconds)
  done (took 6.820451733 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.219881788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220023086 seconds)
  done (took 3.5807602 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220264074 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221218638 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220518797 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220399238 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218705222 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220447267 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220971115 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.220072778 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220025872 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219943382 seconds)
  done (took 13.341057857 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.220591295 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.218807978 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.216502691 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220060075 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219842655 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216932327 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221226906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222099906 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218080131 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216845119 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22033237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216423131 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218779524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218134393 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219541056 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219621559 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21726392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217011878 seconds)
  done (took 23.075367886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22018845 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219012398 seconds)
  done (took 3.577946082 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218631783 seconds)
    (2/7) benchmarking "second"...
    done (took 1.218176922 seconds)
    (3/7) benchmarking "month"...
    done (took 1.219039201 seconds)
    (4/7) benchmarking "year"...
    done (took 1.217716765 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.218824704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216189777 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218623546 seconds)
  done (took 9.665026167 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221376613 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408211369 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.487456125 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828400206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220311106 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224684372 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.076689578 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223625793 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.225634333 seconds)
  done (took 14.055332319 seconds)
done (took 75.255592696 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.246287572 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.233518089 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.530731612 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222231402 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.250883792 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.558554501 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.272764903 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.342100853 seconds)
done (took 37.796767565 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.233014911 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.207543547 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.925020184 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.216641114 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.270606149 seconds)
  done (took 18.759226632 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.242367644 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555944496 seconds)
  done (took 4.937682754 seconds)
done (took 31.070206441 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221611823 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222473839 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218955003 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.221146183 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221654519 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.218872537 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219067201 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219843115 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222588962 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223757115 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.221492961 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221000455 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.221750418 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220365603 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219092293 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218754632 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221255341 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219115492 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217472846 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221547453 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21922136 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222297019 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219205647 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21926377 seconds)
  done (took 30.432048105 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222419756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.22230279 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221722479 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222689887 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219945142 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223003046 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221267139 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219264342 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221539827 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221689024 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219238632 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220318393 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222658579 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219694473 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221106192 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21912162 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223043201 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22043665 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222057743 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220408875 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221790959 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220023536 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221401258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221994869 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.219880022 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218262963 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222321507 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221199139 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222255151 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.219104073 seconds)
  done (took 37.772456216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226571624 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228542083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222851464 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223484388 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22207997 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.222761554 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223473509 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223231046 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223397314 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224224359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222702559 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222929031 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221844821 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223309288 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222861556 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223014357 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.223581656 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221994843 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223849943 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.223204806 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222775465 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222860339 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221995507 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224305902 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223480514 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223275211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223662826 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.222503565 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223012138 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223722443 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.222555194 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223437282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223893777 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222129184 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223902777 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22308348 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227351821 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231143309 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223605638 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223522257 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222217689 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2240103 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224247299 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223325378 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224661264 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223764192 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.223349918 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224591514 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223647317 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223869654 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223445806 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223449847 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223848983 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223722963 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.224207845 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224109756 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225652896 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224860777 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.224701777 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225182064 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.223969523 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22478106 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225623054 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224275487 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.225566298 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226009643 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.224899613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.224519539 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225983966 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225588648 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226499112 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.225404718 seconds)
  done (took 89.271805621 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225801547 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225061974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222462053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222957584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223883566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226655524 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223496562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22611524 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224445998 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226353731 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226678203 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222958062 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224138827 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226535934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225933659 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223567989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22851264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224092451 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227249298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226755662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226246217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22369188 seconds)
  done (took 28.097364189 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22740536 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228459274 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224344691 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227260394 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224207396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227240129 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227530432 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229817893 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228579358 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225679228 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224784261 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2282135 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224308327 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224827689 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225391701 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226382961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229487742 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225891229 seconds)
  done (took 23.224281753 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22623622 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224849427 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228020131 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224876301 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226032313 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228403984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225763583 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228874317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228432007 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226962677 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229013062 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228687941 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228510763 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225162692 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22835516 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227031098 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.230016104 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226879954 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22888251 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225993605 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226860258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229856584 seconds)
  done (took 28.149360142 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228345594 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229683724 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227163455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226490327 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228161336 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229258964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230187379 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226834543 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230609554 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229490995 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226899567 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229595096 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228187795 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227756335 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227801018 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22827248 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230082078 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22803611 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229796915 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228779601 seconds)
  done (took 25.716812278 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230627103 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23104986 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230856321 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232469919 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23168967 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231597858 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231193923 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231590389 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231775951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233469752 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230844615 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.232478673 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232133991 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231581481 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232225876 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230862007 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231841135 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232392591 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.232523073 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231484651 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232013261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232577406 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231778757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23259132 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.231988381 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232990096 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233475192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233279404 seconds)
  done (took 35.643276928 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233334234 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2321589 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230431462 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228879326 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230102184 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230014612 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229999286 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229971848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233129821 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230134908 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.233330916 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233634889 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232547714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232245241 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233008258 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.231375662 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232037633 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.230410812 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231025484 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231519081 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233490258 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232433874 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234506037 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230811228 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231128882 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233831255 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231030659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232220593 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23291122 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230317229 seconds)
  done (took 38.1021878 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253338607 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251990544 seconds)
  done (took 3.654125226 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232674286 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231852274 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23348118 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231371113 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232293105 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234317759 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233557667 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231134049 seconds)
  done (took 11.010643898 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234338377 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235683859 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236414849 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.23705882 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236486369 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234802687 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244085748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254865937 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235132031 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.236096873 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241376726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.243704636 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237871115 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23629659 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234972967 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237665103 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236212609 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2370454 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237517497 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237254089 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23865403 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238952734 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238017344 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234584408 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236972926 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248302417 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25980438 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237992117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236845738 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24084192 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237175977 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234073991 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237540315 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237667903 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238594542 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238699816 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246180829 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256038719 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243110702 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25749812 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239075619 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.2345606 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238097056 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240160797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240103999 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238859381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237434532 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236902825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238338194 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242500303 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242937793 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237883763 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237493437 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240811488 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239655323 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245972382 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258572365 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241832466 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24818198 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249188449 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270706651 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.263759048 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241058579 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240055326 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249140797 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262264457 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2459425 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.257420309 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.23680522 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241250509 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.247957883 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270694618 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.264123184 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241157462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242432125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240997889 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240867429 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242194018 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246315696 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.261528064 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240756615 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241064605 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250632852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267802624 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242192088 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24097783 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241513013 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241866488 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.2420776 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251113952 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.260336318 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242161687 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.240218559 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241151535 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24132573 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242870032 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240629233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242378673 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239918283 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241513004 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242670271 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244181014 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251769047 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242436198 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242994849 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250338064 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.261015641 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242656095 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.249002419 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242830024 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241157741 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243112384 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24777494 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241406952 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245745869 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251317193 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242171352 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24408164 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243294561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245130542 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25430224 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268562336 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243677678 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244270769 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247971938 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255138735 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244607003 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247063694 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.242742846 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242145052 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241454978 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244746099 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243989287 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244044562 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245433419 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245245259 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241785193 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244747687 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244202678 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.244559698 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24548409 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243785487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.245131211 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247333966 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.244031346 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245422699 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250823576 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264059203 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247772049 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245581198 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.243459122 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245762992 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245497955 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246240103 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244701631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247069555 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2431531 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246042931 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246935495 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247194045 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246196436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245860312 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249719166 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.245717871 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250337411 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24582783 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243661931 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245326981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24552945 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244859597 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.248071819 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.244833752 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249261828 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255093323 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246360459 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247159603 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.249020131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24699678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247759226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246210431 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249702635 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25378655 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.245975054 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253369181 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267719413 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247830209 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248269505 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247185626 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246068461 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248153101 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.2519377 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255581715 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259141295 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274297371 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.24793119 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25400242 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24902122 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251872083 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254382159 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247922404 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249075301 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24787372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247361794 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249310032 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250232417 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249891318 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247651856 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249789866 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248945317 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249179389 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250019686 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249043992 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249550435 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248110336 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248873724 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250012658 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24956964 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.247335974 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249487616 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249887768 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251406459 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250532798 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256785307 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249066794 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250483941 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250908328 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25044661 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248773373 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25111547 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250624865 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.249382253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258148815 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.267585733 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.251525613 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257494522 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.267715149 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251583565 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253412306 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.251768315 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248884013 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.253510325 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258494913 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251695318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251614529 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252340939 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252564783 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252962796 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257486134 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269520559 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.252622415 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252540913 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.253197446 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249335145 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253513733 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253523418 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251815769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252970514 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253418784 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252981614 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252779943 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25220226 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252245608 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252912805 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255167862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.260180167 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.258653199 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.251727789 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255655595 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254601292 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258510763 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25264378 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.254322405 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254421447 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26556113 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.278238376 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259694972 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274768601 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256284533 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258282562 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27318071 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257552745 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255020853 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255684219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253539131 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25349659 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251312411 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255175966 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255344785 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255773057 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25601374 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259411332 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255918206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256580708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.25517942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25418565 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.256536923 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.25347414 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256448406 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25598445 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257553501 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.253978855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253847503 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262877963 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273948921 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25523276 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256061137 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255016173 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255835247 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256456799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25548255 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258607406 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26382745 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257947311 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.264909681 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.257137365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265180007 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.255607077 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.259268591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264629525 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.253779849 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254688377 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256993247 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256866625 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263267606 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27527905 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257810306 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260927208 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257889151 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25633007 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258228035 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.25663564 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256722244 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255110722 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264868183 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275096469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.261929023 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257759557 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253652702 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25750482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257928332 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256869475 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25974249 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257416202 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.257988759 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25731789 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257918548 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258214411 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257398966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.259298714 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.256722563 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259366726 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265495187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27852967 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263163836 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258748193 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.264155061 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27789108 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264947069 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.27821442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.259305178 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258971355 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.25885147 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.259627767 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259597828 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258959952 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.260346453 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260536525 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.263907246 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260118383 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.259345008 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262039208 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260181074 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25927477 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269247106 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282837338 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261037335 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263478105 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257039855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260145202 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.264248011 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.260259579 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259468139 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263158545 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.270143418 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267829994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.259105558 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.260834408 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261939614 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259868681 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261159891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262837696 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.2604752 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262116107 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261079939 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.261752307 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263589686 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.260907009 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262011724 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263876053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263458203 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271949793 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282430037 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26248891 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26336734 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264532412 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262887822 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264039564 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263835226 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262920225 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265127103 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263734892 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26963482 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26912292 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265494941 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26417324 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.26241394 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262451176 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264453383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264432898 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263698892 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263313542 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.262793148 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264357817 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263866182 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263346451 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265053386 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.26233492 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264542995 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26641053 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269934022 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265188735 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263415881 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265346404 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265613384 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261421475 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.263860261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27082037 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286110008 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276645913 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272174828 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267811892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.262496568 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266974585 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.271182288 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263316351 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265606157 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.264568586 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265005311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265151974 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268724245 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264337666 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.270046303 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283056059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264648873 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273193152 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28408091 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263300189 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266004733 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268589511 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265336501 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.262540384 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.266145774 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263222323 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272327614 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285654662 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26625011 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266854862 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264326775 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2666355 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269584469 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266130015 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26768092 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263443034 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267056961 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266512462 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266626145 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264730321 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265315801 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266258315 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26912122 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.272272782 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264972841 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267316264 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267465967 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266379029 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266989268 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26732808 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26404688 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.263052399 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266171728 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267850298 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26712802 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.268971215 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266621799 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269241737 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.269544432 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266356844 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272012377 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277640117 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275428208 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26591704 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.267414107 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268086853 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270490572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268703938 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.267276228 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26710144 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267548815 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26891848 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269674226 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268833513 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272578767 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283487132 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28915708 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269255253 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.268316831 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271911013 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270176515 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.265676099 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270642199 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27173464 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270583889 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.276163499 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.269685 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27502368 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28886746 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269609879 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275089879 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272924081 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.275681301 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271847117 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271204793 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.270012679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.274913535 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.285939892 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271044036 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279517093 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300946991 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.289771778 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270192644 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27034621 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269604932 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271063306 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271079792 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.270175887 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271889865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270700051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.271440146 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27136509 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276270728 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271320946 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.272741365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271397182 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.270519736 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272622659 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269162958 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27141886 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272135863 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.271483649 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.271940303 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.271904404 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272704912 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285160125 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297775102 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272952514 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272220647 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.269935084 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275135603 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.274706087 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282974683 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280937816 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271174986 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273025011 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274616662 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272548803 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271072999 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272589084 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.272500733 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272313408 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.269844623 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285536123 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29861245 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276665488 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271529036 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275328186 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274049998 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27324106 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272918884 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272710937 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.27219376 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276440456 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276967004 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274267115 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.273717006 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.276416383 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280686385 seconds)
  done (took 750.844147557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2715608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271537869 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270453456 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272564305 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271624101 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272052581 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271117842 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271922104 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272905354 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271833417 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272393666 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271919992 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272095005 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271993164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271834141 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271599475 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271926016 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272088462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272308889 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273922076 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27268572 seconds)
  done (took 27.899543245 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275794786 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273560819 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273650478 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275811943 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272722067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274090552 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272781079 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275419314 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276253121 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273854044 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275620347 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275774525 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274143068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275026061 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27345523 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275464455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27761534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274336986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276166306 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274776306 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277970199 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.274736073 seconds)
  done (took 29.238453828 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2772412 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.276966913 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27495637 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.276198245 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.277410171 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274518413 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277256372 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277811402 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.276324736 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.278078471 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277950486 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.278254522 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.284862251 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283229875 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.279612085 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279248244 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422238468 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278491087 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276741979 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.277290926 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27425959 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282787613 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.295815963 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.275619094 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276316744 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.277070757 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278158248 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.278365603 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279101213 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.279798071 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281891937 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279149056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.278242966 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.279652569 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277761446 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.281003002 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283346967 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.278229064 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.275477424 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.279193269 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.288349857 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.298375607 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279028394 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284392395 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.301153525 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.278972849 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28312106 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.287234026 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277440863 seconds)
  done (took 64.065266382 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.279947996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281308724 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.277921654 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279806454 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.280542935 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280963183 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.280208447 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280628637 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277220067 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.277489439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.280343565 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279266226 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278951255 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281177396 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.280426784 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276844265 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.277807887 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278943164 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.277751886 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276834288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.277891819 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.280653414 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282220583 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27818917 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281307308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277930691 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279516084 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282020149 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.27850978 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280166155 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281594915 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282541601 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281156556 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280179457 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.277763897 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282107417 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282694745 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279726824 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283376724 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.279096712 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282775667 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28371597 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.282620217 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.281978723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.278512323 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.280677588 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279603656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280646204 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.280150287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283226947 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283445409 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281156959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285177196 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280649911 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283014467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284479563 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.280855789 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281856578 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284955791 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282927842 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280993096 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283226892 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282698601 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283988032 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285287856 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.281171566 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28171127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283808325 seconds)
  done (took 88.294021229 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283092494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.28389638 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2828553 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283917676 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28319546 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.283794791 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284632958 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284061877 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283084923 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28518633 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283074917 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284202469 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285660864 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285162669 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283491562 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284459432 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283811353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283954622 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284958466 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284420288 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283927544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283766122 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283868275 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283377456 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286752359 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286247726 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285209259 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285159877 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284168741 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.285516165 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286187648 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.284901034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.28532125 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285614364 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286454782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283980969 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286476862 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285225017 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286194968 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285689806 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284562204 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286843187 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286226744 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.286222162 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286167917 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286043323 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285967958 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28625389 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28642069 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.286676836 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.286101157 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287835119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286981503 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287141056 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286177192 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287231951 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287144761 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287375603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287744717 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286416895 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287694475 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.287140686 seconds)
  done (took 80.889827905 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287296532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287458844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.285184279 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.285560263 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287913297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284978999 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288864817 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.288697157 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288225633 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290198406 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288632704 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285055916 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284842059 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287634236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286249991 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283914926 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286272262 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287711963 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289643402 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286224599 seconds)
  done (took 26.94228699 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286532015 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288526798 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285896025 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286942677 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288685379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287458139 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.289207348 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28890451 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287707225 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289402146 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288087667 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290584202 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28741145 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287083325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290265449 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28702794 seconds)
  done (took 21.811266781 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.286292978 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289255199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287988649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.28856349 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.286723464 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288453058 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.290242123 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.287029729 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288473832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.290918813 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289847997 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.289059346 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291313913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289263703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.287663655 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.290171128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289000283 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288047305 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.289800195 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291268172 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289556531 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287244378 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.291433182 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292454301 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.289686015 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2897919 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.289511901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.288508344 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290113371 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291240054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.288840267 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290516992 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289171401 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.289366313 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.290127958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.289634026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291291159 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292533665 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291649249 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293286918 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292726514 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290009115 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29269581 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292834693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290778901 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29330192 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290518282 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290755592 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.290646112 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290485153 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29271297 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291994271 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.293511187 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294138275 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29316801 seconds)
  done (took 72.16867681 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292993825 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29422853 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291186111 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29432401 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294642846 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.289929306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294281184 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292060682 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292006439 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293802101 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294518852 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294139446 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290284111 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293677948 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292029458 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294463083 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291556815 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291210527 seconds)
  done (took 24.478210341 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.292746276 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291592338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.294440159 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29174688 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291974606 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295461366 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292862004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294748887 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294681049 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293047221 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292004445 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.294850499 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295399171 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295592649 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293556565 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294237642 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295728147 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294726161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292676968 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293972967 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297428286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29507616 seconds)
  done (took 29.674778789 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.294034971 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.292916386 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.294798408 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.309788223 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.313391001 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.318480857 seconds)
  done (took 9.031342045 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304488899 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296889733 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294593516 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296903422 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29743955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294836528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294805961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294594286 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295912106 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294536873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294655904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29601011 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297079782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295390093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297727119 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297707883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295078255 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294675422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296307086 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297577969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294667367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297029187 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295952031 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295822405 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295458157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295614923 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298324879 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296111555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29481248 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298900317 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29836582 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294751208 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299048195 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296067613 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298955357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298040806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2955218 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297649328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298788171 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297753668 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298563709 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298190569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298198641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296859367 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298409088 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294545038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295994557 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296041001 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297432852 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298761666 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300577616 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297654032 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298386939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29997906 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299537244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300374457 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297146508 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29689549 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299758853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297718228 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297406084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300007015 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297495761 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29887735 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299539243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298129557 seconds)
  done (took 86.851138827 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297701495 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299855937 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298725437 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299140421 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297733009 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299615262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299184044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299132915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298607155 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29976823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300886346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300753742 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29861149 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300842807 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300660403 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301239815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301864781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300554712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300458928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303227627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301158871 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300450026 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300075178 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300654823 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300739818 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303692509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299254812 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300046296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300123939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300439906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301629636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300045665 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300917294 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300465731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299303934 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300486066 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299987411 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301093211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300932931 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303265079 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300135904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304378231 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300724308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301390588 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302464192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30006329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301218177 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302092236 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301298846 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300988668 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303195954 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303648961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303007546 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30185962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301676738 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30232952 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301943816 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301692272 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300980175 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304427604 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302721715 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301052413 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306921924 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301914631 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302838551 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302484821 seconds)
  done (took 87.084137973 seconds)
done (took 1751.48942692 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468276272 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422377115 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303592035 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.300921193 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30440949 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.326518341 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.314207747 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304841727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304387302 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30305698 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304068372 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489322925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298443579 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305253742 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304449962 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400127013 seconds)
  done (took 42.671344366 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.3321808 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313027019 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.425255541 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334577975 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333765196 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.498547083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372984973 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313444312 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.487965042 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358789013 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.901544285 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334161898 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310473792 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.443458409 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328137068 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497685606 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561483021 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.907809613 seconds)
  done (took 30.273269008 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.768799875 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.342462584 seconds)
  done (took 9.330761289 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329362452 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312176062 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310674523 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308628918 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.300558949 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302087902 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309498772 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.301115189 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.112770777 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445381613 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316838025 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322976808 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329478097 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311120489 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.307785203 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350994361 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.50861951 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309652203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306812189 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317375547 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310938542 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.39487129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.353459354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31466629 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.440887135 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.105623793 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317903306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317659016 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.491536469 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311212814 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310420421 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310867359 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312652082 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.282835041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.767386464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.326050124 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.335444637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320589009 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.309867504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459151587 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313238569 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318400343 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.316117432 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.751284629 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452880395 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429162444 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.577173484 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.335096024 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.31221008 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.374966719 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314022206 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312288038 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358990521 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092510783 seconds)
  done (took 110.996904735 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328768179 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.693216603 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473041065 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.328406802 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.943406238 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015366309 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.326590647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.606432228 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.344508932 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304293381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.591814193 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825890445 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.331237356 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.325278152 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.935272237 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356107855 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307193393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.064487457 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.328763433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.310368752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81266106 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313202165 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.307825138 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.582937622 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347152064 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785951274 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.828625249 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.762995777 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332438398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.307928108 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78563708 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330180101 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.314057813 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309050196 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.579285782 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678326378 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.669593924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.32910687 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316577798 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310845457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.340338031 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764479318 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672836053 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.324571328 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.330026755 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768967266 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325601019 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308459758 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.312052819 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509764599 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.948409737 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309628091 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.760732617 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309401852 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.605383168 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38399971 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.342120103 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799414206 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326635857 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.383619982 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346751997 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310349351 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310045662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308424881 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313326443 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665067393 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.624416984 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310661799 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662964679 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796284969 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331867853 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864093834 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.216406744 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323577832 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.381133788 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310059636 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.874513539 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814712677 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.337160508 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309581701 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651702089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.329167829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.600177712 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339479381 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312976777 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843410254 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323129291 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.354251188 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.310236814 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.328138826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.935578896 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313887162 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.58649333 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.385648863 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312468738 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.31132845 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.33433708 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325908914 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315227713 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.310719959 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.842348594 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.339629524 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.439919368 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336637152 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312682565 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.3300503 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.312289307 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311407864 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53019375 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.769524421 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.339407118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311294639 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.313171883 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.336775964 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.564678183 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.315798033 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.625956635 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329475943 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312382045 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.314685848 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.985316302 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369783489 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311783466 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.316205032 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.208504794 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52501116 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331831583 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.33097876 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312111753 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32977572 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.582249415 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333694226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.349856717 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317482966 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021742627 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.370799652 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.338698269 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.608898536 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.319882498 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.234269814 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341355503 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315866172 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623647361 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.592177092 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.570362715 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316514937 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.338415806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.016712431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.331521109 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453764663 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335682212 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.404710222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512774825 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.48793342 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314648773 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.922635478 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.314452112 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528637115 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328843692 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611509185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807972258 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.332729832 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32365138 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022071655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047555442 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.118783553 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316367438 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.596579425 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.258913505 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803572358 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.315438796 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316500771 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.738516769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319342682 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316416213 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.315904776 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317451787 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.464067653 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490149236 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.964350801 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316969826 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773868727 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350503685 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317238763 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323401998 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319966931 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663597049 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391372044 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.320566332 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.355434278 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.318411078 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325014491 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797629643 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.256573806 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.324554789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468807867 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95712474 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.341322331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318508144 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.983700107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.545378601 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.835739554 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362639904 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634991944 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.33938982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356215075 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.90418362 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.364690873 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797006621 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336710848 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.320117088 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912818398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.337013802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.448802083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.320230232 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319440051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853728315 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.337052211 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.321523106 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.675158533 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344783678 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567386179 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320183459 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.350070023 seconds)
  done (took 1107.503436515 seconds)
done (took 1301.992767947 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.31902268 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319712892 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.307412663 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.328442063 seconds)
  done (took 26.511431841 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335316527 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324332612 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324812906 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322767106 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325836137 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322916967 seconds)
  done (took 9.191159718 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.366724685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316718651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323683171 seconds)
  done (took 19.242326628 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.53565329 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.623351196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.661570828 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.570939794 seconds)
  done (took 10.628844458 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326653821 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325022661 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325717044 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329080597 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336816517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336172011 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.328844589 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.328825996 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335736463 seconds)
  done (took 13.207732761 seconds)
done (took 80.020494088 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.403054897 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.344809372 seconds)
    (3/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.299050426 seconds)
    (4/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.910047812 seconds)
    (5/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.365050979 seconds)
    (6/286) benchmarking ("sort", BigInt, true)...
    done (took 6.339779809 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.220360458 seconds)
    (8/286) benchmarking ("sort", Float64, true)...
    done (took 6.319884147 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.618948521 seconds)
    (10/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.832203036 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359847358 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.346133308 seconds)
    (13/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.131501634 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.234901463 seconds)
    (15/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.314806733 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.540122155 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.768786893 seconds)
    (18/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.320887601 seconds)
    (19/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.317774697 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.045427947 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.684357957 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.312276504 seconds)
    (23/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.324917613 seconds)
    (24/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.315852241 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.323458422 seconds)
    (26/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353140005 seconds)
    (27/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.730019426 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.817501505 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.347334349 seconds)
    (30/286) benchmarking ("sort", Float64, false)...
    done (took 5.656036958 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436980993 seconds)
    (32/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346147408 seconds)
    (33/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330902019 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.308571987 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.742260543 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.325151277 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.732911584 seconds)
    (38/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.213033828 seconds)
    (39/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.311921816 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.34782443 seconds)
    (41/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.313098277 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.373857798 seconds)
    (43/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.540469514 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.456508414 seconds)
    (45/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.322277389 seconds)
    (46/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.378793159 seconds)
    (47/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.79779603 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.588853489 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.175837256 seconds)
    (50/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.426293069 seconds)
    (51/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385641125 seconds)
    (52/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.308214282 seconds)
    (53/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.427363788 seconds)
    (54/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186796296 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387014524 seconds)
    (56/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.774725699 seconds)
    (57/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.335244547 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.310413722 seconds)
    (59/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.58875258 seconds)
    (60/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309325179 seconds)
    (61/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.824478881 seconds)
    (62/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.869962679 seconds)
    (63/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.811115568 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.308909197 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.328886702 seconds)
    (66/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.05655789 seconds)
    (67/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.97405189 seconds)
    (68/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.885926217 seconds)
    (69/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.310069064 seconds)
    (70/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.087150091 seconds)
    (71/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.561632885 seconds)
    (72/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.304185784 seconds)
    (73/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.434272009 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.808105231 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.856959121 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.310037698 seconds)
    (77/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.327908966 seconds)
    (78/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.304663745 seconds)
    (79/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.306069212 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 5.618163384 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.337735143 seconds)
    (82/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.761414749 seconds)
    (83/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.887975618 seconds)
    (84/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.340892005 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.352983063 seconds)
    (86/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.442426773 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.685718331 seconds)
    (88/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.323051668 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.343667802 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.341892747 seconds)
    (91/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.708006017 seconds)
    (92/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.145784243 seconds)
    (93/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.09635907 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.305654281 seconds)
    (95/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.358816462 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.855974645 seconds)
    (97/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.318574992 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553838674 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.327568377 seconds)
    (100/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.333368264 seconds)
    (101/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.190936597 seconds)
    (102/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.438763463 seconds)
    (103/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.709909763 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.800096492 seconds)
    (105/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389141095 seconds)
    (106/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.305098895 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 1.844255775 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.366577045 seconds)
    (109/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.314037234 seconds)
    (110/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.415479939 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.601359564 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.345636956 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.213540998 seconds)
    (114/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.377242792 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324973734 seconds)
    (116/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.313202888 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.159840331 seconds)
    (118/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.332797272 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.608161275 seconds)
    (120/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.427934841 seconds)
    (121/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.305618244 seconds)
    (122/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.324116952 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.297060459 seconds)
    (124/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.710571917 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.455285114 seconds)
    (126/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.052861355 seconds)
    (127/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.755290316 seconds)
    (128/286) benchmarking ("sort", Float32, false)...
    done (took 5.361093346 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.327598999 seconds)
    (130/286) benchmarking ("sort", Float32, true)...
    done (took 6.334263182 seconds)
    (131/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.171854551 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.893459192 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.749742519 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.159071351 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.362387918 seconds)
    (136/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.994113936 seconds)
    (137/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.800204081 seconds)
    (138/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.307017327 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.345514651 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.051340995 seconds)
    (141/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.38160392 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354246231 seconds)
    (143/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.538987086 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190021779 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.122287149 seconds)
    (146/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.996241332 seconds)
    (147/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360824339 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.26751904 seconds)
    (149/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.315261577 seconds)
    (150/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.410604128 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.437310257 seconds)
    (152/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.42709196 seconds)
    (153/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.309803995 seconds)
    (154/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.389132968 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.45109779 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308614137 seconds)
    (157/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.363303376 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.986885637 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.332984481 seconds)
    (160/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46220018 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437324305 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.419506644 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.363744571 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.355291814 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.326131235 seconds)
    (166/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346682002 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.372762603 seconds)
    (168/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.689523369 seconds)
    (169/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.218188191 seconds)
    (170/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363217971 seconds)
    (171/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.328488326 seconds)
    (172/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350023813 seconds)
    (173/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.381459507 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.370410824 seconds)
    (175/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.414728646 seconds)
    (176/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.310281232 seconds)
    (177/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926177478 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 5.438626796 seconds)
    (179/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.607657554 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408265069 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.207628375 seconds)
    (182/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.429573185 seconds)
    (183/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.316055412 seconds)
    (184/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.905507482 seconds)
    (185/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.43890275 seconds)
    (186/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.433278811 seconds)
    (187/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.860026552 seconds)
    (188/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.569800991 seconds)
    (189/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.421994515 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.971467509 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.532304196 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.344864053 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.166592199 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.751441113 seconds)
    (195/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.600983703 seconds)
    (196/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375175456 seconds)
    (197/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.880475804 seconds)
    (198/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.334079492 seconds)
    (199/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.134328843 seconds)
    (200/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.478917326 seconds)
    (201/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.731970397 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.735345385 seconds)
    (203/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.163452934 seconds)
    (204/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360319572 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.369326688 seconds)
    (206/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421460319 seconds)
    (207/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.558563044 seconds)
    (208/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.313364567 seconds)
    (209/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329838034 seconds)
    (210/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399609184 seconds)
    (211/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.694523967 seconds)
    (212/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.351790771 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.373988975 seconds)
    (214/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.316298431 seconds)
    (215/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.35245939 seconds)
    (216/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.365967047 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.342680369 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.318522153 seconds)
    (219/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.355716894 seconds)
    (220/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.168172913 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.3448636 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.902604254 seconds)
    (223/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.670442475 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.320203301 seconds)
    (225/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34943305 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.396918407 seconds)
    (227/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.802452489 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.990886739 seconds)
    (229/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.517673785 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.354430005 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.552549877 seconds)
    (232/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.994503036 seconds)
    (233/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.464810712 seconds)
    (234/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.328867738 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.419673818 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.38142479 seconds)
    (237/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.314748978 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.721775834 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.398652843 seconds)
    (240/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.495103493 seconds)
    (241/286) benchmarking ("sort", BigInt, false)...
    done (took 6.358431471 seconds)
    (242/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.368808536 seconds)
    (243/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.980556433 seconds)
    (244/286) benchmarking ("sort", Int8, false)...
    done (took 4.364292799 seconds)
    (245/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.731817484 seconds)
    (246/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.000085789 seconds)
    (247/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.526384856 seconds)
    (248/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.363512344 seconds)
    (249/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.362500589 seconds)
    (250/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.420799862 seconds)
    (251/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.316599027 seconds)
    (252/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274148141 seconds)
    (253/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.340683161 seconds)
    (254/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.445008783 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.393836714 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.992868144 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.760815541 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.971948747 seconds)
    (259/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.345674773 seconds)
    (260/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.747852235 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432653391 seconds)
    (262/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.316402739 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.455572295 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.450933286 seconds)
    (265/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.800809615 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.183541201 seconds)
    (267/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.336638028 seconds)
    (268/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39742132 seconds)
    (269/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521213841 seconds)
    (270/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.60360031 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38554346 seconds)
    (272/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.317029049 seconds)
    (273/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.160412336 seconds)
    (274/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.010545578 seconds)
    (275/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.369083679 seconds)
    (276/286) benchmarking ("sort", Int8, true)...
    done (took 6.3358204 seconds)
    (277/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.468961943 seconds)
    (278/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.735249728 seconds)
    (279/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.152239403 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.414291359 seconds)
    (281/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.458439155 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.359216641 seconds)
    (283/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.589969402 seconds)
    (284/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335126134 seconds)
    (285/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.667965092 seconds)
    (286/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.425499471 seconds)
  done (took 944.472135072 seconds)
done (took 945.708740716 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369764246 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372671398 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347518315 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369988813 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465778222 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.370909664 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.359817107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.350458494 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395846959 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.399021866 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.353828124 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.370735519 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357496666 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356761112 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.348490772 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370514865 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.433547577 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355252959 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.37347544 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359197447 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371634752 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354076817 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.398673531 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.372036089 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.353293288 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352964644 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.359002332 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.375340392 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467352964 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.35939213 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353257872 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367894695 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.434679677 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348644664 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.346147419 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376222243 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368232221 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.360108941 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353715848 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.38888557 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.862154867 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373625616 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358561882 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.350451028 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352532951 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355585263 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358838471 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.358113622 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371252488 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371847295 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.847771991 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.390198539 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.361064717 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352880781 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362755633 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357359165 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.355886652 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376218179 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377322641 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376942951 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.422799117 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.357769792 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.354334607 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375593127 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367626435 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.882474765 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.366859457 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357512996 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.85764451 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.375684785 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.885126455 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.385014763 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354819862 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.37424158 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391620476 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.434767411 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.348711754 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.35420849 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.367811533 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359291471 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.364801154 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374471203 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.358855009 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35415088 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377320068 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.376131731 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.364040272 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.361336919 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364001279 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382526301 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.369590802 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370629177 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.357891968 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350943841 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.36390174 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35793832 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364049225 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36416236 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.359925193 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.365194953 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.859938754 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397122385 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.351163512 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.353460959 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.354203738 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374662303 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.856741766 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.380173038 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376868209 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402536224 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.357267639 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.427399477 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365836071 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380262836 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366252141 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360000191 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351377628 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.429667592 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.850178732 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396633939 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35730839 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361715037 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381798562 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.357241933 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353480251 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.442407775 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.358073135 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3794237 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485279743 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.368320328 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396044505 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.362061991 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.358896844 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.380926191 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381657388 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395378922 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.359711082 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382521253 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379430312 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354787937 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376194043 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.367666835 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.359082447 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.36544477 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351874588 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.381584119 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377839326 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380273579 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.381382527 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.486785729 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356089365 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.429190284 seconds)
done (took 229.952069386 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415576919 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.352572429 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.441529027 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.355782947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.454862764 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455830215 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.351927935 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353251281 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.352802439 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.730150736 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353604913 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353678779 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.354041053 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.354264809 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438256181 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355706765 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.3527754 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.693402895 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.356543187 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428914419 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.356436596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.355583462 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.357044503 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.768585467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.355639421 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.350355982 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429757882 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357267443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.702162574 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.348808032 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.349292438 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.703543416 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.448845706 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375091468 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367429251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365576102 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.457784711 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37736148 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437221471 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438488064 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.442486875 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.396527996 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350264691 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358068445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358809925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358258997 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356374957 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.385597359 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353640735 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357693582 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697308335 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369112619 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.366281443 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356706663 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.355753179 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379674171 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356386361 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.358354781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.449216569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358590656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.42133723 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.769716245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.732926878 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359108197 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.356244836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.357082689 seconds)
  done (took 150.031827864 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424286827 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.432125875 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.473369105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378721566 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.410598556 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.477051735 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.377481533 seconds)
  done (took 11.239794164 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.365573484 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362243385 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408443538 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.408769737 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360836713 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.53771785 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362530525 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.372957915 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.359079913 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412994489 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362588877 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361445381 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.366813539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358273805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.408800118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.371925778 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475193894 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.363624573 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362895448 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522092705 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360035077 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.369421687 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.412413412 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371888829 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.363960796 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.366169188 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.177025528 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361800525 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358400072 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361352496 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36007842 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439716329 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363445535 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.360851243 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360685359 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478544527 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.362656253 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359988145 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.363291939 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.358282204 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.363014767 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.362797213 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.36421032 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361346958 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.364448866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.38564877 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.362391969 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.363469995 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.363678224 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363157809 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414824828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.365542094 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360820123 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.361517069 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418053936 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370111653 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.363559297 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362077169 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364030421 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361206774 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.523079772 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4101371 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.363803973 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408601252 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364702796 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.364790995 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.364056915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.365844303 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415762492 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365246268 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411236864 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362669883 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550725729 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38612568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365778623 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365774248 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.36758255 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365841836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.358147416 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.369438919 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.36413232 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365902069 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.370707121 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362996996 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363797817 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540665622 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475027402 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.363957196 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378166187 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.373200609 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.364331247 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.418063651 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369372779 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365224525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418342619 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480067567 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420708166 seconds)
  done (took 156.525077457 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.3722019 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.374559981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.365917488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.380881283 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.36596037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.364853184 seconds)
  done (took 9.496462214 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36806433 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.36671517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367560138 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.36835929 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.367326803 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36869264 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.36722788 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36735682 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370722856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.367223326 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368138772 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.3711654 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371764595 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.367285738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.367672605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.368150599 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.368089719 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365991321 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.368408752 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368719046 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.470586614 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368204278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368950269 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.369669983 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.37353237 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369230971 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376658708 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370581094 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.368352785 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.373336381 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.388676822 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.369765715 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369872446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.375605054 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.372933733 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370742781 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374373687 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.373299655 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366701756 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.371583835 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.37296301 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370156846 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.369900519 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373537852 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370363632 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372559844 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.377481899 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378599147 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370004002 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.372893813 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374102375 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.370364703 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.37081374 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374360367 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371662115 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392905742 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37734362 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369965793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.371806868 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371890429 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.374797476 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373424137 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372582796 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375185012 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370558793 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374797104 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.372456561 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375943503 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371892212 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.371740396 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.373669256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370220095 seconds)
  done (took 101.13425593 seconds)
done (took 429.690557866 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.41244865 seconds)
  done (took 7.690776985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.507979393 seconds)
  done (took 7.789113124 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.690801843 seconds)
  done (took 22.974963153 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.431202999 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.413678882 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.393324519 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.373458022 seconds)
  done (took 26.889083879 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.87059674 seconds)
  done (took 8.149456276 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.37965809 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.381106321 seconds)
  done (took 14.039637085 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.491709656 seconds)
  done (took 7.770224237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.438090036 seconds)
  done (took 7.722744485 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.376657653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.389183332 seconds)
  done (took 14.058697553 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.34556406 seconds)
  done (took 7.623660603 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.815059144 seconds)
  done (took 12.093646295 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.379890155 seconds)
  done (took 7.66188051 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.404823652 seconds)
  done (took 7.68384653 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.736069103 seconds)
  done (took 10.014397141 seconds)
done (took 163.441092149 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.367015232 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36805912 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367086993 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.364522029 seconds)
  done (took 26.745456148 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40707294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406463263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.409215613 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.419548076 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.409977905 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407250322 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398901698 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.403127588 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418187909 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.411231893 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409467219 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.410178025 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409106218 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40089031 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.410990755 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410768796 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.418454869 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411170491 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.399788386 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.411399941 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.374774359 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.419842729 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.411879382 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.374604106 seconds)
  done (took 35.043690182 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.900949506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447644748 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.528730167 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.42693012 seconds)
  done (took 7.583769813 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42766109 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.428623381 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439965271 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480637352 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505722169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437983868 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398516369 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.397695622 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.382956161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.429932015 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.503776551 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.444802648 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513386264 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.376029663 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563826336 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.375496825 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.375688185 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428572025 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.480390399 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493245798 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.377492047 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42824677 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433534394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.447047227 seconds)
  done (took 35.852315683 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.376790477 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.394113706 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.377262003 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.376100597 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384378324 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.376284301 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377579221 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.378191676 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.377387929 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.384490713 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.375759892 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.388383568 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.37702878 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.377301299 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.3825332 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377922422 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.381714889 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.377226201 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377203561 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.382388113 seconds)
  done (took 28.882369932 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.369850795 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.302566322 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72187197 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625777639 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.371342924 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.370930253 seconds)
  done (took 29.045325373 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.45218764 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608807108 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376625025 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.758516807 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.849787487 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.395658727 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.377949662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629879713 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971753115 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.972962726 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.445463918 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449842761 seconds)
  done (took 20.576917274 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.371061236 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.378423129 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.377005767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.411615741 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436645646 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.399420356 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385716063 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.372476635 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443064245 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459148376 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.40058134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437081217 seconds)
  done (took 38.157224616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462217188 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416686491 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.445345843 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456924207 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112675905 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586189008 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.420336393 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139961991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.405831633 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64868943 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374567973 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48937521 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631492689 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374581102 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382927501 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.406562887 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620787879 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880405649 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376281705 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.648670522 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406716143 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375063884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.778700504 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633522461 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613502005 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352629512 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.636795403 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.152446091 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679171696 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388917609 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386689837 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376661104 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649304539 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067656577 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499438399 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606027661 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416405375 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.006869261 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.373870275 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.63668382 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387029757 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402822511 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388530627 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376537561 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310099401 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37681871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159521356 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40991776 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.087662529 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378331129 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653459068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474549179 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380065448 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.948065963 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406425756 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.403602285 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.382275228 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472172972 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965415539 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.913406037 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387905157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.336885442 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397739861 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.655487778 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028544601 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.401135205 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.383617007 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38195395 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313368191 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.629200249 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401774137 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526184041 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.404328146 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028542024 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092763007 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413634461 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317075925 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947243641 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396483981 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.320576817 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605609675 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157296245 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315280592 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.324681471 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315396146 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109496993 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388257123 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.972389831 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401018306 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177406437 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638280599 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421606432 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403400681 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.602846975 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.258064196 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379189362 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.388880353 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513855801 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401830877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154765822 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342353446 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385143272 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636397172 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.59256203 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395645927 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.413409502 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920786751 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409321638 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401409465 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396173419 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618287396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.024011965 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42095311 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919662593 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404847578 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155768803 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152520134 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38959016 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393631715 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383135912 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691320695 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.161455851 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263881587 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451989996 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383726653 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382167645 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.700602939 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239666215 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.283386734 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.598307306 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423744039 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398480446 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.384235387 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328192029 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.398497891 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406812958 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.168123117 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606253818 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382968172 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665023822 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31659024 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531625228 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393428772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.605461673 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.63206174 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.407312362 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643516575 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388570814 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403715572 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401762379 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403466637 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483539024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406106116 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.395369095 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647413317 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.389034424 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.388196137 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.687444986 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.172539601 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39209041 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389984823 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388903822 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012302836 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387604073 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384851693 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274890368 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399171501 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452545512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391672213 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619621141 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.814572332 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413978303 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.407760429 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.390600874 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614843103 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395951734 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.643995035 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473460048 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.903487085 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.029093419 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42385519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.319319865 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.097484648 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.079372658 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387691023 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.574506235 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386740231 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619226347 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428044542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389194171 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007888345 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414652428 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680269221 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.399614321 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398073635 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.392117798 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388034726 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.765318221 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965499458 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40240731 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.40595942 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531759957 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401693022 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322223097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.90504841 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391471781 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389998945 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.164389273 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422554769 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.686312643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29094201 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673232718 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387244789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668046157 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.787307425 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430130861 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.389116817 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402746435 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397792926 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.414023203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414264465 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399526021 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.660861275 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833178696 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957103142 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133298806 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964339632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.829685319 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.41763472 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278177498 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166010901 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352663678 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045737223 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641801621 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187256606 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360915686 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912126872 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.669962987 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239097918 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680195909 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625714301 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.811977505 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.419243846 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700001399 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611103752 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426668921 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391098111 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327039573 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.908572585 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000994829 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420221607 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475747103 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172289647 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419422042 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175648633 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.418502367 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.214538219 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84413942 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.964271834 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780059666 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395686348 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411537317 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294555225 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41988661 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917859574 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04302757 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425958415 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.920018852 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355327389 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62726182 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430891468 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.389156434 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.065369797 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.397113452 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.65478693 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675326958 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335135921 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394657761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959965782 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266506235 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400503948 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39452048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16622553 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404361081 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710193788 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.413657017 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.798176132 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420246578 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328495602 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327911289 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.086376563 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402939994 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36930893 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904060862 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.395669525 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424563837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398119288 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246701588 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650459673 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.40867094 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012776696 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643930833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413005473 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418351651 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.398905093 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396959891 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.383844176 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275947556 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631158171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435475142 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639567423 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.489420431 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.302934754 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438298372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089537916 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295939112 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396310929 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66836885 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.134006699 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.402732236 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134623215 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43907246 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409591829 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415024696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400527873 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416404171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487531636 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630381277 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.434277462 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406853525 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83891034 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438774934 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405718185 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409610652 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490530251 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.978055511 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.789006468 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.177621002 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017590454 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170791694 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039497488 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706315796 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405868111 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401675753 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332250723 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544587256 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926943837 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670094933 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52694176 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.402908649 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428142227 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40897864 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420065879 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616889318 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67180671 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267393779 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406322028 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063682204 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.29459717 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407841316 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609707449 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910104122 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975813583 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782019285 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40101458 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188213683 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703020431 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488168486 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398366578 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989100632 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.415908731 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.238497198 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413200735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399749024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553697686 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679879147 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116369906 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438136512 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.558258588 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1727911 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.704229629 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66292246 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.946517057 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644288685 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050419703 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177665382 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670282445 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470117954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634422765 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.537927174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546967418 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397782107 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306854669 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402248155 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244883452 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.110368082 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.411410644 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029158861 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688672613 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403232964 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.397996876 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449193656 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41227894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624511821 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140474732 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625236608 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409112747 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410931265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.969577873 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02591562 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703885851 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345293213 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405795614 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663393817 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665105354 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428648336 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.85469922 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.112198669 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974846365 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373771222 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423035477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412126018 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16294114 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036694427 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.829386237 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940084738 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060989036 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407463003 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684240842 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408276822 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404202408 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688470107 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.40669796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402636223 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647714613 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.05549408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261818247 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.434450207 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.870055218 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.348964744 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650926581 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461028077 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339960528 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413329185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.854257465 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433718609 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535127028 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415698654 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.417653476 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427551915 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.145323947 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683048244 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.411203328 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.405231371 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.411606382 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414990979 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525712856 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02110027 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437316017 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080730125 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759197528 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660947419 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412078788 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.392133101 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409273993 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407642566 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121816542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375541811 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418100844 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983771529 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.412103988 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423902604 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411023927 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621717593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617187861 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407059652 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652415478 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439422945 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430062536 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.306009707 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.174505499 seconds)
  done (took 1696.184001082 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41687217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.4494657 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.443886472 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.449646052 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.448489745 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443406978 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.46906718 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479990021 seconds)
  done (took 52.916888673 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.420587439 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.573319146 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.447975546 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.419532868 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.417089068 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.410493004 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.893669461 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.425381047 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.414653695 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.416669568 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.409356561 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.410989378 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.093885942 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.416829051 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.419194264 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.406874094 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.423236645 seconds)
  done (took 66.743069412 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.783249075 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.653178515 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.641557997 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.488415158 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.446911621 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.415851309 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.713097721 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.426242722 seconds)
  done (took 54.886188604 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.425444768 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.425529622 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425576439 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424713293 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42563426 seconds)
  done (took 8.446161318 seconds)
done (took 2102.345574656 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.413641505 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.415501632 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.412192544 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.415461863 seconds)
  done (took 6.975288574 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.390465017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.150554769 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.390958986 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410577954 seconds)
  done (took 18.660463339 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.418854115 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.440690041 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.159747672 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.081049297 seconds)
  done (took 5.562011713 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.161322144 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.171799144 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158573583 seconds)
  done (took 7.813933321 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.407565006 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.417028217 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.417443925 seconds)
  done (took 20.562870766 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693496741 seconds)
  done (took 3.014756319 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.558400693 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609178368 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.774616126 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.772576944 seconds)
  done (took 8.035902067 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.798376056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.789417548 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.599430414 seconds)
  done (took 6.507422653 seconds)
done (took 91.312017019 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.45541111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429683256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.622420271 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.42653951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644372297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.623029317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.714436796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.39134466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.934135569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.919646341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.426004779 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.650397039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.679585259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42972694 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.680009187 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.432724075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.651518464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.495301249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.114600646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.318640367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.704627086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.06242402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.254763419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.263800444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.655193895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.57412567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.642924865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432057136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.284219277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.660925244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.573069514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.419987872 seconds)
  done (took 195.888995532 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.423882032 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412412035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410226197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.411832153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411903904 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.4295302 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.428074221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.412374424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.432101199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419705924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.412824 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.431637241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.414037598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.431732191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413186142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.429766474 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412420513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413050121 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.413202829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412402507 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414390128 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430562842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.431281006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413587757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435855243 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413170078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414103674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412747511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.432602806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427931465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.415137428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424414992 seconds)
  done (took 206.764984804 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417949005 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41234092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422966164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414672648 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.432685848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418937461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.432083917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.4178473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419833565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413835394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.426388579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.413367925 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416424735 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434176207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415768437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.442308441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42792564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.413940006 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.432192289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433000013 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.414626456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.434368634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.43225233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.442008329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424263757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417858459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414177223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414222301 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.420423487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427924737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.415213331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415165666 seconds)
  done (took 206.855463445 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.61834552 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425031159 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424596274 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.382568435 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.422870599 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422259466 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419617201 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.61561542 seconds)
  done (took 15.056118032 seconds)
done (took 625.88736862 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.813079479 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.516375381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.627939453 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.442842407 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.228312803 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.465079238 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443417485 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.623528371 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.356757985 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630895078 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.696487708 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.460779849 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.842212465 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441682797 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.708698309 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.547724348 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.318020683 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.446945028 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.769786914 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.000149878 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.711765667 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.93444183 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.642802594 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.356616692 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.8598977 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939879203 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.202230848 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.313612069 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463291211 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.779584768 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.155820089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.453991678 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509490141 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.508468245 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.566433096 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.546667635 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.435172343 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.506263341 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.647217365 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.69601043 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.990345518 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.176008786 seconds)
  done (took 96.103934384 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.409264956 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.407075959 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.407504347 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.4081676 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.409359143 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.408658238 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.40810544 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408154328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.408965813 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.4066649 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.408199625 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.409588179 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.40840607 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.409980406 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.408406987 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409164638 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409173583 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.412026419 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.408426704 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.408722926 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.408647395 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.408893848 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.408611501 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.408768649 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.40867565 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.410089887 seconds)
  done (took 37.956527662 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429025134 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.679225389 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.852631109 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433973968 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427001914 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43152404 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.512761398 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429700079 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.431701568 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.431496429 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.601537055 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.430859494 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465747582 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.881279981 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43074413 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428256063 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.429336505 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.429096581 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.689127138 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438486178 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.535857679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.428962326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.512856107 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.438407384 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.453859139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430481731 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.433860358 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.989985788 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45285167 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.604413953 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.289682181 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.519514795 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.95383777 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.891996587 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.290042698 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.44199574 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43190578 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60776587 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432547619 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.430276347 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516432526 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43900605 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.865487365 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106815488 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.45113903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.431388602 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.011792149 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.636570537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698877403 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447818245 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887931494 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.434231425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433416951 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.432667443 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.698947203 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446333822 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.431558088 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.009554814 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.457161464 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.513172641 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432894002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.431968146 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.703739175 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4321301 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.683902168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433323175 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.43942589 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.453099848 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.865366021 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.435760895 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126258939 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452454685 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433224654 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604847219 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.685104675 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.049341685 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.463453463 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707526886 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958298074 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.533915322 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439367377 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.98098336 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537100787 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437064337 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.435853751 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.436163488 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.433243898 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.479479271 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.513523241 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.061320036 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135584462 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.036584483 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538776282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446489671 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.434169251 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.011336915 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.455428694 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.435099798 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.862727986 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126262431 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.453084967 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.441461262 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.13020042 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455340041 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.520665983 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.439332002 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.877392022 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43587582 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.480260149 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.436091544 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.442019622 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.460071742 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.519325235 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.439507185 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436548639 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.099057177 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63667548 seconds)
  done (took 188.803895966 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.42889824 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.446985884 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.430607908 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.428291859 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.428265925 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438428496 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.4288251 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.42827158 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43434484 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.428470684 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.429873948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.432918771 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.430591588 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.443887233 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443057223 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.437857943 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.045866295 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.431165762 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.431400282 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.430317521 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.254094956 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.441636994 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.430529764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.448373619 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.430427529 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.432059916 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.440772064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.432675593 seconds)
  done (took 154.92757057 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438145195 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.068072969 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.464655076 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576630162 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.461086148 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436144646 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.578062095 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.507280278 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458635984 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435936347 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436165895 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.772516056 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.446197404 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.987941157 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.645331583 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.599331044 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011309706 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.466328321 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436289119 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.43692055 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.580575758 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.44315389 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.773932115 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.080319649 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.467515665 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.071460643 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431440188 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.43929926 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.437090568 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070249318 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.464544076 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.77436379 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.531088095 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504427941 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092658717 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.032883073 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.016121543 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.601745873 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441706934 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.438665053 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.440038868 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.422476705 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.075363499 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.469076163 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.442007253 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.063364863 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.469736149 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.441197084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.445627654 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.438176992 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.502011625 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522769034 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.800549722 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.08732658 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.54493797 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.453979074 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.585382106 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.830044435 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.44256587 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.997667745 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425667457 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072551735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.464214222 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.424457358 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441388497 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.445334889 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.605292861 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.593582783 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.014065874 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.470022096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.017023926 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.634114617 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.448159796 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.440757141 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.442529729 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.049917622 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.038526157 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.63200875 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.59555331 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.658742737 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.434955075 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.442034088 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.426232146 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526880879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.449912202 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.052280092 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.038162514 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.470489487 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.444755868 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.445684263 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.445104943 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.634868977 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.080728384 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.547700299 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.010028553 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.796815592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.783388592 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453347304 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507390797 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462046973 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.770053391 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447595779 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507073861 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.89392482 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.784738507 seconds)
  done (took 172.943146651 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.697686083 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.753659778 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549261334 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.602330694 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.0872496 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.038091112 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.785658281 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.600880521 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.564494601 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.717385546 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.703494533 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.544294751 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.675862813 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.532935287 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.197679197 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543044057 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.561677178 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.598509608 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.615870612 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.512464064 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.154164084 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.745895696 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.656728203 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.509155421 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552959129 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.260237431 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.028076279 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.989334322 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.646965309 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.847928749 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.997750867 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.626078713 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.452116976 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.189359378 seconds)
  done (took 69.886679248 seconds)
done (took 721.947902509 seconds)
SAVING RESULT...
DONE!
