cset: moving following pidspec: 3884
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.523297093 seconds)
loading group "string"... done (took 0.531073729 seconds)
loading group "linalg"... done (took 9.088666987 seconds)
loading group "parallel"... done (took 0.178412191 seconds)
loading group "find"... done (took 1.314467915 seconds)
loading group "tuple"... done (took 1.978785941 seconds)
loading group "dates"... done (took 1.385981064 seconds)
loading group "micro"... done (took 0.198532187 seconds)
loading group "io"... done (took 0.519461852 seconds)
loading group "scalar"... done (took 52.9772898 seconds)
loading group "sparse"... done (took 14.158297215 seconds)
loading group "broadcast"... done (took 1.333100529 seconds)
loading group "union"... done (took 10.345440058 seconds)
loading group "simd"... done (took 3.098600394 seconds)
loading group "random"... done (took 11.733976763 seconds)
loading group "problem"... done (took 2.233666656 seconds)
loading group "array"... done (took 24.457311056 seconds)
loading group "misc"... done (took 1.156955177 seconds)
loading group "sort"... done (took 3.806002554 seconds)
loading group "collection"... done (took 19.45772277 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615879167 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.181601707 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204292203 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.286224746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238567768 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155004884 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138507092 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.259468937 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.785515655 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207680561 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.130055146 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511976296 seconds)
done (took 6.532365364 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253021068 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179610177 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166815109 seconds)
  done (took 1.109215786 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073459874 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.151695316 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.105011244 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.090643924 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.089218401 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.105795855 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.08934317 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104394726 seconds)
  done (took 1.501970305 seconds)
done (took 3.702438982 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500171898 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.877624366 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.534753241 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162153119 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.299670407 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.295653722 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.33195626 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201984912 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08827485 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088200095 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173355975 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.436671302 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.434639306 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.032444831 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087550063 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111090911 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.115626413 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.822585398 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076739824 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111565965 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510884563 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190533958 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.095826603 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12279746 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183243899 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129148369 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161756448 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10105074 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668692141 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129998613 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187104161 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095330837 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158956844 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.193757588 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203402387 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.0910599 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684195588 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198902719 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09167617 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096502016 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675533276 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116310761 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186817142 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101071548 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089740284 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.19132887 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094242174 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074558174 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.112614495 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082107184 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163961777 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459134332 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103326594 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170752197 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090463119 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693978759 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097197717 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277228492 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123613095 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091607202 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088993057 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086088792 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161981469 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093742203 seconds)
  done (took 20.302818056 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148089379 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165141815 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073998562 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154043324 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120805493 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076490164 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098077587 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075793383 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106357715 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239547402 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135242317 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152424719 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071957343 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101517037 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124418081 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2470676 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104492333 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121770745 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087213901 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090073049 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141212466 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094155085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087811404 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107568404 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167808959 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201515155 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109077043 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12224637 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083636244 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094548417 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141300534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143557753 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.08810759 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084000679 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170437608 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119637523 seconds)
  done (took 5.234197293 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198916132 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121780145 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213497816 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163022125 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148318581 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.176123737 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167944466 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127698362 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.280360231 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.177108934 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17932155 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112892395 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109547406 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077320175 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076995167 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075785681 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.412759842 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.133707007 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172256766 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131495368 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105003904 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077616698 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.752342446 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080910612 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094579402 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082909001 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06609849 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.19871738 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099367562 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.068222213 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103508307 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085940373 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130861249 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192919726 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11328561 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134639758 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083594946 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077193361 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213175096 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10747992 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076739139 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105536917 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130600745 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118887487 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099081778 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106545118 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218389147 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080512943 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100540078 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.092102766 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195531512 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121951621 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075466621 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282276354 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115021847 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084161979 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078971437 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248607573 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114300147 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079567134 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097146654 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086723975 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07665394 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098939951 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090470845 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.433656958 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079068213 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156573081 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.925577211 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086710081 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10632354 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086866102 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083984736 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115663425 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07797317 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076128347 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075699758 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094953364 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081075529 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10818501 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082460067 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075502679 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095347222 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144342437 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095449424 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114003992 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107577726 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099456155 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077713473 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124078289 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079212007 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080203706 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171943348 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083491951 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109550871 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083349498 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142172066 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082242889 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.203804362 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081766295 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079836656 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122607794 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084548453 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130295539 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09747413 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095032502 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081452238 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074865062 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095463487 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144788914 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082651247 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081523347 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099037016 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090022958 seconds)
  done (took 23.102827328 seconds)
done (took 49.399379391 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449553316 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091651728 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08689838 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109433615 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087281115 seconds)
  done (took 1.666906598 seconds)
done (took 2.48406734 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32356115 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198414645 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098044155 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195676363 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083538935 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.20262293 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.187710117 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093224984 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21203173 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082768452 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.193780096 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081626842 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101721961 seconds)
  done (took 2.897480946 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099113097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106946039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099220737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118576741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079927941 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096485256 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116385667 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10839446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09469185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109668523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080368406 seconds)
  done (took 1.926282243 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095078 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102520297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085446815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113460675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079836231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093494451 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111416448 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105466835 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094074456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109351752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079974558 seconds)
  done (took 1.891806826 seconds)
done (took 7.530153013 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.058349804 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 26.943773968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168016779 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.286967821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344763774 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.251078366 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.653733701 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153495177 seconds)
  done (took 31.834243207 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.158301679 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110655768 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092435745 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089722382 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086182522 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.108729531 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086260006 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084481745 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105850211 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090145408 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090237551 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085312898 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108258203 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087250291 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088316148 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10663564 seconds)
  done (took 2.453706407 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137928461 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111285642 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110324159 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.092718466 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087122171 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.111542194 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094515982 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088685274 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106682605 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088398772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095359888 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110189709 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091519556 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086058884 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109891846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118314363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087042284 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108729958 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115739802 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092390183 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111248044 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090300678 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090907663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.112361985 seconds)
  done (took 3.350371905 seconds)
done (took 38.45937851 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152424388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098608135 seconds)
  done (took 1.072658862 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140711269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156365032 seconds)
  done (took 1.123532335 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107896562 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083148217 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132850832 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099764954 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084721898 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102405937 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113019827 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084234509 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.102293237 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084818489 seconds)
  done (took 1.823915044 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088686729 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08832355 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118332823 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139426345 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.092395098 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.107128888 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090012535 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086120395 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109044977 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084580394 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093615482 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122553335 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089894974 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122603523 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0909975 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090791379 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.111697681 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090250495 seconds)
  done (took 2.648089918 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085137398 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085214317 seconds)
  done (took 1.002129459 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088922335 seconds)
    (2/7) benchmarking "second"...
    done (took 0.084571907 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087167161 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104080175 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083433799 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083494999 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102078741 seconds)
  done (took 1.466195477 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.494323575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.263521321 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.368725119 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101764582 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142007824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.33770224 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141549837 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098775765 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097043588 seconds)
  done (took 2.912595893 seconds)
done (took 12.874277598 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091338475 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215072996 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.631773393 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.107484645 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.202667797 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161894292 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291382618 seconds)
done (took 2.539119627 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349939612 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.150109155 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085228505 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08559562 seconds)
  done (took 1.502313216 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079641678 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092449852 seconds)
  done (took 1.013610373 seconds)
done (took 3.353527842 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084502121 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107064393 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081845369 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.102871146 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084133238 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.081909845 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10270746 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08416522 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083620634 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082010152 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.103553963 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083613807 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081358584 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098312274 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083441771 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082022671 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081909568 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098405494 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081999755 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082335883 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081666998 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.099185761 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082420101 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08168887 seconds)
  done (took 2.987998057 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107747386 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083233627 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104778287 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088843192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.086848724 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087060288 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106367958 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084284726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087164693 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104797089 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088426718 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087218633 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105410224 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088583699 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085381937 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10745083 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087283597 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083519598 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103136254 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088068847 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.087294022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101010905 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088315517 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086981034 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10398138 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088236704 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085726704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083960336 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106630643 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08684783 seconds)
  done (took 3.625463837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09506447 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082416498 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08626358 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11301843 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.082956756 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086302551 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099982893 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085347012 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.087501691 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085183478 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.106391173 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086253869 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.082274346 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086594541 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.107841388 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089683401 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094696684 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101750816 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084103137 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087422573 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087440207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102873817 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086555102 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085217082 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103699681 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084278093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086909461 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.085567203 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.105322979 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085947377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.088597158 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107022734 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08766698 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.096016693 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.088579207 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.104228978 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.091912635 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082814416 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.105798753 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084543119 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082885585 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.085506801 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101427965 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094038524 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086645082 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.104441683 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085257927 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088538199 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.088152764 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.108287669 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084903188 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.082220345 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08830922 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.10681322 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.088805972 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083314353 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.105284445 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084162722 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087916792 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084989545 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10172122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084336423 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090819087 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.106203171 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102320279 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.093128241 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.10078049 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090647801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087225958 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.091604637 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10758322 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096519998 seconds)
  done (took 7.502487078 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097689465 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092812249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084746077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103121126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084333369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083568717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10605333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085923418 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083708569 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.107509765 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086464403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084244009 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083312458 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104761193 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084484311 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084837171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109256631 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08453574 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083509339 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083556261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102755693 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088589658 seconds)
  done (took 2.860764562 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.228358467 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092164571 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.132868488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115563915 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101191052 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115239066 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090340017 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090602752 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105744139 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09472976 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093489789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106640398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102913351 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091717706 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110863821 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094731188 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088544635 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113598308 seconds)
  done (took 2.820817554 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099544511 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089038262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126934191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087838144 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086077825 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085292492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110616132 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108876103 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085454243 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.104760246 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09333746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08604929 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106128462 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087532562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088758923 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105699585 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087757148 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085605139 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111878685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092710166 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091150284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11066462 seconds)
  done (took 2.981924597 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102842825 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.086209431 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123422587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089732635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084224283 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084304842 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110280068 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085368109 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090914112 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105410747 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086923408 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085513549 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11925608 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085991084 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089940698 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103119403 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087282511 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085793959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085065467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103697686 seconds)
  done (took 2.748716786 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172211832 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121299201 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105368273 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111153349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123329565 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104657514 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112242911 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123852502 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10616333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133498496 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105469594 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104634465 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130708783 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110792471 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103968501 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132457465 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112950707 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131614689 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105795782 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105888289 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135497647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104983956 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130863988 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107521501 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104614413 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123789823 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106363072 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109489943 seconds)
  done (took 4.137028156 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087179162 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085709386 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083757794 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101789485 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086098681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084281019 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082757195 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.102720508 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087379878 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082789575 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.103526842 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087856935 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085874138 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085837249 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103272112 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088310866 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084759887 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082697406 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103686809 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086284928 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08513692 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103287714 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087126523 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083858549 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084275345 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102555064 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085261443 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084246183 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08426867 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103816906 seconds)
  done (took 3.559999753 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094155894 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091204908 seconds)
  done (took 1.044152419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.092784991 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099757905 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084526002 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104223237 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092385613 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084705187 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112780729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093056719 seconds)
  done (took 1.626286483 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142532474 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161589207 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091065302 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097035443 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161658802 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155030665 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133105597 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09081001 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106933671 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082235262 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155492796 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081552576 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090508861 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084789124 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108490243 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095257515 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085854189 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11602964 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093434022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088125358 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109985573 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096494649 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09071912 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.115376878 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08455195 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090244053 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112253499 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102003348 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085504565 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110878535 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088516771 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.086034425 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089323783 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.111396286 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087512678 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161738345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097953831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085851783 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109574444 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092526177 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120674733 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107938701 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091778215 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08785048 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111246274 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.093052299 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091791117 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085904004 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100966712 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085494868 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.085511936 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103906138 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085282999 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089815619 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107953742 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098345761 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088585928 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103647828 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086767063 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084484052 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087349505 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106365103 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09212789 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088985234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109074553 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089926051 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087037937 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.104536584 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088160456 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086647359 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106020358 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106582924 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091057245 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.110121425 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092471251 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.088582888 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103888358 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093067466 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0881444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08974923 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.111138471 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115717413 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090874994 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105163587 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085602495 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092786008 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107037428 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089870501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083100535 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117268936 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089912717 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087427694 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08234712 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108106183 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086089659 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088954922 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101587941 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091560462 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085048345 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.110442471 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093747457 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087871516 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109263997 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093795854 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093333284 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106404698 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137249012 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086924553 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105026944 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090071516 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092069311 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102160948 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090436012 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.084317678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086506645 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104619313 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.091994568 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088462706 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.10782242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093039335 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091051394 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111192071 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.090144058 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085452245 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104740781 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092353031 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094919824 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090407121 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108727089 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.086701068 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.086338906 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108816579 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.091841279 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086738602 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111093262 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089466861 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085782938 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087485705 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.111624651 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090623616 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084290046 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107862271 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091893005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088243218 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110209702 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091029626 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084449916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100896365 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09228502 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085151294 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.10546104 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096749876 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08653695 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089880451 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10638866 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095635106 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086751525 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113038277 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090561876 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092927967 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111176634 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08349894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088225422 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088684448 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11245467 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087288312 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08679587 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.107983576 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094902591 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082649302 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.109897747 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084658378 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086820434 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092222513 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109454984 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.090931395 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085922246 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147853047 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099579174 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092743055 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109327932 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09164419 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093511423 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109689699 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09290607 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093312023 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11191757 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093069175 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089220078 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09218451 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10703339 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088989577 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086805776 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111334309 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083255988 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088982493 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100628247 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094002591 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091851936 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090800955 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.112445141 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090792582 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089235813 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11584397 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087462678 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090410336 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10181084 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093878 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.096466333 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.1137844 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093777129 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092432131 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087029281 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.108260314 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096313161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088822339 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110225516 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088565433 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082885599 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102180963 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095432072 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090195054 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08548431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.107407716 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093211053 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092364337 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10737243 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084564715 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.09165075 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114024862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087030337 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09107605 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105764512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09056068 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097887016 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101050073 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088347264 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092818168 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092195284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.10658761 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089997815 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090428658 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116039226 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091850906 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08972101 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106319799 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096983134 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088928414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08587447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107060283 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09106606 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083552011 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.107193343 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092158604 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085971913 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104438315 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095549324 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093273491 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09313208 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10925965 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092316848 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093564333 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.114448709 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088858068 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09238767 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104893095 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083871476 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085691839 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082007016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.109442846 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086767894 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091885103 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108407918 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08993922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091515357 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11176139 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090604656 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093417326 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120288626 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0850585 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083470306 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116019515 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090973773 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086623146 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104997848 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089355768 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09211829 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.092564969 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114716105 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087924374 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086090259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114746929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.096623702 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094307457 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.112822007 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095246014 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086357914 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.091752067 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108108846 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095485025 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084252435 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110269032 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090407792 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088593392 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107489914 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09019775 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086234041 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102248146 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088043382 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.093908891 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10767454 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093682088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089816825 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088159563 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108009091 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086462704 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.093590333 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110030976 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095398506 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.087643219 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102446944 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085427499 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.093028353 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090635254 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.114164949 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086921124 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09133608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114112461 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092235481 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.088780584 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115644752 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097389572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.093519089 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09572409 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104524731 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088472377 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094254724 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.107845032 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092415265 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08978012 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103978044 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095138106 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.095289943 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111649953 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09142489 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084417873 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08695299 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.1145808 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.092823615 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090188961 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.108186699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093238251 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086354601 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090813411 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.114095873 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091839924 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093545502 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110765819 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.092887838 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087092919 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.1135271 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.089170112 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084872457 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083557016 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109048195 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.094493759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084543742 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.114890089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093498767 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086776318 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107681948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.095149427 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087635931 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111694259 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094935666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088529553 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096429504 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.108764239 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089161247 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091749515 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.113643664 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085481894 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089005075 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108572173 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095873992 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089434136 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092819457 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11148154 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093200295 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.090159718 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.113361414 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.094752496 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094241633 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102622198 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.096577129 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094904624 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089845929 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109025554 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090725062 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086234934 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109445363 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.09530447 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088741174 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116225658 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094562014 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089235436 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10765303 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096140016 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089613625 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094173844 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107937664 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09468545 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084420545 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113903549 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092224968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.095274802 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106429126 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087184518 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093310821 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092808351 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113904213 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094829568 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094254963 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105837942 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086738331 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090735613 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107502014 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1000513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095114123 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108449981 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091619532 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089426579 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088380038 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11640119 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088403118 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087134037 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112389026 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094440191 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089726185 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106210811 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.095511215 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08982882 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093072235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112117727 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.086707709 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090011458 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116815747 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090827686 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08770631 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108839931 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097287649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090309798 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108143971 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087224653 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097894898 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112696016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098123156 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088035968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091310865 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110018671 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090400392 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096394087 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110617609 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092489655 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091033341 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11573157 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099254641 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085096197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108215794 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100903015 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094857425 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094022104 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111072858 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091950273 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095036887 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116303827 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.091277951 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085874071 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105847273 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092232585 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08555217 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089618767 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119420349 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091131819 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088672292 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114147936 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093755205 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090282082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.109558517 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088119585 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095879556 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087736473 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116521774 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085951931 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08486325 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.111089093 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096876055 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090252749 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111548254 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0915141 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090503609 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085771722 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110213417 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09657465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093485838 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.115486347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092697547 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090579975 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.112301624 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101147347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090385496 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090668203 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121924926 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097038713 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091759366 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112772909 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096369066 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095663248 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.113464245 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.097644159 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089256862 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.11252227 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.097872198 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096939991 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1226107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093047596 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085706559 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.093423698 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112247112 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087625991 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095166562 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118302294 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.097488196 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091436888 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110496326 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099897068 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096701927 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113330025 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09163788 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089589695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.113591618 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09173285 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.093038893 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089350726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.118389999 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.097752444 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095600186 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118843324 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088322256 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099005806 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114837471 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102312708 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.089530371 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085624155 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107964895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.092428681 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096757338 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120113372 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095351898 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.092765131 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09548686 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115822156 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093109412 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089303713 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.117922921 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.096672939 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090341759 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115083936 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092926571 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093888574 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.111504043 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097035569 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.096988304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092738926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121445182 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096487658 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090815208 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11092725 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095009199 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.091633771 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113737036 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095725163 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089409342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087138928 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116811961 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097989826 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092064949 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119673801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098884951 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090665972 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116674474 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099184486 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09337607 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090175773 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115807513 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093310394 seconds)
  done (took 59.14325345 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14335985 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097523673 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111794183 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092525132 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111769398 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113054373 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09210572 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09201594 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111859549 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103628509 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092666183 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09184651 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129854857 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113446813 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131387935 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102098811 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091231404 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114725421 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092572344 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091545136 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128544374 seconds)
  done (took 3.162578104 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111905262 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106285723 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124528928 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108308015 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098047359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12508482 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10236398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123596961 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107243119 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099279428 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126954236 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103463807 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.099599562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120722584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100836841 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120815173 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108410084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098780606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125137366 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104285558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100883324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12468279 seconds)
  done (took 3.350893857 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102545902 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.097480367 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097451898 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113147764 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096987175 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091261129 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119488156 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093715785 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.100717217 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093146619 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109290776 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094466574 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09652658 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112982793 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.090572692 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092628641 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.121003176 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098443755 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097643519 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091326862 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126406377 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.091885125 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091943294 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110047101 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105956358 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096784477 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11307569 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097410987 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08875374 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095349157 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114455305 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094116102 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093513027 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109059502 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088788844 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096234094 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.115907771 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09393073 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093015252 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.094826334 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.113627341 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098859154 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097534292 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113744462 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094693344 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092804657 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09564982 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.114184423 seconds)
  done (took 5.756899192 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.125374865 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15307031 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096996814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122709974 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129552977 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103273724 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095322229 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126952844 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094298646 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118310182 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.109088953 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106921806 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119567624 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10081939 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098206029 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11922992 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09862671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094559365 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.121844021 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097329586 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100407134 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119117527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107503257 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105085916 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120805339 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096864664 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.094818018 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.122289477 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106856596 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120986336 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102852559 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100556168 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127519541 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099054368 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.336513829 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118034583 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.1105951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.096630398 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.118759547 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095842804 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.097202257 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120067014 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100653838 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108465684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11785939 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09972196 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096160989 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114377312 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106864075 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.097845033 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.123671288 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108542313 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098384506 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118927625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098948177 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107494739 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119178613 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09481262 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.098208453 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12725104 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09416514 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.099415697 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.128271718 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097369361 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.122413133 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107263095 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.096975352 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120479925 seconds)
  done (took 8.705982865 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132819148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101490089 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130846047 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110356684 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100151797 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123095179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101458537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100203025 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122968524 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107183407 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100005053 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.22062393 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.118740935 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107308323 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100595062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123100411 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.101618608 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100180862 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122603894 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101548885 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.100806279 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130876892 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101372869 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107997772 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133897957 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097718132 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121597052 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102706435 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109884484 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122331739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113405867 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100388585 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123366539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110182467 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132360972 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103357648 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096561908 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121896495 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103366938 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101501383 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.118096657 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111942865 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101042334 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.119000385 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101967396 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101747168 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131505797 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11364717 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126653779 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109310229 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.101580476 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13040508 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102433318 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101025642 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131452672 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117556345 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130743654 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111156347 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100254056 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132138195 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11031172 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137546846 seconds)
  done (took 8.027293461 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097172334 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09407626 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093034406 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113854744 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096168918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092751184 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094124369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.115591319 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095451884 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093182253 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115493205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095244095 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093592582 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092639119 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113700826 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094350515 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093338023 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092998057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116142353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094956853 seconds)
  done (took 2.913798933 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106512349 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112162899 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.095122508 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124421742 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.09777749 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101380672 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.119394087 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097757577 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095240185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119409795 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10612367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104724071 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117227795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103063095 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105077218 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123236168 seconds)
  done (took 2.65933484 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11731349 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113691622 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189267807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.098802829 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118177807 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104867329 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.095986647 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096854928 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118318654 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103195418 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.099339253 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.121842244 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097894043 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096758573 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.117704057 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101896843 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094674126 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099475319 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.118855881 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169003917 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122117691 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099015895 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.096407599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12351375 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099063157 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099237295 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.124758878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097559575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098581012 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.117766695 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.100485355 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103212108 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095804151 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.124149362 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099743416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.09842127 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.119574155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098477227 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099543532 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.118421866 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101574976 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097890498 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.118305007 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10238751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095486375 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.097009606 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.117691589 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103167917 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.09771797 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.119758178 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098046116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.102592298 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.122658476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107368984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104759617 seconds)
  done (took 6.925629167 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110556683 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098114052 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108019159 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.117895776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098737194 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097817615 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120940559 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09880702 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097201018 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.116747626 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099552985 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098673818 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097555814 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121788556 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098405316 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098698123 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117113051 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09963706 seconds)
  done (took 2.832569462 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103461297 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096307146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100999113 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118542461 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097680843 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09688915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116321325 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097232053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095645657 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09499267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118553178 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098083973 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096313741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.117902599 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098122304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097707408 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.097084198 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117865127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097669357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095058429 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119479239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098110804 seconds)
  done (took 3.207613006 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110706597 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184558858 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106281145 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.192508378 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097618992 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095107311 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126613914 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098700322 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111820299 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117084269 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096493273 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095054974 seconds)
  done (took 2.371502984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127702365 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135272915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119183457 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099420766 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10727296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122839981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102706538 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101012309 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132106978 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114166025 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101593135 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133059964 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11077619 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131042539 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107019434 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106159486 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123524426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102511075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096815269 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139674025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101765407 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13130811 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10310933 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101115014 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12317878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111342633 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109125314 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135942597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102107966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131270189 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107965157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101129059 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13219017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114966718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098391606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131759959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102632335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13897637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107601009 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109480222 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120799005 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107856189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109036395 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130274711 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111511206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122470669 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10826272 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101496015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124581387 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12438672 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126887931 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112939833 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105672269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132076559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111833153 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145162586 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114861098 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109553796 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131250891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113070594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132378822 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108202949 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110345388 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136306485 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105528971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13334078 seconds)
  done (took 8.643406025 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142267184 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098530815 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123869178 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11458234 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109890929 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124265834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10222994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100726361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125121357 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098110296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169928415 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10275498 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112912706 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132905643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10242013 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100710317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126008423 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111144021 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119007571 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125645731 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101235297 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132903821 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11111647 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132762198 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114794365 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106336355 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12511165 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103709096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10135605 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125370397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108254657 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122482458 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113039309 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098155481 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132226794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103112882 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102013912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130032852 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104077504 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107722593 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133285857 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119714346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124406467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103782857 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11430105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124540396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102934006 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098315923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12534791 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099409296 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113408093 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136383801 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113824947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132653008 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103666189 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10138203 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125059081 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103814116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102891483 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130283284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112365134 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101862742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148269289 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102787679 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125061318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111609147 seconds)
  done (took 8.577009934 seconds)
done (took 163.010895086 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149001539 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189359227 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143919371 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177296262 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093006418 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125131546 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147037297 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148461892 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091618424 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11512931 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094464075 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095108031 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.180422453 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093774753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09125562 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093326119 seconds)
  done (took 2.971360257 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189727429 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308118913 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107513552 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118211313 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101725989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09880528 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119204997 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10080245 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096527636 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127263507 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100679618 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094645632 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124745205 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095890552 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096138776 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120228166 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107588076 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098589909 seconds)
  done (took 3.161349732 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118530682 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14219273 seconds)
  done (took 1.217027211 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129431609 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.196864861 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273926003 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169804956 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121210931 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138027934 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15183145 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131267717 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.180323228 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132454784 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111782505 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096818729 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144694397 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103917049 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.110366795 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12102229 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126036651 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109446635 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.130864953 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100323183 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119416057 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124475291 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103856731 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.108110257 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191956954 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.110273823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.125738098 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102482476 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098802756 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132329516 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105979427 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135089943 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112976541 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174987039 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10413978 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17097557 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108696214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097165495 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.130529574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098286085 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100893694 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123761096 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1145991 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118672007 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103783759 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108174442 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.122110565 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103648069 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105374403 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130247554 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107267407 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125292876 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.14769872 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130584122 seconds)
  done (took 7.831606157 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850235935 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140072331 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098259971 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.007404217 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148027205 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112893257 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.844264315 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143927607 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231804362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.872896323 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115398993 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110945728 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240200785 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.272575106 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.180499093 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368910558 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.682998115 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134651781 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128527971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1616035 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107193206 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145135564 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120393556 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439795865 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100259972 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09831249 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126848763 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112112115 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176179183 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099060697 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100909636 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198001258 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287441327 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209919632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097482657 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11778366 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098012613 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183981966 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270428358 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219234194 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.160761698 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116217373 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098166294 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105176135 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140275451 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094705698 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180889446 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187930373 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169837977 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12472543 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111605922 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129681238 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106710129 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178295001 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095982753 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357547402 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350899317 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120376938 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107511904 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133800064 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266019195 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099704208 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23476937 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123721836 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213168164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120202477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811410316 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181288315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098487202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104433112 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126279502 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105015471 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104495521 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180227037 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37805934 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133787079 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100968695 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11875144 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216563416 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121439143 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09759006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181029748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09948119 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12690503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113168323 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109009891 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188696629 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268629884 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109109434 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129450396 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10389105 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11073671 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12170002 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228669945 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229174165 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151606175 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232388233 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128025675 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157863826 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184922498 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103447072 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188967106 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127087237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115139687 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104862761 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246318473 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133068318 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098935815 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127088247 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106769201 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157296878 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10162226 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106296526 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187878655 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461268605 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184230218 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095259447 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102017062 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13043463 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155892918 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12958501 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26672099 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107607913 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.185288581 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105401772 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.117084465 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108211858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181175543 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107463596 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129510531 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107362673 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108708766 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27148084 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221703836 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133490121 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23940293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166382471 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127018616 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168535472 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129614625 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164371087 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131823009 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106155993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120510325 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798627314 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113936112 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105562003 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126574183 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180200891 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121226141 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101276917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09745813 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095196919 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806097177 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124994744 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100817005 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09914038 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129384178 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106649346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105638734 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12958106 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177755398 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246004526 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111473417 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128677979 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099913016 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177715725 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.099898967 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099197205 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120563816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.099952549 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106923783 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124655026 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101572037 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189764233 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153649614 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.250088928 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.531858995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099648992 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098506902 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240784333 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121116643 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316993287 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106396199 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232554087 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184950839 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095424381 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371101902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166255344 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204942985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101136717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190580204 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095361597 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12893389 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157144391 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120725519 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1069655 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176828569 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112769957 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13370152 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186167257 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099964803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248847557 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096175927 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188219015 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099509994 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128577805 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328231942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10027989 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115805694 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179533736 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125884072 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100288429 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69466706 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09893832 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109486735 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130710849 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233614359 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185780302 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107058858 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129805294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113471534 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181537663 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208687877 seconds)
  done (took 45.689132071 seconds)
done (took 61.820541531 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288533948 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254984307 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306187522 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213633767 seconds)
  done (took 2.110117731 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.287457121 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163014205 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232664045 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096936973 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.24578401 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097231733 seconds)
  done (took 2.106200434 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495371911 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.386611428 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344186446 seconds)
  done (took 2.210973566 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.246961736 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234848164 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348326119 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.415600339 seconds)
  done (took 2.3404106 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.299059399 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132537431 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124880515 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.214060145 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.280910507 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259002592 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151330657 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202050115 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151926131 seconds)
  done (took 2.842993139 seconds)
done (took 12.58936941 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.359426243 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.333796831 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.332075667 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.142874142 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.352292219 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.350237696 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.188250077 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.184040019 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.329271592 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.199082066 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.25102458 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134920148 seconds)
    (13/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.217952007 seconds)
    (14/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.081772222 seconds)
    (15/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.299287658 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.230204549 seconds)
    (17/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.105495544 seconds)
    (18/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.132122258 seconds)
    (19/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082442318 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105417251 seconds)
    (21/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.30676257 seconds)
    (22/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.228105131 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.22287708 seconds)
    (24/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082301949 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.136590498 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155777092 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.112871869 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.250247349 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192867904 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09184007 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.129464542 seconds)
    (32/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.227973595 seconds)
    (33/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.172081686 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.223582437 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195075778 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.239167552 seconds)
    (37/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.244937415 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.13887259 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.235758159 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138733288 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.133209265 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.150584982 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104629439 seconds)
    (44/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.212227241 seconds)
    (45/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.178436834 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097132445 seconds)
    (47/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.128695885 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107724804 seconds)
    (49/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.177775997 seconds)
    (50/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.174642306 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083269238 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.107775067 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.191034075 seconds)
    (54/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17651275 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083917126 seconds)
    (56/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081100721 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.167763357 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198344042 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.159425636 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180733008 seconds)
    (61/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082504185 seconds)
    (62/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128585325 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.204473443 seconds)
    (64/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.177457052 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.200846753 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091223218 seconds)
    (67/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081739671 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129927492 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083836267 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124673568 seconds)
    (71/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.104737682 seconds)
    (72/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107853705 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194806857 seconds)
    (74/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.199975384 seconds)
    (75/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106718866 seconds)
    (76/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.087994861 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.104819844 seconds)
    (78/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.175364656 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082610006 seconds)
    (80/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174858031 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081754581 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.108007411 seconds)
    (83/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08369518 seconds)
    (84/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.144409804 seconds)
    (85/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093159711 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.167054534 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082310027 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104142371 seconds)
    (89/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082565023 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107492301 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12561609 seconds)
    (92/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.204017511 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106707419 seconds)
    (94/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177821237 seconds)
    (95/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192550209 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106560003 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082838768 seconds)
    (98/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131597961 seconds)
    (99/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084339802 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104947715 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0823457 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140682747 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106447045 seconds)
    (104/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.087497828 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.122385035 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.106030999 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082453941 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.112069442 seconds)
    (109/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.107099851 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.146452204 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083310417 seconds)
    (112/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082084882 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129521202 seconds)
    (114/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.150899145 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083662664 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.219490948 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084219772 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173212289 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129205077 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105928003 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10522462 seconds)
    (122/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131042119 seconds)
    (123/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149543596 seconds)
    (124/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177574385 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.106286659 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106711401 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115341428 seconds)
    (128/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.088858393 seconds)
    (129/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123428039 seconds)
    (130/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083545345 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082480164 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093805026 seconds)
    (133/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108467152 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.130958484 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083847826 seconds)
    (136/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088962933 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104813417 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149973466 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125378056 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098530979 seconds)
    (141/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108331919 seconds)
    (142/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082955161 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106326575 seconds)
    (144/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082679602 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.130457923 seconds)
    (146/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.105833543 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105905485 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.130975981 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085582611 seconds)
    (150/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100884299 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210143646 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10739862 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101657423 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129664943 seconds)
    (155/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112343039 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083618234 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084000558 seconds)
    (158/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083874476 seconds)
    (159/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130141769 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084330152 seconds)
    (161/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088850589 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083309393 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082605914 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125106471 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10566647 seconds)
    (166/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082896424 seconds)
    (167/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083931712 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1523719 seconds)
    (169/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.108054989 seconds)
    (170/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087947405 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130503426 seconds)
    (172/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188902779 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106392825 seconds)
    (174/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.107853171 seconds)
    (175/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.089755183 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106850804 seconds)
    (177/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084515554 seconds)
    (178/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082271493 seconds)
    (179/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.113658641 seconds)
    (180/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102355284 seconds)
    (181/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083564865 seconds)
    (182/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08846288 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.107029402 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125380807 seconds)
    (185/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08395021 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082923126 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127972242 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100922319 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084825216 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098224761 seconds)
    (191/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108184556 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107517858 seconds)
  done (took 27.325364045 seconds)
done (took 28.317832815 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.21674778 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129993266 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109441742 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107389807 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204317349 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115819245 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14073097 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111519355 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113353767 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106105421 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125001187 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116390858 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107597628 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201943705 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110896828 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126657468 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100700223 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115193596 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142413565 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119859755 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204768362 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103221707 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11389964 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125040113 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181682706 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10198132 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.13422271 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108284735 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115031963 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.131922297 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107655962 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099862572 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.142828186 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118898503 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099332253 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13066992 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101747312 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089510872 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106616524 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.133377528 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116734951 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106759757 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134024298 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10168612 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107078338 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130789963 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101821099 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112088642 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098278192 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.135473736 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102627746 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117742184 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.130577726 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099494953 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098705443 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125693739 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115954536 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100108774 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.140821376 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102211558 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.101463817 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100184647 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.133508291 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10178101 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.105786136 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125681228 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.10953696 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.107701283 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.129010185 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105228727 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100683641 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.105673439 seconds)
done (took 9.706184387 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107903016 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.156753011 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203835298 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212183706 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129987231 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140577328 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122417583 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128734742 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143066071 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126443528 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159051627 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130168025 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.212824382 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114409966 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116838705 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135701608 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115826528 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112741486 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21628278 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124126089 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159289301 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113024541 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160634848 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124412979 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108557835 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164610816 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108692014 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110059829 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133236997 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11535042 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124976563 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.134032593 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108275794 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150775754 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123054218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114075511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140449169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11147604 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10678462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.130304052 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118635243 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124077617 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131182374 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118988022 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110140968 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.139440779 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115609051 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113371225 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.136298953 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112561551 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109244949 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.161544522 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114711898 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.113841167 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.140062979 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115546814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.113596453 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14104069 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108202868 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.113339355 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132440249 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108832768 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109645959 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.159149082 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.107745503 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.138517545 seconds)
  done (took 9.68332811 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127093518 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134403854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139991427 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117295423 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109374144 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123341145 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099045874 seconds)
  done (took 1.883540339 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10123445 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187512748 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210229643 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210068768 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182483816 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.221132691 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14578577 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100842895 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131331246 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134266719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187251349 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239976389 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105938636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141451545 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187873111 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12489604 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189701649 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125828922 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114468297 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212151605 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114718342 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127278993 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139136023 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101176848 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211481071 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101829505 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265196898 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11680559 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105693689 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141413854 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112739571 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204576438 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183881875 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.140131065 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104625806 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211585637 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.180132353 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136156263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.198629547 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.130612917 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.183492603 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.138852379 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117665924 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112520188 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14136517 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.173092398 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144300066 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114509841 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11163115 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.220042336 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110687779 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210815821 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107591524 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.1102539 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137877954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113612197 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145763449 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115911498 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.193561585 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142165346 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183595854 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210734067 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.212798068 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211439896 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125365363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210561379 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182022676 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.109764428 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136029123 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113412834 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.215178016 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11030603 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111413845 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202702037 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115702926 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211759817 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.212807097 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110220349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.112941174 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.130961366 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110875225 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101048311 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202989311 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111037256 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134677363 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120854942 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11249421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.137120771 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.10781274 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122022632 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.137921099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114279228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117568497 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.137592761 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118084058 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.217493955 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110991165 seconds)
  done (took 15.613654476 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107313856 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102730468 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106534023 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128945614 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103231645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102864997 seconds)
  done (took 1.710558879 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142814045 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113496612 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148187613 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115792253 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164708427 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220813254 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.227198505 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110134352 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.154862241 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127223567 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220750921 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199594574 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228778416 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116746714 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224303691 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117784104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.22900637 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109997594 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14984948 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111337691 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116922988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143811266 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11149393 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213446671 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118255861 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118205622 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137323631 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12685041 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.120662086 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137895581 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116810868 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116340841 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136945426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109966577 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.229825891 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108958193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135315976 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124953878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115251378 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142864888 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.20131193 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136971721 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124539666 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12243005 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.136838427 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11008128 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.123323651 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13707955 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.199248313 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.149435822 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122812311 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114923473 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145909464 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124573109 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109122475 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138263248 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124413432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.229748139 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11667019 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.107532787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141218723 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118745879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136025299 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123600723 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.115431096 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.148039872 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111431792 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115168069 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135508212 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117084768 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123313124 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.138703766 seconds)
  done (took 11.276778791 seconds)
done (took 41.200659802 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.569125447 seconds)
  done (took 2.623793923 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.906923276 seconds)
  done (took 1.961475183 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.89442376 seconds)
  done (took 19.985327373 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.538538887 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.609809198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.045726938 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155644199 seconds)
  done (took 3.410577305 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.01430268 seconds)
  done (took 2.089269333 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296233097 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264319979 seconds)
  done (took 1.622403798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.747586145 seconds)
  done (took 1.82037408 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.52645354 seconds)
  done (took 2.589000735 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360966963 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173405769 seconds)
  done (took 1.612416013 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.625973326 seconds)
  done (took 1.705972311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.672391734 seconds)
  done (took 20.752343714 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246970238 seconds)
  done (took 1.329134004 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286424749 seconds)
  done (took 1.369401343 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.786340876 seconds)
  done (took 4.869922149 seconds)
done (took 68.802551427 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114336426 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115521014 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.11458989 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140325011 seconds)
  done (took 1.556356166 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122610224 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116431956 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.120157042 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141432016 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122653975 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116073455 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142773424 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119920069 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115867288 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145134334 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117283103 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114845831 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144147452 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117487003 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114565124 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14339396 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121767731 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116983096 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.116760173 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145051632 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117793456 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.11733052 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147952656 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120217762 seconds)
  done (took 4.100552982 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113148707 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10690836 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108338048 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132514264 seconds)
  done (took 1.548585065 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127196576 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131094197 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153393834 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126888691 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129188597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152956055 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117707343 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113990262 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140222947 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127874368 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132604004 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154547977 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128888153 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117925033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153260559 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111723301 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117680868 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154713078 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124891167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124794779 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143106065 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125054879 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12237545 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151799801 seconds)
  done (took 4.268201948 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189721716 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125358149 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166449089 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157293135 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168878586 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112617755 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135365787 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14550457 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119608925 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114819268 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.142521079 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160253566 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.144051768 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1167197 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112409479 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.142856699 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127060965 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118276291 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18255076 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117846786 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.117653802 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.152975334 seconds)
  done (took 4.158316424 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119673204 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108167304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130150871 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111700386 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118760112 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136707 seconds)
  done (took 1.815673282 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106591109 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10102109 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100734841 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127726872 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106589197 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100255371 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099909849 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128348472 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102275102 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100882213 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126171344 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101974427 seconds)
  done (took 2.390827728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.344695634 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106846819 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134493002 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108161705 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112166474 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104689371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148527848 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106214516 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269066379 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106559084 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146905747 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193758513 seconds)
  done (took 2.976084869 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205035151 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140868142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298365222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368117718 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162031593 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184410635 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267988754 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191637376 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.2041288 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131499421 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240696421 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151020271 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173914083 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169752385 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160573521 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161700291 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191738471 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186491703 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171331085 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220749562 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154159927 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187412526 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176469876 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173391463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133168815 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184110992 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115940587 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123197632 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192511725 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159679213 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199130554 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168906232 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136675938 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217696688 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256159087 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176061454 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28441997 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155045988 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.175877104 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.20455303 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254302612 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134240107 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215786437 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17660025 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125390557 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200442871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150500042 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.19527996 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.127105302 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137095158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207617603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195767892 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176455349 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15921281 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337575295 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162633558 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163246846 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171172734 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208095182 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185324418 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18898867 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118417143 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207690623 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205635984 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175762491 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.162895887 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163411379 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147067434 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164023764 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217320523 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201556559 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155688986 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223480486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125840704 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182095024 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167950962 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200285262 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171022241 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181318255 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113816391 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173184554 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130784568 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122208532 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.224257399 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115951923 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223039237 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126903723 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344633547 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211507166 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150657932 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1848113 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153417861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183804708 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139508322 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13739745 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142123678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184542706 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152441599 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153163652 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152473753 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132838171 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.151352324 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146124756 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.143827049 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153891646 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131454612 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189374195 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178368661 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128128349 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159076044 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172220725 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1475882 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193221079 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205618062 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129224355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126661335 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212007521 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151377349 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154496038 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171641631 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206695897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146643123 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160325894 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159160116 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213155275 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134594612 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211346555 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158171238 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13077658 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145573495 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184568501 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152457209 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.174521608 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123675862 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.174093757 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19261527 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151776393 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132473261 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19109194 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12862022 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119145751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162191395 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131489957 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.163010836 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14021424 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128321389 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176478632 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152072614 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180336643 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179026017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131242433 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19833485 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129254699 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15381454 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169297361 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11350716 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198943298 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179353004 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152333208 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197827391 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188902218 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21496018 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153089907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155196343 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172176815 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150836358 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.115676534 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183209724 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15133724 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185179197 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176659733 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213512862 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192077147 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.145133644 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170845391 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166216206 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.199775355 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148428441 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.167980714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152887549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187492077 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.114791133 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117623294 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.150963555 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132567056 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151250117 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131339158 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204145324 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161584452 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208741997 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180872371 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135711526 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20407369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123371979 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183770918 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.161002215 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133154953 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206401226 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203654631 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162124671 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16335619 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157246188 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.1144173 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151246286 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128358469 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188925065 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131301434 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156240268 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139873831 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204409142 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169463768 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170937831 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222824381 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163556179 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218085682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.114080914 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190085525 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168035912 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180319737 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180712383 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134947239 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185584668 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200283227 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137021259 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211404296 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154389253 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184740649 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186573822 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17879178 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125421898 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17073437 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157246634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159400127 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163801127 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140187888 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154081918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148615927 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161974813 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120453463 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212499079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137922856 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196412811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154502214 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196190592 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120421048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165942094 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155326933 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168621581 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114405899 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191886273 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183168397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167751716 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152846716 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19936826 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124701325 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34481032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185582516 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203833656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129076757 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166124023 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156522033 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18799634 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157802109 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203747002 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135356161 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202547443 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152729886 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.166988741 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124401596 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170629096 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148165585 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.17427215 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129083783 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149985172 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.166849348 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213525602 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135526225 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180994119 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156441638 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143215927 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175291967 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134379217 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220216833 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151352738 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20104927 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.176729398 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164063328 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216333197 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119617774 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122752717 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.15641142 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175029085 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153607958 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158702721 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204178352 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217646564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160288857 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187103346 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133395657 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.148787839 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153468246 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169706535 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190002954 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159243978 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132373376 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217718809 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13328915 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154796825 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156504609 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307378935 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141945278 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199493085 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119258827 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.298569374 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124763961 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155302284 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159560254 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1959208 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.128541932 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178837959 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183991024 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136285422 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189005708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132551717 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210910987 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218120625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161338547 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200094443 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138497171 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186872553 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155741678 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202058675 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164783245 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142502932 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155847209 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206310133 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206976114 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129525059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152043193 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182462445 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152482329 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198731696 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131084171 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21695796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123074825 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187667786 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133110375 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148325215 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153451902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204234629 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128030277 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20410533 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181497366 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129707854 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122310884 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169334847 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152645061 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161286867 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127397098 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210782786 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125144203 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158007151 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204532718 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125077931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181918576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142890789 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152033851 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138956152 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136354007 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156078963 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167898765 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210722632 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127138013 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204613131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159727068 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190447443 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153593152 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167588597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.660377971 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12131514 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206992326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143097284 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211449996 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17421224 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159590625 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181382665 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146595085 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188758563 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145660424 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.262222218 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161537543 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179466278 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12808734 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137161621 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16508317 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127972897 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176404251 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154510317 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135233067 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.160846262 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150759532 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167030624 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14181621 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162399652 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180704662 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172594052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183649309 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208036289 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131798352 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188115992 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16890143 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156761175 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161058814 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198841104 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135320797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173570319 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127500346 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159726206 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179040618 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117928545 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184738818 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155320902 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184455151 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153676257 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.159478079 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157284852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164174285 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15690318 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12084551 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177863506 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155405129 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158975346 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123000758 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182643051 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159571295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.178923308 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122664436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168767258 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210659694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119861751 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128883179 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302302431 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18589996 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185794761 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174346067 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131790537 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13763056 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180256307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150323855 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185891095 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.124697291 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152753696 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.126571586 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.19483061 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.153207122 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154659783 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202305438 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157452484 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219266217 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131292201 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.314208186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134244833 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184515544 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124895698 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15132292 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138012938 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129464332 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165523771 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213405465 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177260423 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.175559805 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.144367675 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123378762 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.150548918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127214248 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160441731 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178417977 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154790638 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169565358 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111811175 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166746212 seconds)
  done (took 82.643471681 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167945848 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151793866 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168930024 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22243666 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198510836 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291192406 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230165533 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255389554 seconds)
  done (took 2.856755697 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119165558 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158319964 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140773281 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144472882 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11655049 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.453416976 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158139942 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119738552 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164624572 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159456777 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140495104 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.618283247 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115053835 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14488131 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129540757 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117687783 seconds)
  done (took 4.17143211 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.493605696 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.598993818 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.326765788 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284715591 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235898527 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182307305 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816825029 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193537108 seconds)
  done (took 13.313779823 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.147119493 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.133434359 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.826314056 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.262676735 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150244195 seconds)
  done (took 2.70447187 seconds)
done (took 129.575041924 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120989837 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119230048 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119376936 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151171064 seconds)
  done (took 1.682363899 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185820623 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09529138 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098103539 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122198026 seconds)
  done (took 1.68245737 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44023271 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094919296 seconds)
  done (took 1.743962949 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147060967 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145811648 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163165487 seconds)
  done (took 1.651056017 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1416221 seconds)
  done (took 1.324726243 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128294767 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.120186798 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240293641 seconds)
  done (took 1.676416899 seconds)
done (took 10.947989169 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120016798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413411675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432262938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134301374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708430115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427804775 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.066787678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175533224 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174988808 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136162855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132888704 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687496273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.049284308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.35993529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006433378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.390741278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696665168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110334452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144652917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112201613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.048975924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1337819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112389044 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110539464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.688390036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449335483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109270574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370563951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138564552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11299026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.397573257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139402835 seconds)
  done (took 17.472678581 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119109004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173329833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1455947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110928977 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112617457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137980481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122429548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121880913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20558341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108431421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.15911428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110197319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114476375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109936378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16426331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109492515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111210175 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140974676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118553696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109807763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16006385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108863174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111198968 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140387322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110607021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130987263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139369374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123273538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108954344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142831558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115441672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10982611 seconds)
  done (took 5.297498922 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159205943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178657444 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147774802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146774433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185180174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112265859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194835336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176218509 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203439866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110901358 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131372362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135004647 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151840076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110926917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162770363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111266788 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112576601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140323124 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118441277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111522156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159129925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110294814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112347956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139866088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111636137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132849207 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138430978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123947361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108688497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142009951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116654717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110995307 seconds)
  done (took 5.605086816 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.124920644 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126665567 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132619771 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163425165 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120585869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12360232 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153138786 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121178743 seconds)
  done (took 2.265993754 seconds)
done (took 31.832623587 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135928769 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127875717 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129744688 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15195175 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194600652 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145401499 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127860099 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114633215 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152127345 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131220555 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109632047 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114468902 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158965287 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119829291 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22602155 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123436975 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.229392092 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197071076 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145377459 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123961135 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116642911 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232414317 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121474651 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115171217 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.236323554 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112358112 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216497013 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118598593 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1472522 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.11328841 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.196066675 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.151786431 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114868694 seconds)
  done (took 6.138423677 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210714965 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.115911302 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149289222 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119120141 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.116964614 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147247187 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214042818 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146249226 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120871859 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118181404 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118283527 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224793415 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122083225 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140201017 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119085801 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116088774 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.245567536 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11784645 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110180327 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096013146 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.141545402 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118590542 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255413045 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111666406 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117550176 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147295763 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119904494 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120712959 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.115953351 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.147442233 seconds)
  done (took 5.471480205 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126749537 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132018852 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135449868 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214241235 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147406081 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161869208 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141073081 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133397196 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173136026 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113296006 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126784173 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179646236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13107312 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122633422 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145759998 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132386072 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135464886 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14171939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121134972 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130175316 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161186035 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13217424 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140442393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119467116 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143312511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119824801 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122181805 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.157934703 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120967829 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125718626 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144073725 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116592623 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114632713 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177815678 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115034189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125934833 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.16913419 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125050987 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126478316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173796666 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117558886 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114040799 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169191963 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168664792 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.113407503 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157325336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124494452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126118282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140228834 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133866903 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155423543 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.140237147 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134637484 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113280217 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109324385 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.152079432 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112342565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.114353786 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.156461393 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115730713 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136344292 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1487232 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124617467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113849232 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122109838 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142731601 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11144788 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115834303 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169913366 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120533023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149542092 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142023769 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125544937 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124390442 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152027573 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126287176 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111924443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122562228 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.154759604 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119431768 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124977679 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1459697 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116431661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128890626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163976632 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128330885 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124062069 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156314964 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117354028 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113455043 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158639327 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114813995 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117667654 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125587162 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.144247235 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116153612 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124957003 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155321474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11272418 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137592511 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146444305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114041197 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137833546 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118042187 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149524216 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122915333 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154293089 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.142219514 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124876443 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126136404 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.143015275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122645877 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116056547 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141623063 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133229568 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127695254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118448073 seconds)
  done (took 16.955462722 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.327384117 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.28250581 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.214498587 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.314459875 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125276443 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.243781051 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.309643405 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.310867679 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112017989 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181119516 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165461483 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.279781378 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145276003 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141875392 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314823746 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.368552936 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174277104 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151646295 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18152691 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127345508 seconds)
  done (took 5.695826557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135168177 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148888604 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167514879 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145307482 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12035202 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158313692 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113083986 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132071345 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.152124133 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125237152 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114999912 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16024493 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123850308 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126386475 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158687652 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154652211 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121164222 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147346771 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136656432 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117870176 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107682725 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.174395261 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122105774 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166934678 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130395838 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124299085 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141434457 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120587296 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117243424 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118054994 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149221206 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134087581 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120425413 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13973955 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12653319 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129331874 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.115555848 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.146914175 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118389066 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116114963 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.158909017 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124436946 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121075858 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103657996 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.161930949 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116617083 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1231499 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155045377 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11397017 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129353906 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.124499996 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.155724643 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.120182725 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129962923 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.147697167 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131210412 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123830675 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.155136574 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120067386 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111987598 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.140265746 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119392748 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.11911915 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12374637 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.157182808 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135384586 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128841956 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.144426177 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118628014 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117962228 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.148942026 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12961097 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135213735 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151183 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119235711 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12538103 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.148778248 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101041519 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124512211 seconds)
  done (took 11.730093219 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141211838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12163207 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131997648 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180579945 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124464085 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118555769 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152538534 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134290329 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125162396 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16100862 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127131829 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12750322 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167364367 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12429421 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119981181 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160558648 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126871461 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152009742 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163249734 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143050675 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125910651 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151031827 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127900241 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126617022 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175077417 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126589672 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140790189 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155797715 seconds)
  done (took 5.171512446 seconds)
done (took 52.362486813 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.366453108 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.555423207 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.323736797 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.320579638 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.379315293 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.327998649 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.320139698 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.321276072 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.976888688 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.300166314 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.322208991 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.330790384 seconds)
done (took 30.072116204 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.320103156 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.839866874 seconds)
    (2/2) benchmarking "String"...
    done (took 1.623801008 seconds)
  done (took 4.682645077 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.31534752 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.315611297 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.546121135 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.317728934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.32687932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.317647182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.325078147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.316969061 seconds)
  done (took 16.684686091 seconds)
done (took 27.220367631 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.394270522 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.498103779 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.559508627 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.319629214 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.317466663 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.322143119 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.319778446 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.34484123 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.326217477 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.320873971 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.741341201 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.577738932 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.317876239 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.695096745 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.325563017 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.323777424 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.335256848 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.559465842 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.323028328 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.354820646 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.299464028 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.310981227 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.340394595 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.325716209 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.327877945 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.33018865 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.326694694 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.333176 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.517672835 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.331439575 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.354601407 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.320173049 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.388665015 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.329751244 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.318515441 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.336878731 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.525206965 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.32940769 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.302960664 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.332548262 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.51677749 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.321659006 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.32642898 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.334039037 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.321174487 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.401249514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.30380896 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.437355313 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.345986927 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.335050755 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.336198013 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.711517472 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.331990707 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.331380121 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.327268851 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.544576592 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.346139704 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.383094326 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.349407326 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.332066908 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.330226648 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.336833413 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.336186817 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.324306512 seconds)
  done (took 151.445607897 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.323324689 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.322746687 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.323160655 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.327173513 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.323396606 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.323449897 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.322968885 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.321258956 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.323882923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.343890782 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.323627117 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.320702766 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.32704106 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.288903441 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.330154936 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.343576756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.328353635 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.322727139 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.344623984 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.323088892 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.344509975 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.324046995 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.341021026 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.322990959 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.367225214 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.400382229 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.330098919 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.325263347 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.329060635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.323412628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.324223849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.373910458 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.980936022 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.185874544 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.336373978 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.355916746 seconds)
  done (took 84.698425581 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.323826548 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.324380717 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.325141578 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.359660595 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.324995145 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.324589379 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.938798121 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.946070172 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.047104916 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.854696231 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.805508852 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.603227085 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.325227179 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.41985761 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.337729485 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.325581135 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341991764 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.353721198 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.331957847 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.325173032 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943223608 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.342618406 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.511724714 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.507587074 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.342764347 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360820073 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.722553401 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.326481507 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360221605 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.665607066 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.37832626 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.325495758 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.74063822 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.608577297 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442207267 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32809783 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360424159 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.326107984 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.611644959 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.325698028 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.325702288 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.330346809 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.048156084 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.332443918 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.942964871 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.332356973 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.311165703 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.32602529 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327166355 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.452350643 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.07514178 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.330533604 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.326540881 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.327862365 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.327417872 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.327790099 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.361759403 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.424362227 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.426720548 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.328156257 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.329085311 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362888835 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.328102523 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.327596655 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327658795 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.333255195 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.382506844 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.462432113 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.110556844 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947311302 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.33434661 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.426812752 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.452567125 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.32967508 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.328756416 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329642705 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.329042866 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.440826896 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.327433158 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.766375915 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.511083374 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.346898329 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.328036296 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.809606942 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.434276008 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.329173879 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.731855416 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.335387018 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.329415601 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.090007584 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.427295041 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.328518909 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.328958412 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3277224 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.764165188 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943684441 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.61983758 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.336233921 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.676087485 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.335129625 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.330210383 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.783226763 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.924617083 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.046008862 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.336789541 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.445709239 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.51181275 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.349412129 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.330108341 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.811310943 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.335641371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.387790796 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.331084134 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.734263913 seconds)
  done (took 381.653510085 seconds)
done (took 619.014582659 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.192400605 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.141877835 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.303383921 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.158849374 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.129578575 seconds)
  done (took 12.156727788 seconds)
done (took 13.387761796 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530745219 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532735627 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.396681234 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533959923 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36857339 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551822149 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524462719 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.357329568 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.451789057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.419675979 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449843799 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.388943949 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366541585 seconds)
  done (took 20.103964266 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.636763974 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.335255066 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398190629 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.596293118 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374355166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.619422668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.703149967 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.336827678 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48481059 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.348576129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347074322 seconds)
  done (took 19.414099563 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626208991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.337597573 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394882414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615322233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.371682337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.626837759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.653657615 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.3362107 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.484090727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347564258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348606154 seconds)
  done (took 19.376135915 seconds)
done (took 60.124443504 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.251630478 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.720791846 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.370205291 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.427428384 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.347012342 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.360122562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.428813285 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.350086852 seconds)
  done (took 29.490229645 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.347121705 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.346212318 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.346883997 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.345440345 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.346046807 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.346300053 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.344832912 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.346603017 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.347817583 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.34742056 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.347542822 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.347527435 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.347041857 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.348923075 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.345547902 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.346808075 seconds)
  done (took 22.781473634 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.349187641 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.34631735 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.346525411 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.345980973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.34658062 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.346850342 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.348302925 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.347085239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.347681806 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.34720019 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.347146738 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.348338644 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.346581168 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.347215552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.348161805 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.348609367 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.347631552 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.3477515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.352000608 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.346451601 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.346634877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.3480051 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.347126268 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.34718171 seconds)
  done (took 33.576699421 seconds)
done (took 87.079961335 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.33731776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.356267614 seconds)
  done (took 5.928584115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.408865446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.407763465 seconds)
  done (took 4.051721393 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.348466793 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.347882836 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.348905634 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.348578603 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.3477851 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.349054785 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.348500868 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.348374835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.348516807 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.34905313 seconds)
  done (took 14.72099275 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.348401645 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.348865741 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.347989891 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.352773351 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.348188279 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.348764026 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.349137916 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.348862894 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.348304763 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.349453054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.352509185 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.349649045 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.348621699 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.348478404 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.349718807 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.349493079 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.350435424 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.349127827 seconds)
  done (took 25.525320651 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.3633447 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.371427544 seconds)
  done (took 3.971555305 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49179247 seconds)
    (2/7) benchmarking "second"...
    done (took 1.391947206 seconds)
    (3/7) benchmarking "month"...
    done (took 1.465458189 seconds)
    (4/7) benchmarking "year"...
    done (took 1.456663661 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.392433956 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.371505197 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.393319757 seconds)
  done (took 11.2005179 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.350835314 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.556117707 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.685604064 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.907853222 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.352451782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.353937251 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.144607655 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.354348929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.355920672 seconds)
  done (took 15.300359798 seconds)
done (took 81.933320273 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.338602065 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.411376485 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.363982814 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.363228015 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.646607179 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.379996986 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.345530602 seconds)
done (took 17.08687888 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.32628475 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.343591543 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.325320097 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.349497622 seconds)
  done (took 10.582028281 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.345679441 seconds)
    (2/2) benchmarking "read"...
    done (took 1.626303963 seconds)
  done (took 5.20994459 seconds)
done (took 17.030104706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352745893 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.353340839 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.354128332 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.352882048 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.353536421 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.351838576 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.353264559 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.351504859 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.354168624 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.354348684 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.354255454 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354105724 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351646001 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351816973 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351917766 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.35388114 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352270318 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.353277195 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35387028 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354953395 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.353094749 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.353098692 seconds)
    (23/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.353297782 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.353661169 seconds)
  done (took 33.71699781 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.354843911 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.352192569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.356000042 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.355877873 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.35373831 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.35483312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.354566383 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.353923567 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.354166186 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.354672473 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354575523 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.354318198 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.355696676 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.353920265 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35607411 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.354206524 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.35459774 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354658312 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355727375 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.355015561 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.356676601 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354723847 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.354184112 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355842118 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.355667618 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356302333 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.354926923 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.353776409 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357005967 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.35569725 seconds)
  done (took 41.889796399 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.363773019 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.363821867 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.358157944 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.359483283 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.359536929 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.359897314 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.35901612 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.358788854 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.359455802 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.359797071 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.360014374 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.359794466 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.361773225 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.360513605 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.36173762 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.360055822 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.359691357 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.359171408 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.359405036 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.360801943 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.359862486 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.360994143 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.360017713 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.361105461 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.362568242 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.361683833 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.36060235 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.362623766 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.359978744 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.361500453 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.361166725 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.360968786 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.36110113 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.36097365 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.360498923 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.361143661 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.364288337 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.366609336 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.361859964 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.361318628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.362385889 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.359779902 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.361886781 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.362830212 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.362382039 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.362166483 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.36280188 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.36189048 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.362631499 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.363759557 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.363350307 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.361649438 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.362493768 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.363276922 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.363248181 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.362274503 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.363182494 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.362614725 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.362634464 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.364400549 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.362639785 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.362752233 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.361770745 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.362941306 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.365125442 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.3631187 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.363373172 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.362173428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.362913577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.363018659 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.364541081 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.362465047 seconds)
  done (took 99.289526815 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.362616131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.358949052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360301634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.359556352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360061158 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.360955419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.361239625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359512429 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360937769 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.360899464 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362212482 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.360215323 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360780082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.361387974 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.360562694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360508659 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.362845669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361684971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.362532657 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.362658195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362530096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.361370221 seconds)
  done (took 31.191341375 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361085273 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.362886894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.360590697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.363823936 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.362359961 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.365204186 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.361854042 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362455892 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362349261 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362759431 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363609905 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363215138 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.363386913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36112079 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.361964639 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.363150338 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363243332 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.365518172 seconds)
  done (took 25.778230449 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.362131548 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.363969044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.362198767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.361064742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.362440671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.363565678 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363418974 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.363634961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.365541153 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.361864232 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.364474674 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364112039 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.363666813 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363828212 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363357877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.362853278 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.364479159 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36235427 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362790001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.362654085 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.363497749 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36661185 seconds)
  done (took 31.244109107 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364880811 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.364103036 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.364295813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.363116766 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.3652037 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.364853986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.366150649 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.364030632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.366988828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.366622069 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365165503 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.365210432 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.36711894 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.363792533 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.363993937 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363564396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.364909442 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.364495566 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364743557 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.365180648 seconds)
  done (took 28.547036922 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.368181588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368216643 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367628416 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367541165 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368183637 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.374876008 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368506221 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.367515648 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368219792 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.367879921 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36745821 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368976192 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368060317 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368803833 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368875069 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367728591 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368966375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368972942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368302611 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368354583 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368447459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.368892532 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368258557 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367775428 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368876884 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369851513 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369928384 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.369353447 seconds)
  done (took 39.575321323 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367791329 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.36835437 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.365663951 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.367010396 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.365666643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.366954867 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.367621059 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.367488566 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.370074187 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.36676841 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.368334913 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.366841709 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.369865403 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.369417538 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370806477 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.370235605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369384046 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.369330353 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.367480881 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366906629 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.369127425 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36890083 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.368786768 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368983317 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367737761 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.370115867 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.367733452 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367633888 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.36964637 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.368444583 seconds)
  done (took 42.301019933 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.416285266 seconds)
    (2/2) benchmarking "in"...
    done (took 1.418412892 seconds)
  done (took 4.087599628 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.368459627 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370418538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.369573259 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.369881536 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.369492745 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.369062691 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.370016224 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367596203 seconds)
  done (took 12.208388696 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.364612318 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.371941657 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.371165645 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.371567841 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.36993052 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.365451165 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372705554 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.375226966 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.366878914 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.366785852 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.371489619 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.369430661 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.368246995 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367783166 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.366849362 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367634815 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.37447948 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.372062357 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.371651795 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.373172113 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371932968 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368159095 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.371752963 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.372099432 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.367611543 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.374431092 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.373771972 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.377411426 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366673555 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372246836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.369345523 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.373847776 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.372946284 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.373118526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.373491346 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.373185774 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375776548 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374241373 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.374128699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.375963929 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373962028 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.371898532 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.368475862 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.370588891 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.370559258 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.376371763 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.374014939 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.371698155 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.369555218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.372181292 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.378913959 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369630849 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.373642297 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372256771 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.372884402 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377785729 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.378683666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.371925759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.374914522 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.377909637 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.38279814 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.379605759 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.373253008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.377088496 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378936178 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.385170498 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378556666 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.37811851 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.373626499 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.373760029 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.376381005 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384760152 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.384187614 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.377597682 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.375995733 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.37438536 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370544989 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375696702 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378050285 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.377033246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.3768996 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3750658 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378566079 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385579424 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.370260623 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.376725732 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.376269686 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.376407549 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.372176196 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379118885 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.380267413 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.377301079 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.371061175 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.371344563 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.372003026 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.378324885 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.370716994 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372688137 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.37612159 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.376743391 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375887461 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.37529195 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.37787106 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379213946 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.379452184 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.378275017 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.379205401 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373120376 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.379358628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.38060187 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377210707 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.372181463 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.376619314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.377789742 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.374461813 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.378052211 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.38007242 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.372884719 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.380289621 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.377574832 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381520774 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.391444203 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.380550218 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.379153672 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.377771294 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.385306619 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.379037297 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.375986273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.382452841 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.377575464 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.377624175 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.37576601 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.382507789 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.373552637 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.380451477 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.37461104 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.378879972 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.380143076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.380108375 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.376600023 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.377231263 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.375795736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.377290022 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.377542119 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.382394791 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.377389816 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.384204584 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.379530831 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.378353534 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.379642248 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.380732489 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.379746693 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.375924819 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.381388056 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.376065133 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.382160875 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.375932172 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.38152633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380793575 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.382755959 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381151054 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.375211224 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377629267 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.382674693 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.380442914 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.377437543 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.380232009 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.381307474 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.381903531 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.37563137 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.381728486 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.37426127 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.379354303 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.387532172 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.381341962 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.382006156 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.379797885 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.38241058 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381507642 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.382423849 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.377840397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.381888319 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.382939305 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.382913117 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.384879038 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382984041 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.382269705 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.37541033 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.378454585 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.384408963 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.380000805 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.387908378 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388482624 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390050661 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.379624474 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.38523392 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.377907254 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.385325305 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.382144946 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.384900768 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.384048998 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382181662 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.377613283 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.384917204 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.379671623 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.384217277 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.377915304 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.38569965 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.383862256 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.384931409 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383990586 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.378769134 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381033105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.384063129 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.384314097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383505317 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.378303737 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.383636307 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.378008935 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.377539307 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.384152308 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.383031584 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.386143274 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.385734028 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38151501 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383895755 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.381206203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.378839825 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.385861501 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381879907 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.383338976 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388203343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.382909069 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.382226985 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38784199 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.386583615 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.382537641 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.385058883 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.388401947 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.383110912 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.384618052 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.389376497 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.389062757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.386343956 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.386122669 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.381942405 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.38901905 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.387258814 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.38841226 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.380890039 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.388573036 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.381539989 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.385942309 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.383882943 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.384502058 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.383485742 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385167886 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389558277 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.387416067 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.383114092 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.38753304 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.386755726 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.388719246 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383780433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.392777037 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.388455253 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.384500427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.386299185 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.384762903 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.391107478 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.383029487 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.387386797 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.383036951 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.394156723 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.399812944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.389884519 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.3868416 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.388355576 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.389255291 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.385869242 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.383860086 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.383844611 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.385291676 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.384475238 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.384037927 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.387874513 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.38379748 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.390920724 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386039606 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.386485743 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.390186489 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.388895848 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.383744126 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.390213919 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.389777972 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.389963391 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.384732807 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.390672089 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.386172333 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38674331 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.387549231 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.386163813 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.391968709 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390101061 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.388166376 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.387523545 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.386901451 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.385735909 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.386735925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.392616773 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.389659515 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.395635618 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.387227387 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.392067683 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.388420087 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393355933 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.393573153 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.38927406 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.396074866 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.389923167 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.384245022 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.386607612 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.392222263 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.393137912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.396630158 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.387767135 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.394654292 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.391655802 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.392776294 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.391569929 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.392453599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.392476019 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.392790252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.39501245 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.391956967 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.388730984 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.389973252 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.393352743 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.393576422 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.391799668 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.386686612 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.391321142 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.395464435 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.388003398 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.389399439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.389527914 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.392299469 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.393287279 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.393861059 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.393475118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.393431676 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.394667744 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.39451976 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395282801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.392882938 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.393847076 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397953567 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.394799981 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.39834666 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.389209603 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.394180978 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.392946332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.389343412 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.389453907 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.390852142 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.395111597 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.388800399 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.402052737 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.395263897 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.390663718 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.392344064 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.396921679 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.389613267 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398506667 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.409829043 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.39029247 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.398272527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.3934552 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.390790138 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.39834103 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.395719668 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.388251092 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.392081859 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39584982 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.400740424 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.390553094 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.395585161 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.390797166 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.396573712 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.3952662 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.395727569 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.395681053 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.395384677 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.392009489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.397000907 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.394388304 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.398643129 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.391469606 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392720282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.392626821 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.401276487 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.399842103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.39396375 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.398899417 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.397215636 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.39272503 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.390581492 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.398541754 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.394214887 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.398116693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.394224164 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.395807519 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.396280848 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.395551705 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.393171682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.399540586 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.392384607 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.393567646 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.398941725 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.398047095 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399539147 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.393915957 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.399230059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.392795697 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.393195778 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.397854102 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.393489328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.399102363 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.396810719 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.397589024 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394638497 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.397115128 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.398234142 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3987579 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.391834541 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.39414949 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.401640363 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396609037 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.400823238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.397905598 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.401628358 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.394005108 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.39707191 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.398550572 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.393672696 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.394759707 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.399813611 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.396340958 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.394539824 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.396070394 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.400617032 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.402347019 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.397858013 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.394863221 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.404919204 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.401855925 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.401838247 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.397273714 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.397996762 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.39554882 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.400618902 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.401612347 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.393741869 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402815658 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.400391317 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.402077353 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398635156 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.398314791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.396414847 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.404999276 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.40158083 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.395694854 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.401829708 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.396525068 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.404199698 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402878281 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.399874046 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.395663714 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.39730493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.400831003 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.401289531 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.401863325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399545495 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.398576832 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.397234658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.404464157 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.403003494 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.401637851 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.400233786 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.397009681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.403281978 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.397289235 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.400957971 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.39859161 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.397754503 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.404516467 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.403140945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.400160255 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.405043843 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.405236523 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.401164246 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.397924799 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.39960207 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.40215206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40644037 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.403069817 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397940019 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.398841652 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.403770787 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.403764935 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.404367445 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.400870646 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412778549 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.408646596 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.398540566 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.400120157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.403178123 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.40617851 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.404186448 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.403498757 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.401180078 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.402621644 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.408264417 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.40429861 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.406306814 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.403848464 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.400707476 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.407540034 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.401119808 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.404325946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.404300338 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.406937657 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.405250725 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.404969967 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.412703827 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.406883211 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409159271 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.42358743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.404964084 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.404957002 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.408736041 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.401053443 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.407974131 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.403266075 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.407685608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.407341777 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.407208443 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.40594744 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.4013549 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406124742 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.406247254 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.412644822 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.405220127 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.399586971 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.403552927 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.405945545 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.40624164 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.411790163 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.406567077 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.407417018 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.407560152 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.401109577 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.41320276 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.414871636 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.409903431 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.408330671 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.406560583 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.405747735 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.406880526 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.409607181 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.412192132 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.408279874 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.408634086 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.404365953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.408368336 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.410314933 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.403274469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.403026635 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.404159965 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.406726542 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.414451867 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.419166641 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.408928962 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.405175654 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.409727415 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.408322837 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.404435053 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.409528464 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.407874104 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.405303439 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.403954041 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.411585837 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.410528494 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.408590583 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.407128629 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.41379521 seconds)
  done (took 829.293934332 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.407555504 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40915062 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407041047 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.408947461 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408955148 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408056569 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406670482 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.408724268 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.409478529 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.408005199 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.407894149 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408229565 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.408724227 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408466087 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40803287 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.409533052 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408037461 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.408848002 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407994205 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407960009 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.409890334 seconds)
  done (took 30.862692427 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.410925327 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.409453962 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.409821077 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.412367073 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.409287265 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.411190021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.409606106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.412220536 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.411547387 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409003026 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.412587004 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.411344873 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.412255922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.410943122 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41288143 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411620264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.411635531 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.410785775 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.413013596 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.409669334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41268811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.411701083 seconds)
  done (took 32.334181603 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.413667731 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.412397967 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.407011833 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.411327393 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.413077043 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.411943025 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.413262049 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.412291288 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.412014431 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.40695451 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.407384597 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.409259092 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.412591153 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.416677314 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.409789876 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.415154243 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.412712953 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.41304742 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.413693484 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.412708382 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.415745927 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.415469948 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.412927929 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.407833699 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.416807682 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.415074208 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.413436792 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.414448921 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.40967269 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.415541156 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.413829549 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.409372233 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.411044533 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.409673129 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.410236575 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.417334261 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.414153041 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.413178605 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.413226081 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.418389934 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.428562189 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.414156874 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.415591314 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.417701888 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.414999449 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.412867924 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.419745987 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.415177605 seconds)
  done (took 69.134583778 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.416352431 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.415803924 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.414301691 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.415661176 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.416335473 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.416324697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.415686749 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.414731376 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.413929944 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.415354282 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.417317053 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.415985913 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.414348677 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.415249645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.415620109 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.414421661 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.414747279 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.414063816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.415209278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.415035205 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.415808999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.416220806 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.416915685 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.416680051 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.417360703 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.414753422 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415031266 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.417355565 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.416619769 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.415168566 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.416816829 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.415975072 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.417952489 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.41602161 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.415725263 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.41643572 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.418705467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.417046631 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.418555541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.416298699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.417274147 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.417008943 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.41817136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.417608289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.416903902 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.416820651 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.41710592 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.416303571 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.417348599 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.419028865 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.418800198 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.418546905 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.419142461 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.418275229 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.418625444 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.41813046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.417698693 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.417534248 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.419700164 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.417874399 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.416581265 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.418467235 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.418312733 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.420227873 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.420847296 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.417867605 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.418258865 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.419077438 seconds)
  done (took 97.639115472 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.420515756 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.418960949 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.420289343 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419528474 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.420204905 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.42096242 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.421332945 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.421018152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.420624547 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.422331172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.420402536 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.420823476 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.419791976 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.420838544 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.42028991 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.42189267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.421617778 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.421315896 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.421925705 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.421863779 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.420676399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.42159977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.423626907 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.422518267 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.42172538 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.422295719 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.421335577 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.422015126 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.420286384 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.422072381 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.421661396 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.421417784 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.421113318 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.421238381 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.421571249 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.421012863 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.420915146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.420877213 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.422182474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.422022284 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.422648595 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.422802679 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.422647134 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.422302655 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.422529793 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.421928854 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.423735405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.424215132 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.421861362 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.422863617 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.424450219 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.423125778 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.422544046 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.423501646 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.423424384 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.424076002 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.424312941 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.422402464 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.424171911 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.424204553 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.425413383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.423624866 seconds)
  done (took 89.45950999 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.424140984 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.423504649 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.42332646 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.422670146 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.42430067 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.424477292 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.424949527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.42384331 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.424462866 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.424052151 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425872326 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.423819557 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425823308 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.424600852 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.422962361 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.425189452 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.423263594 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.42404767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.425250317 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.423117536 seconds)
  done (took 29.78306213 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.424755745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.426009265 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.423938115 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.424244385 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.425172341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.424900406 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.424764248 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.425995111 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.42504376 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42519605 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.426520997 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.426759445 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424644726 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.42538931 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.426102891 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.425430758 seconds)
  done (took 24.105415489 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.424589427 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.425477835 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.425788502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.426204743 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.424922487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.424431303 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.426003609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.425063946 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.42510889 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.426607266 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.426874242 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.425577772 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.425826887 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.426922813 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.426700349 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.427732921 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.425726229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.42705603 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.427119254 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.429007456 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.427890821 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.426469407 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.428788963 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.429292362 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.427589391 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.427972332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.426295282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.426345193 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.428287258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.428441931 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.426748287 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.428436375 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.427465686 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.428563062 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.428730505 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.429155257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.430026874 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.427872676 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.428745485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.429115622 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.429475345 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.428464922 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.42911402 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.430701258 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.429219163 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.430428576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.429549104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.429044324 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.429083113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.430720838 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.428228819 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.430778484 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.430266274 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.430953436 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.429228551 seconds)
  done (took 79.831975937 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.432231926 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.429993336 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.428494967 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.429677336 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.429999087 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.431363094 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.429631241 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.430560897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.428542221 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.429348682 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.42846845 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.43122401 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.428052812 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.428461194 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.426862721 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.429014779 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.4274756 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.428767575 seconds)
  done (took 27.032536556 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.429229935 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.429114965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.42940151 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.428113065 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.42944982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.430560458 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.428437534 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.431776355 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.429875768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.42962687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.42940984 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.428927038 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.429391223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.431163573 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.430384012 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.428918064 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.429574926 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.428957155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.429295406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.428463149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.429232854 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.430910573 seconds)
  done (took 32.75450182 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.423402062 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.422874917 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.423977571 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.440214593 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.436749841 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.425012974 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.422446239 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.42445458 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.445627335 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.465788688 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.460523536 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.436873428 seconds)
  done (took 18.531629624 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431903529 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431807327 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.42932774 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43178473 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432804314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429841388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431358914 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430540087 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432749687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430548593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432264233 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432297653 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431930802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430674067 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429498465 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429462601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42761594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427441391 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427608667 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430606775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427154381 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428437562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427327218 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427970249 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427719909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42689166 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428996396 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428109171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425885073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427585912 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427184561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426192684 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429076993 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426532333 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426626247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426663679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425126761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425936348 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427119272 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427192862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.426154652 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426701627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426534953 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424831396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424672888 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424697317 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425216418 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424937612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424395522 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426774336 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425376245 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425323155 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42530632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424865441 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426126534 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426067834 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425346221 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424379536 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425277211 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424655847 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42419854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42574202 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424101531 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424412795 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426005044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425613398 seconds)
  done (took 95.519853846 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424534579 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.424311286 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42431716 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423543955 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424478295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424399261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423538022 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426126938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42576842 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426401039 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425552672 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424866071 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42436105 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425522008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42561275 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424671174 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425885115 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427256036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426090222 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426674349 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425637181 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426267735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425856204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425995719 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425313186 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427470566 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425496549 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425268184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426591949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424930443 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427052402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42488348 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42716962 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.424848963 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427223581 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425922265 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426541466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427356536 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426423159 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42814786 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426423775 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427943814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427548407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426135286 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427791671 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426860039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426516092 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425491459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426284657 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427905395 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426669221 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428417211 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427210034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427700493 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428745597 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427990132 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428130297 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427216381 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428024523 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429693988 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428477452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427640537 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429145124 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426936417 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426978192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427773972 seconds)
  done (took 95.444871069 seconds)
done (took 1942.796312579 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.587726991 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.544792431 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.422883522 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.435371633 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.423075275 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.447101375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.436941426 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.424504724 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.42270241 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.424217445 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.423745282 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.61131451 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.418001737 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.423630242 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.422386697 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.523067371 seconds)
  done (took 28.692869587 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.455590642 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.431800884 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.552067961 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.427353393 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.455729162 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.635283325 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.490199458 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.430634471 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.616871577 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.450443306 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.433397147 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.454894755 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.428716851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.432198806 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.44895274 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.634764726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.694978858 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.420791563 seconds)
  done (took 31.196786937 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.920436772 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.446579798 seconds)
  done (took 5.669943909 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.452305471 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.429091667 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.429847604 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.426785716 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.421429012 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.441425829 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.42785909 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.440914003 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.423557271 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.566583085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.431250958 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.441245804 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.427500501 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.430254949 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.432992736 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.475839833 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.582090234 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.433520375 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.433298301 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.434977083 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.429813358 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.531812263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.474111467 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.435335456 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.56730844 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.425890366 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.431682324 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.43653256 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.559700363 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.435813877 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.429706279 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.430494063 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.432128964 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.423724978 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.924196186 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.424878809 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.439645691 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.458405498 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.433158827 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.578472493 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.431255365 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.436223353 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.424208245 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.947457308 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.556908067 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.561440402 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.425212957 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.432790814 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.433260176 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.501798018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.432290944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.432303712 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.49191968 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.286778418 seconds)
  done (took 90.786771889 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.477919573 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.42476159 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606030752 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.448056239 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426525994 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424624467 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.423962911 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.734873002 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.474629765 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424132115 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.74225588 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.026680093 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.42836792 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.492709177 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.407092392 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.426889561 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424767736 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.423101185 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.426127522 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.423561726 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.995563595 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425386266 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.424198429 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.557520237 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.465330736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96273421 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.423911739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.422753178 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.441481664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.423932982 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.977543177 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.426593723 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.519857602 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.423504341 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.709937269 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.825637134 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787864176 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.439618344 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.433357979 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.423859111 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.433309128 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942325059 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805344169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.423633688 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.425213477 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.951826956 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.423874995 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.43069037 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.433176146 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.682281715 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425040598 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.424582727 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424303989 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.424291381 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.422719762 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.471281097 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.523030552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.961086641 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.423196843 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.423434329 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.444701418 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.424275089 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.428519047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424928636 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.441248802 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.803842255 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.620603743 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.423418077 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.803475704 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962234097 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.42942303 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.034134557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.424236464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.426073031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.671929617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.423322274 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.424816553 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946683088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.457585365 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.423899066 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.782424159 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.426281515 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.730015021 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.4416989 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423660061 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.018953291 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.427219164 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.442090683 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.423441339 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.425173056 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.424616057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42497574 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.71103563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.459874024 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.424079109 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.424527913 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.444861607 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424685128 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.442334274 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.430182922 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035010769 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.434403023 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.424196144 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425656795 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42506773 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.442866989 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.426877116 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.425525155 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.701742737 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.425561442 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.450455468 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.425490388 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.425361062 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.436526643 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.507538207 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.432132416 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.749004271 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.425982856 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425706209 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.428678773 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426270215 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.479103955 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425955173 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.428933184 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.314479842 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.689802202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.444381806 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.426686014 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.425476364 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425866569 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.456926631 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426569213 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.485500633 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.426179437 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.243362752 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.444084321 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.433982177 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.426623943 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.434094632 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.432807814 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.434708442 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.427208406 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730033483 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.710148932 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608319511 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.42820028 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.441698942 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.21903551 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.432947133 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608867076 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.445720805 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.4262114 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.677793498 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.644453656 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.429373444 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.432667793 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.42942662 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.698604777 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.431817676 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75118623 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.998366154 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.428626595 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.437894357 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.247872198 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.150031114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.429738156 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.431015512 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.727163019 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.446385371 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429670525 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.428777686 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.427024191 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.429048066 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.430645601 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.432786547 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.428882382 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.430229549 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.732466578 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.621396286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.445984999 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.43623621 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951643521 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.459429311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429568159 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.43883011 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.432438322 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.430507878 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.539157773 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.4316618 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.429692572 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.432312544 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.437022122 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966420747 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.436508086 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.428112907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.619976777 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.15537564 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.427858584 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428562938 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429828293 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.35215303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975459607 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.43430156 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.749195885 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.434951303 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.468669731 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.429334356 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.513931007 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.973350551 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.431673648 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.428941878 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.111127967 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.429008003 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.926038981 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.429087309 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.43224806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.036452899 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.428870126 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.429620834 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.439166889 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428929913 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.754108843 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.428285243 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.428915323 seconds)
  done (took 520.529457554 seconds)
done (took 678.177521417 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429538198 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.429055866 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.41875976 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.436245854 seconds)
  done (took 11.020989665 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.469653248 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.435362431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.442885859 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.433379136 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.447083942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.435267554 seconds)
  done (took 9.971146137 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.429300068 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.431504074 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.435730137 seconds)
  done (took 8.604334205 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.655093252 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.452496784 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.802296874 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.429824781 seconds)
  done (took 9.648111399 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.441938816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.443044465 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.442611939 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.445858238 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.470058055 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.471395744 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.448270273 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.446637144 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.471589324 seconds)
  done (took 14.389505921 seconds)
done (took 54.943401734 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.411926099 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.418281459 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.555189942 seconds)
    (4/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.479825516 seconds)
    (5/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.410822682 seconds)
    (6/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.542980712 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.499279883 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.533095814 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.411663523 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.516048527 seconds)
    (11/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.783087922 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.462772259 seconds)
    (13/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.587331997 seconds)
    (14/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412157644 seconds)
    (15/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.462125689 seconds)
    (16/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.429602785 seconds)
    (17/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.460018249 seconds)
    (18/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.469251791 seconds)
    (19/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.599988228 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.430695689 seconds)
    (21/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.65872291 seconds)
    (22/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.619913006 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.525896848 seconds)
    (24/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.422249401 seconds)
    (25/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.471452064 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.41594391 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.472345548 seconds)
    (28/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.133314788 seconds)
    (29/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.406951095 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.411976339 seconds)
    (31/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.497823733 seconds)
    (32/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.613084606 seconds)
    (33/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.660879384 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.563800945 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.412191925 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.633440859 seconds)
    (37/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.412809928 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.694338359 seconds)
    (39/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.569269892 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.430344246 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.566634976 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.516972662 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.552539426 seconds)
    (44/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.412253382 seconds)
    (45/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.430363819 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.520431438 seconds)
    (47/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.460532646 seconds)
    (48/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.465178128 seconds)
    (49/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.415965923 seconds)
    (50/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.690528558 seconds)
    (51/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.413681483 seconds)
    (52/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.481715677 seconds)
    (53/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.572908361 seconds)
    (54/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.590387296 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.430099066 seconds)
    (56/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.512723339 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.46708779 seconds)
    (58/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.566929419 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.589828964 seconds)
    (60/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.256285487 seconds)
    (61/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.209560632 seconds)
    (62/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.472057612 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.539378694 seconds)
    (64/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.414068008 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.540869632 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.430561746 seconds)
    (67/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.507101985 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.557864683 seconds)
    (69/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.414554504 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.53872216 seconds)
    (71/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.462238899 seconds)
    (72/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.433298956 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.621749545 seconds)
    (74/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.216598798 seconds)
    (75/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.460570992 seconds)
    (76/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.565356312 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.474389168 seconds)
    (78/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.513894603 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.663641359 seconds)
    (80/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.420966227 seconds)
    (81/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.281913476 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.296311852 seconds)
    (83/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.581450112 seconds)
    (84/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.469078668 seconds)
    (85/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416612616 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.51620793 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.15245241 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.551485625 seconds)
    (89/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.414219806 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.464810692 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.539950876 seconds)
    (92/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.474655132 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.566050439 seconds)
    (94/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.415889045 seconds)
    (95/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.423066636 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.722022078 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.203945483 seconds)
    (98/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.473805043 seconds)
    (99/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.12536668 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.443833967 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.421126367 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.611919104 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.540171534 seconds)
    (104/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.670394627 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.560069209 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.465218594 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.211276091 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.478005031 seconds)
    (109/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.598682231 seconds)
    (110/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.518297212 seconds)
    (111/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.299796185 seconds)
    (112/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.5262861 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.455285448 seconds)
    (114/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.627067831 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.417143162 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.623976879 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.417570545 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.630620365 seconds)
    (119/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.545567554 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.546187748 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.586720083 seconds)
    (122/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.471702072 seconds)
    (123/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.416550322 seconds)
    (124/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.315140286 seconds)
    (125/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.348930901 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.473644453 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.477915269 seconds)
    (128/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.701116375 seconds)
    (129/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.554271988 seconds)
    (130/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.46843763 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.539952286 seconds)
    (132/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.418337586 seconds)
    (133/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.437012556 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.493417561 seconds)
    (135/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.417725059 seconds)
    (136/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.419994391 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.542722072 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.566737396 seconds)
    (139/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.530195131 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.550504301 seconds)
    (141/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.253139842 seconds)
    (142/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.333624959 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.606524322 seconds)
    (144/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.163154944 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.599781219 seconds)
    (146/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.469851994 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.699884359 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.474297407 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.249232793 seconds)
    (150/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.437728912 seconds)
    (151/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.446851321 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.472382281 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.499126851 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.604271618 seconds)
    (155/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.486267309 seconds)
    (156/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.427743854 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.420832308 seconds)
    (158/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.43762127 seconds)
    (159/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.624113284 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.304606808 seconds)
    (161/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.427658194 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.794521519 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.42265609 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.531611873 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.475086978 seconds)
    (166/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.511641022 seconds)
    (167/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.422077327 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.562738478 seconds)
    (169/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.480310835 seconds)
    (170/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.578847506 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.553948517 seconds)
    (172/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.112311296 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.441880429 seconds)
    (174/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.603655644 seconds)
    (175/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.670434686 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.47966226 seconds)
    (177/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.424479348 seconds)
    (178/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.270534152 seconds)
    (179/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.582247153 seconds)
    (180/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.481295831 seconds)
    (181/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.600135219 seconds)
    (182/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.71376251 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.557271192 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.63678855 seconds)
    (185/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.110258501 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.664033983 seconds)
    (187/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.556061878 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.616552027 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.297592995 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.566427894 seconds)
    (191/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.421801824 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.477117611 seconds)
  done (took 360.081027889 seconds)
done (took 361.388970049 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.465039368 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.526995065 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.447533085 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.448685051 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449119358 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451118673 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.468094523 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.449166485 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.458723079 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.459093626 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.451647795 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.455397327 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.462815312 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.457224327 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.482578564 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.449939843 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.448957372 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.457738835 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.462106222 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.463069562 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.452466725 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451127855 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.470874561 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.449793263 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.458462631 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.457982514 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.45671866 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.448714944 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.455269293 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.462129188 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.454502755 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.456923397 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.463358566 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.459416211 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452509713 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.457445392 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452395364 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.529921148 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.468329872 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.460334632 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.456158323 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.464282653 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.455312965 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.455937266 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.458681211 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.471549174 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.459879499 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466114467 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.454401841 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.445952237 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.467946345 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.460415244 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.455727665 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.445165316 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.446843136 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.467319253 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.45995881 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.468416788 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.458038248 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453879585 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.486673498 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468100545 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.46095942 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.461010899 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.458425444 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.464993541 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.45916184 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.465872646 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.456089261 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455361615 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454222066 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.459435855 seconds)
done (took 114.475348008 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.582456034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.450888638 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.594532263 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.457508854 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.619260904 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.590024227 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.456683891 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.458163484 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.458133731 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.275934174 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.457981701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.45812759 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.453609605 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.457206554 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.58817514 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.460312956 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.457771921 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.170950923 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.460032357 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.599102013 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.451480459 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.457791832 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.458421367 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.277265923 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.454539809 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.449678696 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.599361432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.459273908 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.170875648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.448353278 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.451431583 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.171591701 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.601788874 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.477966106 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.470260204 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.468117812 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.620842755 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464397575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.585983508 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.585887906 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.596620026 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.498817894 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.450332876 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.45478656 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.462512126 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.462493307 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.460279285 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.487565351 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.453254546 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.45992457 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.173878083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.472448112 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.459922832 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.460981265 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.459256477 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.491571971 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.460751076 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.462561987 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.602435689 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.462802708 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.585200779 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.279663528 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.279509616 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.462225208 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.453235478 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.461676465 seconds)
  done (took 116.769884402 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.526195429 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.533496253 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.567075674 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.457178548 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.50847218 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.567794856 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.457941723 seconds)
  done (took 11.943679143 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.46390101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.463847361 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.506455923 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.506657947 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.461897956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.614328112 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463361274 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.468957453 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.460333155 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.50928622 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.465704751 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.464189023 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.471754891 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.456864574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.505019345 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.469412231 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.572945925 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.459833366 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.464500222 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.612280404 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.462548887 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.471475127 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.509753008 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.470083687 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.466044045 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.464040359 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.232458468 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463060961 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4639884 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.467084699 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.463040251 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.512392436 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.466051425 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.457405657 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.464184491 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.575428446 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.465334266 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.464190549 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.467179202 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.459965382 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.467655274 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.465139181 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.467614886 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.464733539 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.467156029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.483065709 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.468786995 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.464531469 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.464809461 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.468490928 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.51096358 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.46700565 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.463946832 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.464032616 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.517159468 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.474628815 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465897302 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.46586066 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.470574713 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465468148 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.615753991 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.508470482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.468705676 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.510596652 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466521565 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.466802112 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.468583197 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.467353784 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.553556839 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.466663977 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.510068366 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.466250687 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.642162363 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.487074151 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468544867 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.464308515 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.464964436 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468375154 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.458554856 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.46815497 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.466142423 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.463196008 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.468408704 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467244976 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.466124605 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.625107389 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.572248431 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.467888137 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.47580284 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.470076153 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.466803397 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.51668491 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.468074672 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.467470351 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.515431652 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.579215272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.5161918 seconds)
  done (took 150.268266907 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.477090968 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.476904017 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.465620771 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.490327836 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.462851645 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.463241437 seconds)
  done (took 10.167112148 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.467613451 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.470046069 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.467207067 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.467606397 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.469086808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.474323873 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.474471006 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466022803 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.473591765 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.470647783 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.473474531 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.474773828 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.480694223 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.469463689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.474142636 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.471972247 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.477731977 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.468786293 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.470299494 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470644421 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464738438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.471779017 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470576797 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.467677567 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.477327495 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.472595619 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.486492174 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.473718458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.470976815 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.472655246 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.473002796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.475526858 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.468224119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.471257117 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.479308899 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.468564471 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473172193 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.478540564 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.471985353 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.477474673 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.481341332 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.472459903 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.475215281 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.480349235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.467992052 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.47171097 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.482968601 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.487309802 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.475809966 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.479771414 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.479693197 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.473036071 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.474569328 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.480615655 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.46970807 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470249196 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.483397648 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.479722947 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.472893637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.468536525 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.475029372 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.475915582 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.469411118 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.480487809 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.473572062 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.481078861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.470417337 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.476087024 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473810654 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.473606795 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.482172955 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.473130737 seconds)
  done (took 108.464629897 seconds)
done (took 398.934193231 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.766182628 seconds)
  done (took 4.10191809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.559078321 seconds)
  done (took 3.894359098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.450940291 seconds)
  done (took 23.795586746 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.551744796 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.483231355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.468468097 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.46438932 seconds)
  done (took 11.303609617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.805747493 seconds)
  done (took 4.140928285 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.476964958 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.46784787 seconds)
  done (took 6.282288598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.739097003 seconds)
  done (took 4.075738908 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.807294003 seconds)
  done (took 4.152491695 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.486133823 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.480624497 seconds)
  done (took 6.309720681 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.457309519 seconds)
  done (took 3.792588935 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.96131744 seconds)
  done (took 21.29746453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.477685095 seconds)
  done (took 3.816150305 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.502639974 seconds)
  done (took 3.839460356 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.152505307 seconds)
  done (took 6.489843739 seconds)
done (took 108.627816636 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.463316906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.463331789 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.466572288 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.465807191 seconds)
  done (took 11.19606277 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.530651463 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.53073897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.537409803 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.530751455 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.52978589 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.529651961 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.504221068 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.503812278 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.531815126 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.529751053 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.537450585 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.530667642 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.532047428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.504816379 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.530040774 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.53824516 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.531040868 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.536872654 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.505839468 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.533293541 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.480800176 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.533353964 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.532838379 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.481408808 seconds)
  done (took 37.905785492 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.990593229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.544373154 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.62689455 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.524728951 seconds)
  done (took 8.02633629 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.560316885 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.56279524 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.580432548 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.616754299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.649537986 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.579468046 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.503763002 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.502532664 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.487740649 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.562987256 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.614051228 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.550600771 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.646942139 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.479930013 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.76881407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.480088657 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.480383661 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.561332699 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.613849102 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.630326101 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.481817443 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.560121878 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.567137629 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.55146193 seconds)
  done (took 38.935099866 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.485668505 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.499415903 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.479672559 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.495374655 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.481102304 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.480702308 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.481870562 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.486633707 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.479049728 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.47952348 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.480142165 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.494990664 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.480288224 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.481223445 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.487547732 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.48357868 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.481698404 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.487419657 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.487943405 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.481606276 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.482162688 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.489127612 seconds)
  done (took 34.007109808 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.470779358 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.470388093 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.820517173 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.726129607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.469119 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.477771655 seconds)
  done (took 14.776581086 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.548102201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.694381698 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.476624277 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.84286092 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.927734879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.480179539 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.476386028 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.72924888 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.046453905 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.045382388 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.542795843 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.545736502 seconds)
  done (took 21.698802448 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.484114624 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.469729409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.482179816 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.486095683 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.532605879 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.478600173 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.483554382 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.470771622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.540708631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.538122428 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.485262144 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.534483441 seconds)
  done (took 23.330495509 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565815669 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477416337 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478300857 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523700992 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477130753 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322834985 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.545827357 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207097319 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.48135117 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753906201 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477036129 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568909058 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.732658728 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495868516 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487510038 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.465645406 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709474427 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007117718 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479875363 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480065566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531928438 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479748586 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488810641 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.719799481 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325510948 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479166505 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.741525258 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480063313 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781564801 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760598648 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759990883 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48098603 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754706432 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149730555 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575555672 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700935384 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482079606 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480926884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.485276403 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.480112499 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499553411 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482731414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762813464 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482548026 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481594574 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4929759 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216800473 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.4884169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.479999221 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481806279 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.7650469 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578796239 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.486521422 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480602373 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598285491 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482033157 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.484408483 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.609489426 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042367795 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480796931 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491472407 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.489044658 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481963458 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481912808 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131728756 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487419169 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.487500476 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486866313 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483044784 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.483514393 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508873799 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482739285 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.506521625 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483003161 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23179167 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485591615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483807646 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07542681 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495835257 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.490886783 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711647574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484146415 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483666353 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.47907793 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482910112 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224394976 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490258134 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.459056498 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546541248 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212666456 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.705869812 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502846035 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513697979 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.707249465 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.460887265 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484090772 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.484845278 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504253729 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507390324 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213825989 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484123885 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.488718057 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739905082 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.695821425 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488589521 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.47709938 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985032129 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494276342 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.515178548 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494646568 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.714771497 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.115849799 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770361749 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487318842 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517562096 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485379399 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280669561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494277477 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.495886434 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488744249 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7611475 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.320845719 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484780101 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555371737 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494701693 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.488303505 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486277597 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48846356 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48605479 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.705517982 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491884238 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777345178 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.489383827 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487896238 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.487528771 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494487529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.489640602 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.70900231 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495633977 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770416322 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487310804 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487893013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489220707 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.70828512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496289094 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.492155989 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747802093 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486214355 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49567179 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778840838 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520233787 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597717219 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51917285 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.487607529 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.767859996 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.493117681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.494262528 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490445991 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491599634 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491049505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.49677304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48767722 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121764962 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465430039 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493645633 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489444498 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.503538058 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556997649 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495220676 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712577294 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.48949873 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498307517 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.496206723 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.492209203 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714047866 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772378114 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.490318787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566678358 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.988743622 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128489539 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509495752 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.489507097 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.488404895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.48907545 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490511503 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489756561 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491327546 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713179174 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774788458 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487851603 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130225401 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492742152 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492132196 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.498205851 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772344101 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.499214044 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492235674 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.48947292 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493565399 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493447879 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77472993 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628145319 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.506240914 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492435291 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.009118568 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498717539 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492266442 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491429063 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523481959 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492645714 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358254376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753008561 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495449073 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775987641 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493218992 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.508546668 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.488268861 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491887153 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505602668 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.502595338 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501282083 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.715990679 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493757299 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494514396 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052441985 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266977224 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073860679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511191915 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.5011507 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500261888 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223843502 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493757765 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493718216 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736827039 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229492256 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493701654 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992368904 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505971669 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287747093 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776742236 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724357119 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510194837 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.495531706 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780214683 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705519402 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52666275 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506723264 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501003426 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.47134365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070173887 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494156075 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575064919 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230363246 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494651254 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49685606 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.513750719 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.496350429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912290398 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.492746992 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495970015 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495835344 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523683543 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367112074 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500230936 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496448342 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149005607 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495579901 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.018201369 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494353794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.719929855 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778615516 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.774875557 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.505888914 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.508392301 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.750502394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77961332 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497181497 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495747835 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107060529 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.360236255 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.503515434 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497723152 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298924163 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494685021 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812308271 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.509523647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.502091901 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49679952 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500919136 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499002027 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.496842833 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503518844 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47279819 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02732313 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.492431623 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499984468 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534114754 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506045182 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751528967 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.512504584 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134833594 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727230047 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514002893 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528813358 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.502191937 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504039173 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.474423726 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498569242 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499029744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512229015 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719939014 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.511519527 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.477379761 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.575906999 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709016897 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499250172 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505368906 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736076602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.497065187 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.510291746 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269529998 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530816186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504928935 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502420046 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502180553 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543132125 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568470961 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726250506 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.78607101 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.78812153 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915076374 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509042348 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50385265 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.514963249 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595185383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500485054 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.503302387 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.276163894 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143572114 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273473332 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139914554 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787520303 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503164396 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508714863 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502048923 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638336422 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500291499 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776961562 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50266041 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.503726519 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541674409 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512018146 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507740118 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713590967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778455708 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502295975 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515284421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502961345 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.502010491 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790040172 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.714336614 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036929353 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097574138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503399716 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505502325 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.242436567 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775950894 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50188011 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503754075 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5037341 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.513984328 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511206435 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.514571514 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516717344 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638633978 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787064694 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17203213 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.787324902 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.538683041 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.021309115 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508315082 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.757730328 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514461866 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.728857782 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146119371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276373135 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767516013 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573521128 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729699917 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.499847713 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6404004 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.507122563 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505483647 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505028867 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505401594 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.503793333 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.78860222 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15015799 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767711329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.509277738 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.509696912 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534848791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.730233079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726601043 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261395833 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731002973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792642163 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512360108 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505127507 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148365673 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793519807 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505985044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.508909296 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.742345406 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504884154 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532012512 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.023489956 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.503351963 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096703247 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.39460968 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527993327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510430165 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275200019 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152016206 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.511664001 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044422326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507177486 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512219626 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782880197 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.512816772 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509219008 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784714782 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.511999184 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508883177 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75816229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.145987432 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310124488 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.520219802 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508738957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.510285198 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50863898 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561716307 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506991441 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517148846 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.949295066 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506733452 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508172811 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519734991 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.519989497 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522504009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.512944477 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508118817 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.513452643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.526144481 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.498113774 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510499865 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.659799394 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086066098 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508500907 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.185857879 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.830682105 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.763077952 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.508627679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.492429246 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.51319174 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510125037 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509269298 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509261552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516782771 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101950373 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.510054058 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.805664189 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515401545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.719442757 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720649056 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.522274329 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737849785 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511740676 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537172654 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.487373745 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511563017 seconds)
  done (took 1040.849784623 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.560679308 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.552066599 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.561933814 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.587703559 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528945512 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.638844723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.612352173 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.553237226 seconds)
  done (took 21.96719606 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.511824593 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.518945596 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.507326254 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.51990721 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.509557585 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.014098803 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.511277063 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.516187666 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.529173995 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.507472348 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.519188881 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.239535295 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.535751341 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.512829661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.504981764 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.523078195 seconds)
  done (took 34.861429624 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.783384038 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.754173999 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.769071809 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.530104209 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.540774344 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.508314771 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.837308855 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.524695061 seconds)
  done (took 28.620715585 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.520897796 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.519857226 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.522118217 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.521350488 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.52090863 seconds)
  done (took 8.977953559 seconds)
done (took 1326.489799353 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.518395749 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.517057022 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.518749733 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.52046034 seconds)
  done (took 7.447933301 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.488721987 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.493826822 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.496413382 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.510142643 seconds)
  done (took 10.362400952 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.27221984 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171068751 seconds)
  done (took 5.815752178 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.027427814 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.024048792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.021321528 seconds)
  done (took 7.447358609 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.809511946 seconds)
  done (took 3.184567126 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.468210752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.512574848 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.201473898 seconds)
  done (took 8.555622906 seconds)
done (took 44.185643034 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.519171392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.75739205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.665516869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.519912608 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.670548171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664826011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.313267235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.5231954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509426903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.519201024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.520290889 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.672100078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.234900816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.758695992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.234543486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758464583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.672669006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.524809778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.515588578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.529805478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.317032299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.518132806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.509309969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.522265912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.675677267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.748065682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.510453868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.759329804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.51014292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.526437306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.661604583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.512477282 seconds)
  done (took 87.231636004 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.510124653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.510910847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.511835996 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.526686191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.512468824 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51180309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.532802815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.52304573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.52602323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510234183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512100446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.511720111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.511267737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511851742 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.512490297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.511194002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.511336539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.511471315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512133373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.511814341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.531084818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.511204374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.526865051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.511655524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.527512531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.51254893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.543912737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512896375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.519500954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512358976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.531835923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.531481591 seconds)
  done (took 81.9446524 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.51294873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.511885763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512975104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.517632245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.528643132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.520495311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.515375545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.513182722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.51291448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.529225852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.522974242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518309058 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.514112807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.512941867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.517036341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.515240796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.528982797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.518127425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.519595464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.518135928 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.513806953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.522675109 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.525259696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.517605614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.526652886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.516739329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.514624818 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.514265073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.533849103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.524582918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.521264275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.521374393 seconds)
  done (took 81.993050683 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.752276122 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.530117888 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.532682666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.524195427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.533771416 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.530358962 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.523628435 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.760284355 seconds)
  done (took 16.067292931 seconds)
done (took 268.610420541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.527397399 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.048094523 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.551006143 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.517653209 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.548317073 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.542860993 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.75368209 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.550227228 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.752565142 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.540502362 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.539517948 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.519403998 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.378194465 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.684080782 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.426557151 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.532011231 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.455880208 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.525017552 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.114270113 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.813231546 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.54467659 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.526909409 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.399465592 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.469987068 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.506073728 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.613117669 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.625949097 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.751268611 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.683266428 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.605928005 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.059819754 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.52664399 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.535542903 seconds)
  done (took 69.550620698 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.52405392 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.529130048 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.531372171 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.532172999 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.528314988 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.532282699 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.524580398 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.53206829 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.533420149 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.53174007 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.533666851 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.532107918 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.531863251 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.530037328 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.530585921 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.510416613 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.523879214 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.529972622 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.524802182 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.510842323 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.529194927 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.533444377 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.53526091 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.529305671 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.533613584 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.534044206 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.529284009 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.531843247 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.53215424 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.530030759 seconds)
  done (took 47.25715471 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.535040085 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.123030428 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.288859499 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.540292607 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.526388135 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.530859291 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.834618939 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.534792025 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.53112486 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.529925305 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.027804108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.542674863 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.56136382 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.292308035 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.537503023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.53646772 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.536148859 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.528093803 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.133182192 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543469245 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.83298732 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.540035292 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.836290716 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.544098596 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.530575164 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.531376262 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.537266251 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.397262638 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.561180916 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.038154311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.395032302 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.839707534 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.300890201 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.342735627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.384153118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.543724515 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.53900611 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.038177789 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.538830961 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.529874704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.834911718 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.536373923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.297233731 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.218494538 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.556098592 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.536883917 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.381390845 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.052608324 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.787977816 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.536137254 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.333694625 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.541417291 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.538687155 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.531176807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.788339591 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.5336206 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.528911367 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.39774629 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.554182547 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.831514503 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.539283833 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.530124065 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.130922851 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.532363957 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.130507177 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.537856041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.538951516 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.53190944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.300704531 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535860099 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.227671895 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.549938014 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.538381328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.034877993 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.133389943 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.46467256 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.538688531 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137315639 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337997844 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.854649417 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.542638783 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.361407149 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.8541681 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.536531888 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.541820671 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.540950103 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.53936931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.602248284 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.833118053 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.158818524 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.236129025 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.414540841 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.854710704 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.54123384 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.533878394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.400858731 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.560144377 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.540703714 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.302100035 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.235792052 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.556897667 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.541817964 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.217039385 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.554429595 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.841488353 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.546688288 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.345240103 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.534920679 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.617469479 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.542618396 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.539713148 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.538441347 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.839615918 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.541204605 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.542357279 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.21508795 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.064868614 seconds)
  done (took 212.558259131 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.531486523 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.528595998 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.535767117 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.529980708 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.529231065 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.537628868 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.529998835 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.530314706 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.534804946 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.529381351 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.531060232 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.538524873 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.535717617 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.528812701 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.533560128 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.530568322 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.531166627 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.553006616 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.530193218 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.529598583 seconds)
  done (took 48.050503182 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.545330527 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.123546642 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.099068466 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.546541467 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.539862335 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.537772248 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.595098376 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.54660852 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.541613737 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.851019948 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.720714397 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.546531142 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.541909304 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.541514868 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.102803652 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.530179199 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.851699979 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.126491441 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.546264158 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.127117789 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.523702261 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.545814355 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.537747821 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.131168967 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.865865476 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.844301878 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.607477 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.128153675 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.543886502 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.543731369 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.13708136 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.55212139 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.539399874 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.133181501 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.555085511 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.560504008 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.545035629 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.599737101 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.602056734 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.858549984 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.148658721 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.859941292 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.56546585 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.708745172 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.546379428 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.523410147 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.136704507 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.548469831 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.523161945 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.544911857 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.551871748 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.116992362 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.547403241 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.114556012 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.552524054 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.546145289 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.130360549 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.117486188 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.116018937 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.729520693 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.54040799 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.84572479 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.546060318 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.139753337 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.550150252 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.548976133 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.548677434 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.725573869 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.133267048 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.84789879 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.864321725 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.858941294 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.549111249 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.608536786 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.546679876 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.857603892 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.608402436 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.940596374 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.859394329 seconds)
  done (took 139.060214012 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.81367536 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.656224088 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.930346657 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.147313312 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.05736208 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.682286264 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.658190174 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.792870974 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.539629147 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.628423934 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.212289526 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.64746172 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.299531197 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.635781515 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.646553018 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.672716185 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.949840766 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.537574486 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.209956551 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.197646378 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.544782474 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.647953992 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.061294327 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.737505113 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.5405918 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.120808938 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.515214261 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.075918381 seconds)
  done (took 57.557488999 seconds)
done (took 575.413852373 seconds)
SAVING RESULT...
DONE!
