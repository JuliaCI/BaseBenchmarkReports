cset: moving following pidspec: 10612
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.511915527 seconds)
loading group "string"... done (took 0.52901138 seconds)
loading group "linalg"... done (took 9.027046196 seconds)
loading group "parallel"... done (took 0.177613269 seconds)
loading group "find"... done (took 1.310328311 seconds)
loading group "tuple"... done (took 2.05493082 seconds)
loading group "dates"... done (took 1.518705628 seconds)
loading group "micro"... done (took 0.203644862 seconds)
loading group "io"... done (took 0.547035257 seconds)
loading group "scalar"... done (took 50.775050019 seconds)
loading group "sparse"... done (took 13.721153502 seconds)
loading group "broadcast"... done (took 1.29088946 seconds)
loading group "union"... done (took 10.221142786 seconds)
loading group "simd"... done (took 3.03696452 seconds)
loading group "random"... done (took 11.532475711 seconds)
loading group "problem"... done (took 2.228410207 seconds)
loading group "array"... done (took 24.279546486 seconds)
loading group "misc"... done (took 1.15102819 seconds)
loading group "sort"... done (took 3.784363744 seconds)
loading group "collection"... done (took 19.402453597 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.621322145 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.185917331 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206493916 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.290383901 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242712346 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159264554 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14102514 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.262843881 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.630674933 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209914745 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133673944 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511648541 seconds)
done (took 6.331093458 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251919426 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.184860066 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171525191 seconds)
  done (took 1.037023698 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076568031 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154626552 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108311221 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093163229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092223765 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108550428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09283559 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108577655 seconds)
  done (took 1.443709415 seconds)
done (took 3.495710204 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.511343944 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.879173478 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.534653204 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.163797516 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.302683209 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.299778861 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.334488882 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.205451785 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092934634 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092623445 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.181458737 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.398055718 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.438876502 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.96928402 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093375474 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.117257646 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.122356729 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772112692 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081071297 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127867078 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501426326 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192094403 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098327196 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123312777 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18575024 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132937741 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162646514 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102817324 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664679882 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134234277 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186771245 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097543284 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162208303 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194514066 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208398207 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093314062 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67999281 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202308891 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095689781 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101668349 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665575742 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123372795 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188244073 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106057381 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.095200277 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184749241 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098011729 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077361347 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.11644238 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086049547 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167495832 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.483642089 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107293005 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.180052136 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092069765 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687677161 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.1020366 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280996453 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126013839 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096822431 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090520611 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089415054 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160587978 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095495679 seconds)
  done (took 20.260729416 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.151351713 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166269243 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078893803 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157232972 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126670675 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080058193 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100846605 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078202695 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126477663 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.226080483 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137303178 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155589389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091424235 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087932121 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12751071 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248747158 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10589686 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121046384 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087016998 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089878712 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139509624 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096057157 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107780218 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094168727 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16918441 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202781197 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111460982 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124918984 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088599072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099271898 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143699025 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148678304 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095153079 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08842778 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1927579 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105893086 seconds)
  done (took 5.253074688 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208530606 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.127513654 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.217981985 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164684959 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146992626 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169156398 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148481299 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.282926412 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.20426362 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165093178 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131556888 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096828749 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099271175 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082616625 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.107236028 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09925081 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496106913 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179602698 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131506859 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.155568054 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087825255 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099849008 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368967966 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100239628 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080320482 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101463902 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067684292 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200686015 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085538819 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.203329212 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.085607678 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082621343 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107308147 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.139096631 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128460917 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114209077 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136831151 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085873277 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097616066 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.200330452 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110476221 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077252423 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108189059 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133688561 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137507653 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084372964 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109404844 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221885219 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082079613 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104654802 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.059206388 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198984717 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127201565 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078369646 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285694286 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116705084 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086349789 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08144495 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249613911 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116015928 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080208158 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099261556 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078938617 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085955753 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096695075 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429120855 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090515678 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.822621762 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08384714 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156544135 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084709706 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104517072 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086262001 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084358606 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118386672 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080222335 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078184795 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096570564 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079444118 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083382383 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109696529 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084703483 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079046624 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161420046 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100930503 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116882447 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109243846 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100967274 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07997659 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127140652 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081934877 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083646548 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171926221 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081361551 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103495894 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.094888968 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100053788 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127979317 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083214283 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.204049729 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083194087 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108490672 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09997515 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125712832 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101268883 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078541432 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100615038 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078368029 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079764099 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16008737 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084924209 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08247483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08180544 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110358355 seconds)
  done (took 22.881608856 seconds)
done (took 49.077384879 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.444109691 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086658427 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085487113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103745932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086511806 seconds)
  done (took 1.562717184 seconds)
done (took 2.297915761 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323455535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200444708 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10020879 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1942907 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085779449 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202274102 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18917005 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093981315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214202529 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084618395 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194780655 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084354543 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103086416 seconds)
  done (took 2.824249141 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100051071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10599614 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115280652 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098694158 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080009673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096614897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113203137 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107943334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096468472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107710034 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080698441 seconds)
  done (took 1.833503055 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096259303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10218415 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08725504 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112223769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080229681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094690209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111531536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106199223 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09569642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108109425 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080970209 seconds)
  done (took 1.810097543 seconds)
done (took 7.197917663 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.210404059 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.058205636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169423404 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.28787537 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346827118 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.257727105 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.657467136 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.156938788 seconds)
  done (took 32.03284675 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.162434915 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104175608 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087852396 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088632888 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093188081 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106323222 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093127734 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08670604 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.105975497 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.091474606 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092684985 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10705593 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094629687 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089989977 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091518157 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108452118 seconds)
  done (took 2.404440712 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142114603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114793765 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.112118001 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095830017 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.108304506 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.096095479 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097992998 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110605354 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089847892 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.090835468 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113738169 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094824487 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093590779 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.10468885 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094597596 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120286664 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104510781 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095285912 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118373809 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109245027 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095598169 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091576578 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109469299 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094552252 seconds)
  done (took 3.32053918 seconds)
done (took 38.49529334 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153786504 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099948211 seconds)
  done (took 0.991810835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14181948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156208827 seconds)
  done (took 1.043137709 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110340415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086944559 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13338484 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101370897 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086356967 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102253154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114370427 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102491175 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087503328 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08718397 seconds)
  done (took 1.761506473 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091178118 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091039471 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118395452 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139396387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111159862 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091021634 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09214962 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089980518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109427396 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086616039 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096650369 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123661039 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091442755 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122579942 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093006554 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.092689463 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112996551 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.091637889 seconds)
  done (took 2.595755078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.087187122 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088129961 seconds)
  done (took 0.927471773 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089737186 seconds)
    (2/7) benchmarking "second"...
    done (took 0.086341242 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087909964 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10441695 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086370582 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.086094273 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102293955 seconds)
  done (took 1.395869551 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.495280241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262166932 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369867655 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105918683 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142579804 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.339900479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.144358216 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101046688 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099052775 seconds)
  done (took 2.843815258 seconds)
done (took 12.306452008 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093306573 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217973196 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.631815801 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.228658249 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085631982 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16195091 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291782063 seconds)
done (took 2.47006487 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348631492 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149977465 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083823411 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086404907 seconds)
  done (took 1.419495454 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081275326 seconds)
    (2/2) benchmarking "read"...
    done (took 0.095554839 seconds)
  done (took 0.934691695 seconds)
done (took 3.115007639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086761016 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085921891 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.083395422 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101501265 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.084663103 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084589509 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.125933028 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085737025 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084647178 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.103610996 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.086476707 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.085090439 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085503998 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1029525 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085140548 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085138662 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08389004 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101939531 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085827736 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083216166 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100536777 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084374823 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083986057 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085509472 seconds)
  done (took 2.955925118 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110037088 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087444377 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105573187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090776072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089566216 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106383963 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090903707 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.087246478 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.105597488 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087810388 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088875074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105973743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088174069 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090531908 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088121693 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106211141 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091106744 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086625527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103196226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091080062 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090652693 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103591993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090824404 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089194746 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106179479 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090084624 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08728786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104157565 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090604512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089695106 seconds)
  done (took 3.605453332 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09751504 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085997194 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087432706 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114706211 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085452251 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088371187 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101661704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08672737 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089893299 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087342691 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108701999 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088534912 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085229731 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106557759 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091039736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092175044 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113985096 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086366821 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085880218 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089443158 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108404641 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086135754 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088134891 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.104236686 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089083742 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087010257 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089441741 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105446813 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090109764 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087345039 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107645418 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092495289 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089244585 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11496068 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092878033 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089292164 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093031383 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102974448 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090735563 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085618587 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102118792 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090218529 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087299118 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09513526 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105851924 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089678124 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0861237 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106387122 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090905184 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093476967 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085282493 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10467918 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091503991 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090234122 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108016438 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086558393 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090364152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101559498 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092888368 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089378355 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084717514 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.101920704 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094618968 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090337146 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120183704 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096021076 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08587833 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.107019706 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090661553 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094282548 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090665227 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11701289 seconds)
  done (took 7.594979509 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100948824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095601766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085400972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1037309 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086632942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085880261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107201127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087460821 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086216505 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109838239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087813765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08617643 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102461753 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088390606 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087329161 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086652929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10815775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086954001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085924048 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104184369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087729621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089913921 seconds)
  done (took 2.819729207 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229477387 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093306281 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135177991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116135147 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104164784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117333934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092325208 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092135741 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107848329 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096818812 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094855126 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107232978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105011367 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094237447 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113654872 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096033903 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107795785 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100963322 seconds)
  done (took 2.7780388 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10074169 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.088290447 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12664053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088939334 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087778265 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08854235 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110471229 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109861659 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105907282 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.090098026 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095754624 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1051069 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089901789 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08916752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087832448 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107464859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090287947 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087723066 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111882535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094612055 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09307379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112683529 seconds)
  done (took 2.937952098 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103317988 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08936074 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123313714 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091976104 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087914258 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103711903 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094845912 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08832857 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110095302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.089228708 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08866902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088260336 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.119869409 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087509684 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.093037018 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105062919 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089728116 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087587044 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105734382 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08746937 seconds)
  done (took 2.70540414 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.174792937 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123759194 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10810026 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11551931 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124405824 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107378633 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114269123 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124404426 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107597033 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133583456 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108249283 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106866033 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132667575 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1118471 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123105659 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115934505 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115551952 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132620989 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107780419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123125804 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121053334 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107576979 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133277749 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107417622 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105431821 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12424203 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107857032 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128973298 seconds)
  done (took 4.121462122 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089461238 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088643388 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086278859 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103532789 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086621161 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086807131 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085635827 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103300887 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087926027 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085968516 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104613628 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088593392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087661911 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087022983 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104739094 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088622972 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087508747 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10311974 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088528948 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08670768 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.087102135 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103981645 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088234636 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086754494 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102736832 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08896174 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086269866 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085074648 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10409344 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087061678 seconds)
  done (took 3.525569106 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.099469273 seconds)
    (2/2) benchmarking "in"...
    done (took 0.096372151 seconds)
  done (took 0.974709235 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095421633 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102258579 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08760481 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104586089 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094408176 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087432295 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113571949 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094513273 seconds)
  done (took 1.558754992 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144490726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161706776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094189771 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100457346 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163267528 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156160533 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134891995 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093484841 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107684784 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08494183 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15723044 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08425854 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092490077 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105567695 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093171081 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097167074 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.106048172 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100429814 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094750637 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.106965441 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095339188 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097397837 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111097079 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099497895 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085173451 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11023791 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096070345 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103336718 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104883701 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095152648 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09082428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.104437483 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.093010855 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094274293 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.088932049 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162778783 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099138872 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106177947 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092573993 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093397147 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140230513 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088672703 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092544641 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108115951 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096760382 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09389737 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.111821156 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.088576049 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084633969 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10422011 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.089875931 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086991318 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087461452 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110446766 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092012887 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114244877 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.092390627 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088298173 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103572818 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088201253 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091558295 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086902527 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11181885 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.092331904 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092609662 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110716345 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091161758 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.088330799 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.107983708 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0905898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091340882 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124279199 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093562587 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094238597 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112437465 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09096213 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089076438 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112101568 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092260844 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092105708 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.111106495 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119619646 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093795441 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105477515 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089006794 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096143246 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.107796053 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.092954897 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084475501 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117146308 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093191337 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08996625 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083701005 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107969579 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088679465 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.092025111 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103324464 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09406905 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087448504 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.112561782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095309331 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090132396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111246039 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096535707 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094860532 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109099574 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137707448 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107049725 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088963106 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09112611 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093913474 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105689815 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092770814 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0873994 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108289908 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088792054 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.094110426 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110471881 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093131036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093822222 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112318143 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094543062 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.091023199 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.10644528 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089902374 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.094743143 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096858041 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112704221 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.091813203 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.089050422 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.107529754 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092740979 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.093056306 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108541536 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095634973 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088268375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.106864163 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.090966796 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09546219 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110222699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087951061 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09016309 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109765023 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092934239 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.092105711 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109850994 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088648565 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084701493 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109655763 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088542756 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.089117911 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098665577 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107131581 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092785042 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088120557 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116546622 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0897913 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.094627324 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110768004 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096768403 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095182955 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102325454 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091064012 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09244071 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112131066 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09074209 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.090117041 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.088020134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.115348559 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086211128 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.093107176 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102650677 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089851426 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093722557 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109786933 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094344311 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088423971 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148731952 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104050056 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09545734 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111157172 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093386877 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093019293 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109285212 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095883043 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095941792 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.113288416 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094658997 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09172406 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095751713 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107821954 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092068386 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090809322 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112582028 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085160797 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.090901435 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103810324 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095223524 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094513659 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113031104 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096030063 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091819877 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109230684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099457889 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088269613 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092864134 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104611811 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095765038 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098023246 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.115848856 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095756213 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093909921 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108742287 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090170492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099895452 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110588511 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094691027 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090864767 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103933279 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086847579 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095920031 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092211125 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107637551 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088702008 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094414451 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114623056 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091522794 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085601566 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113476473 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098118824 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088609896 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111530321 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090580929 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091181063 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120175315 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087022838 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08889991 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113998823 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095743931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088756346 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112154249 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094610152 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098134802 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.111440628 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094164136 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091797421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096954817 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110619038 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08964802 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08820397 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112375674 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088067806 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.091187053 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111791573 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091839134 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089129545 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115426919 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098594297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097062478 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109297534 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097015777 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096039205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096059697 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109761422 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096677262 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088184049 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104809046 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090263782 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085198577 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.111027084 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0901237 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.095314373 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109203334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0934583 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094899696 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112981494 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092239228 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.09618517 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122588577 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088485222 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086002299 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109499628 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094354872 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098909087 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107902532 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.092324877 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096122956 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09367166 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116978014 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08941787 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088754954 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.116609264 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09946578 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097107266 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115771271 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098164922 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089089394 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.114097241 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091500217 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097401876 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105224898 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094410304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091753671 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111569796 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092119485 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091447721 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107657438 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087513797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090248836 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.096491682 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.111425639 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095802046 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092023284 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111148624 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090542456 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088002079 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117707396 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092972419 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096842341 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109144735 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088121911 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086778785 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.115248527 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095704499 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.096899835 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088179132 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.114543281 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099013348 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093792847 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.11081658 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101685693 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098847531 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116617324 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100796576 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087167115 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109583804 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099995796 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.089824316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.112617055 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094771844 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087590253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114473019 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098724745 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095630628 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110540105 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088763352 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.092157498 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.096813847 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.114430584 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095585129 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093021208 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113520975 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090196054 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094608768 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.115947336 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095774012 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097521296 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111410922 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09622132 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090069523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09658272 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110059627 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08854961 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086809577 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110104741 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098967667 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088040903 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116953158 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098078809 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090428394 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109209657 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098546422 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090827787 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096450403 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11616239 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092463389 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100622542 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.110362273 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09227391 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09661484 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116381821 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088785971 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092295815 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111541812 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099723499 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091660473 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115326523 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095649213 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096915154 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092683779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116335267 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.097078088 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096287297 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10713856 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098933655 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097950264 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113402729 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091753759 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092740637 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106720327 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093523287 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.098352959 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109365322 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101456674 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097334164 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.09150169 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112451544 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096834072 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092232246 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117614068 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091075163 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095090549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107166961 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097906512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092339337 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117675741 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091109768 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088483417 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117754964 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097388844 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096281817 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115482335 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10005519 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087790066 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08717966 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114605749 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091945787 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100157216 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117423676 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093191849 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092074949 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112773766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093289861 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098044712 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107982766 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091811632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095064905 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114992697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093763598 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089083538 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.114467059 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094747925 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096156806 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112437786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091463992 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093337348 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0975756 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112469308 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09117968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091236118 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119048941 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094897444 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090445021 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107241598 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101365516 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095607555 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118495224 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09221386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094532443 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112023233 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095494106 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098622626 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111109111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096034088 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092071861 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117457699 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10152023 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087080566 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109196768 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102692342 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097602353 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097328792 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.113594167 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094186337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098614623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11936893 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094256666 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088527092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108402338 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094272377 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087725338 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111682856 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101757813 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092713237 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110207715 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098409266 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096848417 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.092647304 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.113594401 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08977316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098212464 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111379294 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099062192 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088319177 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106947288 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096219526 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098136406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112578389 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096137588 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092991814 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093231681 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109106452 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092639272 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09841123 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116626335 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099164538 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0946751 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112614222 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096842279 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102405563 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.112255313 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095647238 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103581232 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.117617306 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096309035 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095054146 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117715998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101240696 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093967317 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.118140881 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093486027 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093931597 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.097699094 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.120655612 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104781327 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093153355 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109966935 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097691333 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092290335 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.108685499 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09962137 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099351494 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.120363831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096007283 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093079239 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120813685 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100630884 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094903808 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111784686 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093974329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096956862 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11117893 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098025774 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091533751 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.118643634 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10036752 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098729928 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100256144 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109603394 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101969144 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096570838 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123198788 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09358155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088840259 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109254458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095131574 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100440018 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12060888 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09729965 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.096340006 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.096457308 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115462968 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09634094 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092143307 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.1202311 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09883454 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.092467993 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116769015 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095188948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09549631 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.112758701 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099963401 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10012935 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115275463 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104535993 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09870416 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112929058 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093701461 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096343302 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.093458819 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116581267 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097700897 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091759405 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109836622 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099569834 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101062745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114448475 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10198668 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0998772 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113641597 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100023649 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101310688 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11593324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095101346 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097362031 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.094845806 seconds)
  done (took 60.607199259 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146197424 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100609531 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114881775 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095528785 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113872285 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115996512 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094714161 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094378479 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115254838 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105703805 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0940557 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114493007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112433295 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134797101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114561391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104014416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112784351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096462519 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094320796 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113718864 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110874369 seconds)
  done (took 3.133926915 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113449592 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108193084 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125551938 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10964804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100531304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127542372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105463604 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126809405 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110311444 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102327413 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129005216 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106515642 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122773832 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10366513 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101864507 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12427758 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110417736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101057538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128695447 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105729755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123267101 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107204541 seconds)
  done (took 3.327098654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.104553867 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.097234472 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100147362 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114339576 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099754478 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093526885 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121703241 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096520815 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103078235 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115588658 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092335456 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09623667 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099969424 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115146015 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092231639 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094758307 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123534969 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099862299 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099996086 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.113597089 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110866701 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093782927 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114591987 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.09216759 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107476609 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.120307231 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096705956 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.098442364 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089571099 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.119078538 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096559813 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095232422 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116824416 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091749065 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090623176 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119190506 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099905815 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094959769 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093787677 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117201296 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096016712 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.099183782 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.121379015 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095320188 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095183077 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115731706 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100308962 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.09549915 seconds)
  done (took 5.789680074 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128741792 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154162989 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099173169 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125947715 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131379209 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105661451 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.120342074 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127291618 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096501741 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121119413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112264067 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.130433995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101347903 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103393328 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122489822 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101240597 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10067175 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.117406319 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.104600831 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099208619 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123186149 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103398415 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109350566 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129291956 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102055569 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097159413 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1194588 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103015636 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10704065 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123917798 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102923652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123575412 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.353773699 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098139074 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118540039 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102930327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110864611 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120366221 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102466405 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096460743 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12061165 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104098726 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100327037 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131975811 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09964252 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099417377 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12087231 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096595115 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106835579 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120304833 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10651884 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130149447 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103114139 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099011697 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12334449 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.110984374 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098746545 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119245925 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10281976 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.107769742 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117850147 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101345991 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.109487035 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122172301 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105478748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130194878 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102323275 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101743442 seconds)
  done (took 8.796097385 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134989301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102834681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132927856 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112517741 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10346102 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125242843 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103919187 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102472326 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125862433 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107925166 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123556432 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202779878 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121564438 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108469639 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103169997 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124753234 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104873707 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103323898 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12572355 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10359859 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122714993 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113113069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102572397 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130996121 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115171111 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099566449 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125463028 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103749894 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131992055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104438952 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115166177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124081464 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104162148 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111088518 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138050975 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103370814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117813016 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105503045 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10361725 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125245038 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100917298 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111224232 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12492874 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101912415 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103077837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125620242 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112554907 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13638172 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109875533 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109196703 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125654569 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113384654 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103219916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126441161 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112861095 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140405675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112460715 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13212513 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105832166 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112384751 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134224274 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119560979 seconds)
  done (took 8.094117386 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098147033 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097366038 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09498203 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116487251 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097920027 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09609606 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095862015 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.11949961 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097927786 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095916347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119424627 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096375912 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095800674 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096394614 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117392005 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096772147 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095258263 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11511017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098380304 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096200698 seconds)
  done (took 2.887195544 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.106819029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114558487 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118686209 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105163583 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.098859897 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124846182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100541251 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099445225 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097064524 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122758246 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108272289 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127626802 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100647133 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104613811 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128877048 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106250344 seconds)
  done (took 2.616046817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11885383 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116265741 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191831729 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101963494 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122177599 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106524759 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098737481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123020074 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.098803694 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105833556 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103897789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124947132 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100247688 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099985323 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12086314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103437191 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096695952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.124506339 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100402509 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188944738 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104070588 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101071805 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122180185 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104782717 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.100367728 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.124475557 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106357505 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098810575 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121860468 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.101510263 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101502303 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127159402 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099146373 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103289336 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100650682 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121419201 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100727177 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10033862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124338552 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100905718 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102123887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.121632456 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100898884 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10193732 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.118682626 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102257693 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09740653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126944828 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102472858 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101076954 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099861069 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129976836 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106059651 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108581351 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129206388 seconds)
  done (took 7.015454283 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113449228 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100809664 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133368025 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100119637 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100679517 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099521359 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123023245 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101518786 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099608807 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120026621 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101379694 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100257154 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121600325 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102687132 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100010028 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122929005 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097399817 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100523455 seconds)
  done (took 2.794736626 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106266075 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098634058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105027214 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121000313 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099127571 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099142848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119094755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100721847 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098525393 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121340706 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100485732 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099387228 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098785383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121749612 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100123765 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100508862 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121840469 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100018217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09928824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119361465 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100770705 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099055433 seconds)
  done (took 3.18759566 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113686827 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.185287965 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110311693 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.195544011 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099170771 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09683048 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130221332 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099117973 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114821603 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120274062 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098610475 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097031492 seconds)
  done (took 2.31903434 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129833972 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139223726 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121818464 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102822603 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109202428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1255696 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104834961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103891809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136105548 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1152953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125101582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114111272 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112324039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134161253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108835272 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130436091 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10550549 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103831883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121398309 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121430336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103517702 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134751689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105354102 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124819265 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106169497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112429656 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133646375 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116153721 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103786482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136288582 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109116075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126151341 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113492812 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115210902 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123968577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112984816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124790974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121786288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109357914 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134483257 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102529572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108325259 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135952749 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110304047 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135100203 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105823518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109360715 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126128521 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104524983 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148823701 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110670655 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111680322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132445297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11330914 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135313988 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128114052 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137158328 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114459961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109895532 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137634684 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112448567 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13224584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115065683 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139342967 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111543697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113467063 seconds)
  done (took 8.738361315 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142701353 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10041613 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125775334 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116568808 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13411913 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10588231 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10423096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126608393 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105943537 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100622274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172622651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105574985 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136601803 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114695101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104764388 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126416895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105612083 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111962423 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123903188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127337767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126968777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11491909 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112984819 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134986815 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116042032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131700064 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105986065 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104588172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126375389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106156701 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1105016 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126294905 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113020593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122393919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114259001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104913946 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127154149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111622793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104493977 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13268498 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113154387 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142651441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105991558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105286918 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139033726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106314561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104722074 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123493299 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105457986 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101000195 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139535931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116938278 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13876409 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113651421 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126488567 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106812325 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105635193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127188915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106574377 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109230106 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135962348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105794342 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149889705 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106357249 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104924498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135812823 seconds)
  done (took 8.683545421 seconds)
done (took 164.329104211 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150953163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.190907415 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148187448 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18040306 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095469936 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128509972 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150908509 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149541021 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.115536815 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095529477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095759117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097468454 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183073466 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094092649 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093856865 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119708792 seconds)
  done (took 2.947113278 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192191494 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.312107997 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111437714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121114553 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104437173 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100984731 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121848502 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102485591 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098892325 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130277122 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102473189 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096887347 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129935911 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097681619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098564975 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123842669 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108310711 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101478999 seconds)
  done (took 3.119844387 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121212346 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141806589 seconds)
  done (took 1.137764571 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13159971 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.200675939 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27760701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174957449 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123695314 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140296115 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153766626 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135802885 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181365304 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136257518 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113966337 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099513073 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148274758 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106253348 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134812437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101609092 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127074181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134695805 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111648468 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101656064 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144047121 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105220604 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105239415 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134502637 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.170962964 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135180059 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105175524 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104400141 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125839381 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111559408 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130117786 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117354991 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111850778 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178630654 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105297617 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175014117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100941621 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110471101 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121974021 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105365308 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103371197 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13906495 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100281365 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.1030655 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133313641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104915476 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125977297 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111117546 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111006231 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131763785 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108389676 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17219447 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11161699 seconds)
  done (took 7.890518446 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854174747 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143706021 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100375619 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.012597682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150806702 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116396352 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.84893522 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146171845 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255471992 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.890207413 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11972266 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112778941 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.263202868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253298556 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203580854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351943572 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693285609 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.138135754 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130542539 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166820329 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109325162 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149897392 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121892601 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432582236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102171677 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099377212 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13015235 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112810302 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178504652 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09971473 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126518569 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200689516 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268283527 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210183466 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122788485 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100264616 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09937075 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187593734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274101114 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221310761 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186027669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097297157 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099150274 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.13097482 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120264435 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095779519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183588919 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192664338 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194153076 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103925029 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135282599 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111836923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107361465 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180210578 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119813247 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360633909 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366860051 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098916693 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131040379 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117884331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270146 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09954902 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260768366 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127392471 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214917977 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099202247 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80471901 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187187409 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099560529 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129984042 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106892691 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127364607 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109676616 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18140169 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.383716005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135434637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105652977 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098539943 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227863584 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122697189 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101315104 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183070007 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102812373 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108263907 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136159856 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113833329 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191391741 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271733714 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113596639 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131707582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10631447 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113066851 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123922699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209172399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.253146504 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155244233 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233874861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130842214 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162057151 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185542395 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129194144 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169884075 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13024446 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117907753 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129328282 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228728209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13541187 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12241895 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107046587 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108592122 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161926807 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104709836 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130102559 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167934924 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.467538139 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187437879 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097497973 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126278825 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11181417 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181109657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109118412 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264903509 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109816892 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186256116 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129670973 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098564451 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108241551 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184903733 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110574786 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13258765 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107799303 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13425957 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251128261 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223087812 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137319343 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244122893 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188904251 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110127607 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194387223 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10908 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189261976 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110788439 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13196155 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102861202 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799487334 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113885821 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13248879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106989016 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210203464 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100825622 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102290798 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123737825 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09927646 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801584244 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107513002 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120747799 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103435207 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107842958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132168204 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109762525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105357845 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18327304 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246516027 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138933011 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10780718 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121966841 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158816146 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125167064 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10203795 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100192243 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123240876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110628993 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104719274 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125841224 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169984796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178680662 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23180578 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.533138166 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125118331 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101994474 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24396934 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121832191 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321831136 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110896445 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238378448 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188540807 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098578769 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.350528877 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189561937 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205208403 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104423826 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193767771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098639016 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131843062 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158241721 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124553671 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110159287 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180587468 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116702049 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136083411 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.194448936 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101488483 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251942801 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098354007 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191906718 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102267102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132632908 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329647283 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101490658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14071135 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159558588 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128875752 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102881676 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.725073333 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101458233 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135387585 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109624739 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237654051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187077563 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108700556 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134687539 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115377372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18302682 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235127285 seconds)
  done (took 46.330751333 seconds)
done (took 62.29184711 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290825269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.257441318 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.308392977 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.217196331 seconds)
  done (took 2.033557606 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.291030536 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166058713 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.23626846 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099399463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.251009599 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099096853 seconds)
  done (took 2.041772733 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.498132177 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.39126777 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.352583661 seconds)
  done (took 2.143416928 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.249008718 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237183395 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351605803 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417856088 seconds)
  done (took 2.273327519 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.302566699 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134262182 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129286973 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.217049153 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.285970322 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26202472 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.181376731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.181980081 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.181454465 seconds)
  done (took 2.822024002 seconds)
done (took 12.209308186 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.343071741 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.201735886 seconds)
    (3/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.2416589 seconds)
    (4/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.292743029 seconds)
    (5/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.322361214 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.217773113 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.105982066 seconds)
    (8/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.201355491 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.307022199 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.164953461 seconds)
    (11/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109232433 seconds)
    (12/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.338034885 seconds)
    (13/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.230498881 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134812787 seconds)
    (15/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.197544001 seconds)
    (16/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212025615 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107187422 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106326751 seconds)
    (19/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.216474295 seconds)
    (20/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.103195628 seconds)
    (21/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10555636 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.324174395 seconds)
    (23/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.189680101 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.234781808 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.300342331 seconds)
    (26/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.146521626 seconds)
    (27/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124156441 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.151976317 seconds)
    (29/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108695275 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175156864 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107496763 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.105715943 seconds)
    (33/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117872963 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.152800205 seconds)
    (35/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187336648 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228706339 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180709793 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.217837755 seconds)
    (39/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.188687898 seconds)
    (40/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.21228824 seconds)
    (41/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.106763368 seconds)
    (42/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121589372 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108536573 seconds)
    (44/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082501885 seconds)
    (45/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.190610441 seconds)
    (46/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083056417 seconds)
    (47/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088245988 seconds)
    (48/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.150246729 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108587711 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197153195 seconds)
    (51/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.105860017 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.182011938 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.199498248 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137424622 seconds)
    (55/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.169645961 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107297263 seconds)
    (57/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.21592703 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139364159 seconds)
    (59/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082381802 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.309005983 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.162993314 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.178276489 seconds)
    (63/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.19583449 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.13241159 seconds)
    (65/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.166568762 seconds)
    (66/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.0812329 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126952456 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137420337 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.171851643 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107527342 seconds)
    (71/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.087627173 seconds)
    (72/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.202267294 seconds)
    (73/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10766761 seconds)
    (74/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083820091 seconds)
    (75/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.228335045 seconds)
    (76/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102410562 seconds)
    (77/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109223906 seconds)
    (78/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208241892 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119868428 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134335792 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.210999691 seconds)
    (82/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.154152907 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107297612 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082011128 seconds)
    (85/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204763713 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123705092 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.163664786 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100380861 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105755717 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107127474 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110682633 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126839152 seconds)
    (93/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.287569073 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083110189 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108003922 seconds)
    (96/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.180968891 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083080084 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083426301 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.107456749 seconds)
    (100/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139828213 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108464233 seconds)
    (102/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154666466 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.108153902 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109354777 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100275749 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201700107 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109007104 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199823218 seconds)
    (109/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084352428 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125688272 seconds)
    (111/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084273126 seconds)
    (112/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.173727892 seconds)
    (113/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.152485724 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089559689 seconds)
    (115/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081289312 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133657987 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095529402 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083918446 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107181605 seconds)
    (120/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.17546938 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.176774594 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.107065829 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132240691 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.085769309 seconds)
    (125/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093024646 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.10933082 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134238138 seconds)
    (128/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112577148 seconds)
    (129/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083575899 seconds)
    (130/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.19050636 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084950129 seconds)
    (132/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082343859 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.220912869 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.197612692 seconds)
    (135/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081875107 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108491424 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085540747 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127080105 seconds)
    (139/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.087678138 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.15338564 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109744812 seconds)
    (142/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.1077195 seconds)
    (143/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.082950677 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133950791 seconds)
    (145/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101979106 seconds)
    (146/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084726395 seconds)
    (147/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082604854 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109444946 seconds)
    (149/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083639597 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08446086 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101697151 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129017472 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.088802472 seconds)
    (154/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107093582 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083772797 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135040923 seconds)
    (157/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084980233 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109184151 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124997393 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197428239 seconds)
    (161/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.201693632 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109298408 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089129579 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.132174812 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13341711 seconds)
    (166/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109359964 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108186637 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108787858 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08392549 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108910214 seconds)
    (171/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083893419 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.107776822 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.085691147 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.084333191 seconds)
    (175/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083967822 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083980181 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082719168 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.108322152 seconds)
    (179/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.083300664 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085478285 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125325336 seconds)
    (182/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.10904025 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102767122 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103711868 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132032793 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109748064 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.09017274 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108656355 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107933919 seconds)
    (190/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084998518 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084885317 seconds)
    (192/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.083153698 seconds)
  done (took 27.631097922 seconds)
done (took 28.53822006 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.217922741 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129273542 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110409962 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10992268 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206095984 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118836396 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.145276353 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113148573 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115449719 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132247781 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102197676 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118216147 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133649332 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179924843 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137180576 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104275571 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102323077 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116759589 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144956646 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121339794 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207302117 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104574709 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114722902 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127767623 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181849297 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130106528 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109734358 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109800126 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.142284293 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108930471 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110328522 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127416067 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.1202011 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.119063324 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126357501 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11105786 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10231781 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089611786 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.133990032 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110846651 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117649059 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134722078 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111641257 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102950036 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135249827 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109798374 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102454373 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13822321 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102857304 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11005318 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129771078 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123432542 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108388938 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124930968 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103063228 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104704889 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.140640564 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104299986 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119734096 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10167599 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127661636 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104189396 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111555167 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128057929 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10998181 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102909948 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133717829 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11161042 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108420027 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129481931 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105160012 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109700906 seconds)
done (took 9.805912119 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110227361 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.158514877 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.20410006 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214950186 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131977475 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144763662 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124002047 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131638763 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14708767 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127557248 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162769722 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131297904 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.216277854 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114541331 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.143415546 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113682386 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11695418 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.140593802 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.194484358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150713859 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133284394 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114378952 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.161088796 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.125921612 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.135064238 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141525278 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109828825 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138545486 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110374233 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116993667 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152972248 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11072435 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.107851968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155320691 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12203103 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141126248 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120390491 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112918251 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.134130882 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109643643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116775161 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.153135528 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108482439 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119101165 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139682065 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116540039 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116449874 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142459929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112595168 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112103922 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.137934657 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135792268 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14066605 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.117176397 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115548433 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141885325 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118672296 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117485319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135409339 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118298677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108798647 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.137173329 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113504183 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156138024 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110320779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118256289 seconds)
  done (took 9.738517059 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128493302 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138081872 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141605868 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11823467 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112361767 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125232666 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101006151 seconds)
  done (took 1.827878683 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104197174 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188813436 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211942402 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212142424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208301874 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195885543 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148258997 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103430522 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133687065 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138222965 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18813937 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.243781564 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108246903 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143557467 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213500868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102796491 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214608546 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104158581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114357194 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214108264 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11603985 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155823129 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116309413 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102282124 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210466879 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102884408 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265919852 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117578341 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135024922 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116276085 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114120332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208593284 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211444153 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116890133 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106739327 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.21321284 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20792142 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113856964 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.227570532 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106832996 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212726456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114255085 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118209253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141412323 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119175845 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.198629322 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121571617 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114764594 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141329487 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194191736 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140061992 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185686232 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138393937 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113057003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112777515 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141674118 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123325104 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115115303 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223337822 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11598963 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18692559 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212704533 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210189057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188890643 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150038519 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.188329271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207426669 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11324359 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137195987 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116428282 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213718267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114072782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114535798 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.202427016 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118855785 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.21521783 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213832238 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112740583 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114231381 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13187706 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113548573 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102471397 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204288036 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112788658 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110981703 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149414733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115022353 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138830045 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109793735 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125569959 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139950418 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115228444 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119611028 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.139604002 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11910825 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.219664249 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11339527 seconds)
  done (took 15.748308231 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108583804 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104462203 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108894446 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129599619 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105377303 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104820069 seconds)
  done (took 1.6456766 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144229828 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116583504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150655058 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118463841 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.167496642 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.225339594 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.228122966 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111563178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158458125 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128811788 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.222309927 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.200692324 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.233260282 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118125367 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.227842789 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.14551659 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.202906494 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138762575 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126382299 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112636596 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145566703 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120564764 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113927669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213312272 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120598185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146812505 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112383534 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127012892 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151314859 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113354098 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118239021 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145748685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110875533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.137849203 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.205875635 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136253789 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11274224 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125201051 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143663573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122880449 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.229325 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114337026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124745685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150664054 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112843309 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110208939 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.154380373 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111965526 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228596921 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.125122793 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149607385 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11793098 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119314122 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.153250064 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112159434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112083252 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151786255 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.204243532 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145515952 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111879891 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116067643 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.150740655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112744528 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122404393 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143930089 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124910569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136254418 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119057959 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114129499 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143113245 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127182565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116418856 seconds)
  done (took 11.354726106 seconds)
done (took 41.270998828 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.541132805 seconds)
  done (took 2.520633609 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.909007692 seconds)
  done (took 1.893411754 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.436637716 seconds)
  done (took 19.44892009 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.538364838 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.610466228 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.061384829 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153542319 seconds)
  done (took 3.346076884 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99286354 seconds)
  done (took 1.991877342 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297228073 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266098754 seconds)
  done (took 1.548586151 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7268154 seconds)
  done (took 1.725288746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.531262535 seconds)
  done (took 2.521460647 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.363400402 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177176393 seconds)
  done (took 1.541260216 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.625482296 seconds)
  done (took 1.628526165 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.632773366 seconds)
  done (took 20.637025159 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249553023 seconds)
  done (took 1.262179811 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29065661 seconds)
  done (took 1.299027047 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.63555851 seconds)
  done (took 4.640702867 seconds)
done (took 66.998337674 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116494903 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118381954 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116971104 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142917169 seconds)
  done (took 1.490241285 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123481461 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118933146 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146924242 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118914816 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124586019 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118607487 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144822686 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121815284 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117025717 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146240677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119537653 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117525677 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146921846 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117325165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115904143 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147108438 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123375725 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11930067 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145749308 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120020822 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119158855 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146891523 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124004226 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121535579 seconds)
  done (took 4.07175045 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116644677 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108865017 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110546539 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133713726 seconds)
  done (took 1.479740758 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127673448 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131455784 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.1549879 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128410514 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131226904 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155985573 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1185998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114869733 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145529019 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128070366 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134298274 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158329863 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131106215 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119761316 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156242442 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113333486 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118724889 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157465325 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128103675 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151753914 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12158941 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126041671 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149376983 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128661877 seconds)
  done (took 4.237956635 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190882306 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.126779956 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.168979986 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160408841 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.170316564 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114269127 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.138050598 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148603507 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121042757 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143052372 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.119170398 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161763114 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147688935 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117730311 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115021655 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148545127 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128672507 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120652951 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18453814 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120196182 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150889602 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.12916661 seconds)
  done (took 4.140025169 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121529586 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109328337 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130965213 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114120709 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121756926 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136941954 seconds)
  done (took 1.752787391 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108896149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103316369 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103598929 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128460531 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108251942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104345639 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127966764 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105096486 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103921231 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103337677 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130759469 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.1031451 seconds)
  done (took 2.339910277 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.345697193 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108594927 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136232022 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110129193 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114757664 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106933882 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149851486 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107989279 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271870534 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.108628563 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148906261 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.199691544 seconds)
  done (took 2.927057519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20691288 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144670934 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30099447 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371774427 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163458597 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187916624 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2726538 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189146203 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203810572 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13480165 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241638137 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152617992 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176196658 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173104386 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163318389 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160685636 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19497586 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190031036 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173245879 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222760692 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155895077 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189518701 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177048962 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176115223 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132824958 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187605278 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117142232 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124940389 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192495487 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189619446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170218493 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171288042 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138281538 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218653005 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259490642 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169875632 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312368246 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131070121 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201649922 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181889804 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255933857 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135951926 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214471761 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177919007 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127309196 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20425468 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151203439 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.198980633 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128551585 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166329663 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178904385 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199684788 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202808844 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13561172 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313488835 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16413425 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168157243 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171369936 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20885497 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212953015 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1646731 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120406536 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208110417 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207161945 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202471961 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14027774 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188264799 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123590497 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163020149 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221774533 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205364842 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155706134 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223554081 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155418872 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155841528 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198207222 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176978654 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201947009 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156929679 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144334463 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148151645 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15816207 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125270191 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195580418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145284485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197814236 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158192509 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341499229 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185830604 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182770809 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156958947 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183959349 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156119819 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169911636 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.109115632 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169441967 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160618638 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18120583 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13111475 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178922096 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137622802 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125193226 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176192633 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120241544 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182851776 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132702432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189616196 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15644359 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.154070541 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163291539 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171500622 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151684488 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194189758 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181269213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15587503 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129741654 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212357479 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154592817 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154809044 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175230706 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208091116 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146670079 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158956817 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163316334 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213999971 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138332774 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212511669 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134286863 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160316235 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145514855 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185094046 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156355061 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178910759 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125461021 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173576516 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197011345 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152776315 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135107249 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192168077 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130919278 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122192923 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163677739 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13214052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.164389211 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142800067 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131328543 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178482814 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154940371 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181574549 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152477264 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161992 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2010575 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13132548 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156896784 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172113942 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116258654 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200433361 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180065922 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154808644 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198061257 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189389687 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217282839 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157265967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156298141 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174286797 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153898945 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117279977 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187413622 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152025145 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187377744 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177307706 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214405916 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190910588 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147420994 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174010417 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163740439 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201970638 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176926119 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143305822 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154793236 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189195758 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118667284 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148020412 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125683003 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134164572 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156046102 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131797583 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201082507 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161633372 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211420595 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183624616 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13698903 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208131752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12250895 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188719261 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.161244408 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165674295 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178667086 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207080842 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163996914 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165976933 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1588679 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.144463303 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122862479 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155941605 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165738143 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131644285 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16116425 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138708235 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210100212 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197196991 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146264818 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224509057 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190430477 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192497031 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144936914 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.162568642 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195836575 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156950346 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184005696 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159783946 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15583368 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205589957 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138267673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214573492 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180899699 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161139304 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216479609 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153480179 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154561511 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146030333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184662359 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135710387 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188456018 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143694279 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126872207 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178392014 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134147179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149142763 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181924182 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168765879 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167176036 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185879618 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194736572 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124279955 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138274907 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184918246 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141738507 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112680885 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19714437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210207342 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143467213 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183144464 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172247711 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155819964 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318068653 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216596385 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203742385 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133126581 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137602713 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187560488 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158462767 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188197221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207821717 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139487307 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202781876 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157841597 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.16794495 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128957637 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146106276 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177668115 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146688269 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.158250397 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153531795 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.166692752 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183445374 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164782328 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15677286 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185461208 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144220605 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176888667 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138432116 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221992941 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154316543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20113856 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152442615 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193451363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187809787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150453967 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124900146 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.155477174 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179157128 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126961099 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18760133 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217022042 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162182686 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189949317 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135763164 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.151002327 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157238311 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144175071 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218605693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160141151 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13302367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219820054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133711524 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156408726 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158015644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308938673 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142132868 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199979752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117737142 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301508141 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127011516 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157031857 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161960066 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19744142 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.129549829 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181601339 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183314794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138693886 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191056207 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133150001 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213468805 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220521454 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164058846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199911766 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.169171258 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159880956 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185707847 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174557521 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169071935 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143313773 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186209903 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179948191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208649119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1296818 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184931721 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155551819 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182481046 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17073302 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162658991 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1893438 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155962659 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16179922 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163149687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12172798 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153909355 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.207665574 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155798599 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176013911 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186863315 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12981483 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151961905 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144524076 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181074063 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137843893 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127349628 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211058386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1258348 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190860565 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177559727 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156534507 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155592771 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171706484 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128930738 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138323493 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167880441 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128746081 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169825662 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206035995 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127731049 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204511496 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189747662 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162587652 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184061135 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139942425 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690763892 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125438009 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205991053 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146867746 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214058658 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147928825 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187772784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15736577 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1749707 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161563446 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174361923 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236755268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190292183 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154125615 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156515405 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140113513 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13761727 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160053424 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150109616 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186094023 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138513806 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159642133 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155932394 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138591916 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171971671 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135583398 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210135441 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145111401 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21157809 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209020867 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135123811 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187833103 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170658182 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156611463 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161171196 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201759591 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138741697 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174547002 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130022083 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133296924 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208408238 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122064209 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185907344 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159490847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18496454 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155866629 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160415566 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160619613 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137055356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188474928 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123320769 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178958336 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158192497 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160990278 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125402611 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18262386 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157818371 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.180372574 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124946805 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169607747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209658395 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121846472 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129241222 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309502654 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186496397 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185674196 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173618208 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132839398 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142243978 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18090485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150573997 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187634052 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125243282 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157027052 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12788388 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193811014 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152587588 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184651989 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177581578 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185242989 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19157347 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161172592 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.288426291 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166948105 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159018931 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124428945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155671952 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139521574 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158426115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139597694 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214609498 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179837021 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.180984358 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143230371 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160694197 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124693647 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128517876 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193374302 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149621257 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187061962 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141493699 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111254547 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170387808 seconds)
  done (took 83.448108594 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178119566 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169485419 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.190038891 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.241078475 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219238337 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.310827596 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.248530993 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277408851 seconds)
  done (took 2.936965257 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122244079 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158728263 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141580722 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145828586 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.118069075 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.453497315 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160485767 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120910996 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16809501 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.161839225 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143291744 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.619231539 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115179636 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147862995 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.131488696 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.125885052 seconds)
  done (took 4.133884584 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.454756096 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.591322599 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.248260215 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.281702849 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236898126 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.182042626 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.803519259 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193301191 seconds)
  done (took 13.098727053 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150062574 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136485294 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.832715383 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.268533255 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.153880362 seconds)
  done (took 2.650739444 seconds)
done (took 129.705518866 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122810461 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122575252 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121962804 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153440914 seconds)
  done (took 1.615363083 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184540293 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09601089 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098350024 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123953882 seconds)
  done (took 1.608295732 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44326758 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094914901 seconds)
  done (took 1.669636578 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14952816 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14425061 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169806564 seconds)
  done (took 1.579973798 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144091438 seconds)
  done (took 1.253968107 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130093183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122252359 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.241224016 seconds)
  done (took 1.606884704 seconds)
done (took 10.447528435 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122827215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422582823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434625975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136257285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712737361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429525505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036577276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177356718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177099963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140840579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133215222 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691705082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052873031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.366164108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009499924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.393542472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697844057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112642037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148174703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112995544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016320031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139246947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113251327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112870131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.768322131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423180205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110721905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.405201622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111325033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114072937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428924262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112266466 seconds)
  done (took 17.466975817 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120712065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17509966 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14752012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113384724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115431965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140646906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12429842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123329631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206647766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111590058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16206954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111826785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117029401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140424679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137251263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111378877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142289995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115262495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119502189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140646165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1345161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110138939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141683984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115085922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11255747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162466426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113234385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124321789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139911089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116259284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11693257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140773475 seconds)
  done (took 5.32454346 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161274625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18201665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1502058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150135458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188345419 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114247623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225977424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151513132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207242683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113012028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13325051 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14110972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154809038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112305071 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166748423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111689581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116135565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143506444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121268044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113434093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163343563 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111075062 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114429373 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142775864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113446166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162866815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113845376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125319795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138820177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118012888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11764995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140666408 seconds)
  done (took 5.637050652 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128537258 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128974342 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13672413 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166271063 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122383645 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126990832 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157377971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12290649 seconds)
  done (took 2.209101876 seconds)
done (took 31.752243164 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136869227 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129795308 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129677732 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152974917 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.195238873 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146682768 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127332053 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115924299 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15352331 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132571511 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112255463 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116014084 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.161712878 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119994772 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.228805686 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125306954 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.232745555 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197849705 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147325439 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124705486 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116558557 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231070666 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120957667 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146380032 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.205263056 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115590739 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.221247726 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12005356 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151086464 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.115383985 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.227957819 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122083457 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115767938 seconds)
  done (took 6.108800335 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.213350937 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119149922 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.152640694 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121451593 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119636719 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150175963 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.215705277 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151009431 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121511995 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120142708 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.120436127 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226920045 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124723146 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144584177 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121210159 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115551216 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.245359071 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120399894 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.112106868 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.127174664 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114636502 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120373526 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257223627 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112721325 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120532201 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.152289537 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122190135 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122873386 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149697488 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121077031 seconds)
  done (took 5.468990184 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128991177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134761846 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.166775581 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190042153 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150867339 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164884112 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.144005495 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13686716 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175919553 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115785876 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12967024 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181707634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132366536 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124617244 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149098019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134535544 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137722716 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145324804 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122001597 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132523943 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1661884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134396502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142549128 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153353767 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11344768 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121080691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155568379 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130538566 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121759054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159113173 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116501004 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11804825 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146179079 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151187178 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116245837 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158916171 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141383638 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126463686 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.16017544 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146763242 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117278614 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147604398 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142140081 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170358682 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146503888 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128910523 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125968801 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.160152159 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113636516 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134360116 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189795655 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115450353 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13510243 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.146182909 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114053844 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122896914 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14443764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118397818 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130151151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.146449546 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141182405 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121780619 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153699334 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11843177 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125311864 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113243997 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.143869561 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11901084 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142425608 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152400161 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152240848 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114209582 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157291785 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128309028 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124899009 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.157070911 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115251219 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124872895 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.155023231 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122997305 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12718983 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14673034 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120735897 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132187957 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165158699 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.13114427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126924467 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156416925 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119412521 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116661505 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132028457 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147146056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120107625 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127172697 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.145508688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118902869 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128265541 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156363213 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114409038 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140101585 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148326827 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115835266 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140228624 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.149306894 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122408159 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124488345 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18648729 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116409435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12658962 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15741783 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116141008 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123408994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118095975 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.144018173 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133140689 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129957894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.151984923 seconds)
  done (took 17.227896813 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.329783432 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315309234 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185075081 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.314632255 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159445619 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.212588345 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.31155805 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.313092582 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114351841 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184389585 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19788917 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.252191012 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147790954 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143382659 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314329649 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.366958148 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.177476375 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152355589 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184120689 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128715373 seconds)
  done (took 5.64755174 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136273268 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151531845 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169194648 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145020681 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121816662 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159094438 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115592972 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134453358 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154175441 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126563613 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118351633 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161869576 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125126717 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128672765 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160733331 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.153398776 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123416442 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150804833 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138337498 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119353374 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137708384 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143203898 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123685367 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169580453 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130486711 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126180993 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144845747 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121289671 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118149783 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.150788801 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120749036 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134192686 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152109596 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110391423 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127392698 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159110719 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120881882 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117762467 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119484745 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149651642 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130421969 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124485324 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.15365658 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105184144 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132331404 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116010705 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155413861 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128955439 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110464212 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.160054449 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128816836 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126151202 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150680921 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135124656 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119406016 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130752824 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.159289431 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126195451 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149062387 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115652299 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113639679 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118387647 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151159215 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127073767 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127288701 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16635435 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132787539 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11489437 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150472004 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120217974 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119075433 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.160415798 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139053596 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120253994 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.149620415 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.128674477 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120244843 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099019216 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.155731102 seconds)
  done (took 11.805935319 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14278321 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121082676 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133736372 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182071488 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12470979 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120503471 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154129221 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136989699 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125013861 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160704919 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127231064 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12913841 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168242014 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12590219 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120877836 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162580656 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125693429 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154638778 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.166899696 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143954541 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156214607 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12320484 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130007864 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126548055 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176557332 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127301469 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173137371 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126750812 seconds)
  done (took 5.121501833 seconds)
done (took 52.507738712 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.292816723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.47324946 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.247481924 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.242478048 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.295334506 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.264418793 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.242395233 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.240554879 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.668565045 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.221035495 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.244390152 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.241569562 seconds)
done (took 28.82519451 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.37744996 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.760686277 seconds)
    (2/2) benchmarking "String"...
    done (took 1.55206481 seconds)
  done (took 4.467625703 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.236884042 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.23859255 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462113445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.237258992 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.242153007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.260090881 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.241383524 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243628079 seconds)
  done (took 16.066892319 seconds)
done (took 26.293279321 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.285128109 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.799733487 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.632351594 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.239978181 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.24342564 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.245930493 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.245487393 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.274399524 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.272265945 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.254377336 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.665487226 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.54128465 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.262990891 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.67750343 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.23937424 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.258801857 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.265434787 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.859230275 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.244591959 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.282004747 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.22243055 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.228308567 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.241979687 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.2461274 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.248741896 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.240986731 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.301172 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.242231127 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.777717007 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.259812346 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.223307935 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.257168953 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.294389274 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.247509282 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.245050964 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.248138045 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.605400976 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.253482641 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.230450626 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.247155612 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.600821666 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.262450824 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.239842626 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.265174804 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.247326712 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.309512902 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.232835162 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.354814773 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.26919779 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.254576872 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.257676006 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.866790023 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.257438762 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.246445464 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.24885916 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.86056526 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.264399181 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.427349453 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.277230155 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.246892973 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.242003579 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.265947209 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.319850587 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.244526093 seconds)
  done (took 148.858306135 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.243356116 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.245895126 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.243301183 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.244020594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.245727956 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.246301302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.242722524 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.243038779 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.249917239 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.271699488 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.247803385 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.248219983 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.248357886 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.259873086 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.251123954 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.262917553 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.26256434 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.243889502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.269256499 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.243460797 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.250547365 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.247962207 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.248115657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.248645695 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28925123 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.327413987 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.252634729 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.267525838 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.254687665 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.243511686 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.264576706 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.251791893 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.880772517 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.113071699 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.256517385 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.253952669 seconds)
  done (took 81.812734167 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.244803725 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.244525928 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.24580648 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.278585889 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.246773261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841297462 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.846599193 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.054171814 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.605435204 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.814987539 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522551897 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.244836444 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340893029 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.259531722 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.245300898 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.246458064 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.261115455 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.272332834 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.248799107 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.246919592 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843651832 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262640852 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.803834481 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.42694086 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.263409817 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281458031 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.644575562 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.24695407 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28126101 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.420229716 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.584528572 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.297872222 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.247751017 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.247249463 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.687128316 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365439756 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.248028928 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279298737 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.250235452 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.532744219 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248184558 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.248236655 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.250454219 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901541711 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.249042639 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.847107411 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251531794 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.226812086 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.24792637 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248679691 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.404712557 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.071622244 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.252578139 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.248596064 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.25092197 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249009465 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.247756937 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.283204415 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.572989434 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.353204603 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.251097727 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.248451998 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.252981078 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28295596 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.251686985 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.485803456 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249779001 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.426930657 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.310934588 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.369960598 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.845482597 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251073641 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348436605 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370790993 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.249796908 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.249354901 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.24907543 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.248829128 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.360939627 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.249498151 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.688347558 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.431482179 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.268619445 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.683145927 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.353791949 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25069669 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.67687191 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.252718398 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.251722284 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014651596 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34773723 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.25084311 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.251123858 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.250133006 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.251026342 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.689396767 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849955347 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.576358404 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.256108143 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.749152384 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.258191465 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.706927217 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.83468403 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.988554932 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.256045716 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.365174965 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.433347383 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.268489371 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.251116455 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.76666738 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.256598827 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.310310633 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.253745487 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.653483178 seconds)
  done (took 373.836523792 seconds)
done (took 605.652351626 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.175238129 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.117725561 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.236661341 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.145261148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.105151156 seconds)
  done (took 11.933024805 seconds)
done (took 13.086124601 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451979021 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.456266256 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322419247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457393338 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.292219169 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.475789047 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.450063141 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.27833579 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372974967 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342535529 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374422493 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312101144 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289269568 seconds)
  done (took 19.030017669 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541915734 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263852472 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324200675 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515330826 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301004886 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525082977 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.575225876 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.264052912 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417620718 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271046835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272572258 seconds)
  done (took 18.426483722 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538464738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.264242541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320100387 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51467862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.29999953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545331596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576221313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266317232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.404626751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271555216 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.269997278 seconds)
  done (took 18.426633594 seconds)
done (took 57.037996516 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.192032713 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 18.175759117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.29280669 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.353943678 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.267989975 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.283710277 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.353340551 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.272417233 seconds)
  done (took 29.347612129 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.269017726 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.269249355 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.267402546 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.268219052 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.268386783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.267507344 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.266797569 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.2674225 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.266918752 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.26697785 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.26826769 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.26822695 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.269562 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.271497084 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.268588968 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268382832 seconds)
  done (took 21.44910838 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.26955762 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.26762687 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.268543691 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.268602357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.268357212 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.267618517 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.268517159 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.269338544 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.26847368 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.267872099 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.269465527 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.267827311 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.267171721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.268105552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.268629595 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.26931875 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.26730762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.268835931 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.274907008 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.269169624 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26956116 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.268531427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.26878949 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.270082076 seconds)
  done (took 31.609338558 seconds)
done (took 83.562506404 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.257273645 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.291828678 seconds)
  done (took 5.706721013 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.332378368 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.330305395 seconds)
  done (took 3.821948792 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.269040083 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.269399053 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269476673 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.26988447 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.268936355 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.270826541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.272106159 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.271032034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.27055207 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.271567108 seconds)
  done (took 13.861483177 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.270520682 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.270091745 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.270103329 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.273453191 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.270443205 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.26984067 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.271209246 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.270958296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.271611505 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.270732182 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.275123607 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271388813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.270585683 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.271276876 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.27177436 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.271419107 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.272187823 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.272044674 seconds)
  done (took 24.043836694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.285788204 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.291644509 seconds)
  done (took 3.737078319 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.412795904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.312824186 seconds)
    (3/7) benchmarking "month"...
    done (took 1.388259819 seconds)
    (4/7) benchmarking "year"...
    done (took 1.378215114 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.313253389 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.292896975 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.314616704 seconds)
  done (took 10.573340384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.274354963 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.484298106 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.618829685 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.857133679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.272399835 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.275290562 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080416778 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.276382518 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.278077151 seconds)
  done (took 14.5772705 seconds)
done (took 77.480485026 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.261325096 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.294277054 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.292732342 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.287842447 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.61232916 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.296747867 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.264792394 seconds)
done (took 16.472928016 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.254208597 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.264437802 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.252909997 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28401427 seconds)
  done (took 10.216242979 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.262577165 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562034444 seconds)
  done (took 4.984778186 seconds)
done (took 16.364768377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275101925 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.274442656 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.273081977 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.274728758 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.274742493 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.274221218 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.27274188 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.274949739 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.273870367 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.274460165 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.274847574 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.275256564 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27347117 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27344288 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275073425 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275721934 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.274019805 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273670443 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.275820898 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273337437 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275280237 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.274711892 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.274742029 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.276329657 seconds)
  done (took 31.751006155 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.278027771 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.275453852 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.2761279 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.276042125 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.274829758 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276918589 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.276381303 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.274619048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.276086202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.275681089 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274585518 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.273748523 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.276537363 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.27494247 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276311909 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.27469294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.277602456 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275794753 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275671861 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.27561051 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.277768153 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27655539 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.275701686 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278384829 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.275036704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276567865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.278982491 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.276003383 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277988723 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.277306282 seconds)
  done (took 39.449087137 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.285065526 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.2847383 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.279211242 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.280596425 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.279420041 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.279727149 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.279984273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.281516031 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.28051932 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.279516755 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.279076415 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.279696543 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.280056891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.281266579 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.281012579 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.280862992 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.282428192 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.281992286 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.280984481 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.280367999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.281849091 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.281454408 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.281529342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.282970784 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.280882057 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.282492825 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.281213139 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.281405527 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.283757523 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.282114527 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.280583058 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.281703074 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.281395387 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.281927754 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.283143146 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.280974881 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.285662944 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.288700696 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.281831438 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.283042172 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.282139535 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.282377101 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.282450718 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.282325256 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.283792934 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.283011299 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.283563779 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.283121075 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.281011163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.283726817 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.282281323 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.282451924 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.283366007 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.283728533 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.283643084 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.282866009 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.283327945 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.282949128 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.283554651 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.283877907 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.283461931 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.282950694 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.283124768 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284008039 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.282752736 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.285132168 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.283829277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.284765659 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284140044 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.284964165 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.284648315 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.28427661 seconds)
  done (took 93.501463333 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.282930049 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281194688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280180554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281633092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.279973322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282352095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281341928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28156904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281342375 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282128727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28290691 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282221566 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281796287 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282799116 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281440083 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280529818 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28315801 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279832568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283181174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284369078 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283021076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282078281 seconds)
  done (took 29.371057497 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284034902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285172965 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.281435166 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283958891 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284141479 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284910233 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283932854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28615024 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284146974 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283072813 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282347935 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284060663 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285227816 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283633015 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284228272 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284598577 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28433386 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284760718 seconds)
  done (took 24.283842945 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.283566603 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.283294959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.28430559 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.284413646 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.28319686 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.283279605 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284146465 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.286041515 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.28437843 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.283420735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.285497132 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285062586 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.285989378 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284785659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285516465 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.284068115 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.286262016 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284588258 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285285027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285793619 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.287223488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286148712 seconds)
  done (took 29.436979395 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284982591 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28654625 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284430312 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.285266288 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28543296 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.286745739 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.285183581 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.28451612 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.28730303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.286757781 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284390238 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.28594833 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.287319237 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285271169 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.285793641 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285350847 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286573391 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286904725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286411085 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292416749 seconds)
  done (took 26.895178363 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290933845 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289631127 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.289659383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288406396 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289860778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29130328 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290720407 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291605856 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290860521 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290504199 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290525695 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290251517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289758892 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290188587 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289530055 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289398708 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289735176 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292758228 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290512213 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290773314 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290496352 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290691418 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293617114 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291684238 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292318825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292091043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289955247 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289917124 seconds)
  done (took 37.311571007 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288695227 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288396579 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286983595 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.288342262 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.287773753 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.288072924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.288722635 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.288349824 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290027028 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288390706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.290540945 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.289828755 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289782042 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.290583509 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290229658 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.290394112 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28923445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.289651855 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289096456 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287975248 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.291122411 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290769394 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.290195266 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289506044 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290326781 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.291801303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289392833 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291085109 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291403807 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289887298 seconds)
  done (took 39.861954765 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.31169153 seconds)
    (2/2) benchmarking "in"...
    done (took 1.311376324 seconds)
  done (took 3.797915746 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.289109644 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29122266 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.29080001 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.289922405 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.29191114 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.291151127 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.291127432 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289972057 seconds)
  done (took 11.501015628 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.287315618 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.293772484 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.292600236 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.29178252 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.290972605 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.285486009 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.294835844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.295736815 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.288106072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.288412493 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.292722148 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.292195965 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.289138516 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289376107 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2880232 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291008369 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.294701259 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.293012185 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.293774618 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.294856086 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293440302 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290061494 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292842108 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.293544861 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.287986299 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.296977694 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.294354346 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.298099672 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288855413 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.292605533 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.290831283 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.293684776 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.294983979 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.295040956 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.294003084 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.29554663 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297022995 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293883376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.295554672 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297657016 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.295389037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.293651697 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.289721493 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.292454787 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.291500819 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.298183969 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294157352 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.294032452 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.288477469 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.293675633 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.299240743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28839854 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.295318872 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293027011 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.293282159 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298818113 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.301456585 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.295177102 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.297924722 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.299191108 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.30683632 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.304079794 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295518558 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.298383199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302094559 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.309785597 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299124708 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.300360581 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.297610122 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.296311403 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.296732862 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306847578 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.305956418 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.299800588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298188554 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.296851648 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.292785288 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297235492 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298981879 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.299715669 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.299529996 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.301288539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302870324 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31020562 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.292736176 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.298786016 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.298731408 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.298383183 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.293044515 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302064572 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.303802958 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.298223821 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.291214706 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.293217187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.295037302 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.299212413 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.293604754 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.294957731 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.299684818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.298430319 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.298641581 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295191201 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.299585447 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300914884 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300598622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.29966384 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.300215067 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294059808 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.300527954 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.302034313 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299516263 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.296100844 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.298197778 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.299139581 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.296692272 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.299448225 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.301540898 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.294848992 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.301542783 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.298338902 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302134874 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.316969046 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.301516086 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.300072629 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.298484949 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.308954328 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300121932 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.298082504 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.302642577 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.29880518 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.299248019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.297498293 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.303169723 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.298777919 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.30151239 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297658577 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.29973228 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.3008505 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.299364843 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.297990976 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.298864661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.295917217 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.298237529 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.301138447 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.304158228 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.298527847 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.304985893 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.300008056 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.300052033 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.299919552 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.303417845 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302677504 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.299821306 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.305060215 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.298589707 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302918617 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.297146937 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.305289668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302970121 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.304295994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.301989473 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.297718892 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300847822 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.304712648 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.302836472 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.299354795 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.302368892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.303652066 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.302986801 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.296172943 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.302366307 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.295604767 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.301524649 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.308789527 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.303209229 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.303228791 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.300781374 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305615954 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30454907 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303700362 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.299871942 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.304346469 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.305237214 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.303770174 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.308085878 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.306044064 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.304702398 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.299163473 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.298335614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.305536682 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.30285554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.310006605 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309703626 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312640778 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.301254674 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.30811099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.298845934 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.307985691 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.302680047 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.307188672 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.305793652 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304128311 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298216762 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305848914 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.302325325 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.305335505 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.298589268 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.305642456 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.306211577 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.305375324 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306587388 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.300952786 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301933163 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.304620645 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306481697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305487662 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.301210324 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.304398034 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.299398764 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.30112723 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.307583628 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.309191645 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.306557122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.308886236 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302838907 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.306094926 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.304386245 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.302036807 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.308552244 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304860967 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.303921333 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309910101 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.306441734 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.304200436 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310589588 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.307507794 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.303688519 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.30758497 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.313112202 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.306754663 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.304798395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.31359298 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.311829852 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.309009506 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.307918939 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302535086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.309408372 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.307882088 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.3092387 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.302963322 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.310615829 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.303846746 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.306791382 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.303959416 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.306224677 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.30546747 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.307399227 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.311151698 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.308255521 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305473192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.310511526 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.309028103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.309380451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306941658 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.314153478 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.308451561 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.306356327 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.305754566 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.306670623 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.312580491 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.303739453 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.309066062 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.304662705 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317235359 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.323683171 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311157514 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.308643342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.31122309 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.310527032 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.308950433 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.306706352 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305244516 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306788275 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.304895923 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.306100498 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.310803342 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.306802487 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.312038764 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307196525 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.310067776 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.314484719 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.313949065 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.30686807 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.311196335 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.311781375 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.310991026 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.305726719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.312084019 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.307359542 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30933782 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.308161237 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.306467088 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.315353531 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311133698 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.309176176 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.307799126 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.307639937 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.308109291 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.309261385 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.314350106 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.309594951 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.317787687 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.310597128 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.314140638 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.307976863 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316765849 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.315550466 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.310814814 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.318496982 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.311060188 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.30660512 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.307456774 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.312651013 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.314760732 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.317443611 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.309918699 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.315529096 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313079905 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.313282176 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.312214927 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.313250815 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31432771 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.312912238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316710248 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.312727091 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.311815828 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310733379 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.314975789 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.315524189 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.314593784 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.307757191 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31239698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.315849612 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.309578055 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.310796029 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.309175062 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.315678178 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.314967586 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.315951312 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.314479708 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.313690094 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317983469 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.314685537 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318688585 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.316160093 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.316911584 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319043191 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.317185071 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.320379206 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.310169416 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.316742002 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.314445549 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.311969004 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.309148394 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.312245028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.316025486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.311644254 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.323668083 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.31674838 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.312543307 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.312458889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.318031464 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.311324821 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319627836 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334232984 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.312549108 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320561567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.315374776 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.312500291 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.320515452 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.317756025 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.310978467 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.313844503 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.319586162 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322826902 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.311625353 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.317007467 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313064844 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.31791743 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.318929173 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.317336271 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.319366753 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.31745983 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.312427892 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.318446523 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315008556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.319331387 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.312567197 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.3160158 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.313167413 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.322993819 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.320479342 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.314438042 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.318928141 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.318376937 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.314064819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.315559073 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.31924351 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314022489 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320425906 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.314667472 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31867742 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.319490296 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.316380929 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.315195284 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.320862913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.314919475 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.314247348 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320342567 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.319086615 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320406211 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.315695914 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.320559986 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.315701201 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.31430895 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.32081524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.315513744 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320955812 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.317093396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.319528934 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.315282037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.318998205 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.319228257 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.318731481 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.313879758 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.315416469 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.322958875 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321316175 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.324132178 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.320862175 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.324884698 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.31673315 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319365879 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.321782682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.315303528 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.316786417 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.322279433 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.317906809 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.317759642 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.321073373 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322576518 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.324074361 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.318783131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.316828677 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326016841 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.323403263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324944837 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.317999937 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.320109653 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.318350802 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.321896328 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.322142517 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.31711273 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325932947 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.322177055 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322738615 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.320643272 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.319736302 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.319577155 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326277059 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.322572187 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.319024771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.322837614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.318018658 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326062295 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323075992 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.322961317 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.317827101 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.318174663 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.32223066 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.323187769 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.321563499 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32121575 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.320085704 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.319294057 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325298092 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323976114 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.323000102 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.322973545 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.31778613 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324688514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.319881491 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.32142064 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.320406124 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.320440743 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.326470381 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325374828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.321498054 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.326407991 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.329440273 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.323672164 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.318971554 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.320513184 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.323847992 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326908847 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.325584746 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.320100449 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.321503612 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.326092839 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326121553 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.32631296 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.323256329 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336033536 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.330504451 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321800443 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32256354 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324073168 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.327990069 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.326330471 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.325754505 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.322285964 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.325416731 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.334326438 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.325974326 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329415713 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325615535 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.322931764 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.329991252 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.323758251 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.328273184 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.325032539 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328790887 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.328374931 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.327077505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.336172849 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33003367 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330826311 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348422063 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.327339015 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.323894811 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.329326248 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323409587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.327295044 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.324664873 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.329363068 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.328256637 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326819283 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.326771128 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.322692442 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327921994 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.326484153 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.334952604 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.327325578 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.322341589 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.324827731 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.327707523 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.328548283 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.332278957 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.328335246 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.329880206 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.32950356 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.322938081 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337345888 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.337580803 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.329685699 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.329359592 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.327853321 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.327602 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.328949922 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33245325 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.334718472 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.32894017 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.330820948 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.325195607 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332883633 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.330787209 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.325082655 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.326164755 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325591333 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.329766816 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.338194894 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343675771 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.331667986 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.327611523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331585216 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.332089042 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327441826 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33124387 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330882029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.32599509 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.327657762 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334880297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.330699601 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.330092923 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.328967242 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.338132744 seconds)
  done (took 782.633116533 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330321379 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329637012 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329045085 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331057705 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330098555 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329883169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331035281 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330167821 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.33014923 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330397819 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.331743718 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330004251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331531834 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.331000793 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329702866 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.332447093 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330363932 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331105629 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.331032514 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332210751 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33074361 seconds)
  done (took 29.153728094 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.333731017 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.332636912 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332049196 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.333275323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331096996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.333042159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.331678897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332380427 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.332861918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33169038 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.331323512 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333383739 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.331752961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.33151582 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33277627 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333734045 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.333748776 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332497932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.333819077 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333280464 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333666258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.332375843 seconds)
  done (took 30.529913142 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.334805207 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.334775533 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.328904417 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.333467312 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.334404059 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.334118618 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.334849681 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.335499314 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.33532726 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.331149089 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.32946733 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.330336214 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.335343947 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.339658239 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.331917758 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.33599014 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.335636391 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.335367448 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.335582976 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.335313527 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.336147564 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.33844165 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.333596794 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.328853015 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.336344918 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.33542381 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.33496408 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.33814341 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.332174716 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.338875831 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.336720557 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.331073648 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.335629986 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.335628892 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.335247068 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.342423723 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.338189384 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.335897239 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.3360424 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.340848833 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.354598163 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336269517 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.339030925 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.340821904 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.338075723 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.33467493 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.34315061 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.336990115 seconds)
  done (took 65.341964775 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.337595773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.338724401 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.337331739 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338363521 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.338257366 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.337181407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.337161227 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.336856596 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.336813661 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.337075305 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.336712391 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.337502943 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.336884566 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.338571302 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.338647107 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.337281111 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.336407169 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335852019 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.338212753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.336976934 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.337647855 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.338576542 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.338388518 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.338652896 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.339631257 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.33759799 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338079968 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.338992579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.337110479 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.337393495 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.338949195 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.339051483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.340308941 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.337794344 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.338089935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.340317756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.339138981 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.338424758 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.339309531 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.338929992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.339703452 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33960963 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.340606233 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.340246155 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.339335918 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.339562589 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.338570698 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.339706104 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.3405596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.339965837 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.341330569 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.339947967 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.341106139 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.340205946 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.341441323 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.342039608 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.340968381 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.339400437 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.341190805 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.340548745 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.342056418 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341530044 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.3412493 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.341963358 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.342619118 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.340753808 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.341519992 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341010851 seconds)
  done (took 92.278271616 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343666761 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.341902794 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343499134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343637108 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.343487162 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.34393665 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343056798 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.342678552 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.343224393 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.344154497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.344650053 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.343494069 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.343857177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.342394139 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342677168 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343437341 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.343056298 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342467913 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343410022 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344371019 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.343355037 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343326959 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.343997485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.343654579 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343875159 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.34402689 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345322718 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.344332357 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344223002 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.344126796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.344094086 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.344465082 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.344845512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34412226 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.345038866 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.344187135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.344015966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343485415 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.344350881 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.345911837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.345095416 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.344936199 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344933709 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.345523404 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.344875656 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.345576557 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.345039224 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.345624498 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.344897217 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.345240028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.34582728 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.345403834 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346406846 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345738522 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.346438234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.346846176 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34591721 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346419082 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347519038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.346382325 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.346651522 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.347193113 seconds)
  done (took 84.581480095 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346616981 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.346639438 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.345184356 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.345572823 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346865715 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.346738344 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.345987934 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.347226112 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34651318 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.347669009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348940971 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345901493 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346893262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348134018 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.344646127 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346914572 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346831633 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347453694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347781063 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.347295317 seconds)
  done (took 28.159174876 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.34901185 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.348300691 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.346978964 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347577483 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.34935583 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.346472726 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.348355992 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348590762 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346616613 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349531568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348631429 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349279743 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347944402 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349166865 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.350832225 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.348380261 seconds)
  done (took 22.800486764 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.349476215 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.348549862 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.351754553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.35186931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.350344556 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.349043151 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.350067171 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.347880844 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.348937287 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.350059895 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.350737146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.350772101 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350557906 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.35013488 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.349379682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.349891396 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348124107 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.348305532 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.350309896 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.350998123 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.349803086 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.349139831 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.349259625 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.349089272 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.348452873 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.348665037 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.349093386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.349685647 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.349091416 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.351500014 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.350548421 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.348979485 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.349165435 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.349633903 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.351772635 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.350369302 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.350844147 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.351047043 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.351456556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.350434328 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.35193677 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.350440072 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.352623172 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352093297 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.350846186 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.352436645 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.351195242 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.350513579 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.350044944 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.352752761 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352478817 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.35211995 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.353895034 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.352861557 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.353089513 seconds)
  done (took 75.502832618 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352498134 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352410834 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.350630046 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.35351181 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.353930646 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351536674 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352930921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.353680883 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351022575 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.352875863 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.351566106 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.355018237 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35114859 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352965112 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353180583 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352873823 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.351356079 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352947089 seconds)
  done (took 25.575073339 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.353462379 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353066597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.353161984 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352709307 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.352781917 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354727627 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353359311 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.353081893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354905623 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.352706872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352351634 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.356145703 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353885759 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.355879459 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355209877 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352984229 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.355580258 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354646995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354766705 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.353630421 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.355358124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35375115 seconds)
  done (took 31.017721089 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.348107175 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.350572694 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.349710565 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.366064217 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.363869307 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.349173235 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.348026124 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.349767136 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.372475405 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.396661301 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.38935247 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.365857744 seconds)
  done (took 17.580714512 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356159764 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356933692 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.356101529 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356491655 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357160732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356172573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356276877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355854882 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357822815 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355906003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355782059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356589144 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357044039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35653135 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35802554 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357566895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356160498 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356776965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356177604 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357615866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356846857 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35956889 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356548567 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356115142 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356476972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355322612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357377213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35728607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357783936 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358359213 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358159695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357335684 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358700102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358434928 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359126447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358629047 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357566624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359824426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358943791 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35724129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358855601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359242622 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358332145 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357520065 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360444371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357539051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358159669 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357826483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35850273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359642509 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359082775 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358506221 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359823347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360211045 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360284984 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360213114 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357797589 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359272759 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361153832 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358300523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360080761 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35938723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359495264 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362953154 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36010693 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357819811 seconds)
  done (took 90.863284553 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359488184 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359438497 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359019801 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359616693 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360658904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359274686 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358767974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360778161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359428832 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36103765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361126973 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361323731 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359737371 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361584948 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361922006 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358992486 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360630167 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360227588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360329741 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362768936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361141251 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360270779 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359575047 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36081021 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361014944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362720853 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360591341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362021421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36185841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36242069 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362136236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362733563 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361324371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.362777919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362520377 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362268474 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361589353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362974056 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362234534 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362965562 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363461691 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363720347 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36264101 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363114806 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363224877 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362248917 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362731607 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3627696 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363147216 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36249524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363192958 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364929572 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363624267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363656165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364082245 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364127099 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363986252 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362620634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364815997 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36494832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362867526 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364318845 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366793448 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363443981 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363432691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363948588 seconds)
  done (took 91.133170226 seconds)
done (took 1835.475432465 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.527046044 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.476902749 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.358109297 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.368602566 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.359148463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.38464965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.375586746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.360327439 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.358883505 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.360464721 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.359180457 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.550008617 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.357452067 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.360072727 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.360241257 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.457154037 seconds)
  done (took 27.613012756 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.392977652 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.367981179 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.492551559 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.36765812 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.391335328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.573777154 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.429294279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.369233279 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.561095923 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.389102857 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.37134749 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.392380605 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.366706742 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.355635711 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.389337759 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.576416618 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.648498601 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.369093738 seconds)
  done (took 30.044641453 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.8783967 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.402212297 seconds)
  done (took 5.519542544 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.386968867 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.36629662 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366513875 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.364646677 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.354924192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.357739196 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.364222398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.35877472 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.370267251 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.51122096 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.370740307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.37809162 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.364584506 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.365635225 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.369164107 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.414061913 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.528573796 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.372678097 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.368555126 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.369690214 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.364823732 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.480862922 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.416554857 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.375859429 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.508026883 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.362726102 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.371547498 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.372899801 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.511877352 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.375447044 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.365493827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.366499723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.369347023 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.360330326 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.874900544 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.363703142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.375158687 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.396643343 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.370615491 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.52949717 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.369448081 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.373998578 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.359775009 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.865325302 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.507533577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.503250263 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.360835587 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.372441966 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.368590179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.440640894 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.371195837 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.37061025 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.429084568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.254216672 seconds)
  done (took 87.433409054 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.385853006 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.360446044 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544125446 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.390430874 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.362195274 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.365413464 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.367862699 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.693183489 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.409665698 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364076961 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.690847147 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.992582108 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.37379689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.437991797 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.351201384 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.451985499 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.362129655 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.361561323 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.365598015 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.368972667 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.952949365 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367034129 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.366151007 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.473489922 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.40525994 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.937565158 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.369802664 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.367329802 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.389275428 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.363106057 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944717129 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.377037414 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.459147634 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.368911286 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.669176479 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811123889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765537498 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.368634019 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.379128661 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.365998899 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.372870436 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918644981 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.783573934 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.368479 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.365014129 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924800973 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.367673582 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.366385185 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.373540762 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.625699721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.368495422 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.365550009 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.372069615 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.368170505 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.364122709 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.407498346 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.483177088 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935591767 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.369612973 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.38368113 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410587949 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.366441057 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.372807053 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367192093 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.388842257 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.78469866 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.555784826 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.371779047 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.78243416 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94425825 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.370435095 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028248564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.370693339 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377857097 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.371943651 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.380528439 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.370931557 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935316973 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.38204332 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.36745102 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.766038513 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.376850367 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.683149038 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.390176587 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.369480589 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990018941 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.37364183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.384196373 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.367631011 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.390946524 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.371472366 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.369177477 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.668493661 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.396504949 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.365972341 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.367885993 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.39599404 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.368857584 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.370737998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.368192343 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005329817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.379988083 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.368182372 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.373887023 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.368537094 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.372753751 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.369441309 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.370172587 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.647686555 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.372527868 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.396999529 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.369305065 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.384353818 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.380689493 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.456914306 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.370184512 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.73311433 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.375673757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.369571021 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.375820348 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.370031841 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.404413685 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.368689503 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.377331732 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.282004014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.63765355 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.392613688 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.372829711 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.372391786 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369811657 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.373247909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.37531959 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.432237499 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.374984253 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.215090558 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.381754338 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.380859241 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.369868745 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.377757486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.370340157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.382829569 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.369796909 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682399003 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.674608331 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.557293634 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.373737705 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.3737848 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.215417096 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.396458013 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553958649 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.394308223 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370337577 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.626473739 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.574107425 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.377522656 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.370863012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.372206801 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64305291 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.373421334 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71486081 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.980905167 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.376449249 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.371533224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.224893023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.105912428 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377150491 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.377060782 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.685803768 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.394157002 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.372738808 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.372303943 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.373087376 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.377185777 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.375139473 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.380608807 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.374306179 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.371672688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.683435438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.569263074 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.397392824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.380987965 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940505768 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.414957277 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.373802318 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.38070033 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.375852262 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.373723401 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.401322254 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.37626066 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.41742794 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.376373315 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.373472405 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954362492 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.39346438 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.376869638 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.567798997 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135735566 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.378934431 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.375160922 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.377285213 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.307596372 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966101286 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.441929224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.740230228 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.388575295 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.416526308 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.37651525 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.474360671 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967302541 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383236596 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.378165023 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102243695 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.37865366 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.894684656 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.375057804 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.378331272 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031620756 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.380511883 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.378826876 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.375948876 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381056368 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.695752594 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.375304794 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.426600584 seconds)
  done (took 509.218276964 seconds)
done (took 661.068762772 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.375544549 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.377397788 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.36351836 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.378698455 seconds)
  done (took 10.752954465 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.416412202 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.381832101 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.3873561 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.380866601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.39155715 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.380280248 seconds)
  done (took 9.595505079 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.375427274 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.375809782 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.378003364 seconds)
  done (took 8.386191811 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.62960472 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.40570478 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.785702139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.389652008 seconds)
  done (took 9.469187807 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.389273997 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.389321895 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.389659673 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39460914 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.417401739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.419341645 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.395034328 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.393240678 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.418550762 seconds)
  done (took 13.862383111 seconds)
done (took 53.325355658 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.089259459 seconds)
    (2/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.099935496 seconds)
    (3/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.479044451 seconds)
    (4/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.627301956 seconds)
    (5/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.495004748 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.448029562 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412455544 seconds)
    (8/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.61905635 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.665214763 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.485658064 seconds)
    (11/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.410137293 seconds)
    (12/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.197035362 seconds)
    (13/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.377354595 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.424597513 seconds)
    (15/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.502130762 seconds)
    (16/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.543532923 seconds)
    (17/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.465567492 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.417817436 seconds)
    (19/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.361041345 seconds)
    (20/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.475952428 seconds)
    (21/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.453496667 seconds)
    (22/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.692617226 seconds)
    (23/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.549295869 seconds)
    (24/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.365548384 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.380200605 seconds)
    (26/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.471148817 seconds)
    (27/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.452074726 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.449255073 seconds)
    (29/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.419216147 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.543429914 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.365168612 seconds)
    (32/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.051469984 seconds)
    (33/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.381449291 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.535623453 seconds)
    (35/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.301328348 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.532464556 seconds)
    (37/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.155168476 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.377734212 seconds)
    (39/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.361881885 seconds)
    (40/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.48299981 seconds)
    (41/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.218878107 seconds)
    (42/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.408802365 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.446180866 seconds)
    (44/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.076375066 seconds)
    (45/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.363974692 seconds)
    (46/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.367888928 seconds)
    (47/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.37283627 seconds)
    (48/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.447727834 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405664142 seconds)
    (50/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.577602143 seconds)
    (51/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.578104911 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.494417724 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.496461109 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.543100629 seconds)
    (55/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.459429316 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.503893356 seconds)
    (57/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.443090259 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.379979792 seconds)
    (59/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.371751424 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.583390486 seconds)
    (61/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.383830939 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.533311362 seconds)
    (63/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.553887563 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.516419995 seconds)
    (65/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.417321202 seconds)
    (66/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.490338296 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.504689904 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.559642118 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.473662414 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.547138758 seconds)
    (71/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.583557998 seconds)
    (72/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.367637145 seconds)
    (73/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.419906078 seconds)
    (74/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.364965172 seconds)
    (75/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.524083882 seconds)
    (76/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.50741051 seconds)
    (77/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.412888931 seconds)
    (78/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.364210719 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.521219923 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.468776309 seconds)
    (81/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.364456434 seconds)
    (82/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.672505383 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.582509921 seconds)
    (84/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.217620408 seconds)
    (85/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.369358673 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.472479854 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.495068568 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.476835584 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.510998985 seconds)
    (90/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.172049578 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.387021941 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.50275858 seconds)
    (93/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.369767747 seconds)
    (94/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.382243851 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.522814733 seconds)
    (96/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.501525046 seconds)
    (97/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.637172308 seconds)
    (98/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.053100507 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.551877532 seconds)
    (100/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.460782405 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.486871343 seconds)
    (102/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.383995069 seconds)
    (103/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.531383346 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.50911473 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.52115524 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.370058103 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.421244107 seconds)
    (108/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.366470355 seconds)
    (109/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.172476413 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.452809405 seconds)
    (111/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.374951114 seconds)
    (112/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.6254341 seconds)
    (113/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.525637985 seconds)
    (114/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.771849298 seconds)
    (115/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.486078958 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.450723579 seconds)
    (117/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.366168861 seconds)
    (118/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.265220541 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.443971694 seconds)
    (120/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.516877717 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.676881466 seconds)
    (122/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.415565082 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.557600955 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.371214429 seconds)
    (125/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.370068828 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.479265739 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.553554742 seconds)
    (128/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.477311501 seconds)
    (129/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.225805192 seconds)
    (130/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.372890504 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.373011524 seconds)
    (132/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.621500392 seconds)
    (133/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.372485725 seconds)
    (134/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.531210265 seconds)
    (135/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.501258176 seconds)
    (136/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.372912171 seconds)
    (137/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.374973017 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.549677384 seconds)
    (139/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.577104271 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.480222503 seconds)
    (141/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.420614412 seconds)
    (142/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.411976576 seconds)
    (143/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.418468974 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.447156418 seconds)
    (145/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.449556322 seconds)
    (146/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.383166009 seconds)
    (147/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.377932804 seconds)
    (148/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.386101429 seconds)
    (149/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.316215859 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.142817232 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.50939314 seconds)
    (152/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.404119203 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.381998095 seconds)
    (154/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.425513894 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265406994 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.411850889 seconds)
    (157/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.373113475 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.722285457 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.454056898 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.26524158 seconds)
    (161/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.22467664 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.448969143 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.64019409 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.514707404 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.49763672 seconds)
    (166/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.421567893 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.49340957 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.143690939 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.386912259 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.680179411 seconds)
    (171/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.373521873 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.589201517 seconds)
    (173/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.375906647 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.549886095 seconds)
    (175/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.560592972 seconds)
    (176/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.564872821 seconds)
    (177/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.491970317 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.373569299 seconds)
    (179/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.433458592 seconds)
    (180/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.373254865 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.583471743 seconds)
    (182/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.397954355 seconds)
    (183/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.591484187 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.416769639 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.519639879 seconds)
    (186/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.392379262 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.688354189 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.397742929 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.267622662 seconds)
    (190/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.206829456 seconds)
    (191/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.376905843 seconds)
    (192/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.42260924 seconds)
  done (took 351.610408593 seconds)
done (took 352.869053261 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413145809 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.478168555 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.396738429 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.397042308 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398262232 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.398115541 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.418880254 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.397325773 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.406232144 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.408144615 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.396979718 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.407720477 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.41122586 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.405344426 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.431541406 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.398575833 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.398349501 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.405146736 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.408845802 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.410730864 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400076297 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400073545 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.417890207 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.397477079 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.407781616 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407014429 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.403701712 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.40780894 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.402628679 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.410159459 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.400246928 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40989754 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.41145151 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.408542466 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401245392 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.406097319 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40106342 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.480009752 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.416209739 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.406997163 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.405295134 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.412094246 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.405302311 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.404614776 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.409634322 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.420113936 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408549288 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.414678533 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.40618893 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.396775356 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420086661 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.410624406 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.405178525 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.393120957 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.398423996 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.417495799 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.407936931 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416737266 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.404988389 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403106125 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.435012809 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.416854197 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.41032303 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410203901 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.405662805 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.414340524 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.407999063 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.414204077 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.404267618 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404215184 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402343725 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.406022635 seconds)
done (took 110.747823097 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.530205422 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.402375322 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.544114438 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.407506632 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.56930856 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.540820956 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.407502886 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.404989877 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.404898153 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.227850542 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.405558736 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.405872146 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.402845242 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.406717734 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.535264008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.407804772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.407168799 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.122781189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.410777507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.546715544 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.399690134 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.406407635 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.406488114 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23042158 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.403943328 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.397868847 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.548384775 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.408744564 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.121831188 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.398882357 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.400093839 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.1233996 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.549896031 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.428207375 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.417311288 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.416334731 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.572759062 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.414437282 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.532898941 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.532509678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.544355459 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.447830826 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.39880812 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.404280573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.413045197 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.410998305 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.409313312 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.437382368 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.403722014 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.407980206 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.123613448 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.422018519 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.408461365 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.410554036 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.407481008 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.439206476 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.409662511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.410649183 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.550905665 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.413893917 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.532832143 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.231535832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.233233819 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.411945921 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.404510989 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.409486151 seconds)
  done (took 113.373527604 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.473795047 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.480004854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.525727724 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.408456053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.457682411 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.526814943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.409753185 seconds)
  done (took 11.558828049 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.41304593 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411884574 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.455366342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.455731147 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.409516044 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.56383833 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411802162 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.41718902 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.409437686 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.45975459 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.414072243 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.413618007 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.419587107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.405859216 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.455148844 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.418667606 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.522207292 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.408677345 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413472006 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.560954043 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.411336743 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.421278295 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.457210497 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.418636521 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.415227289 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.413687914 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.184952273 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412239405 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.412032935 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.417236927 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.411598929 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.461419083 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413944174 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.408217632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.412256483 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.523535789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.415284149 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.411342023 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.416011013 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.408457061 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.416251048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.414591612 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.416671807 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.412612853 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.416067349 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.432208657 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.416599215 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.414472961 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.414382295 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418278157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.459029911 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413719341 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.413919724 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.413475976 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.463941109 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422868358 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415485475 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.413543141 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.419181213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.41522915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.564592067 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.457342281 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.41729572 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.45725327 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414913239 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.416446221 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.418322693 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.415678442 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501559598 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.413658661 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.457581717 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.413748239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.591162033 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.434528598 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417356335 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.413314379 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.41262688 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416152551 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.406898985 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.41788054 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.414381793 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.411872963 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.417872752 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.414601818 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.416053166 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.568794438 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.520740906 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.41620718 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.424923345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.418080252 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.41555605 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.464713943 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.417145943 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.416946301 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464153246 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.527800275 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.46555999 seconds)
  done (took 145.242766861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.425278398 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.425800994 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.416620316 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.440231632 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.412180838 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.412695638 seconds)
  done (took 9.816377384 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.415026579 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.418550576 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.416278052 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.416555232 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.418357424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.423642214 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.423442908 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.414590457 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.421848069 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.42135541 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.422775472 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.42519049 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.429904985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.420214031 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.422787149 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.421863989 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.424627732 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.418573264 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.420444162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.419460765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.413665826 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.419217676 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419739607 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.415986381 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.425118096 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.422073605 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.435604252 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.422818267 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.419270038 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.420140067 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422216603 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.425516424 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.416638426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.420438187 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.429763718 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.416301515 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423419382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.428463108 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419690931 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.424986414 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.427643566 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.422465346 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.422656275 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.426793254 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.418435921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.419993395 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.430273027 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.436407769 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.424692969 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.427350467 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.428264085 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.421414332 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.426639897 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.430639828 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.418814598 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420672893 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.43295465 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.427521032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.422054762 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.419294195 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.42405357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.426291346 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.419106604 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.42983624 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.421826618 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.431698791 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.418963638 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.427676882 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422528161 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.422805447 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.430845504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.422382806 seconds)
  done (took 104.74504749 seconds)
done (took 386.010411595 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.800072514 seconds)
  done (took 4.087676416 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.527802725 seconds)
  done (took 3.817135001 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.597600896 seconds)
  done (took 25.890143624 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.417055224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.429361521 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.440965344 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.420529823 seconds)
  done (took 10.995778745 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.796468995 seconds)
  done (took 4.083979706 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.423961365 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.419814551 seconds)
  done (took 6.132311732 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.696948377 seconds)
  done (took 3.983472754 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.767569054 seconds)
  done (took 4.059869215 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.443548034 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.43201051 seconds)
  done (took 6.171570198 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.39931954 seconds)
  done (took 3.686975871 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.791499412 seconds)
  done (took 23.081531859 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.424061369 seconds)
  done (took 3.71407449 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.457942858 seconds)
  done (took 3.74531946 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.501747967 seconds)
  done (took 6.789008584 seconds)
done (took 111.528021375 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.412349148 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.419956751 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.41843299 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.418138939 seconds)
  done (took 10.95777063 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.47917057 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.478681681 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.48415656 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.479337924 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.479429042 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.478030174 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.452464555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.453490648 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.480335279 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.47932736 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.485717187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.480388956 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.479661361 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.453565257 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.478973188 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.48528153 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.481465083 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.484826626 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.453316345 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.479800722 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.428956294 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.480906929 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.479372251 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.428942082 seconds)
  done (took 36.617458912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.937748601 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.489929619 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.575478462 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.473364686 seconds)
  done (took 7.766853619 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.507957442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.512288523 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.533844763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.564864267 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.593614849 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.526024689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.456334222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.450817614 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.43753409 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.512533048 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.560209072 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.49627481 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.606911691 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.428691671 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.649448477 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.428469058 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.42870014 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.509853673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.562243899 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.588138164 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.431831357 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.509230333 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.514831276 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.495874933 seconds)
  done (took 37.598448971 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.433516371 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.447517001 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.42824606 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.442362772 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.427575928 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.428634876 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.430013568 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.434899736 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.427439369 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.429053579 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.429106271 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.442431034 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.427666708 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.429411891 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.435049456 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.429948929 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.430874917 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.435959515 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.437383097 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.429766621 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.429079881 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.434715575 seconds)
  done (took 32.812559329 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.418099808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.418227511 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.769789489 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.675036594 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.418297886 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.418030011 seconds)
  done (took 14.410404089 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.506164059 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.670137293 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.428528326 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.852294259 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.943677264 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.42984554 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.426165361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.704903275 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.062491217 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.069324884 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.494931753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.503726817 seconds)
  done (took 21.384946764 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.435296485 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.420586472 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.431820074 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.435866727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.489732756 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.432916427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.431840403 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.419825352 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.490909631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.498521513 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.434467065 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.491740582 seconds)
  done (took 22.708315801 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515157422 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427059088 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43704214 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510475372 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42604253 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274779146 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431934131 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.175932939 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.43165864 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700238065 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426429793 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520591854 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684152308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427063664 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451021903 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.404635012 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65711466 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997701491 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429912944 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42737078 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460008694 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430530702 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432547024 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671065794 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27728344 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428044134 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.712532534 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428022697 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758674513 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740046881 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740487767 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434667891 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703471277 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143527639 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527868492 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.66701881 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440070796 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434620882 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.424722349 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.466439129 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439738338 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432932131 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734526029 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435854057 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430580297 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447816735 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227963674 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.439488114 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.428954125 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430301866 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736263702 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532725567 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.435129193 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430970584 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482475253 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430839972 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.436133781 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562689804 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994208174 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430292405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446829906 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.434706824 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438818651 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441128522 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127210423 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.442619777 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.434886552 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434146905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431140155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431895951 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460754856 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430796451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.454491178 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43247682 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250006399 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43547352 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438099513 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051146955 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435061899 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.438753218 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664804901 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433888049 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435492116 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.432697005 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437558722 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214965949 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44111956 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.411618075 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479554018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188365431 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672989477 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455488463 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46427777 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.656293996 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.410479403 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433463791 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.434967828 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439880417 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454611997 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236428485 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436674018 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.439076109 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69275934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.644691976 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446373616 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.419286541 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973076665 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43805723 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.479044242 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447557055 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678745798 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.113085548 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751520626 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43894402 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472360379 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435835959 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265463486 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453329139 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.443138663 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435454481 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745952562 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.313955264 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436636205 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504152826 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442324327 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435246564 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440130044 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437411599 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437326104 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.674566844 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456109883 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.746756672 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.44328726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436335377 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.434050475 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464476196 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.441970877 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.65966589 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454454463 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717824839 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436854047 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438162507 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440381328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.659460864 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.455590971 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.446525089 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700459751 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446097883 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454089535 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747567575 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472504215 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546583827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466876462 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.447927372 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698055104 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.442248615 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.442612627 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442695715 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440024083 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439051989 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.445430496 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452419288 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112214818 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412705168 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4421 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438090191 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.454892631 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505344519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44616071 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681008328 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.458565308 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461971261 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.450366921 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.437276417 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668677203 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745663896 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.444654897 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51681253 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.966205813 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108332379 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459528238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.439741972 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.438318993 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.438359173 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442202059 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440984588 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.439357812 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681985005 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759442528 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455412029 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125089948 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447601476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441540012 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.451076398 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747855811 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.452817138 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441215455 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.440143417 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451359089 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444323687 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.75346541 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583222172 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.455196826 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440633528 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.95883424 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446800632 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441542538 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441564522 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473506913 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.443843032 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346114686 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704227164 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442566427 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750286062 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.452740317 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.463277508 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.440358774 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4446033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460665973 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.449158664 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455092138 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.6843752 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449062703 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447402512 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001965717 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301417077 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063389216 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450181221 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.455875678 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448384803 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207115749 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442221025 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443611085 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713308328 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206589437 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443901001 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967937858 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.44273852 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332798276 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757162486 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681016427 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444158177 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.444958881 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.755329121 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661335761 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477009844 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45808124 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449071339 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.42258186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044395512 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457178487 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523378584 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208304979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444350339 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.447476783 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.484675898 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.445195225 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928948212 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448697095 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444722781 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446067887 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450825974 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377126161 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.448766161 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445756493 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130486306 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448610221 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.977836717 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445671776 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.690964434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.761798624 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.760581733 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.451478838 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.463472104 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.707307038 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757186477 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451947113 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447723533 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090208274 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.318932401 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.455026276 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448789241 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282690635 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458822355 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788591921 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.465969836 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.450381178 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453680103 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449235521 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449616196 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.447895464 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454502599 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416891478 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998479258 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.445520697 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455637214 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487776252 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454153219 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.705069861 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.462610614 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122919068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685133288 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450018277 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481209122 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.453106588 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449909691 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.432303944 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448806384 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450030833 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50181526 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.673455855 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467588829 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.429419474 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468820627 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659874739 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.448672774 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469552662 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706704482 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.455443918 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.461191745 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315553496 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487691725 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.452095527 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452378213 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447382306 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519555711 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519586309 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69603658 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.76820266 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.769242913 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919004279 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455426273 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453775794 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.466995204 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545947654 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453678826 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.451587377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.230171703 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134060765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270572137 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136300701 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770067781 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458412607 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460057691 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452206002 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590405392 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451777397 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726773803 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4525152 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.461576636 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476768112 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453057136 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467192811 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668220172 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728418665 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456392378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464358845 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457687612 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.454736028 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767617513 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.66769459 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022397728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072835456 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456721739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463376309 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265478836 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732938129 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453346349 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45215984 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454958444 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.467380041 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.459736934 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.46105667 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458575782 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589497018 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761575945 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176831939 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768864242 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.493826487 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.972623128 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473165417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.711915826 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218823277 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.696625964 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134693642 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27808325 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723311066 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523049809 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697364561 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.458506554 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592506326 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.45814064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455950491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4566842 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456821351 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.455141526 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.764916098 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151262268 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72471279 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.460940403 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.461632392 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487243464 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.699547038 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.682820251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242648229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679906484 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772624339 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467821614 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.457966947 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147155282 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776153022 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4632263 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.462887367 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713333199 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462099517 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484103391 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.976180346 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.456310788 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067897162 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.351174582 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477890922 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471609217 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283600941 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152356931 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.464493271 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029554435 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462399425 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469951697 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738013054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.466035146 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459030118 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746924793 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.464660942 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470043048 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706021244 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142433884 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.356423954 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.475217425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477220417 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.461364116 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458636235 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458133916 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458080273 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.461863921 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.950954792 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462174477 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460300015 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473817358 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.465475862 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472615844 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.464507498 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461280106 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.4665247 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.444114347 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.439742035 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477814212 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592412815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06649935 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460698964 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.140396827 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.786117612 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.718751557 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47458363 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.444406199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.466928059 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461351244 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462128555 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463298756 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473923538 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075392647 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.480831898 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.778223363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472106983 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.669393916 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671641597 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462167689 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708842169 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466938291 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48598905 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.439402462 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458734205 seconds)
  done (took 1020.639712234 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457875013 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.503055634 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.465606019 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.524702221 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480451275 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5752289 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.547381501 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493125461 seconds)
  done (took 21.37103111 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.46371134 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.468891729 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.463512734 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.466721189 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.467161935 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.00787551 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.473131155 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.461199962 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.475149435 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.473394019 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.477740591 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.24087589 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.492797358 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.473215179 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.456550961 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.472024314 seconds)
  done (took 34.16270466 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.938712847 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.80757103 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.21667811 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.489112581 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.516945228 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.469993817 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.908909293 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.494317977 seconds)
  done (took 29.169575711 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.467581325 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.470756001 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.472616894 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.472914983 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.471449412 seconds)
  done (took 8.68318997 seconds)
done (took 1299.573646199 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.467466566 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.468409082 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.467526648 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.469154812 seconds)
  done (took 7.195752599 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.438579561 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.441696143 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.43981849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.457302712 seconds)
  done (took 10.106736379 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.294599719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.199485877 seconds)
  done (took 5.819195204 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.996050197 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.999522169 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.998552842 seconds)
  done (took 7.32665114 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.765596546 seconds)
  done (took 3.095365558 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.437400007 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.46298447 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.170676572 seconds)
  done (took 8.400100392 seconds)
done (took 43.272163372 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.473404013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.713673382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.613693048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.473717906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.62126152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.61573043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.23040279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.457024416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.459046176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.477493706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.473953257 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.621108668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.212698212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.710931791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.213252967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.720237266 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.623291962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.458593002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.463584417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.459323642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.251987908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.472962252 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.460501692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.473723478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.621139523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.601396873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.466255972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.713261732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.462250917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.472793299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.604620748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.460657606 seconds)
  done (took 85.480570926 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.470289988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.475677374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.459667337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.47944755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.48045235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.46371446 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.491991549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.461510031 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.466267098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.463401235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.460068032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.481024027 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.477645646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.462202131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.48098129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.462763732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.463660187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.464717658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.482624282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.464582716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.474529403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.466774667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.471726369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.474021285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.480917795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.463731955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.484673491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.466468652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.464689163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.465767655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.465130892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.487874061 seconds)
  done (took 80.407874064 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.467921464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.466664582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.463321228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.482793306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.500209242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.465443807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.488818175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.464761044 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.466399949 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.465742132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.463642969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.479414038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.466888129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.464098001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.465081428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.466043984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.465361565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.493483221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.464778111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.473437553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.467217879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.468061194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.477408425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.467199663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.484007764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.474052492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.466771726 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.471043001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.468955701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.464991306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.479177814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.467487952 seconds)
  done (took 80.42547663 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.707349607 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.482005236 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.486721819 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.477124915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.485906188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.482872429 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.476380397 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.759581142 seconds)
  done (took 15.69355618 seconds)
done (took 263.335555072 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.471833363 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.062253848 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.500149861 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.472975618 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.498681919 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.499282442 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.725847147 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.504600938 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.729772508 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.510620683 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.490747784 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.487582319 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.417803006 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.64699597 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.416266663 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.475612161 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.490560415 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.476602397 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.125557608 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.793518253 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.502600429 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.479228739 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.382763564 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.474821041 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.468262664 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.573070805 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.595421914 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.73192248 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.65623372 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.571819008 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.07815705 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.486131782 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.493980629 seconds)
  done (took 68.62659859 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.47372672 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.478205975 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.483476795 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.484623292 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.479669093 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.4847291 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.475404653 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.484381768 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.485031992 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.485872828 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.484875281 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.483067237 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.483871741 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.480541402 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.480965119 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.464140345 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.475370464 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.480657791 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.474065393 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.463156649 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.481503835 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.484517231 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.48205189 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.480922201 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.482042616 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.486602182 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.479733064 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.483686693 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.482183065 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.478968621 seconds)
  done (took 45.745382869 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.485378266 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.136909986 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.322558068 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.486343257 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.479194481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.483074998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.82863054 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.492727683 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.481430305 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.482149373 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.040913379 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.490854323 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.516126128 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.333926517 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.486977851 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.488034741 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.48772959 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.481602662 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.145995328 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.491256262 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.824355005 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.488113989 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.821346327 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.491023435 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481775586 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.482997259 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.486019577 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.3710777 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.506552573 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.029447121 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.420154172 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.820829177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.303922027 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.378133962 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.425360778 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.493710356 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.489184111 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046852699 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.486176625 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.477659856 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.820534076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.478597995 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.320244334 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.1913926 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.504492924 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.487538886 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.385850447 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.064958541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.772172633 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482539545 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.354876078 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.481594349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.488153235 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.480580783 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.768688395 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.481089171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.478720964 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.421238335 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.506919609 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.818059553 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.487627455 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.48223103 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.130107543 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.482234368 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.123337106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.482356639 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.488537288 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.481110756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.323107588 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.482816661 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.203910319 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.503149197 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.488366293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.030712893 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.126902415 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.448071719 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.482737967 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.133368801 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.317239075 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.840095542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.48874259 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.358861071 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.842836425 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.485743603 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.491691606 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.491608585 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.489262169 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.558722267 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.819955116 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.13485645 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.208556964 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.441491189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.841115823 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.489739161 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.484073079 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.430519876 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.511236654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.492237902 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.316681723 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.209943455 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.506739047 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.489401352 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.197798487 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.503117782 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.822537343 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.489658458 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.364447364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.484442758 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.559065271 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.493008713 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.491895336 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.487367622 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.825025294 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.488072284 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.493169862 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.198091067 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.062825165 seconds)
  done (took 209.180764372 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.476288302 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.478872869 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.480091478 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.477302259 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.477021369 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.485026415 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.479030652 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.477199059 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.481868815 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.477593862 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.477240479 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.488825028 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.487385023 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.480722925 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.477124569 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.478701227 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.478193396 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.483947282 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.479048009 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.478637727 seconds)
  done (took 46.940433723 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.493854101 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.143868733 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.118553809 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.494940419 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.491468723 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.486050741 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.553789366 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.493476415 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.491458788 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.838606798 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.693947612 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.498487233 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.493188736 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.495264051 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.12096092 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.472242023 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.837167668 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.14531385 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.494130442 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.146759856 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.473541807 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.493108731 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.488840871 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.147693016 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.84556786 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.826558119 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.554358918 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.151888 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.490489215 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.491768035 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.147569885 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.494233632 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.488236756 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.137945969 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.496032401 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.51193346 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.494486672 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.558419267 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.561095719 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.846131944 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.152316064 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.834900685 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.507904561 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.679385191 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.500000289 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.475528503 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.157325947 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.497499435 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.476165694 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.495005049 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.5009366 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.131623765 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.490636829 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.128433559 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.494551606 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.499104257 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.153294582 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.129598085 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.123814924 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.695284376 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.492975084 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.831253755 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.494607465 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.157978597 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.498030689 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.499785599 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.499927681 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.702809827 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.156423461 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.829719999 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.844185752 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.842888963 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.499134903 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.569278492 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.499942202 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.845749269 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.563566925 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.937305818 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.84930568 seconds)
  done (took 136.78627289 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.792759678 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.620730087 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.918603256 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.137980303 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.049083345 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.641173046 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.616089634 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.768408001 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.495170543 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.579894337 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.232925659 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.601440298 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.283978225 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.599796681 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.611229685 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.636500688 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.941529644 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.50219573 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.18543769 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.209376128 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.489858942 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.610328009 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.047116515 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.707750907 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.489741524 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.103733473 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.511186312 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.058926906 seconds)
  done (took 56.789649665 seconds)
done (took 565.402967373 seconds)
SAVING RESULT...
DONE!
