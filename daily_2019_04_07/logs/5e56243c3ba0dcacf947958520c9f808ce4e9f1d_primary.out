cset: moving following pidspec: 5763
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.297247456 seconds)
loading group "string"... done (took 0.581778095 seconds)
loading group "linalg"... done (took 7.167053594 seconds)
loading group "parallel"... done (took 0.169872663 seconds)
loading group "find"... done (took 1.125104979 seconds)
loading group "tuple"... done (took 1.750906332 seconds)
loading group "dates"... done (took 1.203625249 seconds)
loading group "micro"... done (took 0.224894847 seconds)
loading group "io"... done (took 1.022486406 seconds)
loading group "scalar"... done (took 40.271689757 seconds)
loading group "sparse"... done (took 13.306442062 seconds)
loading group "broadcast"... done (took 1.047365087 seconds)
loading group "union"... done (took 14.11634737 seconds)
loading group "simd"... done (took 4.515777271 seconds)
loading group "random"... done (took 9.089688883 seconds)
loading group "problem"... done (took 1.967906618 seconds)
loading group "array"... done (took 21.66884942 seconds)
loading group "misc"... done (took 1.980083618 seconds)
loading group "sort"... done (took 3.285507632 seconds)
loading group "collection"... done (took 18.317149902 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541968388 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143465979 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117983084 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140959527 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190121961 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134691242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147143964 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086851286 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.154984608 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167017582 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140938519 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478258395 seconds)
done (took 5.313745627 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.244205103 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086800269 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098397343 seconds)
  done (took 0.999104879 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066876032 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12782156 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082449287 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068504409 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067777801 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083304421 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068033789 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066621478 seconds)
  done (took 1.382273699 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074754883 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068974927 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086377837 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068811793 seconds)
  done (took 1.116564057 seconds)
done (took 4.638425318 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.902068082 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.235960116 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189828638 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454835674 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149504074 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189950663 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68390431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318032294 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211881816 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101831124 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106051657 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.381222639 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107568221 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690388172 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07590868 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107626992 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.173507784 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425566089 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084215842 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083953631 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106022955 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147714969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105717798 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079406156 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.16870767 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070412808 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148699429 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.098392411 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068995149 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.242836203 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19096748 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.73448427 seconds)
  done (took 10.690774085 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101195226 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11935836 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070227271 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141747443 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104241889 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.090359263 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072444121 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085963063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092717226 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160116454 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116518912 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106095834 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083665205 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07087395 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102463675 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213887831 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111732697 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086973435 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090778497 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076084112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123644145 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084133073 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095361126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077883662 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154513431 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197541222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117240967 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115382802 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072453192 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083181363 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134578949 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14394816 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068752601 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086471296 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.143398068 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.115624636 seconds)
  done (took 4.74023134 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.037557099 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112158204 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.162280257 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092063316 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152985275 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08597467 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110952192 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084698169 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100849463 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248099786 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.151619166 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.467147912 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132797351 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103006192 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069174325 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085777565 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068552651 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.519220842 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145580527 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103124238 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103990739 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089943242 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071280883 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358991268 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069191128 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067302175 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085843591 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060727449 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146127175 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068973301 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.222726215 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08982826 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090222481 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120333192 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1862682 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099392849 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126888017 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083908633 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06828186 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171200436 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074099033 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083814418 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067002668 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106762596 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10514583 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121373832 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086314248 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068466463 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182003097 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066038538 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084352432 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083709563 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.888898942 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170774706 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09511244 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066712111 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290204794 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084825899 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085810625 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065378557 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.260472943 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.157163063 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070147638 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086830615 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066883176 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068535663 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.76327438 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068775517 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.752514367 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072382067 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079731045 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087027885 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067976476 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090761808 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073557828 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102838674 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067749168 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069019586 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085021415 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067356153 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086306362 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086564903 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205519754 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086485591 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068280544 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06611855 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105624606 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113045619 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073786629 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067979623 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122980823 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066712894 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086136284 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068938463 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122824602 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068137543 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103445785 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087853069 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115497216 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087516659 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.149792489 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069977756 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113789938 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073333901 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116941919 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097247732 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069104438 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154798952 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065642192 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083836037 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067897295 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065374779 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086487204 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069306758 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099616562 seconds)
  done (took 21.68142305 seconds)
done (took 38.967458474 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294705148 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094833634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.094441308 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076447209 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094627481 seconds)
  done (took 1.549780812 seconds)
done (took 2.416562326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120774832 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11951155 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064538545 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115936172 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064609045 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119498248 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116687836 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08222898 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120735143 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064930324 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115138126 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065422135 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064237591 seconds)
  done (took 2.128630979 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084230955 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086394215 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088335365 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083132329 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081949269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083718013 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080829354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107925787 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081568122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091306408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066059628 seconds)
  done (took 1.798395397 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084236131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084687227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088646631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082637789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081572126 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083413061 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081226498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105017377 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082020569 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092144049 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065494248 seconds)
  done (took 1.797558856 seconds)
done (took 6.581786791 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079828732 seconds)
  done (took 0.938110257 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.719838029 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.716308092 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084405978 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135421426 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223623381 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154969663 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.449732287 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111201338 seconds)
  done (took 10.636140527 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103822999 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088730224 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072227029 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08921161 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073107047 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088025483 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073523527 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069167115 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088880122 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070017296 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089745909 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071567855 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088922233 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074418075 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070163305 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090516626 seconds)
  done (took 2.230032074 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094262489 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094389958 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093374714 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076934458 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09224202 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074578121 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094287868 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076016945 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090015248 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074694832 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094027739 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076103221 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090850426 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067953917 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093489772 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077527013 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090595419 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076428855 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093762314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077518372 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093886272 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066987337 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09009153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07722061 seconds)
  done (took 3.002227042 seconds)
done (took 17.670902044 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133305891 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077081136 seconds)
  done (took 1.077878923 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083244598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099946987 seconds)
  done (took 1.055402706 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084780588 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083964232 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090669714 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096516054 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066960679 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.085324673 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10554843 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06823304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06713998 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086868798 seconds)
  done (took 1.708153882 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071406468 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095678401 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073310731 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100225939 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076104082 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083598317 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074817394 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086641108 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080426414 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081857541 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073499882 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101634298 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07223336 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103958123 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073563238 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088345445 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088787824 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070470858 seconds)
  done (took 2.373443556 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068399201 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068367804 seconds)
  done (took 1.014857714 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069396232 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064792234 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086840847 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068221139 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082635932 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064718859 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082280095 seconds)
  done (took 1.396420074 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.405639742 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109370784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243454597 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.092380188 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106011369 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263853318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.087187834 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07206218 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090847931 seconds)
  done (took 2.386770519 seconds)
done (took 11.886659474 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081637083 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087526908 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113422943 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.426203029 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11176093 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067763298 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145438699 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.210310018 seconds)
done (took 2.12211712 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127783422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.625237064 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405925051 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214740238 seconds)
  done (took 2.124808553 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385926551 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094200812 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076819883 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069328295 seconds)
  done (took 1.51109079 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06805323 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070570938 seconds)
  done (took 1.020930199 seconds)
done (took 5.664867609 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087803918 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08546882 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068480495 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065242854 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086477039 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065896019 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064767102 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084944714 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067617454 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066805773 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.085469457 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070028469 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085083563 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066241999 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064886111 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084185211 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06590325 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064891235 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083316645 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06858157 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064208976 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082997134 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065997267 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066578308 seconds)
  done (took 2.680466857 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086815438 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085829367 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073717883 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089662517 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073177236 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09048085 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074378923 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066968614 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091652663 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070442074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089243809 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071165009 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087082732 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072526597 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08722733 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072757281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092631968 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069349042 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069552964 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090926983 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07202867 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086365891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071515787 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090385536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071673595 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089228367 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070162316 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085654413 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074069816 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087644784 seconds)
  done (took 3.290533028 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073009687 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064630884 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083604209 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072177976 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064960841 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085392888 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065124822 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082649473 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067680454 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065562863 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084699868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065872207 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064837332 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085085648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065985725 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085941917 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083650692 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064844438 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083849719 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066347864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068380927 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.083604063 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065364268 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082514631 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066247698 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064381451 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08342257 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06621705 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065395803 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084132092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068802238 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068051517 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.083880382 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071829368 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086590355 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066209422 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069526554 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082394607 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066148297 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064033959 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083536629 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065912439 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064823727 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09000646 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065694651 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08524354 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065824891 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066657119 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.084683881 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068118028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08215993 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066402249 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066785264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084247844 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069887195 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06453431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084811804 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065381638 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083286627 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066303638 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064396099 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082761328 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068922307 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065614507 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098458073 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071983949 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08286514 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068053693 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06615934 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085290127 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067774924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078151764 seconds)
  done (took 6.19519474 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120131005 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093103556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086458892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067181736 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081197661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066816465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068674213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084401446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067201034 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089824535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066008504 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065544272 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085517238 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077725286 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083650871 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067866078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088565593 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06578522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0646906 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08786898 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066397899 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086221151 seconds)
  done (took 2.623375007 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.188176931 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089937143 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109608155 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094666318 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068498314 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094349425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070666316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090824892 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071016474 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090429355 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069346893 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090127507 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069799578 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087951337 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070420598 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088071864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071764431 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087552201 seconds)
  done (took 2.495130208 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080040059 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066877261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109002697 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066887222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087703676 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070087303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09108759 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075109076 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088884229 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068402997 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094070542 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070447827 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08737934 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069025438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069500197 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086256585 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070406794 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085472769 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076721602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090661792 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072956385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094251412 seconds)
  done (took 2.664283219 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083437077 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069296709 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104058793 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088204668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065503816 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066132447 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092473289 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068283189 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092141533 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071037574 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068062653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085163496 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073207115 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086321526 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072756518 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086381346 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071068609 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067274411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089330736 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064131425 seconds)
  done (took 2.458774614 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089294707 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087657687 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070567655 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096011236 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070122386 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087120091 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078956734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087458453 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06987219 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112096234 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069713475 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087315937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078752434 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092742838 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069983869 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095957789 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076977558 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095718561 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068658776 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088305377 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219745826 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070491077 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094900607 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070155869 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068335392 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088261808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06898646 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093187992 seconds)
  done (took 3.34618609 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069305204 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067417778 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083622874 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066206509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065316182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083922643 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066581069 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065051493 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086878768 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066023958 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067158446 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086238632 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068204431 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084884053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068536165 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068016786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086112191 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066126195 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065094124 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084102386 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068807084 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06783273 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087119922 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066047416 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082382143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069033406 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065091048 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083240783 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068906487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06570138 seconds)
  done (took 3.088084148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079027883 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092974583 seconds)
  done (took 1.074206434 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066915817 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081968892 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085394429 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071965769 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09087375 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068945273 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093682236 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072313926 seconds)
  done (took 1.531580762 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084608136 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07802732 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088265008 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077897673 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098410296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083343002 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157112278 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088862282 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074493176 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084646125 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082223922 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066182616 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093504313 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067826084 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092872215 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074844471 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065864045 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092035671 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070919594 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085227478 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069635597 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094509348 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071692472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065547803 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088924206 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076848096 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098616412 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069371639 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089776171 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075549199 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07295517 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081476569 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068305899 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086870881 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066768863 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095323639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08415111 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087755116 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077550295 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068705092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096793903 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063357019 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091191383 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073926525 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095576016 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069421786 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068238715 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082809314 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065672179 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087877215 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064081832 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067618713 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081881808 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074723382 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089602312 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079420843 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068973468 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088857165 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071196945 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089930031 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074124731 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087161634 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071386717 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068395349 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096328868 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072782465 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095375173 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064549115 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061776385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085356998 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077286352 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109195659 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073347673 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087328489 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069776564 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065394207 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09094262 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068827777 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091816054 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074209895 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086561846 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074564848 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09309091 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06881047 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069380458 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09524422 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06642542 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089414794 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065957768 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102338066 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067453323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065488761 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084857662 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077938667 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090322268 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069445584 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065041921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094442909 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062055425 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087617541 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069256895 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067380067 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097052203 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090861755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073964039 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093546054 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077233391 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068074155 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090409195 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06519322 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087024086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068183331 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074507366 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081585275 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070642505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086356069 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069948133 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076300374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085615095 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068008395 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093562259 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074366683 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066030862 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084712851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070318787 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08646936 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072063702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093602233 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068171347 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063463019 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082252939 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070930441 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086783557 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072234959 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071768651 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091465827 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062474091 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08489054 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072664098 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095136632 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06903412 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068010227 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092749357 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069336256 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086272917 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074489482 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087091796 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068442291 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072589247 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088137682 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063843855 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089461435 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071327948 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066881316 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090388545 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07154469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088430686 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069466409 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066557157 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092281041 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069148167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086038247 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067535607 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065888871 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097285897 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06892124 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082550317 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065153961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093456094 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06642041 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066896322 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086186244 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070345069 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086468736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067113993 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067308286 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089082874 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078854681 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091250061 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068956222 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091964555 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079226362 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085955483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071296649 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067762759 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088672707 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068915115 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09543106 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073439077 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090281485 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071505434 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064798213 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092377814 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075057763 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085582246 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067461837 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067197965 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090648781 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073065849 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09060599 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069422688 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065516925 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087988932 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071556793 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089629884 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068780355 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084941099 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073391753 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067071069 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093863568 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069159228 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097115412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071071995 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082853727 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072245148 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065449959 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09259573 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063700094 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08457274 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067825076 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069429133 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086295679 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071487731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.080958119 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075338008 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075547865 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087255769 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066993097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086222294 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074884865 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068701615 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090867059 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071384294 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093165356 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078823962 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085685138 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07232519 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076879661 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088380555 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062190241 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092693651 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068052044 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067044357 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087377874 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065907585 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090241617 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076118025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093329926 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062582476 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06989527 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08689937 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06722078 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081573263 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073374965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070762684 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088518178 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073797954 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088143161 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069768718 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07107926 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08822313 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067999303 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088444116 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071129137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086953618 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071895227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066930315 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090313503 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067067885 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083700061 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070481153 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067392007 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087372423 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072655319 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085524604 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069321199 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06970296 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088469463 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06834745 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08661662 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069004042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070466684 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088114467 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068228488 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08807559 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065690205 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074250083 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086790163 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075206836 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087236667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065747375 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072076149 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090005405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0727111 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088775393 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069924757 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087568578 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068694403 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070033969 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093301063 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066409312 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097460598 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075983742 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086251989 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072167146 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067807978 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089549651 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067768292 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085881149 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0704045 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067708511 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088088833 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072649618 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088836907 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069066306 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069106545 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088680421 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068113211 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087613893 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063821995 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067245493 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086713515 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068686681 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095791074 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069288372 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067319381 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087351052 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069189744 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086218821 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065678827 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092779012 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077813572 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068273003 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095446328 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066912787 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08903285 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077933973 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081769493 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067349117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065359964 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085175883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075566642 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086922013 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077877621 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067034831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087186677 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0652051 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087414332 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068036712 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062555215 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085828189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071262194 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065924245 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087513143 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068736714 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090249621 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069078469 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096441183 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067899078 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068206419 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08836236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065419064 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085754491 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068484045 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07045433 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088763427 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065885569 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064955705 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088306183 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068323176 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088799287 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068370691 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068934032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095106247 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067716079 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090177782 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071199637 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085001596 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071833105 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067340996 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08786092 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067190276 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089982753 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072073487 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06903046 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097176853 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067696463 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087926853 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068392522 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065454401 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088938264 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0677662 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087493062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067559817 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06923951 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096212608 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06646556 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089982488 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068218554 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085362942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076548674 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068516315 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09015793 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075255618 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088638086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070043021 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094260095 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072826131 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070065416 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089346469 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069686306 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092659954 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066816178 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092213367 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069208979 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068370975 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089321613 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066579232 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067386099 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088211656 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067580679 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093139335 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06959654 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085541873 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068317632 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065600919 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088227117 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071447889 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093742378 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071616701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069860887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083296991 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065654542 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087959586 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066286656 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068612682 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09065621 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073219492 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090123105 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069016361 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066598169 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096537673 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072890942 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091503482 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066807693 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070446263 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089507387 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069538686 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089051991 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067828674 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087316856 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07360792 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069370883 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087226542 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075127337 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090437829 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070265041 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068947276 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088938561 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068685432 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082157563 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070337467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069139402 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092387314 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069858029 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087975057 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078441961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065045185 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088377962 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070496412 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087034993 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07256873 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081988067 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070893582 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068878359 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088829218 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06449092 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08576179 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067250047 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070004776 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086846338 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064054365 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096850237 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077877446 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070074186 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087310873 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067493104 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082742243 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064073087 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067253138 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088658447 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07010386 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097463406 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068322741 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06671705 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083576209 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068603416 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090569555 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072108686 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065125836 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083860646 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067184115 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089784046 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074572402 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066267254 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087626208 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070472804 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089092561 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067087867 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070930529 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085389383 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071927955 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100210091 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068932515 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087273052 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074785802 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093027698 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070528481 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063156165 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088744042 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070690596 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086466163 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071092165 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068632923 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10238593 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070598111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087542795 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067392071 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089077162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068826121 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07537535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089218202 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068904735 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091808511 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070622985 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094889445 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071507854 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074895884 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09106868 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070266969 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087419218 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069251539 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065798383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087131998 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069708356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088612264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07309417 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095295396 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067671925 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097858107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077585221 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069296341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085547739 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06773289 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086128364 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065559912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068517601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086445545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067184809 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06689328 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087284749 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069460039 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092969389 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06937127 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067909892 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088541341 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062491199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089649876 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071409716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068152224 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085282982 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068064518 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087694413 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073063836 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0711841 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085770574 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06943044 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088704009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069255062 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063017754 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094574555 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067697598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089546338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068846361 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068085837 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088854167 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071094857 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093124563 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070628878 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089849572 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077854666 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070628668 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086306512 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065866586 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092192765 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066829181 seconds)
  done (took 47.432960866 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108615867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085752097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062818248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083357226 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076344445 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085136245 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064522545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063927993 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085160878 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066956796 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08367163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064553538 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092681586 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087365643 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095643125 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06837863 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084415412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064532757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083582768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065468983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092209569 seconds)
  done (took 2.617001368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077225689 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092135842 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07508243 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098860669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068856245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092847237 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073491722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092612865 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096598935 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070124285 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0967228 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073090489 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088717616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069595888 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088409216 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072723841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097039182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069595253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092584192 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074599481 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092800333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07393044 seconds)
  done (took 2.773782124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069982822 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067373255 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088634451 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06372255 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067028392 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083610211 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071304503 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.093609702 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071609921 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065656813 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086770627 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066485331 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088048697 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064605025 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067685593 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085644232 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13339367 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07207561 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066104064 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089545891 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062692425 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089522204 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063866453 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062907968 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087128627 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071164136 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088429414 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066676475 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066639265 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086525768 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068247409 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065274025 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08992384 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067718144 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086292846 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067138793 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067257263 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088108273 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063724207 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084278847 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069166734 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063735592 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088420361 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068732775 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064620788 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086128462 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06876548 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086910307 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063856775 seconds)
  done (took 4.669179934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085694106 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132938445 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.09066185 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089844247 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104900834 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09535921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072423527 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11314713 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064739198 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087537078 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08362764 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106342542 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087741319 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073238333 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070174514 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087970286 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068100077 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087036923 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071792325 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087750496 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070985858 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094220149 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100794438 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082785551 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091017716 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067673789 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086252196 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073090416 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099531459 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072821453 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.09279291 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073137603 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103249347 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070183781 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086936562 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069921697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104146028 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067238542 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090443082 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065212646 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089861325 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072391321 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093993787 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084277953 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08816366 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073078289 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088050926 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065132262 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101225716 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069739642 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095638972 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08097726 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092521807 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066835359 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093103183 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101824919 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068539458 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065338324 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091412939 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099654683 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067052846 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070095579 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102948623 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088551804 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075710768 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101793176 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073164436 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09236118 seconds)
  done (took 6.85449083 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078293218 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094014133 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083121414 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103356314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093566601 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075182074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094285686 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074612877 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094240635 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077950029 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09453432 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115531994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069614595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096920055 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073636322 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095717699 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074267425 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095103174 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072686515 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095540035 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093248866 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082257905 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094597633 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101340071 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104150229 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089283565 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074780396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094431493 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08131164 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094505843 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105716263 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074598111 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094197134 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0820599 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106515362 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093856699 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06711881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093974619 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074317264 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094598749 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069272685 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102399065 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073675917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090108185 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073930004 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.095345274 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102712242 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086476337 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097905146 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099152241 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075573848 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102015368 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073105923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094825119 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101926329 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106691649 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102285539 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102028536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074696461 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103322621 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10184805 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088649059 seconds)
  done (took 6.525874351 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089218659 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097221679 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098204027 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065034917 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065643269 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093676049 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066061899 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085575835 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077710798 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096811172 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07988676 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092278687 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074866725 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099393471 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091246269 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075140931 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092529849 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072296139 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096515256 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071359098 seconds)
  done (took 2.644726461 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077948953 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10480613 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069361895 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072269298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092803294 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072899076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091830538 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07123679 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089566232 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071458787 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097932027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078474949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08867288 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073338308 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098490907 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073450037 seconds)
  done (took 2.289873962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080579439 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099405896 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081635318 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089801941 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065840445 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085629172 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068796148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063668297 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085731289 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081684969 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089857259 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071003827 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088175172 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067745067 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063902141 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09241444 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064020135 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086451547 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068215932 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102775371 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079440017 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086470599 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069815828 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068340889 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090344228 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072989792 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089024834 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065293487 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087775681 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068274174 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088823075 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075918293 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084770541 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06796671 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066339192 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086257995 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067975361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088237757 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071862199 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066775854 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087384311 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067540587 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088527283 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068626675 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083228856 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069856019 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064308823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094619002 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066136617 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089136221 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068322623 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089426363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069932705 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076971418 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092663916 seconds)
  done (took 5.284348944 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082677359 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070943895 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085525632 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065436115 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091835251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070883197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070683765 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091473197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068789978 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086118279 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070049989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090002371 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071042677 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0705537 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090250281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071745753 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084369201 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070869674 seconds)
  done (took 2.372924312 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074389172 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067519817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096353302 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068273862 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088452519 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071423707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063486328 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088396409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066761928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088122059 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069428382 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070052572 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087559128 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070591281 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087356439 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06887857 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070029267 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087452584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067872046 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083565212 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070804069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066342585 seconds)
  done (took 2.645236366 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074307558 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094060257 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16444906 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110002905 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083341482 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102501874 seconds)
  done (took 1.601285632 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092963135 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101257877 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068380289 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108765993 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077202977 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090096416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07079032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089898073 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078637841 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10376902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069875389 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099385278 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09804006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078336843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09582737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075560264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090871141 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069198475 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089511225 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10526776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071675968 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098041352 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070731917 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089598308 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070713789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099526789 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077540531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104068217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089678957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078237095 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096218962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069812539 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098371144 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102110003 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072635745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098133446 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071012279 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108681258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07448101 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099455078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070041547 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097735998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097573881 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074778187 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099367652 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069592249 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094949668 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069466676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091321527 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114729832 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07521066 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098911382 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095354965 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078951606 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098938351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114960334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083449474 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098640623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094305822 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083975431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099051134 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074541139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098166077 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10355042 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074659683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099614375 seconds)
  done (took 6.820197817 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086530333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108517266 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070580635 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103834843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097629144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071041509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090241095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07036807 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090328794 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070759403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130601657 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070169807 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099684447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098731052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071124692 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091059662 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0707624 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099376178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069300617 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115369559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090330506 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078447284 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099682723 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098396607 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084053957 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09711095 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069759681 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09090628 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069704338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091855382 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074892658 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091719607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097801289 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070073819 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09897789 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070828918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09099775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075133501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091109191 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075220641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099285404 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10829751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070194076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091525242 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082680168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090883176 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070152446 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090852102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069839249 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090738347 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08313047 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105476902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104062044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097430956 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07176129 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090656997 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071405057 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090258505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071465351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096245916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079196921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091299249 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114764303 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071356364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090394676 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078823383 seconds)
  done (took 6.731919933 seconds)
done (took 133.595046055 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.24017567 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190455397 seconds)
  done (took 1.404482015 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071175145 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096900672 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100865356 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129181301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090244873 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101758702 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120785886 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080874368 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067560471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089752309 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068075161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08993182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133241326 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0681422 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089619908 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070541822 seconds)
  done (took 2.44948729 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10464126 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.19817909 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112400827 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06699694 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103273699 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079328171 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.0882863 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079760586 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093417782 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068085636 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078365249 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098382525 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066260353 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098174488 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073403679 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100877081 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066328676 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100564487 seconds)
  done (took 2.662650044 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10598129 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147429043 seconds)
  done (took 1.231854969 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208501064 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127107823 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20678945 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.421623187 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.214704814 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.287646331 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.183672357 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179132676 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164169034 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.176956027 seconds)
  done (took 3.146034717 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101062381 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172833102 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31385391 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138903276 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.088260569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118092326 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140747111 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110722178 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084146182 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103072045 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082006778 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099282632 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118545311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077453654 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096124025 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079352971 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.123229389 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075953186 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098797491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077571031 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120481519 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068758972 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096712409 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075859643 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09948824 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081030232 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066720095 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089565678 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076518301 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097602957 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078782667 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116545562 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100149427 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132404188 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082851402 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153668135 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079990749 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093617295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07790403 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072854746 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.100428592 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097832567 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.086303821 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098860226 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06856635 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077542604 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088993472 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067674431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101579328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078787438 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101564104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078669829 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152459655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.079307157 seconds)
  done (took 6.419761197 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.74184374 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109583618 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096097982 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800155142 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088329818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106684081 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705255786 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118186579 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208488593 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75861875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089508062 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098554701 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178047189 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214424367 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.901499496 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280599638 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631211164 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104474707 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108942233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131770037 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138622803 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173420259 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147518058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.434106416 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075786498 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092946941 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137053094 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07599 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159380104 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08519077 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093625163 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153107918 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223061266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153520322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097903586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070502554 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091911074 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146011713 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218322894 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187888332 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157458209 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068755558 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091696986 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138868076 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128545125 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069025399 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138024807 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.149892468 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167746601 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073904338 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096640565 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141514265 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139798336 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142000113 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101227651 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.264537412 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.278769741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069977658 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119748964 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10481926 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212382324 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104467486 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196815999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136809623 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165305964 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092486601 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.727692064 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145739211 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092734799 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074380412 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118764732 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09606934 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138235533 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144828517 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.346530319 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162740099 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074389185 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091240187 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206187627 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083193045 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092742915 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139477606 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075471701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122263329 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164207771 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142176962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.144416761 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207371388 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140161054 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159573558 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075001046 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124429109 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07490063 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21294058 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168078876 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138684777 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20557811 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139423026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140944969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145634435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097399329 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150023228 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119098285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080684789 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137219125 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.18914649 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123335211 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081736426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09523663 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138723807 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125952362 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085777469 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160776687 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148768771 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456296416 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147069849 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090220453 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086871107 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138602991 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160699308 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076532988 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2307983 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100719962 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168057612 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120349364 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06992161 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120484008 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139953216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078481192 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122130144 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157401222 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076760601 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.207412532 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.18876302 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07715466 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213174124 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160397063 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076158406 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147374473 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12064114 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144433913 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099380655 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138068395 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074846525 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768237329 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142373189 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121504806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094498571 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.153932554 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092926923 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08226238 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105868972 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068303396 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757811882 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084585095 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102024412 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10370625 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075344997 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121043776 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135329743 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094278997 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13823222 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.176671636 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098756711 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118486372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081418838 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159515661 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076697358 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10459288 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083400187 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105080644 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122854111 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073681835 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104797488 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145994079 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140111599 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19031941 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.539503515 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070356338 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105143026 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197654707 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070953376 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258766345 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136305607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196253469 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140260144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079609895 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283772742 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142631 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178213385 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106181632 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151081968 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069543798 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13707959 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140478815 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093333924 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074354544 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.137950754 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165202611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142417286 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93818233 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072036264 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202431687 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067800813 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169123572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075919419 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09813042 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.235553032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093358019 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146987758 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.140765261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093713685 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083240215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674239179 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105395762 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13771856 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097403881 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.168244729 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161922572 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135884248 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137413118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075448851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158309708 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186944588 seconds)
  done (took 40.317305514 seconds)
done (took 58.614110516 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260939174 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178908341 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243509252 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146405687 seconds)
  done (took 1.909454939 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145708564 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104542267 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119812054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087904218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104126126 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089073259 seconds)
  done (took 1.656426622 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409245191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264808995 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231336265 seconds)
  done (took 1.911982685 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285464205 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214224507 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44864745 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298267317 seconds)
  done (took 2.361745704 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17579222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116171873 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068689984 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1088499 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159800893 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255850933 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128028611 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186538874 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080529002 seconds)
  done (took 2.3341134 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198024653 seconds)
done (took 11.379976541 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100635212 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.194405549 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072597089 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.308833172 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137913522 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.192525706 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.250540382 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082672941 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.127347493 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124568505 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07942554 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.305742772 seconds)
    (13/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.216862519 seconds)
    (14/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095672614 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100356127 seconds)
    (16/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.11760117 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202186207 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123878268 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.143001593 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079703868 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236981053 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054460784 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.29100757 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.234809328 seconds)
    (25/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117765624 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108030833 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075587777 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.147706735 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077004179 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097915374 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.230193793 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074913136 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077184036 seconds)
    (34/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137654847 seconds)
    (35/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074913159 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.275912527 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096338767 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097080312 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089454249 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054975371 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081136103 seconds)
    (42/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.18546494 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113763385 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09374933 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.217518667 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.217882026 seconds)
    (47/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.119273415 seconds)
    (48/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108994081 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150484943 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.283203618 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.214368337 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10483386 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071107334 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192500792 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072353002 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.132663144 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090962348 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.173643116 seconds)
    (59/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132445627 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074667594 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110196518 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097796065 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09735296 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078336682 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.250711655 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.134352731 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070741473 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110944124 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.15033027 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120330298 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.23256205 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133250467 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078911844 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090315569 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.140450795 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.254919897 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117507181 seconds)
    (78/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111115096 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.158992069 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.120138303 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170212908 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.101454401 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.06778594 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074225038 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101189954 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.23900045 seconds)
    (87/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093221488 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089281595 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.235161309 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17538239 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136884437 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073974018 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073620446 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.079848414 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141168678 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 0.150529663 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11502596 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114663605 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.252767579 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199614339 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094678154 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191242699 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.238721079 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 0.175231748 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093534751 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125979117 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097888845 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.13606983 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12134681 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073029774 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.101221603 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077867248 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097248694 seconds)
    (114/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070040677 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066724483 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052926488 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09146932 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070832718 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169525735 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091915821 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.252102248 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077638783 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055682406 seconds)
    (124/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054306293 seconds)
    (125/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104544197 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.136751562 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100435189 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066919089 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097506166 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068736061 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.238104276 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072426761 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091190371 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094181018 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063201018 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.244241893 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.238383676 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053493088 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094394975 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154373362 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115067821 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074221541 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099312296 seconds)
    (144/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055160058 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072166934 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07839217 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068001505 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069281522 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.076737095 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074707131 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066466199 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098351303 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064622554 seconds)
    (154/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053565838 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084635869 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174087813 seconds)
    (157/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096797189 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.250219217 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08043079 seconds)
    (160/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069411818 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106433416 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.077655929 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099373755 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224357732 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103754983 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077382284 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102288435 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068371293 seconds)
    (169/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101155079 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069075959 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07890359 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076801954 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090418728 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066592072 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078061528 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125874461 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090943334 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067307927 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053031189 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090278829 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104228846 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.076170061 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054410844 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093547218 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093119301 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.473441575 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054712921 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.254516833 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073802081 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073465602 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.087425602 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06702866 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112888499 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077479261 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053864111 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089918978 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075454432 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140658577 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053835859 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068310965 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091915891 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066425447 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053481688 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.12199959 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068340665 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061695164 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111905236 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053965457 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076890896 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114515335 seconds)
    (211/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054403682 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101583037 seconds)
    (213/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.106522432 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098259465 seconds)
    (215/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068764009 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068766683 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07960511 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078546295 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052596471 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.092178039 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070202504 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.087416563 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.216390563 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.104774277 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073021466 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066107154 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171605981 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113594277 seconds)
    (229/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069426475 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065465737 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121956116 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071998771 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076586008 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068158077 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052596388 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09835729 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091450119 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115234969 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139667804 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096274091 seconds)
    (241/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053646457 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054118586 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159464276 seconds)
    (244/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079215164 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171229218 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066457496 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07698419 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139541151 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092044511 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069650157 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065728581 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.077531013 seconds)
    (253/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080999373 seconds)
    (254/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.128572673 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053575882 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053353102 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078429069 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053546344 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053122634 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096353669 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055061067 seconds)
    (262/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209844842 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069702909 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09973632 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073700022 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097125061 seconds)
    (267/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121437489 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053826917 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076330067 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053832682 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054291132 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.102659708 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054708089 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07361433 seconds)
    (275/309) benchmarking ("sort", Float32, false)...
    done (took 0.152468274 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064737312 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090459013 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169503381 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095090534 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075154598 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064212575 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090934032 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066293997 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098580268 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054779526 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140318282 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.100076544 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052868027 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077480576 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110484587 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065793228 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078721293 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064088381 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072413058 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09442889 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106129879 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089546291 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07519982 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052669687 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089974179 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056320557 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066914186 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095972308 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092119891 seconds)
    (305/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053395058 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077765272 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078409373 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053701219 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077187658 seconds)
  done (took 35.401712915 seconds)
done (took 36.421267049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083340989 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115858946 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07739427 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116684052 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083287134 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102402535 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076118565 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07892336 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106390754 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082616873 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105090189 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056053098 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10020378 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077245951 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100204215 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093033063 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103126803 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074870665 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074231473 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091213505 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075175641 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090330973 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070203699 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055643505 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102314816 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075299444 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073629925 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101250818 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06673216 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090433678 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071564184 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073645651 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090793913 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079674732 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096899987 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076074565 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075413766 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102432091 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068612157 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089699236 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075594359 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066471449 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097272171 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075160495 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07235677 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096409247 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074051271 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10384865 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092174639 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093450739 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074959332 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100788505 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078814093 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074392969 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095507742 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07542878 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095354641 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093978627 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098830883 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070607886 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075082472 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100793349 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072843882 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074795035 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.100323967 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076725754 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101825879 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072737829 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09904365 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073824165 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066819612 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098930216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071146229 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067008466 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.10116669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077305211 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090284719 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074225257 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073304643 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097359699 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067097784 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068603091 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093690731 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073366151 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091843212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05793154 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071337027 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096015484 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068227879 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075031657 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09740278 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073783323 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068510838 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103055344 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066851426 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095939188 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067824842 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066220946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093563666 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071462786 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066173164 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093161684 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076289547 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091843203 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075121599 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080548691 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091126471 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073774094 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065803574 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.091651821 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082398048 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.10083778 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067559224 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09236397 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068339117 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074822185 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090818483 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068804761 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066930307 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090828015 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073931644 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067032029 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093392025 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074691234 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103482031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067674434 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071362186 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09298322 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068330014 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071885886 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091152194 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067890977 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068425654 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088808512 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069044301 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089779403 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076393416 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068544493 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099507755 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069322617 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075499262 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096450468 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073567114 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095491557 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068038231 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060296132 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093020542 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070340138 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069032666 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.09120898 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069447464 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066831599 seconds)
done (took 13.545490624 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06896214 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169866386 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127202849 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096284935 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112213302 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067282182 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102721924 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10340215 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09426888 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127919131 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089813897 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109612188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115487466 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.09129194 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068372088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070935203 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093930334 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089177314 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126853667 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110550745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117304465 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091303748 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121676723 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092107594 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113213906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103261335 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092687535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071763607 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069960868 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118334151 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110595473 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072142452 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067749721 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125494856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119669867 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086662649 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.091317765 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086836679 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090042399 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068605699 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116333538 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100931404 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107169669 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082091596 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099349281 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070523091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092084659 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087574355 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115598702 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081368796 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113988504 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135462315 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070596116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108989224 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067035839 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113633383 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106726071 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071811294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068196331 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.094101365 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068636466 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070293372 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11333091 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116682586 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071905705 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106770263 seconds)
  done (took 7.466786639 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087148896 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118043179 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08580921 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109072291 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067564003 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06726665 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092320322 seconds)
  done (took 1.707647592 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069635425 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089478963 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115007168 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089868535 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11217049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087963014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102851234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068187004 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109663343 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069531863 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088022973 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130410357 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069524146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.100132582 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09127868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09271825 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091206384 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093657445 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072375171 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11504373 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072080139 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087896941 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.095689139 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068230396 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10780132 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068939539 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140626099 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072994451 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069007253 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097137488 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066496094 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14164954 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106633907 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080196332 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067801507 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108124391 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082928672 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090879726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085388236 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097035225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083678829 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068783899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094578048 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06772699 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072294111 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103661611 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069589493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093996444 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07267247 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087946737 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094089246 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082973301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092812111 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073189361 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069439612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099484864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078470328 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093468718 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089603743 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069756794 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11031376 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084009936 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.107994184 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083655952 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096626287 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084597702 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107139241 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072463189 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069557773 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096987276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084913651 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089970668 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070987411 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078231667 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095568873 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091055203 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.115845487 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070851084 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101694923 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070078972 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068957472 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093324745 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091385373 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095659794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069674752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072242626 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095849132 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067088724 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066770461 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097195958 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067284973 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069710809 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097099998 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069038027 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09530357 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085813863 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06862634 seconds)
  done (took 9.563485991 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071377303 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069684675 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095059445 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070301145 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068944135 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094095641 seconds)
  done (took 1.564895281 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099181226 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095837791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083309268 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097432676 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10819942 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107141641 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083452923 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108452691 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085724492 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106282356 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083803288 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108780098 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089895761 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099697008 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082782597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098895453 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084426342 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102427567 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081057565 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098688316 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090593082 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098497763 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076517716 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083417217 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09855032 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073744021 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102685763 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080107577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10572531 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084095886 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099316091 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072221828 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097148339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08323925 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108692034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073213416 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098840252 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074303697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101819791 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073481384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107203344 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076772714 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078560896 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098894217 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105738427 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075213326 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073143978 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103414645 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082894578 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098840015 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072985835 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098728566 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072710296 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097308019 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075597889 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106778398 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07404294 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107325092 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076389706 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072627722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09708475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072743909 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10799372 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071599122 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106895244 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073311614 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.098433387 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07523341 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099336513 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075497157 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07297745 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096802876 seconds)
  done (took 7.577975864 seconds)
done (took 28.957570559 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.662074555 seconds)
  done (took 1.750767675 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.802129703 seconds)
  done (took 1.892197045 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.522394395 seconds)
  done (took 16.62067993 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622486002 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.774655412 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.815873474 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133636209 seconds)
  done (took 3.438895952 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.896184671 seconds)
  done (took 2.009434047 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238239075 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225702699 seconds)
  done (took 1.557799828 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773286761 seconds)
  done (took 1.876487706 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.324588914 seconds)
  done (took 2.422048399 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324461331 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182060158 seconds)
  done (took 1.612340175 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.529737462 seconds)
  done (took 1.634815978 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.85704387 seconds)
  done (took 7.966332081 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229957131 seconds)
  done (took 1.34964226 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270252022 seconds)
  done (took 1.379120798 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.329561817 seconds)
  done (took 4.438997663 seconds)
done (took 51.046555353 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080297286 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082308592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107708765 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079549317 seconds)
  done (took 1.453997938 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080091529 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074467631 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104092491 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073964641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104679193 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074603342 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101061697 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080623775 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073374291 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101418169 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074905617 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099610394 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077930637 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100106432 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073695683 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076839293 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103931657 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074620752 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103085889 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075013019 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072377562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102295933 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076539509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098657756 seconds)
  done (took 3.191842492 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080282127 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073554501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101082017 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073545995 seconds)
  done (took 1.43956098 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080946741 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117186035 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091380341 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078708286 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119823925 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112921147 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072733728 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070939795 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099705584 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078831546 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093556317 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100831926 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114746025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078612436 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105200169 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068638728 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069592558 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113105644 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078787774 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104750574 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072695304 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080136842 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095763402 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090638993 seconds)
  done (took 3.30661739 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079626031 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104238449 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105968404 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090059387 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.119418852 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066478412 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103910663 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092045829 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.15283227 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067261008 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098083256 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068177341 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097897419 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069423057 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079003705 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135965878 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11208033 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.096311393 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097460291 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.093832652 seconds)
  done (took 3.049822648 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077683658 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070920298 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092282065 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070544444 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077292239 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099743586 seconds)
  done (took 1.604864692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070569062 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069089751 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093130513 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069207486 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072645545 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093325495 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067530787 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068247104 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094260014 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06945238 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067259547 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09268289 seconds)
  done (took 2.043899484 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.438258732 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070479372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094945649 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069089262 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071534558 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092794815 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082651454 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068726419 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118699401 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067852012 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093548184 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070814109 seconds)
  done (took 2.45995378 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264985326 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079124552 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326849062 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16899761 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141635812 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156485988 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105551986 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141280253 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1988353 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139460331 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201458445 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225925083 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135927585 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168490319 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117000403 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106602695 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21142234 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221886643 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105774779 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225590094 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207327945 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158250679 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181610095 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130361521 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135755137 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152435837 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073360218 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108201557 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233024858 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161163142 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202644761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139692607 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09903713 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232023443 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226126253 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198044357 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161063593 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087674722 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158086065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168955572 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258913481 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115544004 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193544547 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135518614 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107162306 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17394335 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146972738 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148012314 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137447338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116530814 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174673702 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242458846 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166226131 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114398296 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137784413 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144252274 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145234505 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104074452 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240289078 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220030711 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159238444 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098007565 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099268062 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212214463 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160922789 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14329099 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155013562 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120539495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168890783 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213091354 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14760799 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173156281 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185473058 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091340031 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147621066 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19746177 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157881746 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200842597 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178225568 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075977595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152307721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131095441 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083054377 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170835813 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076340555 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23641818 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12752196 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140822784 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139841731 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136911174 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112520572 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221803422 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203216184 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105282245 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094178925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132370859 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151001492 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178899497 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11536385 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135137279 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149707642 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082253894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165976775 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103080402 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154265585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079183998 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178885183 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16374439 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078221367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157184952 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13017052 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130164829 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164845788 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220063889 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091681048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110426198 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200166201 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181425744 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109091237 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203128209 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190435015 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129862919 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131379619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205087364 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244219663 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093388398 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224940565 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136984009 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086370257 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115588683 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155680836 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142279142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150745268 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083964014 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178562681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202527845 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104552511 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097329106 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192614601 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084891833 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109596575 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141226317 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127983757 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098149747 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128424426 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134724383 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169298775 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155265467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135924605 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153706787 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127515928 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227025018 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117668918 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105844616 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13228181 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097003905 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166040691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190561755 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108769182 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22666196 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15585533 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131861279 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149604946 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0859618 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170298003 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107465106 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072291191 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201380986 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140000327 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112366527 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210883349 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131489757 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157221026 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15289209 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163160673 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160955572 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16189272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134632647 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116651033 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141140794 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15609492 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100249807 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097355759 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111356732 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132750313 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098335212 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112347108 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17176817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182955808 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100823676 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141555657 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12563648 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179362613 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10606105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160546571 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148839116 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122094421 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187408563 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214182987 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165625723 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128830753 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174841018 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099589529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077056446 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.1186883 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157027962 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110475036 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087063583 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146878645 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206653877 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160276209 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168871909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139309954 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150897017 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188297783 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100049869 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118761171 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207059556 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154375219 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15995069 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094837375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127867834 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175110172 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137843317 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244843567 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145430604 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153218439 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210515471 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131605887 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082350698 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135321719 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167429807 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134692142 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210226696 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127178089 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091369454 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139100234 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109711221 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132519751 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158147848 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149256378 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165915918 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146347464 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193541071 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080535005 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145291587 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153167594 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151190238 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091741093 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150226197 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195175108 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124244795 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148001816 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215270884 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082104599 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154095217 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23749807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200875833 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087529947 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139302779 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150878516 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159416889 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148657309 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169842865 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1395663 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192353804 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113653209 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113908181 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115118305 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101235807 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13638247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12345835 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141642669 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145935512 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12266888 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161992405 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14039028 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139806044 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149240298 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100637892 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120132807 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125903164 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20893511 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152165341 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234240469 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130424338 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207623265 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200605642 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104851012 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081172703 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110194391 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170502488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11333434 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164470291 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123963523 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107971596 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156238023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201705839 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09698838 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097755789 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139182999 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165514871 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14045443 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126667849 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108121377 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22458476 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132829514 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081944038 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155503037 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133386985 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131813558 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236528386 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064037407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125310101 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078394813 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109292037 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16108295 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188219493 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112078031 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156266439 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151453129 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151799455 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160243284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131040014 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099624852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142455887 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207617195 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159755818 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090260041 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142822979 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18815832 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189662806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135870242 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125680258 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23347825 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187578445 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223463566 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117547523 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146401821 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145035411 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111282695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199730813 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111662347 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200929475 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112506478 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167205451 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134324105 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12290687 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158342034 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126210726 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106353312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208512295 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149537568 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110385309 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083261322 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147378355 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151639616 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135697309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103108644 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170463599 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074022036 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19488641 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202419111 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111313537 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135316514 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097598936 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111544574 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138322044 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132687628 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11452112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124049735 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236020979 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119350875 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18377163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199316991 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144800333 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167976223 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130013541 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664916431 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079936087 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216082578 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150535675 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237928534 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12772766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148829966 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139918464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153314307 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17589604 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135208826 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206312118 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16249663 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151714296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109389738 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131983691 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140229991 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094545288 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136394527 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144518374 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14568671 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132591095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150940422 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156780162 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111333495 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096835823 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220598902 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148212808 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172954972 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198646423 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087090439 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149941718 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20088389 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081773886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151323113 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215170723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137833293 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127745632 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082967662 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135138271 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232243049 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074513566 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223218443 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153405376 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14051148 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145218058 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148341282 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190694934 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138178948 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157015533 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125051455 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143664844 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145420259 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087206269 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107247975 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135788171 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143520674 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102385819 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130723912 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148328856 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189066297 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099394939 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099642862 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132976062 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175149027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238201947 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118802213 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085038253 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149297026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170179656 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145919281 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157320808 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084015354 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112466573 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083935556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.142797616 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142533861 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146140077 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10558274 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140407252 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227901882 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114114392 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229637984 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126124663 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136812767 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071875659 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109455583 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12433766 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101132279 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137773444 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127927479 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233756615 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100603468 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.12069288 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121607125 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076411254 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111795475 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162714133 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140153346 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153698627 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127407 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066213551 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139664276 seconds)
  done (took 72.141461148 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142858591 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.118116358 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.130393608 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.189333789 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170925343 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24293622 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18604428 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228358009 seconds)
  done (took 2.606176897 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071858477 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122258344 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103469905 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118321862 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094709605 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071167883 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.302115564 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111713162 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068475045 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119522413 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120555624 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096270739 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.480427473 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067588888 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095800739 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089620038 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069939944 seconds)
  done (took 3.39487262 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.432939002 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.652694286 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.459282557 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076270782 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.953717648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112177054 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.523265678 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169500178 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096009583 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44534065 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72963907 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160254631 seconds)
  done (took 18.010575723 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077095734 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070270841 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111535471 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084164247 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100581516 seconds)
  done (took 1.642835484 seconds)
done (took 117.451708814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08251 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.350999499 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054491822 seconds)
  done (took 1.6394809 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085723822 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084885351 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112949104 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083101271 seconds)
  done (took 1.575540893 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07672376 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077014546 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113373763 seconds)
  done (took 1.473021318 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.283071887 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166789963 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091473581 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085643287 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079099071 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106189463 seconds)
  done (took 1.481787005 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075165437 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076436736 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102307573 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077247209 seconds)
  done (took 1.535952067 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078587912 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053954731 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055726163 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084449456 seconds)
  done (took 1.482952881 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092170357 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106825621 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082895651 seconds)
  done (took 1.490148801 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109791372 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114438816 seconds)
  done (took 1.436284048 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0838528 seconds)
  done (took 1.285426583 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093992156 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142520621 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157848344 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138012818 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166547384 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138549469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086139108 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117433002 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106045337 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089355843 seconds)
  done (took 2.44422811 seconds)
done (took 17.666922636 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080222807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389255292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362528915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118578579 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669460429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357368164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.051097748 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11953171 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122043148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096943913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085331888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676567894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975764985 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346948813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968384569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325291675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676944842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069093703 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067992851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09711432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.009244411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096052312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069318959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06861898 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676520682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372111073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097574778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32558215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068360739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098525858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356313539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096271176 seconds)
  done (took 16.18893479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072763563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144903178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075347952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083834945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099771778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07022196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099838755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070745744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153926884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069436141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113628206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069196167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098643169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071211499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087443065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097541375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07055617 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06895098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097153387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069188518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114863523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069263165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068544844 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096940531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069271799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107979039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069593487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068396997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096652448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071953243 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098729888 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071051263 seconds)
  done (took 3.994860739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117552356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154247874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075527524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131347264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114096977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100083541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171665614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095112413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157269405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068978988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114315622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069038746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12988596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06956802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115620394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070033049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069191748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097955159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068919449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097259785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088276838 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068369924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097320208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069517518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097037358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082740707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095641099 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072048064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069104949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098342561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07337938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069146598 seconds)
  done (took 4.284986101 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075889598 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075917217 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111061369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085331972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098291245 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074203049 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074406174 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098278905 seconds)
  done (took 1.911506855 seconds)
done (took 27.589184174 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081056489 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070716627 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101581111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082960062 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100077195 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081217346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068926845 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103984004 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078670273 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073434161 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105299232 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068988295 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099462665 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070086554 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076043855 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097671814 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080718684 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099713054 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081158883 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079121149 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099841503 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078136468 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102477123 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081047297 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10664455 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08169533 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083134856 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103301966 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07069951 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098892935 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078882079 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084523144 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098330426 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080177573 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09814914 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070330885 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068552986 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097490675 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080330645 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10344288 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07260399 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101716462 seconds)
  done (took 4.848382234 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091416228 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089380105 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114872909 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071353914 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100837084 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06429206 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118230198 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07196852 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095238135 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090927239 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05672063 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.088794655 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073151618 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06258997 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.096773869 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059031606 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060384988 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.08544987 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062503643 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060485173 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085801767 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05717715 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061763341 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064135067 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.086360271 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063954627 seconds)
  done (took 3.24945561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077565273 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08541027 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117181567 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130043776 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136606905 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079086688 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107885798 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088938132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116580708 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068719087 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071024269 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126971073 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088845088 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103217568 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068926767 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116271875 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084362071 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070127526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103739006 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092022467 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113921984 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079823984 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122330801 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085596846 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069029115 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099581415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073033177 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109537822 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07479061 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078002616 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101454673 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073312535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098466613 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081441458 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07206024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099493374 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092559831 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106903499 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080919203 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068615602 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101369792 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07054964 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117255837 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113898284 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095654367 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076614752 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07625368 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107043805 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068421286 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114351225 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078713077 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067916529 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.100763729 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0683173 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067959504 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111184102 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070443519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099529506 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078193667 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070901536 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.11091199 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072264988 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111957131 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068734167 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10257607 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06962391 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06911073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095526944 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094021979 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069002026 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139614794 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069139418 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098524774 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077948936 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104536216 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074920584 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068473522 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112822473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077996039 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100054802 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07812599 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071665916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100836449 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090507347 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098277154 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071609133 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069598402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103314525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071470856 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095836697 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082980273 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068800124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100199689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085956354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094954132 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071027168 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074707959 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102177478 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068918226 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107500805 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075308988 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068658527 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105830472 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068871394 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099053884 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080404716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073644918 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096320856 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073757355 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101942603 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071093804 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069791644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100005185 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071323483 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077892651 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103966307 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073839236 seconds)
  done (took 11.605087111 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193469269 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186749954 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072105936 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180438024 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077285377 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109364091 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180949354 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09694698 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098213931 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07163073 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069737278 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.13200038 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.096042065 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145277392 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109677935 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069278061 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115513162 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105495062 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183569684 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177969921 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116520415 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077993577 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070543998 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099683691 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071667655 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106011638 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087517146 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105683703 seconds)
  done (took 4.445179427 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083488343 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.13845599 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075742915 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092307619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.122200832 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069226179 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104576477 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070673361 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109724244 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081734595 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097220848 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075746299 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075810199 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107378836 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069341554 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107113629 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080288776 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070809556 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101055526 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074591443 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109170591 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082500953 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100817411 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069661528 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075178608 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096519195 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067132226 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114705215 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068859911 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120443375 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.0680666 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074175377 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116602712 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069378122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097272016 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073301209 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07139104 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100935254 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071067062 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067794348 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096489084 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058639145 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067708684 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109701482 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074651593 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089445712 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075709731 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101706522 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075948501 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066903245 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099268792 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072372304 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071833351 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111233859 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073587632 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101884079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07525452 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067415649 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105633035 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07408226 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065370721 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096341276 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075151267 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095373244 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07848054 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074455555 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09640073 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073592782 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0735815 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104103231 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073279889 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099336989 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068765199 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071489802 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102580468 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074654513 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072705172 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097168893 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069169825 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068094019 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.085947915 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068993907 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054842632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100896519 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068325273 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095018116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.074239388 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074866947 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111039217 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070099639 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103887666 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070027574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067445691 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100779049 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064996399 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09864769 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088770438 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113330999 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069493844 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067870934 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115524235 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073747466 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095330667 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059334504 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075970585 seconds)
  done (took 10.129405606 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099016908 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093243958 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100595481 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084778577 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126034826 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093077155 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105395841 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075759274 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069524177 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114835827 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069079904 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105249069 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070261186 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077570073 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127149348 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077140031 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099515808 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079284819 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072444006 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139835102 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084614948 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112324475 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083534647 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097655925 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074742387 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081028873 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126252764 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08165343 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109913481 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088347128 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081697441 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126703098 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.08773361 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101681565 seconds)
  done (took 4.465209475 seconds)
done (took 39.955352772 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.297914012 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.519272872 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.29309189 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.248160197 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.328863652 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.312439435 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.307376451 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.295608645 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.807271148 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.296197737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.561088389 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.005491672 seconds)
done (took 60.514238346 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.367639819 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.433161299 seconds)
    (2/2) benchmarking "String"...
    done (took 1.563054928 seconds)
  done (took 4.233755737 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.651394309 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.280388507 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.580560931 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.305135787 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.293119671 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.739243536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.976422258 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.147529489 seconds)
  done (took 28.560077192 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.302687839 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.668947104 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.870943341 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.865941779 seconds)
  done (took 18.948946766 seconds)
done (took 62.00183266 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.283921337 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.315487773 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.336824861 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.27990101 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.405593836 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.31813714 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.58931026 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.518844431 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.295115382 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.283972927 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.315408693 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.298774873 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.305010561 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.56687791 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.300372562 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.309341969 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.35219002 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.727598924 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.687348697 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.304091709 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.334947604 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.303543076 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.326143691 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.308684728 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.301931267 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.29850694 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.295492458 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.296504586 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.642462124 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.296625524 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.393344039 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.772254834 seconds)
  done (took 194.604064216 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.295868194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.332571136 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.453477533 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.34917998 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.858040335 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.494786416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.433785573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.931899656 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.314598621 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.318077426 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.429458476 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.296168933 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.474705784 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.313864169 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.303604871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.300402856 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.580853821 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.524373915 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.312693605 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.573166879 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.315212632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.268282367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.223578648 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.435823174 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.317597029 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.337191115 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.333591421 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.315523388 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.4925007 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.523204408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.302674555 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.304186124 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.892237351 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.15592641 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.313263248 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.325915869 seconds)
  done (took 152.989073499 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.592014083 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.295464205 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.295985396 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.296363522 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.296237636 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.327265736 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.295985337 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.833538201 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844918504 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.802023447 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.685751354 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.357952662 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560869562 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.298512939 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389114965 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.309624205 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.296801063 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.311693171 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.321722287 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.29688386 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.29708552 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842529644 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.311941533 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.489030054 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303118297 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.297900672 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327726605 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.691689541 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2983653 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327844326 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.616205957 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.344699691 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.298106085 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.618125474 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.987853866 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.408079627 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.299603427 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32824771 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.298019416 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.568327338 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.297704321 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.297816614 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.298499432 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.301562383 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898643798 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.300105596 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836603949 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298370585 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.230162716 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.299963589 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.298892133 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.298639665 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.509691356 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.826859671 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.298750623 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.298650462 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.300807908 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.298944837 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298575512 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.329810317 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.498144372 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.397754641 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.299874757 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.302182351 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329937553 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.299106611 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.463209289 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.30109757 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.691238818 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.355163967 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.516993139 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837057534 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300270514 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392332473 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.41930668 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.299524012 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.299371704 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.300018764 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.299526441 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.406081571 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.299660862 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.699952205 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305893983 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.300796781 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.360196104 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.393341793 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.300924431 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.633343771 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.30251338 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.300435368 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.010241698 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.301396015 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39232642 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.300440398 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.30039914 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299587691 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.700974954 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850277682 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49385535 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.301765588 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.512131027 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.301943827 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.712703378 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.830697601 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935207214 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.30392879 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408763132 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304660459 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.302413895 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.301429973 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.32928915 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.301346255 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.360929639 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.304646361 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.697193908 seconds)
  done (took 356.902327385 seconds)
done (took 707.326875239 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.972577794 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.963214786 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.076550579 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.960821213 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.943370585 seconds)
  done (took 11.163811646 seconds)
done (took 12.41063023 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.491888385 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491251004 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.362470026 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493523069 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331505034 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51069395 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.472852875 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.322691736 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.406184737 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.380420922 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406093207 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.352987786 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330216173 seconds)
  done (took 19.600331041 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.623451283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.624430432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.367398934 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.624151718 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344616824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.622342051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502423155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.513262206 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.497693536 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317448567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.315829173 seconds)
  done (took 17.60261081 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.628865841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.623594528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.37113006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627170481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345660237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.631564446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.50188627 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.512861708 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499106517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.319812991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.316480876 seconds)
  done (took 17.626741882 seconds)
done (took 56.07678908 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.312595642 seconds)
  done (took 2.56200258 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.350510058 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.514271115 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.330152521 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.316672663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.314237265 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.313348738 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.317303201 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.313283158 seconds)
  done (took 12.020006391 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.312399846 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.309687862 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.31172849 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.310080473 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.312098809 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.30920286 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.311839446 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.309136314 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.309435166 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.309389422 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.312632484 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.309939407 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.311639222 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.312103566 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.310026013 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.312876378 seconds)
  done (took 22.224141518 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.311701251 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.30997014 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.30976738 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.310032145 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.310338297 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.31067553 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.311024508 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.309952632 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.311249469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.311498555 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.31080764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.310627368 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.31159166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.310700041 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.311379272 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.311411031 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.310742347 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.311805972 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.315485959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.310567245 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.311924413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.311360989 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.31137558 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.312442462 seconds)
  done (took 32.721796364 seconds)
done (took 70.775769509 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.380297694 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.961125771 seconds)
  done (took 9.592187398 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.314194938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.313545528 seconds)
  done (took 3.880667931 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.313885016 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.314301224 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.313537253 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.312702948 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.313793511 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.314338539 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.313409576 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.313965202 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.314179722 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.314149824 seconds)
  done (took 14.390217953 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.314280975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.314203805 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.311821236 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.313946554 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.313757937 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.312210378 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.314518513 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.315113562 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.314692183 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.312346814 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.315265899 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312561713 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.315221517 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.312108856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.314764334 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.312176923 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.312291175 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.312680854 seconds)
  done (took 24.896517131 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.314951124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.314900617 seconds)
  done (took 3.882633472 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.312533294 seconds)
    (2/7) benchmarking "second"...
    done (took 1.312513784 seconds)
    (3/7) benchmarking "month"...
    done (took 1.313095585 seconds)
    (4/7) benchmarking "year"...
    done (took 1.313632604 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.313333762 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.313527163 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.313642468 seconds)
  done (took 10.445014959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.317095017 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.493150086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.570224658 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.872516892 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.317295432 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.31978025 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.166876984 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.320198732 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.322067327 seconds)
  done (took 14.953318554 seconds)
done (took 83.291052406 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.3245907 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.309000216 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.206207018 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.326721808 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.326798832 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.608245422 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.320520599 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.432399849 seconds)
done (took 38.107723159 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.321261072 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.017316365 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.027767309 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.321041443 seconds)
  done (took 11.620762044 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.294431395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.25039819 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.30576002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.35254821 seconds)
  done (took 18.458964503 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.927506524 seconds)
    (2/2) benchmarking "read"...
    done (took 1.643162921 seconds)
  done (took 4.825513684 seconds)
done (took 42.480223603 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.31843228 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317560847 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.317557479 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.315248792 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.317440575 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.31523675 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.315241524 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.315224691 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.316825842 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.31778734 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.317160883 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.318077405 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317345449 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31520732 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314646139 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318836507 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.315349838 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314954299 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315680513 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31865681 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.315677386 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.315997386 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.315863736 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.318997548 seconds)
  done (took 32.854841233 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.3189719 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.317070899 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.318422719 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.318433972 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.31622452 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.318414306 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.318065736 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.316142641 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.318599229 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.318969577 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316238887 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.316910047 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.318511924 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.316924197 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318948409 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.316460212 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.31871964 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316845537 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318445229 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.316658571 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.31941643 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317186981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.316748336 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318428447 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.316860986 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316620702 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.319657148 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.318386956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319410555 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.317869277 seconds)
  done (took 40.791808313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.324410672 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.327460084 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.320388562 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.32075107 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.320024669 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.32029162 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.319676543 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.320142099 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.319944515 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.320254966 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.319929603 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.320658078 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.320115789 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.320793979 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.320820143 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.32094369 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.320700785 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.321346047 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.321207083 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.320948874 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.32083668 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.320900615 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.320764303 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.321787875 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.32112591 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.321199836 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.322403112 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.321135586 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.321307897 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.321918491 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.320819213 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.320414377 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.321437478 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.322200622 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.321270228 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.321810197 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.326467891 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.328439147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.322402046 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.322130396 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.321361983 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.32211184 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.322226419 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.322069529 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.321776784 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.322131755 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.322039454 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.322591816 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.322128668 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.321778235 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.322539116 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.321499683 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.322748928 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.322260922 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.322690625 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.323203105 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.322751079 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.321900859 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.322736511 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.322611597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.322123963 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.32247923 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.32264318 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.323304702 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.324280059 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.323494611 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.322284197 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.322941701 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.322556447 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.32302039 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.323547349 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.324046206 seconds)
  done (took 96.443594392 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.323515354 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.32136862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320550747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.320039258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320960307 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.323267865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.320983592 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324475415 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32134997 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323700632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323165595 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322145809 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321025553 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.323665727 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324501948 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.320947945 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.323660321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322104282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.323984275 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324286866 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324042048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.321578333 seconds)
  done (took 30.356371132 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324438737 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324329419 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.32278943 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.324157708 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.322017489 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.324526926 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325391078 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.323916937 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324777627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324295359 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321717589 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32476999 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.32238728 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322357619 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322949531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.322895991 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325212535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322301591 seconds)
  done (took 25.087361956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.322709256 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.322122983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.325554222 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.321648254 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.323169449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.325343977 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322422512 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.325705915 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.325693046 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.322888449 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.325722314 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325668541 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.326158648 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32322071 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326190668 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.323170233 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.326019575 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323646987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326102806 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322976248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.324267509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327278109 seconds)
  done (took 30.401466372 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32695908 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325392864 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.323942122 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.324150319 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323368677 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.326933446 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.326332695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.323531197 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.326231777 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.326249413 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324588531 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.326274933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.324645053 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.325178529 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.324267864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323917067 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32699999 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325372644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327166937 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324959055 seconds)
  done (took 27.771061526 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328518473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328672571 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.328400983 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328608724 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329227189 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.32932691 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329410383 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.329058282 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329536995 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.329909143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328990714 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329661971 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329623167 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.328752459 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329650854 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329779318 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329546046 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329165452 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.329553768 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329803508 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329931549 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330339313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329606731 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.330489675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330063027 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329760773 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330650579 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330537666 seconds)
  done (took 38.492094831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329792748 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328829329 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.327015432 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.327463064 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.326739394 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.326454608 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.32754047 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.327210942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329341304 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.327439128 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.329666669 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.329369192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329316454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.329422556 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32892736 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.329356358 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329279619 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.327411176 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328087458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325992889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.328727292 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329488924 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.329725615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.32724407 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326871451 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.330011501 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328500134 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327815349 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329644986 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327864423 seconds)
  done (took 41.117577858 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.348874963 seconds)
    (2/2) benchmarking "in"...
    done (took 1.348664518 seconds)
  done (took 3.965598595 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.327964807 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329761856 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.329788154 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.328268038 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.328415532 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330189383 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.331186351 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32797461 seconds)
  done (took 11.901734973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.330363914 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.331118893 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.330627115 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.331441501 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.33158215 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.332042912 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340449781 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.349135513 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.332753978 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.332253987 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.338368116 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.339937757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.336086824 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332163861 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.332464604 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33341766 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.331850487 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.331937107 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.333172066 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.332586485 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332542453 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335144454 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33446892 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.329434213 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.333667442 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.345042564 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.338871357 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.3329558 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.33241471 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.338523369 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.333161129 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.330217338 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.334470418 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.332855089 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.332534437 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.333419074 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344698959 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35067505 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.340957331 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334160224 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333751304 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.330709637 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.334134088 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.336484572 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334585808 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.33405648 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.333833406 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.330426514 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.333087297 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.336201786 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338707001 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333356287 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.331643115 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.339621497 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.33502942 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341062851 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.351946492 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.336740359 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.342791962 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.346092562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.348028829 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.342363625 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335339724 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.334975893 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.345067669 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.358061207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34368535 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.349718331 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.332356873 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334519704 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.344623004 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349633143 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.34543234 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.336093804 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33574767 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.334743576 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335820049 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335358355 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344800939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.355971658 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.335894265 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33552959 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345296716 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357785961 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.334916087 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336030899 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.336436524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.336354581 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.337216849 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.348078413 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.353075323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.336205283 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.335964011 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.337160538 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.340075906 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.336999059 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.33588757 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338051844 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.333892927 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.336307662 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336486116 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340035644 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.345199932 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33748794 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336846882 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.346617022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.337354657 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336010024 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.347862138 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.336495106 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.337449091 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.337586539 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.346387072 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.33459357 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340181197 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.346149093 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.338194096 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.34011649 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.338557896 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.338944304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350002432 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.364124812 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.338380186 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.337949081 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.342583121 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.349595083 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339039123 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.341662188 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.338841692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.334994771 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.335393897 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.339738162 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.338988612 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340675236 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338525982 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341073698 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.335806602 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.33763566 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.338772114 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.340002185 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.341089539 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.340239196 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.340283812 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.343087481 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.339186427 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.340699619 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.348022937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.33959057 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.340926082 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.340438177 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.337121687 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.338925156 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.34164714 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.340892161 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.339939801 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339915799 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.339317781 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.339038392 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340413605 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.339624221 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339761112 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.340217417 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344070548 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.340366217 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.345489244 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.339366241 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.337570734 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.34037998 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.340539105 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.340561702 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.340480076 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339681796 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.34310326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.347633242 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.34106819 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.341179242 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.344796882 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341030117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340893507 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.341572102 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.343186764 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.348809369 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.341689022 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.350246374 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.34130677 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341948647 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.341145759 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.342069437 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.342202825 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.34211811 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.344465815 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.34956018 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355811552 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351746655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.343233853 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.344927075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.342301397 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.345984891 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.347675473 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.342366495 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.343078228 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342147908 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342006466 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342315121 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.345666735 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.342228788 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.342283011 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.342585162 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.34293644 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342443252 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34249624 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.343471938 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344208711 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.339263393 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342561819 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343049038 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.342027012 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.340659867 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.341398386 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.342614358 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.343018536 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.342688371 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.353618087 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.340462588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344613739 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.344638953 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.344520248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.342562148 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.343570227 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.346362977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.343627965 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352253418 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.362151529 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.344743818 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351421301 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.361310466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344004155 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.346765589 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.344150509 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.341720903 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.346634744 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351398779 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.343787393 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.34414629 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.345113326 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.345739338 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344825704 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.353323359 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.342466437 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.344700688 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.344594671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.348225481 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.342680373 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.34681554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.345767438 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.346337207 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347019954 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34453441 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.345652309 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347082159 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.345341805 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.346293119 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.345455187 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348100647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.35275909 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.35254968 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347022627 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.348868944 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.345793975 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.349117079 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.346316086 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.345884611 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.344780031 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360099462 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.354091685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354933806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.349427103 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.345671094 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.353867259 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.346639214 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.351168141 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347345765 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346516078 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.346467653 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.345820201 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.343234374 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.34917657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.346764926 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347727714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.348142689 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.350708817 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.346991219 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.34622093 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.346083403 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.347049441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.347453212 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.347619496 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.347482325 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.350701701 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349038459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.346894482 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.346867492 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355725612 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364580186 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.349274762 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.347424168 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.347955832 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.347414099 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.348879485 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.347672539 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.351091241 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.355889155 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.350736291 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.358352899 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.349065573 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359615689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.347627033 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.350813603 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.356025013 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.345888428 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.346902244 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.348780616 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.349063679 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356682508 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.366665249 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.349207512 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.352230118 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349673154 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.349578956 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.348598099 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.348595404 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349773981 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.349097732 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359695367 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.367251966 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.35233384 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351224082 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.346418101 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.349324136 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349777834 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.348809031 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355594572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.349624986 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.350607728 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.348131922 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.350755901 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.349209142 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.349436014 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.349753498 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.347152792 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.349577452 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35842772 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.368460267 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3542244 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.350281573 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.362570852 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349949828 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358871405 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.368141762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.350961922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.349952801 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.349357526 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.353308923 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.350850397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.352969291 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.350134794 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.351056527 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.354620425 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.350222665 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.353350562 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.350639346 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.351810405 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.351076417 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360121901 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.374097415 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.353152926 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356017401 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.349029978 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.352919496 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.354821399 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.351971597 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.34996636 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.35376044 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362081218 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359199727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.352572831 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.351197695 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352256163 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352830538 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.352047282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.35179378 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.352782434 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.352099132 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.355528324 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.353429672 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.358861508 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.352741855 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.353914758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355474995 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.354115546 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.365062463 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.352224451 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.353902081 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353108709 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.352564671 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.35487332 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353011608 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.353390437 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355501636 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352960605 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.355244362 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35978908 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.359015514 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356025518 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.353203967 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.353612589 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.354394938 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.355619025 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352906096 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.352940271 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354057396 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.354937066 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.353751647 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.35660197 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.352121989 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.353191117 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.354604656 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352999013 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355925871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.360004815 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354379618 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.351145009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.35393767 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353353825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.352254683 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.355708029 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.36605547 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35707938 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.363620857 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.363065418 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.357951447 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.354713359 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357504356 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.363584653 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.352769586 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.35592602 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.354782706 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.357372175 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.355971657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.358974877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355645607 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.364331167 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.356123377 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.355632837 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36494189 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.373772058 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354699883 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.357235302 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.359745204 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.356226358 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.352692069 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.355637393 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.355091906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364262223 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.376585287 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356652524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358101035 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.354307299 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.357509561 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360924768 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356403154 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.35674922 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.35300468 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.356804638 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35654781 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35634417 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.353306879 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.356276879 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.356472913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.359077633 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.363754873 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.353460296 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359006888 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.35710108 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.357826154 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.356939615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356920041 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.35444983 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.354129527 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.357871724 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357800349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.358586697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.360419788 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.356794659 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.357067465 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.358491203 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357655971 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360729252 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.367834042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.36462428 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.354142703 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.35696834 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.357891875 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.361409028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357493397 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.357542152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35870712 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.360595874 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.357607892 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357891394 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.357967466 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.361139354 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376437981 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.375225466 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359369043 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.359055731 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.364190296 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.358506972 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.35596581 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.35850684 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.362357879 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.361600918 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.365500844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.359184658 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36632818 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.376738031 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.360061918 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.362672026 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.36191602 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.367755153 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.362289982 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358765196 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.359360516 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.363920967 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.377385972 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358624428 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368881607 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390180492 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.377650909 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.35980986 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.359669547 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358586478 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.3597125 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.362270179 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.361714726 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.360857374 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360221576 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.360148818 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.361657117 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366605577 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.362172313 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.360389972 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.359881442 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.362078851 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.364199617 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.358056596 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.360351692 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.360961658 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.360698273 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.361067468 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.361654221 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.36166338 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375486273 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.373132313 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.361408707 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.362661787 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.358026685 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.366043103 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.364013546 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.371854025 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.368351038 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.36173354 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.362305243 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.363497241 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.361912506 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.35897578 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.362896499 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361771839 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360617454 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.358897321 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.376291607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36992885 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.368955719 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.362222843 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.361598723 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.362315515 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.363705038 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361732716 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361602742 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.364971527 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.362502845 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366824619 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.361964664 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.362534402 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.365513527 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.370177986 seconds)
  done (took 805.735271093 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.359733411 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35961286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359943555 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.35984648 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359697346 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360425885 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359618768 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359972369 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.359935819 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.360105481 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.361615336 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36187823 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362034859 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362705815 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362979801 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362215127 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361837154 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.362156764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362313765 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363292731 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363260297 seconds)
  done (took 29.88427293 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.365304506 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.363624932 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363158049 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.365687431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363938381 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.366321491 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363777147 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366898521 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.366764096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363362628 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.366135413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364780807 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.361430997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.361234993 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36087773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363492981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.363979742 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361339879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.363022172 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361428909 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364840325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.360711297 seconds)
  done (took 31.306073563 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.363908282 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.364930523 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364182418 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.362593128 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.364526071 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.361550599 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.365098579 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.364283111 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.365246665 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.367028323 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.364703354 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.365287968 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.372247234 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.370136932 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.368559215 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.36579323 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.509874971 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.365270101 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.365991969 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.365684191 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.363070841 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.37263045 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.363366476 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.362854841 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.365736168 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.365267735 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.36635256 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.36584545 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.365302444 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.367766832 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.370752242 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.366948721 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.367239648 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.367778341 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.365032808 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.368092917 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.370604497 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.365911356 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.363767349 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.36635407 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.376131661 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.387233342 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.366941624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.374623012 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.366658188 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.36720999 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.370265413 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.375339086 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.364036841 seconds)
  done (took 68.438750047 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.365618836 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.36668391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.364613274 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.366783983 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.367823062 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.366511864 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.366109761 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.366162707 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.363551565 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.363783962 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.366773006 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.36549342 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.364379819 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.367047096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.365940831 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.363863498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.363874826 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.363445786 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.365001565 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.364692827 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.364526254 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.366966708 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.36647471 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.363994486 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.36673361 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.36389057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.364554521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.366345721 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.364544502 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.364572577 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.367722602 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.367737752 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.366938562 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.365114977 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362822536 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.366319115 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.366394203 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.364200073 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.365942329 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.364887727 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.365633868 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.367147656 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.366757223 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.366245513 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.364393793 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.365509972 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.364145665 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363998576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.364971266 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.364886455 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.364973195 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.362752704 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365672847 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.363107119 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365571687 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.367474572 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.361979722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.360963456 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.363471063 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.361876714 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.361796871 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.364586137 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.362184008 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.365231828 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.362474293 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.360552498 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.360097802 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362882471 seconds)
  done (took 94.115277677 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.363938991 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.364008899 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363997968 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36326273 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363574235 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.364786327 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36326937 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.363902717 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.363157069 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363323047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364691211 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.364605364 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.364440744 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363684378 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.363991883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.363020714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.36377854 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362825654 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362688445 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361937822 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.3630976 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.361957982 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.361695234 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.363368902 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362140971 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.363012421 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.362494795 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.362613631 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36295297 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.363140653 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.363112411 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.363163904 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.361991152 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.363092986 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.363206192 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.362232007 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.362886401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362260227 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.363469151 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.363146621 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.361725062 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.362221186 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362683153 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.362081564 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362877237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.362958537 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.362692204 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.364055594 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363482438 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362528509 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.363906081 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362534821 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362676669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.36395665 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.364784833 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.363300638 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364096008 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364438944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363158731 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.364060499 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.364054307 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.364226375 seconds)
  done (took 85.82220383 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364239281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363485831 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.361157061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.360484397 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364269412 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.362167658 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.364111766 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.364681693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363586305 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.36358175 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364348573 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.361124704 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362255645 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365970732 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360922191 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361311292 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363429575 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.362785475 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364480117 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.362360611 seconds)
  done (took 28.560534505 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.362331676 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.364769626 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.363187974 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.363159711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.365778096 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.364658081 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.365426896 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365267354 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363399511 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36543926 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365562021 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.364678826 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363377967 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.363647393 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366651016 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.363670602 seconds)
  done (took 23.131945419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.363135393 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.36564614 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.365782286 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.36719513 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.36264198 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.362140651 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.365704915 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.363081879 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.363337414 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.366181421 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.367786746 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.365606319 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.366091206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.367047842 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.36380967 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.366449099 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.363630089 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.364090462 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.367306308 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.36577869 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.364506415 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.364170346 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.367279883 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.366352687 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.364053343 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.365116311 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.364341151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.364959232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.364352686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.366430948 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.364895371 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.364058825 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.36522498 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.363530143 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.368295615 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.364773797 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.367546012 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.367333714 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.367787991 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.3663132 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.366879872 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.364268712 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.366818231 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.366878254 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.365001817 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.36657719 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.364913031 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.366957295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.365318555 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.36554986 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.367526189 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.367281001 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.368020779 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.369164415 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.371153008 seconds)
  done (took 76.418903266 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.368293176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.368104705 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.366104032 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.36676839 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.368166756 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.365785758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.368218663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365639831 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365532485 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.368251765 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366304664 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.367377182 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.364667465 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.371225256 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.366375219 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366869008 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.364332254 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.365650797 seconds)
  done (took 25.906522718 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.365998127 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.367486234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.36631874 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.363847184 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.363890229 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.367456126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.363070297 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.367450494 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367355582 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.365437452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364169736 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.36756635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36686322 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.367199559 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.364766832 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364628423 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.369709653 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.367672441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365405892 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365372637 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.368777686 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36778624 seconds)
  done (took 31.362317046 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.368480767 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.368194715 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.385480031 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.411271345 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.400904039 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.367365662 seconds)
  done (took 9.605971538 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367181889 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369573071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367043241 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370164239 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367956109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366843994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366567199 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367437491 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37072183 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367448706 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36690213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368162818 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369409908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367662177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368920521 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369301222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366474855 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366711181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367917926 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369615768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366982533 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37060539 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367860279 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367617655 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367518944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367498826 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369258409 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368121414 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366624697 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369523293 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37089374 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367394175 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370068333 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367466461 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371201539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370342553 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367604791 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370736179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370028893 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367156265 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370102009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370159816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370138786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367478407 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370743657 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368008478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368726509 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36778532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368021491 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371927767 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370361774 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367993013 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373234748 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370049133 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371218811 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370997613 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367859205 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368195832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371090646 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372126447 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366827924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370496672 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36677171 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368297495 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370928821 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367354793 seconds)
  done (took 91.649822738 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36769468 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368174994 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367398106 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369139126 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368063965 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366741197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367118687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371453319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367685475 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367082929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371504294 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367957827 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368603856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367575073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372331401 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366794875 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367349994 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367634298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368057426 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370459752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367615545 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371786588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367765374 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368215701 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367357538 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370358058 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367544371 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365298706 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367619996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367500997 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368362227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367551899 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368518885 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368533979 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367841822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368122096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36828894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366907715 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368408069 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371377558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369193393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37146487 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366750926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368193844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369296264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369910188 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369284293 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367994701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369549691 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368910141 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369890628 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368125057 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369170828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369296574 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368771481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368802149 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369487705 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368771911 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370305128 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370646806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369610548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36895824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373124262 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369661814 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370194507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370030956 seconds)
  done (took 91.649202531 seconds)
done (took 1874.024357502 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.43511992 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.415143352 seconds)
  done (took 14.156054835 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.534166507 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.487334165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.371229346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.420539878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.369706277 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.36722056 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.393476539 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.369554115 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.371578511 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.371386075 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.373159873 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.55787644 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.373276292 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.368631497 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.372955717 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.464678691 seconds)
  done (took 43.876871459 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.399885542 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.37745649 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.484857984 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.39069362 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.39991349 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.551822314 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.428762647 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.375584468 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.536313901 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.409490349 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.847238098 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.395719643 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.375609934 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.420040404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.391923125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.550360985 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.606031664 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.847516816 seconds)
  done (took 31.096897852 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.797712528 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.393752451 seconds)
  done (took 9.498040258 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.37422135 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.374410621 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.370809359 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.373328247 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.407216654 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.396008616 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.395569295 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.405396269 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.385710655 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.371560043 seconds)
  done (took 65.16458999 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.394413791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.376307581 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.375905349 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.372873993 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.367375783 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.366271832 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.372485691 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.366529284 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.759905401 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.491664378 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.390660443 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.381184533 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.372928992 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.376333159 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.369203658 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.409791169 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.498641578 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.371597372 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.369588381 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.378243864 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.373136634 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.50499539 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.413038166 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.370440511 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.493623177 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.748565767 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.373957117 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.378284345 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.489515357 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.371090097 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.37094244 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.372426103 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.373971111 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.93105322 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.848638232 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.379891237 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.406000458 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.378910651 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.368913272 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.570730588 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.371843375 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.37672464 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.365775966 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.833895293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.529036601 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.485898469 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.52899278 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.371141083 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.374134366 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.429235687 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.373218142 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.372570637 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400378766 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.125065171 seconds)
  done (took 112.927698011 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.40969302 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.852787933 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533317956 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.384722478 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.12577367 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.034131258 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.363322407 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.62790668 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372400875 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3651237 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.631129858 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841557554 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.369016903 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.370447376 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.479180533 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.43780903 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.36823253 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.099295198 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.366685254 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.368009345 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773567356 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.378947261 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.365537953 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.387324936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.402729174 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810673335 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.696321761 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.797188997 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.367819005 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.364535078 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804940414 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.374160943 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.41828668 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.367377498 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.62866129 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702098859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682651477 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.368659959 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36894716 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.369902424 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.399742503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8043842 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690313827 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.364976169 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.370404525 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806367498 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.366466675 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.373160466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.368838682 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566303443 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.304519841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.366977901 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.684592213 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.365880261 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.709473547 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.444186813 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.410994072 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83375475 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366341131 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.416804223 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.416040683 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.369160518 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.373651709 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.372725319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.365824775 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696821855 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.7510423 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.367427973 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.700381255 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799104747 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.368738967 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85942617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.18632295 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.380830665 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.40129206 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.368555043 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.919381418 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834026372 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.388517203 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365779666 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679287539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.367807266 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.635917897 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.380545653 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.368352506 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779018096 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.389315538 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.368996123 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.377001912 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.366666977 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.986469074 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.369529107 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623340026 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.388289477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.369728775 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.369497429 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.37639413 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.368991802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.36727781 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.371268638 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864282918 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.37076369 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.663815853 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.385574065 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.369260251 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.367443008 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.37180231 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.369391804 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584809242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.778900478 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.373758836 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.370035488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.368583838 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.373346181 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.631409859 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.373282584 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65222157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.369744425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.368829325 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371551574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.084539523 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375677004 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.369075942 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.369817429 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211782471 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.578323837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.38746966 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.368815814 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.372684509 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.385597545 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.622420629 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.369654054 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.393859152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.375356289 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0499137 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.403901243 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.405461101 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.963846048 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.370009982 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252539051 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.394955213 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.372895397 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671954295 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.635824901 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.663968653 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.372424279 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.371348883 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.027345904 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.427049881 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519311438 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.39084045 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389714948 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568305247 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.655525738 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.371840511 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.940383424 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.374408536 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58219868 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.373738628 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.682560674 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833511361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.37297463 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377549125 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.046601644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.037964127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.985402922 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.375671867 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637415104 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.363155323 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.830227243 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.3725069 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.375436906 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.807780675 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.373181584 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.378247138 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.372211749 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.372267952 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.438000575 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.546241526 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.843754075 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.378459999 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816365682 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.373892248 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.371867657 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.376528347 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.375095053 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.734300806 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.427220751 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.37613481 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.406298484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.376333452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.377807893 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831467499 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.245847486 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.374687327 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.527835158 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974374629 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.375831178 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.376645868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.925285712 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.66454368 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862897724 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390134062 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.666556507 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.378720828 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.413515039 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.071516607 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.435945209 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.872519462 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37882469 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.373895554 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938910256 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.376164599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.4263678 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.373526874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.375565624 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877107808 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.375557874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.375744771 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.673964423 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373353353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623206431 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.376893805 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.416985498 seconds)
  done (took 1117.47854697 seconds)
done (took 1395.505038486 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.376317619 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.375797765 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.359963918 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.373649228 seconds)
  done (took 26.801326001 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.382008502 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.380241119 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.381587271 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.380366885 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.38289792 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.379761997 seconds)
  done (took 9.599785984 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.432972382 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.374312219 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.374045543 seconds)
  done (took 19.494625872 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.582520712 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.585994166 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.721294749 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.429544015 seconds)
  done (took 10.633940827 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.384368616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.382782039 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.381682593 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.384060444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.383751182 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.385221205 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.381706713 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.38459184 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.384169675 seconds)
  done (took 13.765811361 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.045627636 seconds)
done (took 86.654095152 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.375223711 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.203434947 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.438429399 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.118820706 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.71887596 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.375260183 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.98723085 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.635850169 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.680319912 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.410440469 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.416640746 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.661191233 seconds)
    (13/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.938695915 seconds)
    (14/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.391932018 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.401890507 seconds)
    (16/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.620927334 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.373900014 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.968682954 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.560116282 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.376096488 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.923586513 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.78225987 seconds)
    (23/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.363556304 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.910284123 seconds)
    (25/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.386993116 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.686231275 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.098736396 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.424174077 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.375254016 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.386284234 seconds)
    (31/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.885181119 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171016319 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.405875834 seconds)
    (34/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.971302417 seconds)
    (35/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.402520111 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.569014193 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.47728937 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.781399949 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.915834421 seconds)
    (40/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.217719372 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.524816163 seconds)
    (42/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.391898934 seconds)
    (43/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.413585893 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.710783482 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.871561223 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.413327888 seconds)
    (47/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.562149691 seconds)
    (48/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.746925649 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.386478776 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.867354827 seconds)
    (51/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.717948226 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.477828955 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.44358666 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.423444895 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.117938413 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.607681018 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.190778893 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.478330394 seconds)
    (59/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.748560709 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.490675263 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.734981741 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.223904353 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.639022692 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.404534276 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.05839458 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.403088337 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.436385532 seconds)
    (68/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.952199142 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.444930927 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.997695124 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.396752454 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.598263296 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.46421687 seconds)
    (74/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.077167803 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.158735416 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.684447748 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.425751092 seconds)
    (78/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.130690528 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.367400112 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.816471835 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.382812274 seconds)
    (82/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.464984602 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.561596715 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.405889038 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.439038995 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.912033682 seconds)
    (87/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.408983063 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.783886443 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.859154957 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.186462592 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.424774762 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.405856351 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.401250274 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.953361346 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.487615974 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 5.625637846 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.767186778 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.456246247 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.665208352 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.378821891 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.612533338 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.381596306 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.598604133 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 4.431103903 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.612241291 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.381391566 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.405822514 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.36524889 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.244652992 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.851183816 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.439064643 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.465138956 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.579561683 seconds)
    (114/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.366995695 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089477264 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.921087931 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.178682073 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.444010321 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.380420204 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.379855645 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.704644909 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.98157418 seconds)
    (123/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392892898 seconds)
    (124/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.895500741 seconds)
    (125/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.082590289 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.882196302 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.402666585 seconds)
    (128/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.805253303 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.637139481 seconds)
    (130/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.393519815 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.433394487 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.100029797 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.380875042 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.680199572 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.608048562 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.097959093 seconds)
    (137/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.743141256 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.591557832 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.399753656 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.404491238 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.408343729 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.497827873 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.481525419 seconds)
    (144/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.863753524 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.407886926 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.422158056 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.02126714 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.506229548 seconds)
    (149/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.565451096 seconds)
    (150/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.491390963 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.11271769 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.407486609 seconds)
    (153/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.740005456 seconds)
    (154/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.593616681 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.761005222 seconds)
    (156/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.397499307 seconds)
    (157/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.463778803 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.680680466 seconds)
    (159/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.382231318 seconds)
    (160/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.484295961 seconds)
    (161/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.651604732 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.777372504 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.41859484 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.369616413 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.486719417 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.43119405 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.385310986 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.432655252 seconds)
    (169/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.543143208 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.390305657 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.408278564 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.517542458 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.213122948 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.255575265 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.761083401 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.418842509 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.257869919 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.732167364 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.670888995 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.466488851 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.459468432 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.763147084 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.694842911 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.383526901 seconds)
    (185/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.495927937 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.373042907 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.007798634 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.212356233 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.69635117 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.410091212 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.624583826 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.727796435 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.771686846 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.444180248 seconds)
    (195/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.963141254 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.258619784 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.411373501 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.488368514 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.666871925 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.390656049 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.384624141 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.490517723 seconds)
    (203/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.676040347 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.435154296 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.421814448 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.730904062 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.734185434 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.99558169 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.38181754 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.101353784 seconds)
    (211/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.37186219 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.996421331 seconds)
    (213/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.73290794 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.602562208 seconds)
    (215/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.387318107 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.498888306 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.373797787 seconds)
    (218/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.545802306 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.85584452 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.941042433 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.424344903 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.731509291 seconds)
    (223/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.550843584 seconds)
    (224/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.492480453 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.409018692 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.701054903 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.385504647 seconds)
    (228/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.401706017 seconds)
    (229/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.489202293 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.428040574 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.378314433 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.474253177 seconds)
    (233/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.546822936 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.788393866 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.939076668 seconds)
    (236/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.410920794 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.471651918 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.222821788 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.401024252 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.622755279 seconds)
    (241/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.953900131 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.382028581 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.389806601 seconds)
    (244/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.107733514 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.402549468 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.587964727 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.597415393 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.498375796 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.398515983 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.374686645 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.588681165 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.806416527 seconds)
    (253/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.084868096 seconds)
    (254/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.381079714 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.778771149 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.575088278 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.373038308 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.587135261 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.383556798 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.417834621 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.375234392 seconds)
    (262/309) benchmarking ("sort", BigInt, false)...
    done (took 6.428835228 seconds)
    (263/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.472763659 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.77006656 seconds)
    (265/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.476469349 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.512824858 seconds)
    (267/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.391796862 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.67781775 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.674620314 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.041826352 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.386415951 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.412306344 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.170240733 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.417097736 seconds)
    (275/309) benchmarking ("sort", Float32, false)...
    done (took 5.383458308 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.69746492 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.415811764 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.388440746 seconds)
    (279/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.452115791 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.473669507 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.389301321 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.473737224 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.503972754 seconds)
    (284/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.417013703 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.214819447 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.390871608 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.560953306 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018165352 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.194514986 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.11602593 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.472643707 seconds)
    (292/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.685644437 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.618147017 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.432616289 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.518222801 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.465022388 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.2755204 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.416254505 seconds)
    (299/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185872127 seconds)
    (300/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.390591949 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.905904677 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.969515196 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.411928885 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.228296437 seconds)
    (305/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.57951038 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233830531 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.40054053 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.749618183 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.074370784 seconds)
  done (took 932.278838258 seconds)
done (took 933.594807573 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.424393785 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419858481 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.40181647 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.42432351 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.514101615 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.434170354 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.414077637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.405671981 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.451088131 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.45280751 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.402595591 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.431007616 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.404993516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.402263042 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.402606218 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41755389 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357160825 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.402585103 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.420648986 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.415197684 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.42094387 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.40309938 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.454069739 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.432171656 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.406934504 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.406886447 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.407641509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.424019992 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.516271876 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.407462029 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.407788874 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.415385881 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.359656909 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.401270045 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.399811497 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.424188146 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.41737461 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.414543071 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.40956275 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.437578014 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.73650188 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.401779471 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.406371459 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.406174288 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.40685901 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.410875653 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.407976768 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.411470301 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.418468728 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419673614 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.732654673 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.418361571 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.409717088 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.407120414 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.417620487 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.40623455 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.409541826 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423016329 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.425865192 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422345278 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.350763509 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.408829517 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.408337243 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.42341635 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.415322552 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.772321211 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.400576687 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.411584656 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.744770141 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.409336497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.771798741 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.412004006 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.407741519 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.421007441 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.439845794 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.363089233 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.400324712 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.407273299 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.41499249 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.406896605 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.417001046 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420057575 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.412729438 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.408735648 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421483202 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.437466583 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.419502864 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.409498812 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.417978542 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.427674767 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.415726447 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.420799122 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.410672139 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.404825975 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.418231209 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.413279756 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.411247112 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.411540712 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.415282873 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.420381237 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.74470226 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421586526 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.405654919 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.406157568 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.407906096 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.422762906 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.747369033 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.407356388 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.431327591 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.45753953 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.411930762 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.358985482 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.409809323 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.42536561 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.419672352 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.413824246 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.405403191 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358897631 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.739584787 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.421060642 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.411553225 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.408941396 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.42593997 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.412161666 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.406226637 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.371756965 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.409198539 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.424508277 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.532810683 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.421439763 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.442623181 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.408481149 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.413082882 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.442810231 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426666061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.442258678 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.414131384 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426556941 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.426839031 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.408985128 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.421074716 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.421881538 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.411990648 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.418006275 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.405939457 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.439819046 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.423232024 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424122151 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.432605232 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.531517518 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.409600339 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.361142754 seconds)
done (took 235.320749978 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.46977913 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.405399621 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.509319427 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.409073674 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.507023096 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.501744352 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.405969909 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.405890139 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.405851695 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.785185986 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.406400899 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.406874518 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.405591432 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.406797008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.490805006 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.41026516 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.406274373 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.748411215 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.409406259 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.479815281 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.408785369 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.406995663 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.40913283 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.787184573 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.40166517 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.411506478 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.480424867 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.408851361 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.753404144 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.40667287 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.40962516 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.753965868 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.498237619 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.426319521 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.417996938 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.417029509 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.508667235 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.422777789 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.489936135 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.490444557 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.511066132 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.448886653 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.402455816 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.402115174 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.409595735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.412552718 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.407713105 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.437831581 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.411834789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.409831856 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.752046967 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.421272131 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.408833025 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.408564799 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.409371398 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.441698989 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.409160596 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.412088998 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.501047228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.411618723 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.47391184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.790514607 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.789590193 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.412156004 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.403563218 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.410217042 seconds)
  done (took 153.534995698 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.477750229 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.484365683 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.519419844 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.410109563 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.460072908 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.523150759 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.409752748 seconds)
  done (took 11.625631749 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.417424861 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411939039 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.460991838 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.461805531 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.412809241 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559423043 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411809511 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.423300378 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.418687245 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.464628673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.413245195 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.41354412 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.419233393 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.411215784 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.45993712 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.42298182 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.526741437 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.414168946 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4127983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.564530659 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.409043246 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.419298213 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.462637496 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.423852246 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.41447186 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.418003108 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.978661902 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413648148 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.411165075 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.412589944 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.411306231 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450523738 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414649028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.410560698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.411658685 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.529268047 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.413713718 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41089923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.414433031 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.40836931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.41434219 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.414153548 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.415319595 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.41205723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.413674081 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.436187685 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.413639474 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.414186954 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.414676547 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415357951 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.464145494 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416002322 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.413194941 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.411584405 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.470008491 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421440253 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415864898 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.411360675 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415713458 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.4130729 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.568021287 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.462794432 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.415196327 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.463430623 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416672786 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.416594557 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.415401177 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.414708657 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468958683 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.417215291 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.464113276 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.413447094 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.56953671 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.438189943 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417188119 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.418078321 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.417359147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415775636 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.414250107 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.421196886 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.413879006 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.415991987 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.421438021 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.413120148 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.413991865 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.518405423 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.524241516 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.414946633 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.429914286 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.423067565 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.413239402 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.469701612 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.416937487 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.41424344 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468519046 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.532609282 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.47024174 seconds)
  done (took 161.124473377 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.4213312 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.424594962 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.418375374 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.433288883 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.416574067 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.417739497 seconds)
  done (took 9.879624478 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.41911762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.418165835 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.417627612 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.41669861 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.41728748 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.417895423 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.416926247 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.41626771 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.422108208 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.416810016 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.418438554 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.418568803 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.419262805 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.417996161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.41750507 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.416566127 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.418139145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.414509146 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.418859039 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.418303208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.523032917 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.41747455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417982435 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.417854565 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.423810599 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.41789575 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.424991119 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.418470565 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.417786129 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.423987648 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.420813965 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.419114164 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.419802569 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.424081729 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.423593287 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.418471955 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421932628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.420147907 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.415690801 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.419886517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.419997235 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.420976236 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.419175914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.421231826 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.421944785 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.424559623 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.425241988 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.426795624 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.420333327 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.419830989 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.421491931 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.420789869 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.42111235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.421377353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.425457362 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424443066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.426533663 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.421143147 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.42194184 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.421647581 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.422984497 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.421971979 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.422172823 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.425813486 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.429827332 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.421204508 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.421216986 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.425605061 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420640609 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.420536161 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.42150553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.418838791 seconds)
  done (took 104.732918248 seconds)
done (took 442.236747967 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.688410999 seconds)
  done (took 8.038346369 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.681204256 seconds)
  done (took 8.032629342 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.175277963 seconds)
  done (took 20.534973083 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.472682899 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.484699735 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.423370499 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.418030167 seconds)
  done (took 27.150331914 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.685703149 seconds)
  done (took 8.037666458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.413880475 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.417695171 seconds)
  done (took 14.184451735 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.619893092 seconds)
  done (took 7.973716355 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.921560765 seconds)
  done (took 8.282947505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.437942329 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.419333479 seconds)
  done (took 14.482447247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.400548396 seconds)
  done (took 7.751045361 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.280804465 seconds)
  done (took 8.633313992 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.427993614 seconds)
  done (took 7.782022787 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.47008181 seconds)
  done (took 7.822012488 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.912796759 seconds)
  done (took 9.264975667 seconds)
done (took 159.321507257 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.413822043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.411345191 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.414062911 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.413896799 seconds)
  done (took 27.00431419 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.45563559 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.457309788 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.456962749 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.466940598 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.458492825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.45545273 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.448044795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.448253829 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.466732963 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.459672173 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.457160745 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.458267186 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.456252192 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.44891095 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.458583911 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.458022158 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.467189505 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.458200568 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.448294444 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.459641898 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.42216439 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.468153977 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.4587897 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.423029404 seconds)
  done (took 36.269818186 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.619272519 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.494193649 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.577111535 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.474819791 seconds)
  done (took 7.518564019 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.474082116 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.476822729 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.488209377 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.525916202 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.559877452 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.484445052 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.448844678 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.443588426 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.429695776 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.4782873 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.551219286 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.492330951 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.559872515 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.423105636 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.610747611 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.423375841 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.423077891 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.47586867 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.525916374 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.542159229 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.424369971 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.47650978 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.478221666 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.494030369 seconds)
  done (took 37.065350257 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.421624457 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.431189163 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.429504201 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.423096228 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.423646026 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.423463721 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.428782796 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.424074328 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.445752791 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.424860189 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.42303609 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.425375203 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.423679993 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.424084461 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.42323346 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.435581153 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.437458977 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.423877495 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.427126512 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.430829952 seconds)
  done (took 29.904183906 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.418781428 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.270493531 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.7680931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.673824729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.417596519 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.418584841 seconds)
  done (took 28.323200823 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.48933983 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.610978186 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.42347665 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765346482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.843654747 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.425550481 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.424616332 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.648098898 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.937244138 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940891334 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.477781336 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.488920962 seconds)
  done (took 20.8323844 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.430314976 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.420241211 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.420221287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.43550189 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.478783152 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.426654275 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.434347708 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.418472835 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.479247984 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.480985377 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.427573576 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.479402903 seconds)
  done (took 38.689512608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509124632 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465011655 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.276191461 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230028092 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.794284572 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630579254 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.204337288 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873170224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.421819803 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694725141 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421355322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511276899 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674954717 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421137893 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421404603 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.402075279 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647488634 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912866578 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422934931 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.344675444 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445378275 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421866454 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.448602673 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.449159714 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634160048 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.550648088 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.682111648 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422405031 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691838632 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434988007 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433948767 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422565782 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697357569 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069101496 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513282152 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432968445 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192482517 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.130351269 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.415479091 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.352275469 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269429332 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426813425 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434707681 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424260867 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.35765647 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433217043 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887302793 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.425558996 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.133186848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423465096 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434927431 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516983246 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.426388844 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.236943511 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.511706333 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421938388 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.42215426 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430455255 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992314216 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.857425477 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435465707 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.359477086 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.876988445 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.345580597 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059230406 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.52704465 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.428790354 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428488387 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360691901 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.424078412 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441941175 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571922359 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.442717674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.074370819 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197454859 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431870888 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355945184 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978458043 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434167882 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.358180625 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652461749 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425970134 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360293534 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.380953627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.361032212 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107594602 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433701545 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.808457602 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429118151 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.879131901 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.435298719 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443113796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449526472 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650878366 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.313646146 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427267823 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.325042564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568557184 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444555688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884300678 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356845837 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.427664787 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679742388 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.635998319 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427655475 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.828124058 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639689767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42350303 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.443598551 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431364291 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438773515 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.01543378 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43936818 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865443561 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444084105 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426253851 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152581342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429940514 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.526710935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438957577 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666249456 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.188389932 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428071303 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51016184 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429156275 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427726488 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.434610506 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94041625 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428001391 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.429806155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428783296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.438064786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.429523898 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37412983 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.431411307 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432840065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.432079941 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652095955 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429120803 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70375418 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363799401 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577344873 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481641621 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.649931099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.605067231 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.429730302 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687150987 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43632263 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.44192339 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440231871 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447990717 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526686637 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450755174 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.431399945 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.685019527 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.432396241 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.433046735 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.437366978 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430392604 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436047064 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.43485345 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337663288 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019903831 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408170894 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428977449 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319562939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.442071128 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493887584 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434571725 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439031753 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.169736136 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308633014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.430346248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.42768074 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6679158 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440659117 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.424837759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508671066 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.640168492 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025479482 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442275214 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.364227616 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.141786517 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.123206108 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43131014 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366172895 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430109484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440262791 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441526149 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.01462097 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.020001554 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433213322 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.351337706 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.436544839 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441748016 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.435912739 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429935796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.163268185 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867927282 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437125573 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442538115 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574947983 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.444652881 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.366049069 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.436012603 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436191972 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432548228 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432006349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464553223 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.377145987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92034547 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686726474 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.194293107 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440434273 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.529621039 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.462481305 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.429095169 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400487916 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454649964 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.44195523 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438810006 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.444096951 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.411688761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105700506 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999201385 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220737126 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975270066 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402230199 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.436085436 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433461714 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895428347 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364502329 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988569032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615773316 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900848388 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374874653 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650998934 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.615029322 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170523111 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441143259 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661759538 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399236698 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.399827929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458889348 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646544768 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468709066 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43978403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362698213 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.716043003 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704271823 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354676572 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514517695 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894359891 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410831344 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450438272 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432123725 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.725898003 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602659909 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.147318144 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606301997 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44404941 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436216801 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921202988 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434959404 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.661577749 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080982158 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449071367 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.646480905 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367207457 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446744009 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.445489422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.436661602 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.661402151 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.440287361 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.686463753 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44528185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370195305 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444935495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98422881 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.289279809 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.441440261 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435573409 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155776762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435115181 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70775932 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.447571907 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.150529085 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437061009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.369626825 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36973418 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.128986541 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438050196 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412930879 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9251685 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.868989657 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.501706281 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453714419 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282251779 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691823303 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.451732706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028932782 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662214512 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.304990725 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455228821 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.537197489 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40528839 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.437440601 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438015428 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672716498 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344143789 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.65838098 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.302208781 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.342332313 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.436175856 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647106225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435975531 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440182928 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67787349 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.146413407 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.443635412 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219981021 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463118512 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439856481 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355218817 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.888850519 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441477602 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517848687 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448630608 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.44916651 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.448484102 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608820829 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43830008 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440988371 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.453606986 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531704788 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.913438822 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.161970372 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.439094602 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035472007 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237355655 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.038268336 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451449327 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439041585 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443335839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373491349 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585594934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.664801204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712465076 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566926062 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.954542033 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459205769 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449778286 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444175383 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653743769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714608763 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.334855464 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446613155 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450915473 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.44081186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451591795 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.650327152 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934413395 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993785662 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5580557 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4443083 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902153406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711577694 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439836494 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441068453 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033125641 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.443095044 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.732814684 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.442207642 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44383388 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587080025 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450463982 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08731473 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448436571 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.596448643 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.213605344 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.468369637 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697152472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.893251841 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.450944664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040310266 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.158690725 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702919047 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506648295 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451719693 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.552144831 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587644099 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.440110179 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438601862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441428882 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288252197 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.150849304 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.450392011 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043985539 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704539557 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.438685585 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.440359583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465440335 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.451984608 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.666648825 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148540945 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665358127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452087785 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444260065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257657061 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045737825 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454486344 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377422651 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.443797659 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679948213 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677740806 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461598901 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.895379304 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.153166492 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006738526 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.412365373 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464019486 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442421626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16680365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047497989 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.172150867 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936710292 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.008229263 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441977717 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717455903 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.448244151 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453638579 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718551938 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.447138038 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.443111954 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454607045 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.043187134 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190664575 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.451490275 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.407406528 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.380553525 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.783973447 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157968951 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377243725 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442053895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.629160155 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441824997 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575450327 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454120444 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.442434846 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443073475 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.177199042 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718000876 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.447657748 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.433546701 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.434968722 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447204892 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451625716 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716130746 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44823726 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.113175781 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.796952775 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700867425 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.458982411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.430491544 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.448466022 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445341215 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434875549 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.644786319 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.03123712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998251173 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.455357972 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.454702846 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449236786 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.661378638 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65710252 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451272367 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458987652 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453645163 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460362111 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.350766486 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.948657626 seconds)
  done (took 1642.122132533 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.486802141 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.483446384 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.466094719 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.460440609 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.523589571 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.591412916 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.483411246 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.48264563 seconds)
  done (took 53.360501223 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.456703339 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.693959559 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.474441431 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.445057481 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.455145904 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.453873553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.876234309 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.457308548 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.453215235 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.456581696 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.447383576 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.45591806 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.073916944 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.454484598 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.456452624 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.440962083 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.452325856 seconds)
  done (took 67.394483227 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.454883091 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.933322961 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.542200155 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.44878922 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.411993882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.453826455 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.159771458 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.46621337 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.449461177 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.698851935 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.098955831 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.481813423 seconds)
  done (took 85.984465932 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.456879178 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.456862282 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.458326025 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455711227 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.457292148 seconds)
  done (took 8.670177333 seconds)
done (took 2084.491873233 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.704348918 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.146473442 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.075883194 seconds)
  done (took 5.607733918 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.598728092 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.646446402 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767125979 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.773458683 seconds)
  done (took 8.17364694 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.729517823 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.818863072 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.638494312 seconds)
  done (took 6.57322707 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.81862661 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.451252427 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.572964623 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.450825041 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.451732644 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.44985091 seconds)
  done (took 20.74076919 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.456419927 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.458852734 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.457190787 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.459368277 seconds)
  done (took 7.221002731 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.439596326 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.203533781 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.438471268 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.451468083 seconds)
  done (took 18.921160894 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.203748783 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.213595082 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.199877233 seconds)
  done (took 8.005254207 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.463474882 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.297624424 seconds)
  done (took 10.149206926 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.771133372 seconds)
  done (took 3.159932991 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.587779693 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.725965962 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.52304225 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.407266571 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537636698 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.153931023 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.026800216 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.620297218 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.394833753 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.53057784 seconds)
  done (took 28.897774602 seconds)
done (took 131.384152549 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.143517488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.455699957 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.665651976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.12036161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.686232191 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.672165168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857430279 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.078549278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.70668176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.614760384 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.115420841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.682954632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.594355288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456004192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.591509593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.460172465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.68365651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.195776239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.835133005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.004293565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.840326743 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.755111069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.944548579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.775927068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.682500272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.618281503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.334315797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.458112555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.010907775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.360176425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.614306968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.169073173 seconds)
  done (took 191.573985699 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453507855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.460910084 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452643116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466256897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.461804818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.453862665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.466863398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454707445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.465616501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454756973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.453931597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.455430045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457173314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.47104951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.455756812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.453704262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.461500448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454007602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.473180286 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.467993281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.455000226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.461705587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.454126423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.455340065 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.4557856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.454583143 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.455494565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455540156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.462963267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.467582395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.454269639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.454730941 seconds)
  done (took 208.074405985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4571835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.454698198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.457648567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.465604913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.454664545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.457300238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.456909787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.456457077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.457676985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.453507902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.455921869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.467918099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.471948882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.454547977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.470904324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455201535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.455711676 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454320654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.455666229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.464529497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.468163921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.461317968 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.468445314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.469553339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.455839078 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456443118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.467316003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.45427856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.456536394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.454778329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.45813677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.45620225 seconds)
  done (took 208.100454769 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.652778997 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.463532114 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.465672845 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39943816 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.466848145 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.464975625 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.462904854 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656242693 seconds)
  done (took 15.426585842 seconds)
done (took 624.564059669 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.776669017 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.4883727 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.659571031 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.486256415 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.283790341 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.48743898 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.486164423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.653937243 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.398822521 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.65574436 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.711564303 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.483813919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.848837046 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.48393056 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.73451411 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.583000421 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.325565134 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.444046694 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.796157831 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.040036481 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.733658766 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.924034636 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.648823774 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.390222429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.854730751 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.929011098 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.144474896 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.318077388 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.484419993 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.79488237 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.115443399 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.399127084 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.54265918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.523995478 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578232137 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.562673396 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.373985368 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521592883 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.661225401 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.691442567 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.050266023 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.210960689 seconds)
  done (took 96.677563474 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.456723502 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.45826122 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.454309418 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.457814111 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.456810892 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.458332355 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.456220305 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.456989866 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.455811837 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.456100882 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.455082814 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.456536167 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.457775309 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.456936862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.458200573 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.456254119 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.459528788 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.457868241 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.457939122 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.457678124 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.456993345 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.456581881 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.45776183 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.457355825 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.459022794 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.456446485 seconds)
  done (took 39.284104828 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.46886833 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.710711449 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.87235826 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.475503702 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.469155765 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.472848127 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.545057936 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.470221989 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.47133413 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.472151996 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.619895205 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.470164425 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503028308 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.882163417 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.472877079 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.469938091 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.470485811 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.469567165 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.717469344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.477303299 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.548530587 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.469881851 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.545394217 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.480769288 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.472451042 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.471253467 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.474018356 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.963753813 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.472601476 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.620955239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.231304231 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.543433897 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.922866148 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.88825807 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.23731356 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.472007578 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.471508215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.624736125 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.47307184 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.470972583 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.545896392 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.474017719 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.887363489 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.096420994 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.487831537 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.47214889 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.987222663 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.624960586 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.709879461 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478218109 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905930799 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.475813622 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.473758148 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.471049034 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.706869459 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.477904338 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.471343658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.995518159 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.475896451 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.546906895 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.47143489 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.47246411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72648315 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.471068456 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.715594734 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.470001376 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.480531873 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.474665969 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.886901516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.47585191 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.109837576 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.485584968 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.472468974 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.621455099 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712627671 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.016889347 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.476391454 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.729347584 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.934090721 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.544566937 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.475699683 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.95417192 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.548466452 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.477649953 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.475565074 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.473021605 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.474829262 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.517887283 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.543855867 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037068416 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.098685379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.013159115 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.550890082 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.487461366 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.473354256 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.000000433 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.47672488 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.474637632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.881891571 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113183791 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.488696553 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.481706501 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.100302329 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.490679248 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.549941358 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.479088038 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.89523627 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.476165102 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.519296425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.474160476 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.481330973 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.475454028 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.549598748 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.476982871 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.474854955 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.087526031 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.64588841 seconds)
  done (took 191.447903333 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.467087696 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.480971264 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.472706701 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.46683697 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.466486734 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.474435779 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.469268526 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.468189505 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.47392846 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.466243299 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.469388181 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.470399403 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.468988002 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.486666436 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.476472958 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.475147676 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.08001452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.468877249 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.470857871 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.46750257 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.260101045 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.471116641 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.470874729 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.466961405 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.469618245 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.467768581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.479162979 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.469008613 seconds)
  done (took 156.000641892 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.476968457 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02820249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.477779427 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.603741608 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.496087419 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.475298141 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.598687436 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.531246394 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.477046782 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.475126975 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.474768099 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.772984122 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.478230448 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970606456 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655595241 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.603765065 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.980295024 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.47703679 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.474876997 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.474412768 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.604529115 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.483481853 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.773635195 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030448035 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.478219673 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030161791 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.466848454 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.475798423 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.474076591 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.030407671 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.477341326 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.775306959 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.550721205 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.534524926 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030286426 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.972567398 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.971796745 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.617073181 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.476762123 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.476312268 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.476061901 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.466630874 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.032093719 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.480092514 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.477137381 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02545202 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.493160147 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.477019177 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.485035047 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.476541556 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.534881157 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.535749805 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.776716106 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036729715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.551066111 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.499474983 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.60354476 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.869685373 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.481307167 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.981065954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.465551936 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035372731 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.481848961 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.466743849 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.477700515 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482839522 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.621211838 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.605186819 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.982668599 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479669826 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.983079399 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.6228771 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.477539667 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.477359006 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.481081884 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.035596847 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.979657589 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.622201766 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.608121365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.664748677 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.469134244 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.479461125 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.468636344 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.552378522 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.479964233 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.038777209 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.978631999 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.480080859 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.480591087 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.480786761 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.479503778 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.648598292 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.038382402 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.554742105 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.968231586 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.791915234 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.781045465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.479169457 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537879616 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.478885508 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.783579057 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.483415785 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.53458313 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.938313393 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.781048095 seconds)
  done (took 174.1407079 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717107048 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.615153363 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.565052896 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.589773761 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.017435066 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.032249346 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.655802166 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608972344 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.586492902 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.71872409 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.601149144 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.572150784 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.661907878 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.55343854 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.195671038 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.545421405 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.571725096 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.616238423 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.589298005 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.507678701 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.102732721 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.757242326 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646882604 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.5224753 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.572663944 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.233796662 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.014681967 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.001468853 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.642739872 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.697484509 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.003435007 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.576673715 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.431642827 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.141675345 seconds)
  done (took 69.278868713 seconds)
done (took 728.223638414 seconds)
SAVING RESULT...
DONE!
