cset: moving following pidspec: 570
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.98158332 seconds)
loading group "string"... done (took 0.507673211 seconds)
loading group "linalg"... done (took 9.351222488 seconds)
loading group "parallel"... done (took 0.16843699 seconds)
loading group "find"... done (took 4.078691481 seconds)
loading group "tuple"... done (took 2.052350205 seconds)
loading group "dates"... done (took 1.383516492 seconds)
loading group "micro"... done (took 0.19371258 seconds)
loading group "io"... done (took 0.512903954 seconds)
loading group "scalar"... done (took 56.904341977 seconds)
loading group "sparse"... done (took 14.150570032 seconds)
loading group "broadcast"... done (took 1.331041607 seconds)
loading group "union"... done (took 10.422331065 seconds)
loading group "simd"... done (took 3.611934707 seconds)
loading group "random"... done (took 13.561043861 seconds)
loading group "problem"... done (took 2.22542282 seconds)
loading group "array"... done (took 24.390466078 seconds)
loading group "misc"... done (took 1.161816735 seconds)
loading group "sort"... done (took 3.833228919 seconds)
loading group "collection"... done (took 22.151574541 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.68382773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1469548 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202281511 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.207773959 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.282705514 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167754803 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158963646 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.173718078 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.684869835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207395004 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141053995 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439771961 seconds)
done (took 6.245548127 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.449319335 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060298602 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170757028 seconds)
  done (took 0.933653536 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094089965 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161882892 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111054749 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096843034 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096768032 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.175215229 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095703937 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110732689 seconds)
  done (took 1.546720346 seconds)
done (took 3.719625576 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.545605669 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.048432055 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.580084272 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181917151 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313507271 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.314881856 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272385258 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.224882333 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094922348 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08680054 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.191963676 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.434996941 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.421192147 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.012267146 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068951091 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096134638 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.154544388 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.856108419 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081809135 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.10999614 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.536599278 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.213510319 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117618114 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106800745 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187528414 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135144256 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142646398 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103926318 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.73451054 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136578502 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216650594 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085735056 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140700707 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166878682 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.225536082 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111136762 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.824068256 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203136872 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100737258 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102535762 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.73050674 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127834469 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207186807 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107792102 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070088332 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.16702726 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116868689 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080962526 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095654247 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104283347 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171111361 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.517662993 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108455243 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19705228 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095379823 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.75349132 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099715835 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280566567 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127608834 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096496545 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092059028 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.092736806 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169698518 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097298621 seconds)
  done (took 21.124948782 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.175999838 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.193603382 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080476993 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.16520868 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12974689 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101474899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091998476 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082258081 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133904825 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185907257 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146964025 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.197233777 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078699917 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092643252 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171772369 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23858731 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128331167 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105945378 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091066895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.114818642 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130717406 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115105248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.100332738 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101323036 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17452757 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207847773 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112884393 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124902937 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092704191 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102442384 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145260755 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154226852 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096313713 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090348394 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.196948085 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110068667 seconds)
  done (took 5.488864412 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.237040149 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105732149 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250312146 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201053788 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.156386087 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185548079 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.179096458 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305222142 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.304858712 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165152004 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131703163 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098639831 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082367366 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08181811 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.180946785 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099948166 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.831899961 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.17527398 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16989051 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167578583 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11751847 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100092008 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.713549072 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103257793 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088033635 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097423701 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080758707 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225311933 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097811962 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.495005494 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086223731 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119263988 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115582244 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213571279 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12933205 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085633496 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112603709 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125403202 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104281015 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.201270209 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122087469 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080230282 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081010358 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.103711873 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132856574 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118768011 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110107758 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111150043 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.137187832 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090741417 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113357927 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.086656369 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195309597 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149317028 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10613232 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273752534 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131290382 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104425018 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112315079 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.805886132 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136477436 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.089272617 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09690101 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098289392 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081209648 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.818676393 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109820732 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.382181516 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084685217 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162645932 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098965516 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120636572 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08928317 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104316514 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113652957 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088954969 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098298778 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089639581 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082037305 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108526066 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11359311 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105096326 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083373008 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150350974 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113630267 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112155366 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126085248 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094496488 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089123835 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131478505 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08506108 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108289382 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170943797 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120089805 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113306649 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117679877 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145988236 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09270962 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086269507 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.267044522 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085697477 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124075965 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10200341 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128886592 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103696548 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084308006 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104811824 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083053759 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083187069 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162914827 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091140675 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084178369 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108035323 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09619448 seconds)
  done (took 28.47842753 seconds)
done (took 55.791742097 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414096462 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082600395 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081219816 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102707774 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082963913 seconds)
  done (took 1.543894937 seconds)
done (took 2.292777676 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.308078381 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205346085 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089821037 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194185613 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089435718 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199902343 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186248506 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104614318 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210847871 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088851826 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.195299806 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087354916 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108679284 seconds)
  done (took 2.850473112 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106680924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108819179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104962732 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123698259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089191911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104994018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123254695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111195908 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10335239 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115558117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090625704 seconds)
  done (took 1.937136366 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103025003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106924365 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09452824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118971579 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089921358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101937016 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118422052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109819265 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102219209 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117346868 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088579829 seconds)
  done (took 1.91137388 seconds)
done (took 7.455071421 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208956836 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.984893354 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167580274 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247952949 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34844854 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300714378 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.612413387 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202972897 seconds)
  done (took 15.967261946 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.122055068 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093254034 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111585284 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.177852953 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.117293125 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092013816 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096838779 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113596847 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098739104 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097592484 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098355762 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111716019 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.0945902 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093299029 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111732837 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09754123 seconds)
  done (took 2.552490787 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138753648 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119168201 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.119173082 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.102594447 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09673405 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.120166525 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104671566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.12004954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097680514 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098056415 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121214478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100364556 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100003065 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.11376034 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101738067 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123530231 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113887476 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102996127 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119100313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117682014 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.103173775 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100121215 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119375697 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101772663 seconds)
  done (took 3.503177542 seconds)
done (took 22.78538676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151191957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104814854 seconds)
  done (took 1.02223997 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166924619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184618295 seconds)
  done (took 1.11779 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116010172 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095116654 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139352275 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106977579 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093065307 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110833358 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119105108 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111009705 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093947474 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095640282 seconds)
  done (took 1.852132173 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09867522 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097660145 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126268145 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.170740926 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120380506 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096920375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097177224 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114997492 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098856201 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095746518 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117565725 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11333628 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097056243 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129615855 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098616965 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115580325 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103702992 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097677723 seconds)
  done (took 2.762751404 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094927913 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094054511 seconds)
  done (took 0.960272609 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097188519 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093557834 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095587672 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113619737 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092984102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093392837 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11060703 seconds)
  done (took 1.470075581 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.532247075 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240984631 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377665844 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073004722 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125280816 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.326509614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106623289 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073197325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092942742 seconds)
  done (took 2.75502194 seconds)
done (took 12.713978003 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094248084 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.443747247 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637096076 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.135486121 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094017601 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.150061239 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.334785787 seconds)
done (took 2.673089999 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357503404 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.165596954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084488407 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095735588 seconds)
  done (took 1.479165069 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085670072 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102381501 seconds)
  done (took 0.97214742 seconds)
done (took 3.234904989 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114854381 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091000318 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.110415134 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091960272 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.092090064 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090688377 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.110463785 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091699616 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092142385 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.11152771 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091140912 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091479601 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091187803 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109254303 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092149807 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.214800445 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108399988 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090864629 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091694469 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091630717 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.109095056 seconds)
    (22/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092708631 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091597814 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.108433565 seconds)
  done (took 3.289521678 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113962573 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095080238 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113574329 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097133469 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09696495 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113771494 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096700193 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094791448 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114366449 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093844407 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097947166 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.113530984 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093456175 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097233389 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111097847 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097066636 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096948758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112727074 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095238338 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097653634 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095116086 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112084567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097358683 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096792186 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11429043 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097497121 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0940827 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112169509 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098182326 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096633398 seconds)
  done (took 3.839482155 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101821814 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090192477 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092660847 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117624542 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0907056 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093365384 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107027887 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093067938 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094148868 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.0916307 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113252259 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092981263 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093145802 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112117488 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096205323 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095345629 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120056317 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092840519 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092866753 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094933037 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113240794 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092759552 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094004862 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.110596995 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092745823 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089852296 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.111439472 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093421411 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093626787 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092114071 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.113708063 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096315485 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092926708 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120320084 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096505714 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092498713 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.11629349 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089298897 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094354725 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089436845 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.108326464 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092474244 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092025642 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.11701935 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094269163 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093766729 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093165157 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.112102453 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093600717 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094188346 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107864452 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09284323 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095125964 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111330769 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095888057 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090923952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092384278 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107694943 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09442685 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09336494 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106612817 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091796437 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098560361 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.111103719 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109200433 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098695095 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.109360378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095035878 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094017775 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097537048 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.11268384 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105318889 seconds)
  done (took 7.954085561 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116906728 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103290738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112702459 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094862463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094332357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093421452 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115193277 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0945054 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094938262 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116995533 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095520627 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094948842 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113538599 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095121231 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093324953 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113065062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100147516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094687352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.109654943 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094669549 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094992903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098457534 seconds)
  done (took 3.023786342 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.24464339 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099095806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14245702 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125145707 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112201604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124627368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098325446 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099224472 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115527338 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103162475 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103531223 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116516649 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112300954 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120858884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103814342 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105651131 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117350554 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104632876 seconds)
  done (took 2.942051134 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108021214 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095725951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156722508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095935966 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096306049 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11340896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101938191 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1145377 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114926382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095352289 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101573518 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113719386 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097690585 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095889769 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114524291 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095936861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096667903 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113723134 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102514759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100036 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1182585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101873145 seconds)
  done (took 3.140609991 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109008004 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096265008 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130907256 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099171012 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09391656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113114499 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10232958 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09544443 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118489204 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095036624 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096989538 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094761936 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.129124892 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096008763 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100743363 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113050281 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096534795 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09590409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11449569 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096264886 seconds)
  done (took 2.886302508 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.199956305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131519575 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113364764 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119170957 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130800035 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111568853 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138627175 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11293537 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114303488 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139906325 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112052483 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110954564 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139443672 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116469522 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129307263 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121230456 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137424926 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121805514 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112738818 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129112676 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123802764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113524079 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138109776 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111762837 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130023641 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112727092 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110861363 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135044886 seconds)
  done (took 4.319178995 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095491965 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09365993 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093354784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111710085 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093781396 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093306189 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093840532 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112435902 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094939341 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094000844 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112657872 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094634328 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094826115 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092912156 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11272397 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094593659 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09366739 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.11243294 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094854441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09441419 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094848541 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112335074 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095171922 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094879853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111624609 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094135436 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094258636 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092881874 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111636948 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095624592 seconds)
  done (took 3.773863905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109005849 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105894324 seconds)
  done (took 1.017186231 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103679719 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10825861 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.093556594 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112638208 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102119065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094307609 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120733132 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102260214 seconds)
  done (took 1.641158396 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169229881 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.190950413 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100482235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.125486318 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170637295 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182703743 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134493142 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.12126402 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094632086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087286776 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.184799525 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087280016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114828234 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09194412 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095156662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121598203 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097321484 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104581655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121281916 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098701783 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099551744 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119065508 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097898833 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105441815 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10851507 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100151186 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098028495 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.125584727 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092790103 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095225067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112568061 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095876455 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098300358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117779236 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096944631 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.19293294 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102621873 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091484694 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115840443 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101610964 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127670957 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.116915493 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098313245 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093612803 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118011802 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100782721 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099627649 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.114586549 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088519127 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.092092636 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.113888992 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090604398 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095785508 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11367942 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096179517 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102219885 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.11537437 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092443002 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09158745 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109270435 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094023057 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091937178 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114970773 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.1001941 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096361729 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113492932 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095221422 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096238901 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096362381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.116252533 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095021007 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110719819 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115855411 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101281167 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100285087 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.115434088 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093479232 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100606629 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112736876 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09731405 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100635643 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.143033138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098131086 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090504088 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.110257178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103268299 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097503991 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117463252 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09011268 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103749098 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.116764503 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096896269 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088975347 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111507182 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091852336 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100188333 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.107534361 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096483953 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094994397 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100599901 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120040158 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095204772 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097552508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119866809 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10230938 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09355994 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.178863447 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092699703 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.111326387 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099177207 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099779088 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.11033219 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09647058 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094316373 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112946343 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09210913 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101275103 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114798423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097580721 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100556243 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115606278 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.098093472 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097407126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094874527 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110403978 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10177442 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105132564 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116510513 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098909247 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096301839 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.115641575 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096197859 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100143167 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111469711 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101937524 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093144233 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.114632779 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097786754 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101091702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114433792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.092150986 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095275775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115254652 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095971572 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098726323 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114596636 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.093768897 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088989772 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114883639 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09205654 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097726162 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104166089 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111717455 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098319922 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091701897 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124860059 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.095435675 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101456518 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117805167 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102546876 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101466923 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108637262 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094026047 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099092877 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116638983 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093679696 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097725935 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114331915 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103284158 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0893963 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0998155 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.107614108 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093696439 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101399564 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.118508253 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099079327 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091627203 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154158282 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108453317 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10098695 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.115781972 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097214372 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100249953 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114810546 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099840669 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101744604 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.121465472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095804005 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094020637 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122261132 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093094645 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099694548 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112700339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098456699 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089640324 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097594887 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107784773 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100882346 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097211526 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.122354823 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102730261 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098838757 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114548119 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105561719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092616568 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.1196351 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089771439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101101476 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.125482575 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104198994 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102136875 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116779433 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094484441 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097398887 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.12526971 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100076515 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097738672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09699572 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109652651 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090788664 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10187859 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.119269658 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096503234 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09610558 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116998593 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099788867 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094150864 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.109875941 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102782213 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10034521 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111260018 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097844887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092821059 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113872643 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105041194 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08904005 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.112942895 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099003499 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101399955 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095724019 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11635213 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099595907 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103165129 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.120826189 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099849014 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094192813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123755836 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105260097 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096265722 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112253387 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100411474 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090510668 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.118196528 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098197215 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094245241 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092628958 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122897857 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103164448 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102922507 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114605649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10019667 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102335651 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122371995 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095032828 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1028121 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111837555 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08994804 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093245388 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.109181282 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099100809 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093699764 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120929142 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095117952 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096177269 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.120489374 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099497032 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.095304371 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.121596843 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108007842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091206135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108737574 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094648464 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097156289 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.113407075 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09344492 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10047223 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118264156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101520601 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11061925 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092718454 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.117048345 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102369736 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093880873 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.123116029 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103283227 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102084058 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112714215 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102329647 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094657297 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120454691 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0919293 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09723852 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116062512 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096896765 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094690781 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11513695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092889454 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090610874 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.113390159 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104232362 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095570942 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.121675103 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098299836 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.095630027 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093563388 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114487097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103904259 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096016831 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.124866562 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097976422 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090397592 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.111854311 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102710049 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096772531 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.123917462 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09339569 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101017337 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124138446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101180609 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099134394 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105351175 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127025048 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103304325 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101317269 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.110729891 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095771579 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100988827 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.118299172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101089561 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09972117 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110862916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098991573 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1026519 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118434698 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095736966 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090867053 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.118280222 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104099555 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100794017 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101739183 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.120304488 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09909177 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091716555 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121098171 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102309758 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097627522 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124098729 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098153 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10169792 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.114108634 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103533809 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099940075 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.111614586 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091652724 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095212768 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103567591 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.111228014 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10184149 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101841527 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.11422812 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095510265 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101850782 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114516539 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101290558 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10199881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.116995496 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108327842 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098670032 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.115787406 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102470475 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102712154 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.110928204 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096973945 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097238077 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104390006 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116402916 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102656253 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096456187 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123199054 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10096664 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101984277 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.124483721 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103053843 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090388148 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123974649 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101280867 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099873853 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114966841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096462123 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092161677 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116724423 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105376258 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094196146 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106316845 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.124965924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096310622 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09515329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.1231543 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096747586 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104077428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.115394731 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099141175 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091283055 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.121230349 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096492253 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103254296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.114603657 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091961454 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103335097 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.124252549 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102076106 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100085885 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.125037937 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090921027 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09092583 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100601876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.115721321 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108324449 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099759008 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.117113476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096116195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099722546 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.120929495 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106056439 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091213359 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.115679558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099142844 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099244831 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.118233752 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092947025 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102309155 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115895595 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099112864 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095446801 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112320956 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09641952 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104605254 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11611829 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094335516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094880902 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104241241 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.118011127 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.095047185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090554487 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123736805 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099781199 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104958744 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115707248 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098612836 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094578554 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.121278496 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104559448 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095922445 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118318156 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.096203752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103579747 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123669875 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091719999 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095486972 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129424078 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102950601 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099706688 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.121171311 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09714626 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105922174 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126254734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101094092 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091926917 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093212929 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.117268167 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092308904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100279078 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124872598 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096658969 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094102415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123224756 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103157286 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100825984 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.122272686 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093014558 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105228425 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.095428832 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123082393 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.09226307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091184219 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.121655005 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102789177 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096498689 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.119135414 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099590812 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100323983 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.114034417 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095897955 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102205375 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123820009 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104005992 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101109279 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.116339981 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101053041 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108763007 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099765035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.118783044 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10467885 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105079808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119660717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097020238 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100544067 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.126169641 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100475799 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105204677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117413503 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097492816 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105033502 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.126751372 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108299579 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097075311 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.114375847 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102499774 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096945854 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.114289735 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.101580336 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106094358 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.126779875 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.098938954 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096400105 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128172011 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104136098 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098906092 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.117245801 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.096458975 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103964962 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116402431 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101958637 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.095742111 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10497365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.128694747 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103874656 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10759577 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.114217519 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103449602 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100810214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.128226984 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099845046 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092399827 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.113619385 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101636244 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106361126 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.126785211 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104106933 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103579929 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10331478 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.120968453 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09885764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095344887 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128629612 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10413778 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099805644 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.121882663 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.098032499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099914125 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.120841941 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105927486 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10477326 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.120875146 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109637383 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105349306 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117998863 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.096152459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099245142 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103179208 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.120189587 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103970752 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095423507 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.114278509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104748896 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10686095 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119748108 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10679641 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105637781 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.118092028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101051108 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10721883 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.125306711 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100594685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.099429962 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.123411259 seconds)
  done (took 63.899922087 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14967267 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107287653 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122417136 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101429304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11935716 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124338959 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102473431 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102811651 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124875193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110937554 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101752031 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122356177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116830584 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143921129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120110036 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111456763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12174849 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102458965 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101062943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123399832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116003035 seconds)
  done (took 3.297082573 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119035203 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115554697 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134346146 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116354602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108570973 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133565613 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11302781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133443541 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115316119 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109657739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13791985 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112284626 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129852491 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109455376 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10901979 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133051168 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114989238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107303733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133898255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111742518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.131846423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113976166 seconds)
  done (took 3.500260426 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132445454 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104588968 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099495514 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.123407513 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104940335 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100952588 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.126106635 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100922219 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109986322 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11697794 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093798357 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096717803 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09969022 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122775435 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095222498 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100521033 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.133070143 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103455667 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106660945 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.123052273 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092405426 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101436134 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101307976 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113143586 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105823478 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105627087 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124766613 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103776835 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09116921 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123907865 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101581842 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094787331 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092459526 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113722697 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091931374 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104164149 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12502487 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101726621 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101733655 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.113316156 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.103240768 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105937932 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091985254 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123688541 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100753247 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095097228 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124424895 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101005012 seconds)
  done (took 6.002503503 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130175949 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159557831 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105104305 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129740253 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.138871454 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11117512 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10296056 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130481103 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103381681 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127571778 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116645521 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115149616 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128647087 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108601937 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.105801818 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128473353 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106297949 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102625527 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130573822 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104834163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.129252065 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108158206 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114292129 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.136524221 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107777328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103631159 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125904091 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108184913 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113783658 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131072899 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109091992 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130082101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116387701 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107137076 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126866595 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106651757 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.442676926 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.128278536 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106664704 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102047577 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126908263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108660491 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10664361 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137824925 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106973935 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106631331 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12701379 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104153566 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113046224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127910612 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110658569 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138049867 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108916493 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105966815 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128664566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116395738 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105643023 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.126655258 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105965563 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113959274 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124880415 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107889944 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.136903313 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10621688 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110488767 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.136826768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108007073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107172177 seconds)
  done (took 9.302262235 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135145136 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10967523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139604394 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116910298 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107533855 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.131196377 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108757444 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.130017877 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10950745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113744106 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128820618 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.249361264 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.10661929 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113747506 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13089396 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109270168 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109193588 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13089725 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109649467 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110110708 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130783913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117147558 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108838777 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138676323 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120079708 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127092463 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109439087 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110294728 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139695172 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10930933 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141543744 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109624663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111519213 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.140274046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120147342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108152763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125176509 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109639371 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109121041 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130992434 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106170015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13904748 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110329208 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105446706 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130159199 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110509781 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117830878 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142726863 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114615752 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135434905 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108926118 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116503995 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131303755 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109823107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116408855 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146609773 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117718608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138264344 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109359885 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.139338914 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118804994 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12262029 seconds)
  done (took 8.475845613 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10240526 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101549278 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100718765 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123279148 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101549243 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101562428 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124356562 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103211329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102827059 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101661201 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123242127 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10316255 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103003566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122218517 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102570203 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10126532 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102458625 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123567782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102617776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102476084 seconds)
  done (took 3.022247394 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111459033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119423704 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.126923437 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11009351 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103845246 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131829188 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105723239 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104231109 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103126156 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.128182018 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112042014 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133822181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104927838 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109975644 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134764255 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110498879 seconds)
  done (took 2.726146 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122683198 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120295619 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.213169161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10631944 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.127963735 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111936751 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104629957 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129587275 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104586431 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108442767 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.131685614 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108456158 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104469597 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126140364 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105149402 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107123299 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10312199 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12873345 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105673633 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.217204243 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107774333 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106037403 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129323141 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107281682 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105206765 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131530708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110698061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103391096 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129560207 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107101429 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10562576 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133436901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103951206 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109468474 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.128508996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105744906 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10480467 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.127787348 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108472421 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103981888 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128585201 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106541498 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104763852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127637938 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104134203 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10637775 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103589834 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132864287 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106267941 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106395358 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127558047 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111027815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108974776 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.134950546 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112202266 seconds)
  done (took 7.356708362 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115717252 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106259524 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138357064 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10254388 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106127088 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105346755 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128018037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107337276 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105379487 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.127260261 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105717201 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106957192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129275624 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106917809 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106484791 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128877695 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103268335 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105205365 seconds)
  done (took 2.915338718 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109143694 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10385095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108567784 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127357174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104390944 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104081107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126631895 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103938206 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103002295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126449564 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105027068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105120681 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102776567 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127602324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104767984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104661536 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.127451009 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104470815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104651472 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125930734 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104900124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10436572 seconds)
  done (took 3.321249641 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11529712 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214528321 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111315636 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223635975 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101974141 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124512287 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111806004 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102734202 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.14227891 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10207541 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101137103 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.123421254 seconds)
  done (took 2.45800255 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131851373 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142309563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127389841 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106285348 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113793845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131806857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110668762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108907831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140288656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120901099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133941986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117555434 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117935893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14151291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115252473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13653727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110086338 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108684537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127706045 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125883447 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109588371 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140686252 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10970416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13276552 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109449965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117578583 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139540643 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120619077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132038196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11958534 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114361536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132360302 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119200754 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144464561 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107131695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117473197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132390918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12460311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113908002 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141108042 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10627439 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135193214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118043177 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114527673 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140462452 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109811728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137586922 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111639632 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110396396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153084955 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115319196 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140098555 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115129952 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117732178 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140634938 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129388828 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144269967 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118671056 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136332411 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122155406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117932561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138357773 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117818811 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143716193 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114893863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117798005 seconds)
  done (took 9.099872556 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144771651 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106985618 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133009338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122320004 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140206119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110848776 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109903193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133592371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109658653 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106197753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175091282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111363455 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140436468 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119210677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11064942 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133781301 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112209987 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118086565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130940654 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132304766 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133902155 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119819947 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118417368 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141793753 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121096446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137422184 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110155286 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110108313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132189407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11227243 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138757984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111226169 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119289121 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128471235 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119923424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110710926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132601642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115878294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110159324 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138507371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119236596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148106226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110703206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110662994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145410314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113201535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13373677 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107856668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111534819 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129474437 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122809807 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120854345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144618316 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118403932 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133602455 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110880155 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110817102 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133752519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111405672 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115193897 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141273144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110772477 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153897665 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110802812 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110795951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140385508 seconds)
  done (took 9.078183196 seconds)
done (took 173.067852501 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176145106 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216485541 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19855545 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1651707 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096746951 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.168340229 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132214311 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202162865 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096853611 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096080992 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.120181646 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098687451 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.208322796 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096186578 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120057777 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099122739 seconds)
  done (took 3.179025705 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199575845 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34831957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136503163 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10154058 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103531311 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101292591 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123088807 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104845337 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101799671 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.132915548 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102689132 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097391096 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131510549 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098412693 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102142859 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123215336 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.1100286 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101209331 seconds)
  done (took 3.216748351 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122889235 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154396596 seconds)
  done (took 1.172342105 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132823588 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220723763 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300020188 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173354785 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123087238 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14286774 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152607073 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137941241 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19203637 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137976276 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115278572 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099063576 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149232833 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107555868 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.141647185 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100535809 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130803516 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139710684 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116106769 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103077776 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.148825613 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106182203 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107511769 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139160845 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183007679 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137669906 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106486699 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104154159 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126360619 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115814202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131339807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118149047 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114066513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183086912 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.129017532 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158034126 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.13176293 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102991538 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115719443 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124620228 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106198249 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105506847 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138967523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100409359 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105108247 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131774141 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106425083 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105444754 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.134342816 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110176466 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134449113 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110388423 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180154337 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109660234 seconds)
  done (took 8.074543466 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.887969211 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150271788 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10168459 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.008558477 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14640057 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114439408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.851710889 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14976552 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258190444 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901557431 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118390747 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131860553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243478822 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25940202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28911555 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363830749 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.743257777 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114081956 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133981556 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165728357 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106871475 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140889726 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118137329 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517464387 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101454594 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100679865 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129758381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110028255 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181252618 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103266995 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128744247 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174566416 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293366837 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212511598 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101202895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124790587 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101658861 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189064582 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277223521 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223839539 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198751285 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09933318 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100671352 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12890585 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116582183 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098743443 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179240225 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194642201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190852186 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107359749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110461525 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133172504 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105897488 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18017424 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099281952 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363021424 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38773238 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102526256 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107916404 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136502302 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271373758 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104182668 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239530826 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147572942 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222795026 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101772298 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.846914755 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187793402 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10218677 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107313682 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129866974 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108981518 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128671985 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170418534 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.49981601 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109473932 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106958417 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123706416 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239147212 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103044253 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101608281 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184419878 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102462032 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131789171 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111404107 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108005144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192090777 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.275928274 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109344455 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131463275 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107378217 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112764559 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.126618646 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237710803 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233226956 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154819858 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231184451 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129973395 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159334572 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188007258 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105488658 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191446321 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.13037834 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113800092 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106204427 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227840273 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159031042 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103498697 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131330069 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10961245 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160817575 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106900474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107674327 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191958307 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.559601315 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18973939 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099217412 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108094956 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131724193 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160414989 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13232966 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268935912 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109334367 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189333644 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106805816 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122065403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109806112 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182991096 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109583278 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108814735 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130436597 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112341805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284821777 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226090805 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110735353 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255014434 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.204530513 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108273477 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194387864 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108298678 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192294318 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135469552 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106797516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10378072 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832274495 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138063779 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108543928 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106715437 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209809283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102401781 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128465328 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10271493 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102786843 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829404225 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130552636 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100770614 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104570425 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129872167 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109407345 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108757243 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132778588 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158117906 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.27191147 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11110099 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106826836 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12567195 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159355833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.127934401 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10339825 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102999206 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125663897 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109695535 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107975221 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128364777 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170199071 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178842829 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232468676 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657568218 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.128518397 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103277073 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245385547 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10416886 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.354769059 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109423639 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237497657 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187052201 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100458158 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364682459 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188478197 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209033133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105965162 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193406073 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100124666 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13069034 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158794463 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126326442 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110108457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181185504 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112341979 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110340794 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.306186465 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103157257 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256024992 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100770991 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191099386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104108414 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109436655 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35379107 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103833107 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114968623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181197359 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106865657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127912944 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.645926397 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104226779 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112531185 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1309971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237970043 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188604392 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109223065 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110232346 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135128842 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183571419 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21068289 seconds)
  done (took 48.157628239 seconds)
done (took 64.694495564 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262676888 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173002269 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.377731034 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15513461 seconds)
  done (took 1.958026902 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271062816 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.172074652 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.255388452 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099768538 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.262584022 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100403745 seconds)
  done (took 2.086581689 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.182505864 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171949663 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149730148 seconds)
  done (took 1.43087177 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212762765 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212256467 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.357309766 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264122746 seconds)
  done (took 2.056996241 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.28573223 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118049434 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.127435203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238223333 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.253378694 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211211421 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125725379 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177153619 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131334463 seconds)
  done (took 2.631241733 seconds)
done (took 11.089853571 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.28211511 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.212891312 seconds)
    (3/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.406248875 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.402590608 seconds)
    (5/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.27964909 seconds)
    (6/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.136804891 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.225914274 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.29398443 seconds)
    (9/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.264542393 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129300372 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.22653067 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111950795 seconds)
    (13/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.310440089 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.245452798 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.28761072 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.167240494 seconds)
    (17/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.309000927 seconds)
    (18/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11276148 seconds)
    (19/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.179747929 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.245457006 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130995058 seconds)
    (22/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.325640725 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119860288 seconds)
    (24/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.145922902 seconds)
    (25/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.26022755 seconds)
    (26/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.115253701 seconds)
    (27/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.24593127 seconds)
    (28/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.26974416 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125778621 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105113847 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.19814339 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121326468 seconds)
    (33/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.13244099 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112471578 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113561394 seconds)
    (36/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.137655285 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.286576069 seconds)
    (38/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13855216 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107001975 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108496712 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.191084535 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085235001 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119751555 seconds)
    (44/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.235505752 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.106224857 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130862169 seconds)
    (47/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.137701303 seconds)
    (48/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131392758 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.201121646 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175482867 seconds)
    (51/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199477371 seconds)
    (52/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103255864 seconds)
    (53/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114522154 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.205686906 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19439778 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.242983928 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.193758278 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.204208776 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078604567 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181705763 seconds)
    (61/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.111467651 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108811162 seconds)
    (63/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.176756559 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.198629254 seconds)
    (65/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07980256 seconds)
    (66/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13028874 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.212589241 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082640915 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147666595 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081458835 seconds)
    (71/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.164757535 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112156209 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136991109 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.150399519 seconds)
    (75/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.153918027 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107885606 seconds)
    (77/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.190491596 seconds)
    (78/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19389799 seconds)
    (79/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.148092135 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137409617 seconds)
    (81/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.139747017 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102679285 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.108676437 seconds)
    (84/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086799696 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086804511 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.130841105 seconds)
    (87/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.106321739 seconds)
    (88/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113809302 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109250978 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124505932 seconds)
    (91/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.160293989 seconds)
    (92/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.179034828 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090815375 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.111504419 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079209574 seconds)
    (96/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086233555 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14161663 seconds)
    (98/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.140914154 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.103205011 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114229537 seconds)
    (101/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.07971594 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111413635 seconds)
    (103/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11383272 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114077292 seconds)
    (105/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.108560083 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.087849043 seconds)
    (107/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085671185 seconds)
    (108/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087570389 seconds)
    (109/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108586985 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.155332815 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19451082 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131098576 seconds)
    (113/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086926587 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080020494 seconds)
    (115/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.13324896 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.132760665 seconds)
    (117/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089701235 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106267444 seconds)
    (119/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080706919 seconds)
    (120/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.166868205 seconds)
    (121/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.152315853 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087737285 seconds)
    (123/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119602448 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.1338518 seconds)
    (125/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082463188 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111786096 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079087076 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.131354013 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106053482 seconds)
    (130/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08531392 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.167716174 seconds)
    (132/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.132552365 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082587313 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103148006 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156732138 seconds)
    (136/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078933242 seconds)
    (137/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079439572 seconds)
    (138/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11297267 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.162542181 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.133487672 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082378152 seconds)
    (142/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.106909856 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127510715 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127115834 seconds)
    (145/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081577878 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139496996 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105879502 seconds)
    (148/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079751185 seconds)
    (149/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.0822241 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130232959 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086576881 seconds)
    (152/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114069727 seconds)
    (153/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.082530484 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104150969 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112854636 seconds)
    (156/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10650832 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085460776 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.107305146 seconds)
    (159/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.086633345 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086140249 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105717763 seconds)
    (162/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13851285 seconds)
    (163/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080027374 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087433512 seconds)
    (165/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085604652 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12801043 seconds)
    (167/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081775703 seconds)
    (168/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103779465 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106523675 seconds)
    (170/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127004589 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10690424 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.105510365 seconds)
    (173/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.10930904 seconds)
    (174/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113610572 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087029497 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079344374 seconds)
    (177/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.13624092 seconds)
    (178/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129027277 seconds)
    (179/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087804411 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081365984 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.128790669 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084420789 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079936086 seconds)
    (184/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083004219 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124802392 seconds)
    (186/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112508696 seconds)
    (187/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082492139 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106339967 seconds)
    (189/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112627947 seconds)
    (190/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.107567197 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107942246 seconds)
    (192/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08247012 seconds)
  done (took 27.57395444 seconds)
done (took 28.50910432 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228733203 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131997948 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113354605 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113348268 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233925551 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120697002 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.157231233 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115235758 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123554155 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139589544 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103798389 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126775022 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13834292 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20841123 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142829287 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105800078 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104067239 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.151140881 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128836569 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129646538 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234390486 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106614434 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.150548369 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10530362 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237304701 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106545289 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112654537 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.14035239 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127270649 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114067966 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139644446 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104688672 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128673511 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15462388 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10531869 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113226671 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129750237 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087190837 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11405939 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.139734741 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127999917 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114290961 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137805919 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107258443 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11449212 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.138073675 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106729469 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118082556 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103231765 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.141299101 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10723109 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129272117 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.138420097 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103719921 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102986247 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129700197 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125565187 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104995617 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.152774024 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105146093 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106120777 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129525609 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116941091 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104213407 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137340772 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.105487443 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113839098 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139348436 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.114251431 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107523116 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104276222 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.138343642 seconds)
done (took 10.264916583 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110304764 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149624249 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235501254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237692082 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132891565 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.149642923 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11928547 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128658038 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143710012 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123990597 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141118395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162071408 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.243117836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121254149 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120566833 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143373775 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116081276 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114041628 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238366359 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.159150358 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13078704 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12089329 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15863591 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123336483 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107745685 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158559321 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112508685 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.140890964 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109894112 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1270292 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.154561716 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109065096 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112529131 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151110459 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126414372 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119311975 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14642184 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118074018 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109354214 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133251945 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118152712 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123661149 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.135278282 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121856315 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116384512 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148664054 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117163625 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121469592 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.135774261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116822813 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110300391 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16064344 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122335366 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124200028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.149021958 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121242698 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.147255399 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12257768 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112257435 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.144930068 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110712618 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108501318 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110194374 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155482297 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112228927 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.147511667 seconds)
  done (took 9.938832869 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128558934 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13854811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145579777 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120680714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113944492 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127824018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103313107 seconds)
  done (took 1.853317592 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104138692 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246141375 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217066178 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244772427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.243116166 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257105837 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128396364 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103114784 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.168347382 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114738112 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248012003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276428429 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114577458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.147395241 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.223118758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.13245957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.249936364 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10596836 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119625737 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248475261 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122444159 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.164916114 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119415966 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104322564 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239911272 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133855531 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.297956428 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124196576 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114508293 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.146243541 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120952455 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.214737895 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215676713 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.147434907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113937369 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.246248458 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.244420843 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.119119323 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.258873651 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110039429 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.244500599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118899559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.147286526 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.121492669 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120485493 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.234869701 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125350119 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.149213271 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.119612231 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.254742706 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116772508 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.246017042 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116724314 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.1458612 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117873416 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120224669 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153859142 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.122766656 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.254874996 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122876443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247427828 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.248457004 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.21892035 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246689045 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157844901 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.219714676 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234389974 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11925517 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143451203 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120751248 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249213933 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119267137 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.145524958 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.210380536 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151473107 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251466065 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.221540868 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145101584 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118901426 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108600554 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.146337831 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106118842 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.240242875 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119747171 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117086363 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152874776 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118753504 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119850977 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.13967511 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.129772024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.145641072 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11920231 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.124590331 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.146036399 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123430802 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.254245684 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118307836 seconds)
  done (took 17.288649477 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108436643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107284385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110121442 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132904033 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108171219 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107127162 seconds)
  done (took 1.676883194 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146048223 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120714019 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154630772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122470992 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19523218 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227674549 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261050007 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142558728 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141097147 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13083001 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253138736 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256666247 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256577514 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124620786 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259988621 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123006611 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264116419 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118491279 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.158082491 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118497923 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119897293 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.151840724 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118853533 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246620896 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12243637 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.15065481 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115869117 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129577852 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15630162 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115872836 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123344752 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147498406 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112994457 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114658193 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.25742385 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.141468812 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118207172 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12321485 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.151276675 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122195246 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.261580626 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118460304 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1263127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151667725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115695584 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.140822384 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124443064 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114754412 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.2603307 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1232241 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.152002856 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122393447 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121126113 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.151276133 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113619413 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1399597 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123337051 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.264777236 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12519725 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112575019 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.170327916 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122688006 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115388261 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.15334756 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122579643 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12224038 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138519821 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123936302 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118335559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.147118465 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1243287 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14633609 seconds)
  done (took 11.988186198 seconds)
done (took 43.716316035 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.698441661 seconds)
  done (took 2.703995681 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.276600276 seconds)
  done (took 2.284677031 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.71099407 seconds)
  done (took 19.749331153 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.448437467 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48643317 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.17736996 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15028834 seconds)
  done (took 3.271647251 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.860064499 seconds)
  done (took 1.890097328 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347941732 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259396851 seconds)
  done (took 1.62214438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769813627 seconds)
  done (took 1.793503642 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.588214753 seconds)
  done (took 2.605708755 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295838226 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.250938889 seconds)
  done (took 1.571936625 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.647389151 seconds)
  done (took 1.67107958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.44863426 seconds)
  done (took 20.479146907 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265273043 seconds)
  done (took 1.293233307 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294262237 seconds)
  done (took 1.32370893 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.747557043 seconds)
  done (took 4.779071094 seconds)
done (took 68.054649951 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122867625 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124584226 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.14859966 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122332873 seconds)
  done (took 1.535882615 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126712957 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122747924 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149694637 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120474721 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127405696 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.147175148 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121490157 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123677685 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119504795 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148650267 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122028727 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120982302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.1510896 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122357099 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118898872 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.151431121 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126555328 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120577734 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147554495 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.123902341 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121721587 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150362617 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124133151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12453274 seconds)
  done (took 4.164366049 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116336083 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112906986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11313726 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136528653 seconds)
  done (took 1.511674488 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129595708 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133358507 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156562856 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128389011 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.135184441 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157933692 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119546511 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118110032 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145932875 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13058077 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136509057 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161228429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134704238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147722157 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132346416 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116746962 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121005185 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.160481024 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128944186 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15582557 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122611687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128853267 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151075564 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131365852 seconds)
  done (took 4.313591429 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200105436 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133547115 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180291218 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168519592 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181739587 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.120404956 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14903818 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154433191 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.130241649 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.150780913 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.126226983 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167356946 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155097869 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124636871 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120890259 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152634953 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133848982 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152205151 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169169252 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126940633 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154633595 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133849355 seconds)
  done (took 4.327090642 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123768583 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112364516 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136077787 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110633858 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124711202 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139161063 seconds)
  done (took 1.789854916 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111249576 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106551392 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106563991 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131749833 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110139111 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106391295 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.13048467 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106692613 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107038355 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105351414 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132302411 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105609745 seconds)
  done (took 2.396823923 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20935498 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148933697 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286803661 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37603226 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192988047 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191693088 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289202386 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193503921 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.2092598 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139366533 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217907765 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164916965 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184699702 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190200147 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169759738 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.160658846 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197505941 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210664709 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174121532 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246508621 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161587544 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206625424 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190865529 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180384519 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142917543 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193824755 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122640857 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156963948 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173473063 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196568931 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180434732 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181362451 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143376428 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225055658 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265110514 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212144544 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274199978 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136651981 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203097802 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192626463 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264329572 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170537032 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228262873 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15545426 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160642914 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187595152 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186452206 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186055956 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.164957997 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147031203 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216551008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182538121 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202372476 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165502301 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302299446 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163214119 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145655753 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20763154 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219027592 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202817228 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208918288 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124838309 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205150492 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219261324 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245977135 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145603931 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194088241 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127813563 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166815701 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235102886 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213540541 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161448444 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242178141 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162293797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173309778 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199650162 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159614322 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237447164 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204089775 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121510334 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181453504 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136504941 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126901079 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218469686 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124511148 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246362267 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133221611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341439738 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21029199 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159061419 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193963673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190837497 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16471756 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178611766 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10296078 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144820016 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.191653857 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15980039 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159751147 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157284908 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169884008 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128458854 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154742768 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152348066 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17345587 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163299696 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166647465 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205784595 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133423597 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20954602 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151138828 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.192021662 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198952714 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194571936 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161247896 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13446336 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251627 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171517325 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.167568155 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175411258 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225848372 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178629723 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139044022 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195624396 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195406541 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172829505 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200095721 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168705656 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136827813 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17082677 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17475462 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190784352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161270657 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156787236 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166759942 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223432312 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12763436 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169692974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183224455 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163775547 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12616876 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166297079 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137997291 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143612275 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.178559811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140619684 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183671274 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168485468 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195336329 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160588799 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166442237 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203430015 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133484882 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170295945 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179793509 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120576799 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205794435 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229205105 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130315968 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210130736 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164234125 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212054642 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200980815 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130560015 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184676299 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159296426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124049434 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194139839 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170660674 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194185535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218558143 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181253465 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196390237 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193793806 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152263194 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201313661 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185191453 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187423731 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145852277 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20645889 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171419715 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.151558609 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125957505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156389258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139368855 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132814777 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167850666 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183911437 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195769418 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205643356 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16895476 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167888078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192370595 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155539573 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164422928 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207386724 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139591529 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220011822 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221013169 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181101154 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170126399 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164455122 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.151739333 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128641897 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135822433 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192370043 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139245691 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165717596 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144103217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220679928 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175272852 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17935283 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219894758 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168607398 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228303969 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121649334 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193347611 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170443456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199663474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189322755 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159735279 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.164517228 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224171273 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143620348 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223948252 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198819955 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180923694 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228850325 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193780375 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133479108 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14934308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192006926 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140111919 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193557319 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147742569 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161974574 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156465453 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167072365 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141452672 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220704538 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147572907 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211311249 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158740468 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204567796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126238901 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172647571 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174470791 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178206315 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105779041 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20181641 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228229626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152318622 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186679094 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176270955 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159802195 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321446942 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219166542 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180849541 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168140795 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140015452 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20302294 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16259474 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19504608 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186193063 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173446885 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24103554 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175024034 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172739425 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133261822 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148898186 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181651867 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14104733 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.183990146 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192410862 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147450049 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223998498 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138582652 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200932479 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178802316 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174589094 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152447572 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140144195 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257792231 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20098306 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205466137 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167169796 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194945459 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186798959 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152203529 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128676344 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133534122 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216589258 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131632841 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208894515 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194635035 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184521116 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20400054 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193826564 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14291294 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12792658 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197308993 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151012582 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216564341 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136624214 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167051923 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221944296 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128919287 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132042457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193000681 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316656833 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151064922 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204722184 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107381313 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310296405 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131680159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133945027 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192214956 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173126069 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16526682 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186627764 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20327437 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144017328 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192691353 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137547359 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210350293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213428884 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170213223 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208697586 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148446812 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194118579 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162773193 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205966949 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146868276 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178535001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160705099 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227003626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207807789 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134784323 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200078276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172130704 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202411339 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178132523 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17111923 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18543302 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157448237 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169000664 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168622473 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126382859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162440359 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195175522 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160112108 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179928974 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202249025 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133386835 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159625623 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150383193 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196887556 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142902493 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131608157 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219590933 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130694866 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213474964 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246285331 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133027868 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197771736 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148000071 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132076761 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170172774 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146421418 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163117661 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177180871 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212480013 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134084404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208963836 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168361051 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195961068 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160890911 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175797413 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266626003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1592475 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194340685 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182963087 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199381751 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181905615 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177276831 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202352047 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152775367 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197804353 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181243666 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223364639 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197247928 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170397139 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162107472 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145473502 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139741234 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.16425722 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154926967 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199245924 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144351132 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.170309361 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.170094201 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175654989 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150101786 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142328372 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230590474 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182444401 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191114131 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219218834 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140041235 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208463652 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210975844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130659069 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196691212 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174533343 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175588012 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155069466 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135035731 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16872958 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247360702 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127168464 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162352681 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205616063 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19929159 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17544719 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135503057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210088981 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171490233 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178878818 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128009129 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.184627958 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170104873 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165546469 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129633672 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202788542 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16540463 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196928866 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144649986 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204403016 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198548748 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.153081414 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135398678 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318502526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166342622 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22755579 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138709762 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168359154 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147863087 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189991699 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169322565 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202525825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132248053 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130166115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17628043 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160698163 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168462541 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171660572 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212841436 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163595513 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217668462 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135679121 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287586334 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144574543 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202249107 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118977142 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.16038616 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142542543 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137237149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173865432 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211221302 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220133779 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.195248758 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150653623 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167130082 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130212395 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132113008 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19597824 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155507801 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199547484 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150387264 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.133515153 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143318579 seconds)
  done (took 86.937986769 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173846628 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.224693229 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.192145923 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.255170708 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26364039 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.316566083 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.268776139 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267201891 seconds)
  done (took 3.088329226 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121261775 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163700823 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144072013 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147274229 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112578637 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494147196 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.165094681 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124025905 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164510469 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156949852 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139516823 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.583113808 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119674245 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148094644 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124312268 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138942042 seconds)
  done (took 4.166655195 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.398065697 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.563880523 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.293564162 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292048475 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.274134228 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.215979887 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.816952577 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.210728345 seconds)
  done (took 13.187250923 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176756178 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.173257643 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462998685 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.318748772 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186473826 seconds)
  done (took 2.44795852 seconds)
done (took 130.889740689 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12750819 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126211584 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125656588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158019063 seconds)
  done (took 1.654201153 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1943826 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092841315 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094540113 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122233929 seconds)
  done (took 1.634548791 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.468949508 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092481438 seconds)
  done (took 1.720874552 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156494719 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146935904 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170356233 seconds)
  done (took 1.618967619 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137932683 seconds)
  done (took 1.270395819 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119602885 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131286861 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.281638176 seconds)
  done (took 1.669659027 seconds)
done (took 10.707787148 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123214031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.938069937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436965208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136529946 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716234092 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430479948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.447655823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18090421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178878345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142449825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135653762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693910301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.457204639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88473238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.417690977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910781218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697833362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115487875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149080889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114902091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.421849479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141984513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114821263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115749286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723481228 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424315261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112279241 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.925136625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112430635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116342755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432671788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114406624 seconds)
  done (took 21.187421708 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115382674 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172499582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150759896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115852751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117310591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144180575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125242016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126397199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208964691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113425948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165234884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114446659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119560381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14313647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138566253 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113762995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145767573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116401882 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122137142 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144783743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135739311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112627303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144865895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116350412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114006588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164372927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114831909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.127092108 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143712616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117375862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118984055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.145464485 seconds)
  done (took 5.410657248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161387895 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181880641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151873683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153205704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194360886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116289736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.234034595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153696626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210416419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114333982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136802446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14284777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155156646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114934286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169085121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115324958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116900037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145200289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123918125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115218982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165766338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115002547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115153539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14718056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114527775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167601869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11349596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128839951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143917213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118297419 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120352837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143820188 seconds)
  done (took 5.738774113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128843654 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129875654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136769151 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167591753 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12512064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128122166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.159393293 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125569941 seconds)
  done (took 2.239088903 seconds)
done (took 35.715426888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1393788 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132382945 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135254556 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160395765 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.258148317 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120474769 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.132302236 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120636785 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160383284 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135677352 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115917795 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153204858 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134073756 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124791556 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.257680411 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.129654979 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264910845 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.259974818 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122021259 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129053483 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153692124 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231173025 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.160017291 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121844368 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256840534 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117296045 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253127791 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127051991 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124071222 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144170589 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.229080343 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158431849 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123826214 seconds)
  done (took 6.518776315 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.240432607 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.157034941 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122868139 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123610939 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123599599 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.153073313 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.278836825 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.123327247 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12347534 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.121314988 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.154244613 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229473344 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161050513 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11892639 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124477222 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111494773 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280272608 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.158280229 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115194364 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095348429 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.118754126 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.152841944 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.259912428 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.151484965 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122381929 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122691442 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.15490703 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.129201216 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124741312 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124304162 seconds)
  done (took 5.735585393 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128923271 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13732046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.17173211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191969369 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152959428 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.166306566 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142656435 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138877395 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175405847 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117051344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131173988 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184021295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133574659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126385908 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146715977 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136882587 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138785305 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147800176 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126740346 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13373524 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168424531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13477833 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139022925 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155231355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114991113 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124091205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.157083978 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12738777 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123547805 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.16109161 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118925535 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119737187 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.150147323 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.1523457 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116990383 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160065375 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143516306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128377189 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160601984 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150847626 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119164579 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148543735 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143613864 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.202187549 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119184189 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130993959 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128029346 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161888914 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115779385 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133892997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.189301318 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117782759 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.168744339 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115213618 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115475153 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124037665 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147176148 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121546821 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130573369 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.150256049 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141377764 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123520371 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158621914 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11851208 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128306365 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.145900257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115537231 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12071827 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.174222783 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125457065 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.153942314 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115116832 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.158833577 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129755793 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127514009 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159759004 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115480324 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126922444 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.157684176 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122938517 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127948098 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.149357341 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119978893 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133418967 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.168017314 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131017133 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.128472984 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.161123665 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120537469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119149337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163898697 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118514463 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121709217 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159600221 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116789302 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120708424 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.15959118 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128613741 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114141979 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141586013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149478451 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11699954 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142452592 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.150719795 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121473478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125570001 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.188359515 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116393207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127140626 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.159627523 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116662894 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124063866 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150164266 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115710467 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135514299 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.163884499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125413026 seconds)
  done (took 17.438107961 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.358928959 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.34730685 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190356014 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.43577003 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130455993 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274966746 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.344486856 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.34762921 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116142161 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184303333 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179264051 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313328955 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.150204066 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145007271 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.348350729 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.402896687 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179204613 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15244006 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184948751 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130409697 seconds)
  done (took 6.085393155 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136726042 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152447479 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169765443 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146287191 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126707786 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164359746 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116866968 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137677225 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157928054 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12734883 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118768571 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162331349 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131284719 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133250662 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.162498885 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149156484 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124264538 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.153392737 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139861433 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12109647 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134453965 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142123093 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124606219 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169558347 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136995222 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127443632 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14602134 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123167626 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123870616 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.158243363 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121957034 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134783272 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155812937 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107332489 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128545366 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.163593557 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124046007 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120852622 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121921929 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151511786 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133443006 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13074813 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155256562 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10127243 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136200088 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111124541 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.161943929 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.1305219 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106707997 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.167965264 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129217387 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130839864 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154688463 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139383256 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123215435 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.163750052 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129684827 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.132331376 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1524647 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117015336 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.116759605 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.150544124 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.126384489 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131929501 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127830855 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.166145097 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.134038201 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.146208575 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121636888 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121633753 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119707169 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.162510552 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139261809 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.155038546 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.125279859 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129176738 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125151675 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.126726244 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126823958 seconds)
  done (took 11.993207251 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142424078 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12839473 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164464012 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153969912 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130706794 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152349017 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128411081 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138428863 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130851032 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.170620635 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132176409 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130495833 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169681597 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129494202 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126515712 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.164128176 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132152026 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.185499103 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135295435 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144212096 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163443179 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122016781 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12984288 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.15979299 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146071145 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128041146 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174704212 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131882 seconds)
  done (took 5.234678316 seconds)
done (took 54.15298739 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.298248997 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.505990327 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.279885075 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.278165381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.282057926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.312110471 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.276175721 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.279401453 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.880068115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.247643083 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.278541328 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.276253074 seconds)
done (took 29.37189442 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.324747425 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.414884341 seconds)
    (2/2) benchmarking "String"...
    done (took 1.566757142 seconds)
  done (took 4.162133188 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.268359665 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.268311637 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518940229 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268219192 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.268287256 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.268531277 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.271452659 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289372291 seconds)
  done (took 16.324679669 seconds)
done (took 26.251885432 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.311412757 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.612656108 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.540819244 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.258462623 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.268696247 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.269281208 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.273206804 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.342414403 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.280003805 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.265223954 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.700192979 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.557801285 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.284625967 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.701399737 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.258263401 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.282964314 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.285953019 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.663328579 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.273724102 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.309735555 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.24848565 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.250710908 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.310755367 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.279257652 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.28175407 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.285546821 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.262336245 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.270183236 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.645520449 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.289874075 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.315243094 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.275268224 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.264070287 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.271604776 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.28932192 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.282252419 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.594467573 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.285304755 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.256821211 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.300324495 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.624468381 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.29155087 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.271730271 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.281684849 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.262298065 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.334585338 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.258547246 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.410623017 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.304032331 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.281901341 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.345262427 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.728297421 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.276809543 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.275032423 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.285105763 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.641864589 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.306574853 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.393782068 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.304920615 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.281314631 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.272938655 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.272987645 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.309270766 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.291589034 seconds)
  done (took 149.477244921 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272285239 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.277110234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.275769212 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.278998991 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.276140343 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.277325714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.27273706 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.273005999 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.277287059 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.307399832 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.279335218 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.273728805 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.279359218 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.282969553 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.283702971 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.294600112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.279332871 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.287113639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.284209385 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.275191956 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.282904702 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.277816811 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.292493331 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.275524897 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.298735025 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.375210663 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.298208846 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.303106149 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.287299436 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.272995925 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.297456415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.280616772 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956986105 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.144292718 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.2851851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.320445353 seconds)
  done (took 83.031504819 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274471709 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.275212954 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274962308 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.310126679 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.275850728 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.909978964 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.907147411 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.343374433 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.766320258 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.850475339 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64212072 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.277320965 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370393598 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.289689235 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.275287526 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.276893025 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.373051985 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.301977052 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278942901 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276232255 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916308573 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.292111469 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.313414834 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.46241195 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.292640273 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311627337 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.670159132 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277801895 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312014251 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.618281482 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.329018266 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276752958 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.705200217 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.907554144 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39393775 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.27768478 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312130113 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278069486 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277933644 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.564369878 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276170578 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.276822463 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.280736142 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.277679885 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.019246509 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.281837626 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.91978512 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.281652058 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.354172179 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.28049531 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278074509 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.352497913 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.127462624 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.28078652 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.276350113 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.281848006 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278088401 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278795917 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.313265322 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.358758901 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.276899399 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.282195201 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281693595 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314863499 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.279057668 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.308991401 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278942378 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.441292978 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.342126163 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.497944358 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.920676611 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.283673051 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376818815 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399578559 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.280528884 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.278580255 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279383739 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.278700621 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.392945034 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279160753 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.011310164 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.466261959 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.298065889 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.858015492 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.379347392 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.280709869 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.725606328 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.285274825 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280242544 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.059229081 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37635393 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.279818172 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.279688299 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.279757271 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.016610204 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896996658 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.648109977 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.280505307 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.279965128 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.102300909 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.285709754 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.196778761 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.895497848 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.975387735 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.283389279 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395022406 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.469160474 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.299818334 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.28212222 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.903662198 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.285528512 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.342126362 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.28164075 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.684513344 seconds)
  done (took 388.334144849 seconds)
done (took 622.017349799 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.12780525 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.078305568 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.231475517 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.083752263 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.069453928 seconds)
  done (took 11.772057871 seconds)
done (took 12.953922235 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.484433736 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483919627 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348442258 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488060675 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318604837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.503474551 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.468739622 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.299554511 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.396413479 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.369815229 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395463457 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337913936 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317312484 seconds)
  done (took 19.39298136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576780677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.292999906 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.349770848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55482247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328223257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.587005243 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.622575513 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.293633867 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441634046 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338829017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306311155 seconds)
  done (took 18.874716378 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.580626663 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.293362812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370773911 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569160756 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32888587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57909626 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.624524868 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.295386232 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.460004202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.310392326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305558332 seconds)
  done (took 18.899197831 seconds)
done (took 58.351082131 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.325599101 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389061164 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.323059171 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.307751535 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303683086 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.304974429 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.304883781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302860983 seconds)
  done (took 11.74400717 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.301137196 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.302190437 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.300960158 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.301893096 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.302677806 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.301069138 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.30329649 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.304811751 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.301034161 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.301734832 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.302082279 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.300703216 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302194069 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.301423041 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.301364844 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.302577393 seconds)
  done (took 22.015467006 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.305338677 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.304436216 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.302651789 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.303110908 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302183603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.304009383 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.302474209 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.302804537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.303378642 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.302879395 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.304586201 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.303121239 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.305491395 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303294804 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.305890715 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.306422269 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.303802447 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.305512129 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.308005788 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.305204901 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.310402502 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.303010725 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.303882337 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.304311158 seconds)
  done (took 32.492110098 seconds)
done (took 67.436392527 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.287972382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.294782788 seconds)
  done (took 5.768583488 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.364241738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.361640414 seconds)
  done (took 3.91431529 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.305565291 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.304275556 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.305959073 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.305416532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.305380925 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.305701568 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.30702499 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304769507 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.305753168 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.306965904 seconds)
  done (took 14.242621309 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.305751142 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.305626304 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.305887671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.307058173 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.306034359 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.30563929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.305395318 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.304986246 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.30698555 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.303545319 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.304707905 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.303502589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.305240163 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.306391757 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.306316419 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.305508991 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.305716956 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.306093584 seconds)
  done (took 24.687277561 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.31981109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.323859157 seconds)
  done (took 3.831070901 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.433898775 seconds)
    (2/7) benchmarking "second"...
    done (took 1.347657087 seconds)
    (3/7) benchmarking "month"...
    done (took 1.410102296 seconds)
    (4/7) benchmarking "year"...
    done (took 1.403021268 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.348077108 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.326458825 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.348073955 seconds)
  done (took 10.806234123 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.292041778 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.594473981 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.779276654 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.451428976 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.28495366 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.312481793 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.271616668 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.314107839 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.31438591 seconds)
  done (took 14.803110229 seconds)
done (took 79.241181379 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.292220758 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.331940745 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.319672757 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.311264589 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.603249041 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.352771425 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.295559661 seconds)
done (took 16.698284746 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.275349203 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.285452531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.281077441 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.302227267 seconds)
  done (took 10.33249188 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.293896279 seconds)
    (2/2) benchmarking "read"...
    done (took 1.617298519 seconds)
  done (took 5.099772984 seconds)
done (took 16.624543536 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.308122954 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30861643 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.308412012 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.309737603 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.31089142 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.309063645 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.308854784 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.30824806 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.309291745 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.309351935 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.308549635 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.309304011 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309340599 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308665648 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309449035 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311518943 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.3113124 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308789464 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310833801 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310517142 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.31006945 seconds)
    (22/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.313010877 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.310321139 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.310197248 seconds)
  done (took 32.623584801 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.311268113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.309887271 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.311893331 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.310978615 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.311816516 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.310887102 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.312573038 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.311797172 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.311393252 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.313342501 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311096456 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.312141134 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.310177709 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.311342714 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31072364 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.311767546 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.311419787 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311197113 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310626752 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.311253694 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.311144531 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310852826 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.311503477 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312240902 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.310670559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311795014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.312067706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.312365169 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312514901 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.311304966 seconds)
  done (took 40.536858341 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.317287732 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.319649011 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.313376825 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.312848208 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.311919038 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.312866015 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.313106454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.314228802 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.314104792 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.311562522 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.31176003 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.313330546 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.313813703 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.312110267 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.312703837 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.312456148 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.313939709 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.31528636 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.314005492 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.314719251 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.31510802 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313859344 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.31350912 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.313665428 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.313590631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.313707961 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.313916733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.312405965 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.314835831 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.313942097 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.313106352 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.314545857 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.313356495 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.313211006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.314640641 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.315232954 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.320365847 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.320531364 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.314870613 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.315077698 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.315758962 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.313724778 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.315713257 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.315243932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.313856393 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.314369691 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.31557311 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.314551194 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.314897441 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.316231742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.315003027 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.315328167 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.315847121 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.315099641 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.315219679 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.31613845 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.314888475 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.315249879 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.315581521 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.314964449 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.316875977 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.316498972 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.316022429 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.317615858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.31527947 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.316700832 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.314779167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.31481179 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.313989186 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.316988109 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.31617773 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.315913018 seconds)
  done (took 95.858668709 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.317180675 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.317931939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.315386631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.31597391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316562017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316332024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.317088869 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316457452 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317759271 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.316625396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316710653 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317162649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316898102 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317234327 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318516793 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.318531105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.317244394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317353313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.317872697 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316813146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316077029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.31884421 seconds)
  done (took 30.174597204 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317152297 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318916484 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.315730995 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317890932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321003371 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318291828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.318231183 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.319950179 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318192601 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318494055 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316700799 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318873509 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.319804696 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317678568 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.317891261 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320692864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320209294 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.321530938 seconds)
  done (took 24.936697823 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.318610929 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.319514694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.32222913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.31941729 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.319542528 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.321616879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31824882 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.319880506 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.31981686 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.320363305 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.321427022 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320449018 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.321382038 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320672974 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320758033 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319771653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.320648053 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320778425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.322083496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.319577285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320838796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321781352 seconds)
  done (took 30.249809046 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320437444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320430664 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320220995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.321138814 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321097661 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.320652024 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.321257623 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.320152221 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.322645203 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.319477305 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320992027 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.321980222 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.322990787 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322295478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.322132474 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32190939 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.323297541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323104447 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323814764 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.321560488 seconds)
  done (took 27.633253781 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321813588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322477013 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322178313 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323508598 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322208643 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.322188988 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323181576 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.323361148 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322391635 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.32473949 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324024751 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.323462847 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323145926 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.323452768 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.324583563 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322677753 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325934377 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323003356 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324327943 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322530404 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.325533216 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.324342747 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324250688 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324104996 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.324922434 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323804917 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324143899 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324911065 seconds)
  done (took 38.263422608 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325399249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.324135914 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.323496743 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.324816692 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.325523257 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.325699472 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.32401247 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.325209022 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326659435 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.325902193 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.324755021 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.326465511 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.32447797 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.325385133 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.327353697 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.325568608 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327561321 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.326534581 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324623384 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325944702 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.325125393 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32683229 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.326147857 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325637393 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326562737 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.325904464 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32732338 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325249816 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3256994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.325787242 seconds)
  done (took 40.974838074 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.346106064 seconds)
    (2/2) benchmarking "in"...
    done (took 1.345096235 seconds)
  done (took 3.896785494 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.326006345 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327583643 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.327438245 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.328487431 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.326244731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.326490455 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.327601319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328189519 seconds)
  done (took 11.823844489 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.31816823 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.329704378 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.327657887 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.32903241 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.328067185 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.320676898 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327433836 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.33181327 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.319816395 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.322525181 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.326799724 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.327425572 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.323891537 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322394015 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.323285412 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324466858 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.330264163 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.330487851 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.329784201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329518577 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330512896 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324421031 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326869744 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.331574146 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.321184851 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.333203051 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329471246 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.332877126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322226943 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.327738128 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.324999057 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.334020277 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.33056 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.330098959 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.329361704 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.330214925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.331139461 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331756673 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.331668666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335652743 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330954625 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.331604722 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.325904382 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.327639255 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329150736 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.336562391 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.331453594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.331147244 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.323689029 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.328323947 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338761295 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322060687 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.333800245 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327046636 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.328903115 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334789252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.339519747 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.326414289 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.33264371 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.33505372 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.34383882 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.340623065 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329876276 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.337237044 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332234075 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.349008711 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336482641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.338545636 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.332953512 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334501827 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.334336371 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34409567 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.344708381 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.33829052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334864557 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333009881 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327319488 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336848705 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335577599 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.338335274 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.338941422 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.334698625 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336729215 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346547774 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.329552099 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.337872879 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.333378306 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.334037418 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.326106301 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340441258 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.343939761 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.334980351 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.32618803 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.330806842 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.331604681 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.337565673 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.327357075 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33036004 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.337654588 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.335051607 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33570104 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32939006 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.338885388 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340558929 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333299223 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.33695522 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.342476805 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329222119 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.340434556 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.342328481 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334627167 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.329471171 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.334241465 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.339445117 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.331616147 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.338430327 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.340076471 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.33314923 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.342588235 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.337667444 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338336262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.356034844 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342360704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.336404423 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.331751084 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.348966559 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.33678437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.335460293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.342909444 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.337624782 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.337593448 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.333295831 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.342796592 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331133591 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341883857 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.32957327 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.340553243 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.336902499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337260178 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.333224685 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.337837558 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.335283168 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.337255014 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340049171 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.344650842 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.334601237 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.345619995 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.338465352 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.336679746 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339798389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.343826893 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339156513 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.332843289 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.34214005 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.328629451 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.341118101 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332188951 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.341943413 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340204422 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.339194792 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338736701 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.331209317 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336317685 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.343025271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.337704394 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.339998194 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.343641299 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.34212029 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.340466681 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.330968035 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.343481042 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.329571641 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.3362265 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.347068547 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.339459242 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.339602542 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.3383912 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34648323 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339393928 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339963046 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.334905058 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.341434733 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.344931529 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.342013544 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349004563 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339721357 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.341147745 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.335700892 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.335556903 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342681768 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.334359389 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.351135716 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347394422 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.355538453 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.33841457 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.346010224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.334669394 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.345160489 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.342916676 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.349565371 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.340663099 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342118051 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333378261 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344867036 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.336429354 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.346452015 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.333014815 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.345607457 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.345671084 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.341058361 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343891973 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.336646047 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339787727 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.346521328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342102428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341960926 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.336759941 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.347036645 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.334827843 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.336843362 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.344835811 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.344279445 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345665217 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.352660109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33933725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346800823 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.344272443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.339250775 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.344846441 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.340978977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.342491974 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349588286 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346515591 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340146623 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350335624 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.346536579 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.336611844 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.345650774 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.352289603 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.344854269 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.33913993 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351463654 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.344590794 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.343294727 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.345165996 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338711169 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347563518 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.346708121 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.354145773 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.339392358 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.348174097 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.339492864 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.348615245 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.342089341 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.345769408 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.345842179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349553417 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353702455 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.345444845 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340429603 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.349411557 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.345346662 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.346103015 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339935356 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.354677808 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.347942518 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347865351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.344983583 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343369985 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.348521317 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.338423239 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.349191048 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339968817 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356398978 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.369683689 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350398628 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.352617784 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350955089 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35110823 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.350794182 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343739489 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342991214 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.343879552 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342098276 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.342874784 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351943164 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.339883194 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.351747985 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346612871 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.351550562 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.352099764 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347665594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.341056509 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.351780731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346758954 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.349081877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.33833147 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.349109133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.343075155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350824391 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.34884357 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.342308336 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354935426 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354381362 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.346626724 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.3457967 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.343047129 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.341009581 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.344841969 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.3539267 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.344108096 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.358158388 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.344480826 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349823675 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.345897803 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356338083 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.359536081 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.344175521 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.357029659 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.349072918 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.340862569 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.34560541 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.351936228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.355318332 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.362205024 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.34231083 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.354997916 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350563105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.349729757 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.349753206 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.351706825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350899363 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.350637972 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355853488 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.356092822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.347794835 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353632279 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.361767589 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.351634884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.351436148 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.341505717 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35442803 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.361615298 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.346391711 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.350118692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346796986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.352809339 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.352469181 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.351664575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.35251323 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.351889775 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356103363 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.358220605 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353993859 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.351850167 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.357296186 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364746559 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357568352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.364764339 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.346742164 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.357222838 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.354106218 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.345253245 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.34887936 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.349081294 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.356619647 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.343783986 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.358199851 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.353198106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.349185179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354588682 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.361831771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.344756927 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356400935 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37483433 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.345098046 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35637866 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.351664037 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.346491363 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.359494387 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.353941565 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.34651429 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.351092335 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35304182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362069239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.34769423 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.357513668 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347276852 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357714027 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.353692069 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.3548922 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.354903385 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.353581495 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347041172 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.357237779 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.355039178 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.364269082 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.350871373 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355219964 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.350826613 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.362835157 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.366642759 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.348638656 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362800546 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.355077061 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.34910002 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.355097272 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.361934376 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349967315 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359794177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.348937074 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353613083 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.354908779 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.356846292 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.358324321 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360940402 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.347756894 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.350050115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357449861 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.356112517 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356167631 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.351756501 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.364469722 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.34906106 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.349365215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.35757363 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.350225429 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.361466057 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351720411 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.357442916 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.352625074 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.361962913 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.357759693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.356139869 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.34868304 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.350940772 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.36358542 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364012356 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.358318229 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356506748 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.360340061 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.351298421 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355502585 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.358237572 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.354217627 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.353675064 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.363520115 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.351251874 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.354044255 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.353439889 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359947654 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.362574428 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.362694026 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.35282035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366963861 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.369268021 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367796747 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.351925606 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.354467644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354182068 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.360895961 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.360230295 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.352770243 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367829901 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.36729363 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363212416 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359429114 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.361721903 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.353035733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364408605 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359984538 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.355859365 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.365763551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.355863248 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.368039681 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36017442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.36015109 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.351820312 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.354092535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.356483337 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.359560829 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.363679535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359881218 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.364434748 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.361138811 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366954219 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359769766 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.360603691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.359490095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.353617363 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36379032 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.354716451 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.364413544 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.363794692 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.356150877 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.365915786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361026186 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35855758 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.363100192 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.369277938 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362148407 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.35513977 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.360172672 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.36769358 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.374327064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.362491608 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355697652 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.359821811 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.367882745 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363109393 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.362164721 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.357850262 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374980859 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.377559966 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356801435 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.359977965 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.367600733 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.375468171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.362352438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.363828413 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.359732396 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.364093639 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.370565621 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.362052087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367584401 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369297486 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.359316839 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.364750326 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.358665048 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.361587622 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.365903555 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374684937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.365204764 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.36034826 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.378845751 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377847907 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366189774 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.391286721 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.371513903 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.366290132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.372273839 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356768759 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366319259 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.360535661 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.371877853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.364884135 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364309081 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.365843103 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.357421184 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36898079 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.374468175 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.375622777 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.365217655 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.358079496 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.360968907 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.366758912 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.364733449 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.366796425 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.366863622 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.366247659 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.366194663 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.359944308 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.377512956 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.387429022 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.373004704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.367835062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.367011239 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.36987883 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373913668 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369275704 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.374152517 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.366936461 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.367858021 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.364980709 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376614825 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.368614001 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361013401 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361707276 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361542985 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.371661968 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.377510406 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391570031 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.371361673 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.372571679 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.370186405 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.368804258 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362326046 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372643829 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36876158 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.36125358 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.364299697 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372137147 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.370985953 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.369537049 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.363513666 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.376476655 seconds)
  done (took 805.167758003 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367053789 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366419007 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367845245 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367768588 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36855084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368012785 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368307062 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.368234905 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.368763022 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.370478105 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.368723287 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369714566 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.36827971 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.369199366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369916878 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368315454 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371280153 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.369345327 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36951262 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368357552 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370635185 seconds)
  done (took 29.985594342 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.370231972 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.370278718 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.369820499 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.371433539 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.370735866 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370590297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.370778359 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370950256 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.37059706 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369379815 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.372796627 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372087672 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.370174737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.371399889 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371412808 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.370693903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.371977044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.372148909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.372884217 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.372337404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.371482832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370757979 seconds)
  done (took 31.407161667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.371752627 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.370835363 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.365608568 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.375046273 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.372622154 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.372432094 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.37254775 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372120848 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.372140661 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.364778102 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.365577466 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.366262383 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.371993694 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.380443219 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.367818491 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.378874314 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.373122272 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.373303908 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.372918772 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.373962737 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.376839926 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.386407183 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.372583396 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.36524568 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.376586327 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.374200167 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.374039271 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.374416616 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.366133543 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.379029158 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.374920016 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.366428271 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.377069201 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.377731082 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.369191433 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.376849558 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.375062426 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.374996559 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.374401242 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.375809076 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.397416464 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.375217637 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.378972632 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.388429737 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.374925741 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.368792535 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.382675587 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.373902398 seconds)
  done (took 67.207250834 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.377278175 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.377447154 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.375908419 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.37670882 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.375170559 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.375588695 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.376317011 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.375852309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.374874196 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.376603147 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.37508748 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.378737745 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375756984 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.376303101 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.37632145 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377970336 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.377268806 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.375826498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.37605146 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.375989993 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.377613548 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.377771495 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.377119625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.377097431 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.377114534 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.377066818 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.376200305 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.376754038 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.377441937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.377363228 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.377391877 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.378329524 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.378826082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.377892682 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.376542049 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.377879919 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.377394102 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.378323085 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.378139274 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.378270102 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.37796419 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.378240938 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.376611414 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.377315195 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.378503934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.377275828 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377116462 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.378834629 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.378183669 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.378383959 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.378210199 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.375671974 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378909033 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.377111301 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.377861806 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.378595093 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.37848366 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.378820042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.379169642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.378524352 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.377612515 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.380597419 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.38025136 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.380092716 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.379218294 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.38053019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.381339602 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.379814796 seconds)
  done (took 94.926521435 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379525045 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.378153769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.381084118 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380104407 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.380166206 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.378879573 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380881326 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.381779329 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.379760256 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.381368547 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380519895 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380667689 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.381517752 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.381544465 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381928565 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.382618242 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380263966 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380955263 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.381099664 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.382247126 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.383415302 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382946513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.381679985 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.381101314 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383340899 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.382736647 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383397024 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.382532861 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381480365 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.382905506 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381642265 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.380713746 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.382556891 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381155223 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.383060121 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.381677584 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382906197 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.382440822 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.383217889 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.384199305 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.383165421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.38350051 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.381684734 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.384714803 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.383710874 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382249339 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.38407634 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.384949366 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.383763056 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.383926334 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.384297851 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.383001423 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382325923 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38344785 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383915972 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.385630241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.384368218 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.38486125 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.384306409 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.38417037 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.384481708 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.384561761 seconds)
  done (took 86.960791063 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385704533 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.384516491 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.384303602 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.385377385 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.384280747 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.384565465 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.385264654 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.383853006 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.384730387 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.386365303 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385851696 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385751083 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38698509 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386169748 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.385475303 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388457544 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.386556092 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.385961826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387209237 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.386046607 seconds)
  done (took 28.968309408 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.385366173 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.386214571 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.385115001 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.386471431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.384775361 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.384962283 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.384440057 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385914208 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386178362 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38732921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.386470854 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.384863172 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3843112 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.388558931 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.386235672 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386128035 seconds)
  done (took 23.427621972 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.385440577 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385528403 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.38594638 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.387084055 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.387626811 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.386988879 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.386112599 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.388531428 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.389253733 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.38830681 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.388538879 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.387283543 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.38689342 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.386802865 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.387735586 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.386876512 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.388159581 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.387956032 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.387828871 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.388164984 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.387191182 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.388264116 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.388377888 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.388940402 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.38808787 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.390224876 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.389977386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.389206669 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.3898956 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.389597738 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.389666841 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.389591629 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.389857805 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.389127116 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.388714367 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.389938646 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.389051728 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.390564039 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.390201485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.390390085 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.391090106 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.390083541 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.389869746 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.391291404 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.389188924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.390956501 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.389419572 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.390765859 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.391742047 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.390137146 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.392015975 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.390178813 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.391390795 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.391517681 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.390560017 seconds)
  done (took 77.651372214 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.391967542 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.390534894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.390416116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.390798654 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.391484138 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.391468131 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.389144285 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.392741147 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.390471182 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.390323237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390023188 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.392530982 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391038228 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.390141184 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.390029902 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.390979716 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.390797659 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.390431534 seconds)
  done (took 26.294647031 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.390853389 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.390691815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.392915118 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.391482264 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.39055603 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.393028284 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.392504279 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.391008447 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.390798898 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.392312388 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.39300818 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.392397236 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392895083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.392513849 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392410372 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392760656 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.3929538 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.393003625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.393013096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.394012042 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.392302638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391699053 seconds)
  done (took 31.889939618 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.382486367 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.382006194 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.382622679 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.40061948 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.402335522 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.382877563 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.38322981 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.383672766 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.405155838 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.425853105 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.420573729 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.401975473 seconds)
  done (took 18.013883937 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395387227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39481718 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.393272646 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393468629 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393586829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393924536 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393406709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395310238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393750839 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395445437 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393470449 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392701699 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394169918 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395761146 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394129548 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395179741 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394688511 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392725999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394785966 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396155266 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394171542 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392881313 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394767985 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39561257 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39599298 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396837908 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394932359 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395607158 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395481095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395319231 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396313823 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396286747 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395138476 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39736595 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397130932 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395534163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397044649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397576442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396067248 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397152542 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.396484198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397324737 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397230682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396740275 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39827193 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396438847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396587393 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396279112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397991247 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398163695 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397220228 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397245283 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396995528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397663139 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395640776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398323905 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397424585 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398689745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397629584 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398085042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398039637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399193577 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397549393 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39747756 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397720381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399085322 seconds)
  done (took 93.402669245 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398115207 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398498831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398546027 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399218116 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397970269 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398142955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399122663 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397383626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399405988 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398717035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399547145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397923833 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399972246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397721872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397651451 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399774728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400006706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400095846 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399065913 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40000355 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399599509 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399639954 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399582322 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39978201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400233679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40200397 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40026742 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401330314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400548053 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402456668 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400674273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402670016 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40108797 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.402281475 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400736225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402018406 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402141178 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4024495 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402152267 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401620662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400908482 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401424844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400286743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402556852 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401636161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400745286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401006433 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401981066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403219547 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401362461 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402338517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402314447 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402503625 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403039607 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401484146 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401548334 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402326306 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400740651 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402760735 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402725714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402615253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402273169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403569987 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403091058 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400466142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401777782 seconds)
  done (took 93.717587062 seconds)
done (took 1887.186060275 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.561118944 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.513156533 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.393106939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.42931577 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.392471668 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.405138012 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.398090528 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.391817044 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.39214616 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.392733671 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.39107747 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.604010078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.441727306 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.394498228 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.39258881 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.492346918 seconds)
  done (took 28.255401712 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.423263982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.402385376 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.529555916 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.397707867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.424833649 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.617464772 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.464817371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.39897004 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.599468861 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.420289555 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.401218637 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.438503817 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.398542932 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.401427052 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.422205203 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.615523907 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.689121541 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.405907766 seconds)
  done (took 30.721331865 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.934613969 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.423816085 seconds)
  done (took 5.630177086 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.421286828 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.400207849 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.400208308 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.397684846 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.391425853 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.389112407 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.397173747 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.39171567 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401220497 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.549531864 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.400287254 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.414280336 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.398054349 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.398834416 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.410303441 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.447744243 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.573942862 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.409009161 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.40730467 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.407323546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.399248434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.501608806 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.446257884 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.410309023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.548175353 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.405893929 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.404894205 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.407287051 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.524751159 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.411142324 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.399852149 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.398909674 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.402782709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.394563815 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.957653891 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.402615177 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.428155903 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.409893574 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.409423743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.546527299 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.402799371 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.408194298 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.412795808 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.987796021 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.524351462 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.534208337 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.404650374 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.402108423 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.403647328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.471840378 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.403706371 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.404408182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.465467192 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.24903367 seconds)
  done (took 89.372952605 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.453340696 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.395913854 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583025003 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.42348375 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.395288548 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413924649 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.416871306 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.740108665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.417801249 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.398503491 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.750097068 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.077842023 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.40546058 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.460377271 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.430852971 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.450936931 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.396681937 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.424129711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.395862915 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.399030869 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.009908564 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414188667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.396558115 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.467109952 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.440271834 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.00664943 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.397351563 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.396995581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.416477333 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.396405651 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.047246724 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.410084412 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.443109734 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.400521034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.713281494 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.858679782 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816230114 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.401230146 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.432905799 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402830425 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.422944437 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008168122 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.839469006 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.398727546 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.39976511 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007858181 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398130838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.406553003 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.405444983 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.675305477 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.399540416 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.399249604 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.398271108 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.398541266 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.398672558 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.449762689 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.454556038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010938107 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401426508 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.398828926 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400703984 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401304032 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.401941007 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402724639 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.401996545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.839501775 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.658525213 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.405818984 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.838242682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.037707175 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.401640395 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.126299799 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.404767331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.408374783 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.437548474 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.399438084 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.421465743 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003607128 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421117164 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.401135116 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819149968 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.404371303 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.733697128 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.422126401 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401347586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.032900887 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.405918735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.438775667 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.402355067 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.414856269 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.402259461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406044844 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.723447974 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.457535871 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.402168308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.400344287 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.408209862 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.403289348 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.402475937 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.410933558 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117977915 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.411985612 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.401512638 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.424789093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401126691 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.404289247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.40452678 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404924802 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.694269228 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.40480526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.410955613 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.403118677 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.402838143 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.403193044 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.48149812 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.412284307 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.774450658 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.402285335 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403601648 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.423706847 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40394183 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.436759322 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40229172 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.405921637 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.404665606 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.778688144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.425911871 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.403304553 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404762014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410158302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.405170375 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.405008058 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.461557446 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.40750698 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.269722671 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.443214639 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.404119666 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.404707671 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.419641927 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40548324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.415593529 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.404578632 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724493494 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.725447774 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.65554453 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.412536353 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.405412559 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.282434912 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.439577623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593769529 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.429240869 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.406298021 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.710822753 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.639511997 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.40537871 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.405862469 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.407419727 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.691810456 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.405455993 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748606436 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.074605008 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403917704 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.406916946 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.265144215 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.252526589 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.407359721 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.407949047 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.738874213 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.426697571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.406273547 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.406575398 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.407402269 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.406578527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.410285282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.415867876 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.405885938 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.407516235 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.748796674 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.60851319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.429182633 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.411436221 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013134164 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430885724 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412310607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.415923141 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.409064759 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407019201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.460652628 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.409955254 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.439667889 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.409780914 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.413103257 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097672828 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.407652219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.430117952 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.607488767 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.228486541 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.411897554 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.409165672 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.408597453 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.464847544 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04545774 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.455072706 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.781654559 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.41987216 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.4532916 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427323217 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.416704865 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045507024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.410002974 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.430262685 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.222726462 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.412636662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.854814413 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.409819211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.412300897 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.15028628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.414335791 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.410300148 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.411665441 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.410903215 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.724462898 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.410791004 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.437590876 seconds)
  done (took 517.665969963 seconds)
done (took 672.917343292 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.409531291 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.411238845 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.415364272 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.415448263 seconds)
  done (took 10.941394681 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.430164154 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.416797313 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.42827303 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.417025206 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.427737459 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.417531555 seconds)
  done (took 9.82941116 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.410608157 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.411945074 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.415114302 seconds)
  done (took 8.526654779 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.659129832 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.433825674 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.854331367 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.424932011 seconds)
  done (took 9.663996851 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.427534141 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.428879334 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.429308136 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.429149248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.429232153 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.431517714 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.429976217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.42915328 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.430014409 seconds)
  done (took 14.155194158 seconds)
done (took 54.407640126 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.518355192 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.584989891 seconds)
    (3/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.902416549 seconds)
    (4/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.728668782 seconds)
    (5/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.581021108 seconds)
    (6/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.448421663 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.485485332 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.574410877 seconds)
    (9/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.391950017 seconds)
    (10/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.723396135 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.547844652 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.451750642 seconds)
    (13/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.687537085 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.41484979 seconds)
    (15/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.755997594 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.500286623 seconds)
    (17/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.44514245 seconds)
    (18/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.454652624 seconds)
    (19/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.532926719 seconds)
    (20/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.43037337 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.496974031 seconds)
    (22/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.826484569 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.523016427 seconds)
    (24/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.414937306 seconds)
    (25/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.418927065 seconds)
    (26/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.66165921 seconds)
    (27/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.754493594 seconds)
    (28/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.405671644 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.503138955 seconds)
    (30/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.422311785 seconds)
    (31/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.427537503 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.427614671 seconds)
    (33/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.426760936 seconds)
    (34/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.450515175 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.487415325 seconds)
    (36/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.452020702 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.63898723 seconds)
    (38/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.510964332 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.686101819 seconds)
    (40/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.550124297 seconds)
    (41/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.783236843 seconds)
    (42/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.830006254 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.555369994 seconds)
    (44/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.497025704 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.415216846 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.570259766 seconds)
    (47/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.508904097 seconds)
    (48/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.504756152 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.515511922 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.651214873 seconds)
    (51/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.413383612 seconds)
    (52/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.54411668 seconds)
    (53/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.484581508 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.393714603 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.57513494 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.39683885 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.568908061 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.39501816 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.407594869 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.405952507 seconds)
    (61/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.549356961 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.551462893 seconds)
    (63/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.659282277 seconds)
    (64/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.520142159 seconds)
    (65/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.396029928 seconds)
    (66/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.507258979 seconds)
    (67/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.412801128 seconds)
    (68/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.689453818 seconds)
    (69/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.558815649 seconds)
    (70/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.605043389 seconds)
    (71/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.511354194 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.453895152 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.572415548 seconds)
    (74/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.511452907 seconds)
    (75/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.607497473 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.491800096 seconds)
    (77/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.395448219 seconds)
    (78/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.014825908 seconds)
    (79/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.528843183 seconds)
    (80/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.457894337 seconds)
    (81/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.494340522 seconds)
    (82/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.542393372 seconds)
    (83/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.652842371 seconds)
    (84/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.702592092 seconds)
    (85/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.765521412 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.514745642 seconds)
    (87/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.416040775 seconds)
    (88/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.453958048 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.546479284 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.508915377 seconds)
    (91/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.541502091 seconds)
    (92/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.404220194 seconds)
    (93/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.415490096 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.398605808 seconds)
    (95/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.409543684 seconds)
    (96/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.016933186 seconds)
    (97/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.463989213 seconds)
    (98/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.606297028 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.555485943 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.458085241 seconds)
    (101/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.447292405 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.397926759 seconds)
    (103/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.501798318 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.586652858 seconds)
    (105/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.586890825 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.400030142 seconds)
    (107/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.622730388 seconds)
    (108/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.398579562 seconds)
    (109/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.671640343 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.499199085 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.657408055 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.701251148 seconds)
    (113/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.440127747 seconds)
    (114/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.411539019 seconds)
    (115/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.762839888 seconds)
    (116/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.444969703 seconds)
    (117/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.414079088 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.422543888 seconds)
    (119/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.416068461 seconds)
    (120/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.463205742 seconds)
    (121/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.543784574 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.402218655 seconds)
    (123/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.4501765 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.597912899 seconds)
    (125/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.642614813 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.462661068 seconds)
    (127/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.402935068 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.593296484 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.524041552 seconds)
    (130/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.707736728 seconds)
    (131/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.532737971 seconds)
    (132/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.522774337 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.617741608 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.636570945 seconds)
    (135/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.596119803 seconds)
    (136/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401175624 seconds)
    (137/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.40346267 seconds)
    (138/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.482554437 seconds)
    (139/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.77376455 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.61694317 seconds)
    (141/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.594972462 seconds)
    (142/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.510502072 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.51884801 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.574585605 seconds)
    (145/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.746721758 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.503383795 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.601403938 seconds)
    (148/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.518290653 seconds)
    (149/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.661915625 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.560203581 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.83761741 seconds)
    (152/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.496900996 seconds)
    (153/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.592898483 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.498507548 seconds)
    (155/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.464562354 seconds)
    (156/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.455352411 seconds)
    (157/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.549909131 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.62663047 seconds)
    (159/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.610873412 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.840971799 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.592162583 seconds)
    (162/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.459953582 seconds)
    (163/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.420046266 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.702638766 seconds)
    (165/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.673216197 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.552925938 seconds)
    (167/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.455416404 seconds)
    (168/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.500389421 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.525477161 seconds)
    (170/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.491216034 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.463676246 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.539335478 seconds)
    (173/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.669782071 seconds)
    (174/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.469908832 seconds)
    (175/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.840729332 seconds)
    (176/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.408846322 seconds)
    (177/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.463740283 seconds)
    (178/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.540890892 seconds)
    (179/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.748415062 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.41012437 seconds)
    (181/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.526400418 seconds)
    (182/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.528969772 seconds)
    (183/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.4049136 seconds)
    (184/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.405522164 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.664250817 seconds)
    (186/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.699241898 seconds)
    (187/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.747909189 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.540647437 seconds)
    (189/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.465460348 seconds)
    (190/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.548289366 seconds)
    (191/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.427539901 seconds)
    (192/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.539176539 seconds)
  done (took 345.580480101 seconds)
done (took 346.875359157 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455633545 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.522853189 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.43477249 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.436625922 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435932638 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.433956192 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.456690507 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.437654259 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.450248246 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.450622969 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.431427372 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.444525423 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.452368335 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.448662484 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.471059021 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.437695733 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.436702252 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.446407515 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.453124184 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.453445779 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437485432 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437135613 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.464933537 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.437128479 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444218557 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445940906 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.443256384 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.438430793 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.444988013 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.455212756 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.442637712 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.443531959 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.454746032 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.450579678 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439899418 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.448867961 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439744656 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.525941364 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.460993849 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.450853642 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.446711385 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.455848618 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.443624645 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.443630921 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.450580764 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.467472947 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448009813 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.453736194 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.429511369 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.455088864 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.463943136 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.451562481 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.448311396 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.431094202 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.442484221 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.455821242 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.449612497 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460804538 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.446894074 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441604928 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.47369665 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459941108 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.45059859 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449533284 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.44806198 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.455796375 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.44938414 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.456159783 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.449415006 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443441347 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442101783 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.447879643 seconds)
done (took 113.717318023 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.56586341 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.43859814 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.595679177 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.450005265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.601612799 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.562321451 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.448326595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.449158226 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.448399744 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.244210675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.449228674 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.44989366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.442193933 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.449134062 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.559198878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.450261326 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.450190125 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.171451464 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.449962451 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.57492654 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.438890108 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.448652069 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.449711687 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.267697563 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.442682717 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.436035017 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.578104274 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.450599197 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.14912832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.435690781 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.438879967 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169162939 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.578025597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.469776715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.461445866 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.459089441 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.609552772 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.454000102 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.569127134 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.563497068 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.598318026 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.489455872 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.434901636 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.441489916 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.452757825 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.451393659 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.452515739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.480935555 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.44229746 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.452009979 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.146163821 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.461110646 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.453094699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.45356468 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.452131536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.482531453 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.451968407 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.457178844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.575927507 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.453277843 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.569335561 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247697605 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.2819684 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.453004392 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.441361056 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.454092223 seconds)
  done (took 115.963112989 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.512503674 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.519914106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.567028483 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.444193917 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.49538201 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.56931087 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.445282655 seconds)
  done (took 11.865788206 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.452964083 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.453217351 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.492415515 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.494105233 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.454425716 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.61967367 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453004597 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.455979397 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.452946182 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.497110989 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45504469 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453739815 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.463416505 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.443814616 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.491549019 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.45736436 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.56543958 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.448241145 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454433369 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.600283677 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454654831 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.463994272 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.497525493 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.458506046 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457177912 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.452046744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.226489027 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456877026 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455749702 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.457359949 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.455606011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.514594447 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.455927406 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.444886476 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.454069271 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.561379149 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.456682942 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455635309 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.455955885 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.446836193 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.455858683 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.458256475 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.458267427 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.455379328 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.457130111 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.471258856 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.456705034 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.455312259 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.456457796 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.457105765 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.495867103 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.458851201 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.456295267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.458290373 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.50103775 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.466152642 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.458074125 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.456041111 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.459189909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.456863624 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.603609774 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.495569762 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.457576167 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.496820309 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.45729029 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.458127232 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.458871933 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.458229541 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.541267421 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.456983562 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.496237135 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.459321032 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.629439448 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.472632934 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459075595 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.450884733 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.451531716 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457412677 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.445476611 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.456037886 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.457301886 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.449625677 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454678323 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.458102355 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.459088828 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.607917867 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.558030975 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.460210614 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.466086296 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.457115461 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.461053609 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.502428172 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.459643868 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.458625029 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500282278 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.569170365 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.503302385 seconds)
  done (took 149.24982602 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.463361652 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.460602981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.454152894 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.477796708 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.45185436 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.450718464 seconds)
  done (took 10.076106469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.452379081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.462536097 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.46167025 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.460002303 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.459717317 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.459590056 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.463691896 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452973199 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.463339639 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.460178144 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.461790536 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.461400834 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.460677458 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.46166354 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.458828412 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.461584092 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.461986493 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.459280941 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.460443208 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459855901 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.447378719 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.461357435 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460546729 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453040849 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.46382158 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.461315793 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.474966157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.460261412 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.459911068 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.461212176 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.465275 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.461472888 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.455272374 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.457332097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.466182102 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.454047149 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466529466 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.46372246 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.461909307 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.463551819 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.462093924 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.463109454 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.462609199 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.465224644 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.453738637 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.456869891 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.466388125 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.476529601 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.461555371 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.465008853 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.463588135 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.462157369 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.462766397 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.465088201 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.456304743 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.457566297 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.468291874 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.463162978 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.463015596 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.45733255 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.465927061 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.464087049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457387994 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.468514318 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.462074616 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.465942221 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.457324447 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.467914853 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466168156 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.464619594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.465721944 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.463612819 seconds)
  done (took 107.563171089 seconds)
done (took 396.027368635 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.784384838 seconds)
  done (took 4.104436715 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.65929332 seconds)
  done (took 3.980885242 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.370093961 seconds)
  done (took 26.701438988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.508093551 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.477159045 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.454763059 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.454820095 seconds)
  done (took 11.216501021 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.821123411 seconds)
  done (took 4.141475833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.45778366 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.490057875 seconds)
  done (took 6.270953104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.777143157 seconds)
  done (took 4.096386373 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.018626467 seconds)
  done (took 4.349872443 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.47355385 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.45795845 seconds)
  done (took 6.261249272 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.429792606 seconds)
  done (took 3.750880786 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.477070543 seconds)
  done (took 22.80081488 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.459460935 seconds)
  done (took 3.78508578 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.493655651 seconds)
  done (took 3.817063774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.700423107 seconds)
  done (took 7.022309672 seconds)
done (took 113.623450807 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.448796457 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.45550468 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.449564391 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.447965222 seconds)
  done (took 11.125496359 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.52941493 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.530449662 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.540095008 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.524655823 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.523291662 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.534462815 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.491463619 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.491411543 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.521594511 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.518775994 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.535451879 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.523986386 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.533429222 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.50742102 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.519923282 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.533960924 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.523438551 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.54038479 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.494202786 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.524064738 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.470484606 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.524401331 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.52130962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.467145943 seconds)
  done (took 37.74870307 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.977490241 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.529508317 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.61343188 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.511809328 seconds)
  done (took 7.956075551 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.571089331 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.573177526 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.591973549 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.62780661 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.666243474 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.60087359 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.495542413 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.49113699 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.476878281 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.574403207 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.651848853 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.573771491 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.790443532 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.469807858 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.786713766 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.467684705 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.468244886 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.575076997 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.622071447 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.653832743 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.471271562 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.572794701 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.577806032 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.574001725 seconds)
  done (took 39.249840169 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.477141583 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.486049055 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.471508761 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.484739668 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.470406588 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.471223752 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.470933677 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.476068229 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.468555457 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.470569157 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.470999495 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.485262822 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.471062397 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.472205392 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.476415252 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.471317457 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.474162062 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.476564794 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.482535625 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.472322199 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.470769594 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.478183743 seconds)
  done (took 33.775414681 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.453252851 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.453745941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.807410144 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.712257073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.454643728 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.454841278 seconds)
  done (took 14.662943165 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.547840182 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.705071812 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.462059722 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.900415034 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.983413382 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461682937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.46291889 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.750536566 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.133964909 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.156460342 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.532626488 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.544141256 seconds)
  done (took 21.968694791 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550091674 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467803093 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467616447 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521226849 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464551432 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468318114 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.555868974 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238796521 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.475774224 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744849507 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466377065 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556655167 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.717491537 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485174149 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472943041 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.435810021 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726481736 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068583968 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477282186 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467902003 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501321854 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482617761 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472767964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.739337737 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470416138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467877832 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.73011097 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470854895 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814727942 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798744487 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796439363 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478150777 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746644384 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193844743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578964086 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711671494 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470071646 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470675018 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.456414869 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.473484729 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490146105 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47724764 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789239573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478521504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469672193 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476897121 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252657751 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.480138358 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.470323113 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471033587 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793201736 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558689351 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.475516534 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.471735003 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555253052 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471210874 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.476251795 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607770806 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113771047 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485480774 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473928668 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.475435621 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477732928 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474253929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221310025 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.478637179 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.476996178 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.477836232 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47091851 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471746236 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493158709 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473091157 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.492770438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470383467 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422157672 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484540613 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472870999 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123832459 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482738756 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.473975579 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699028553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471647471 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472125315 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.47123704 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470206253 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371068518 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478787225 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.440967126 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51628205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.244802206 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.720844493 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491542286 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500424072 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.69820842 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.442243808 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472051873 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.472684792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476202643 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495068611 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252717112 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472681878 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4797569 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723434608 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.690103928 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479538565 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.455359017 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015051977 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480425105 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.503382928 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490460724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726263439 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.197898543 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806936963 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482107907 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528879957 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474378674 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426090638 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495643945 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.480741034 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485528856 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795551642 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.444195548 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477735578 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547887655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477653558 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47609963 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474227267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476836778 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474909346 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.697675853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4958893 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803073126 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.485165119 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476860635 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.477879134 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484711869 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.483874434 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.699651131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474320295 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753209576 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477163832 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477516753 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476705505 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.698006305 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.482608034 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.488631822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820353698 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486292114 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481853466 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809910287 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517069082 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59137938 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510566239 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.476819006 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.731873335 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.48555521 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.482414994 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479137905 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478316282 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485194792 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.486418589 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478632207 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20918695 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48458874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487596369 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.480609426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.496343311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552856365 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486755776 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.725514962 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.497389852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475500974 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.508285108 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.477965767 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701631129 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80723598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.490774124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656275048 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.012952823 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207953751 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4992602 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.478878346 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.478254166 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.479917461 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481320116 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478637935 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480383854 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729111782 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817699779 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482078482 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212994243 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487131183 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480986391 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.487371343 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809251533 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.495513729 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481225467 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.488345699 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497606749 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5002755 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.814984815 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716019033 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.49758707 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482281734 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.999219563 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488837413 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480358336 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480964316 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505957186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490983504 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415428436 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825402828 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491109763 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811792379 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497839353 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.504270706 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.481856042 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497254385 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49477059 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.506571995 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496134925 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.733010551 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499111264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486588345 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121217288 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442631671 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152164578 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503594263 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.492550246 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486121181 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263617237 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484333668 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483023379 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769790385 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261067791 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484347833 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020815056 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.49739799 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363561979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812858159 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713692084 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498542286 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.499851737 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808913275 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699340506 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510605287 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49176269 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487280446 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.453385524 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100484461 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48755191 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669684727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261271252 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502537296 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487494248 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.527978471 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508070235 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954569404 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486306382 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483996868 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500266819 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506180553 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416973804 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490410229 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484198765 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240785152 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502037255 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.026355707 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487415709 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736786061 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812873129 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.785370175 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.49048993 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.492867635 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.736453421 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818477808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492734533 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498519821 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182368486 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.353914463 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.495422891 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486007101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446903661 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486760961 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848238899 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.505291195 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.501831995 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492346833 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488611302 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487860151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.488706115 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494322377 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486220582 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097261975 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.499577393 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499354336 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502245328 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492479795 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73730657 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.504240598 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237823466 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724519098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488988995 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521827544 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.495580009 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491423248 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.463037223 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489557571 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48851527 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507287406 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.71848614 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49048464 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.459044666 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562268841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704262321 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490055607 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490116331 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753033934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.491150311 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.496819984 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448043085 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523416131 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489126603 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494825344 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479772361 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529285316 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565579564 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740302334 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.824855497 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831505806 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968083807 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490873257 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497369081 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.506572573 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572495816 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499657641 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.510189461 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.490704376 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245711409 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460190194 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.24998937 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835350892 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498745201 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501742088 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492344587 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733730897 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491411416 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768055107 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493045141 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.482218976 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534799324 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507309548 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495982341 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709464139 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766898583 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492022959 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495472787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496711651 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.492248603 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836462517 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.710854535 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112346973 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182751936 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499844472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510862132 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279035886 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77009152 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494429466 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494590126 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494123872 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.501713381 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.498765082 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.501921594 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497751845 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724580055 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82734449 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228420883 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819167146 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.518818851 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.397056029 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508034645 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.744583707 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326081092 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744681679 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232375391 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387924602 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753972012 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56893211 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745006121 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.495522326 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736806842 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.503053035 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499243684 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494938863 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493521591 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.494866607 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.825754888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250230425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757264198 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.500822119 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.508902832 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529884924 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.744691403 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721403849 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.421051822 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723512614 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833037761 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508696008 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494583228 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253809328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837657291 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50355896 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.501940234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756463539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499481689 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532884608 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.375086858 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.495376214 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175744408 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.71559328 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518127274 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504026598 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391345542 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254912977 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.523235687 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112695914 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504266265 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49928771 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780989026 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.50434925 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508011818 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.784116519 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.504020855 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504573413 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756015915 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.24673166 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.456625024 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.512138561 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522531152 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.506467767 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499505331 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575147664 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5027704 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498209983 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.976553454 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498707772 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498362585 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51135412 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.509002674 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513735115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.503705633 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499565245 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.509052929 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.478297366 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.473604487 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511665273 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639863125 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124583859 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50335105 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.115982537 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.836914624 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.749349519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507510767 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.47349646 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.506391838 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50072489 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500411571 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501118552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497182566 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181517613 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.511697292 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.838929407 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51308988 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.713395722 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713469083 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502930368 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759581565 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502786398 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528097333 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.470430453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500845002 seconds)
  done (took 1044.880346075 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.497363703 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.533551856 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.546465882 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.559601047 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.517004711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.520049357 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.576455732 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.526306111 seconds)
  done (took 21.633370063 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.493747969 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.504434883 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.509331243 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.505857383 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.50437016 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.073270548 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.508557019 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.507764885 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.514758476 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.501580557 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.512266285 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.239863808 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.507583747 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.505642368 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.518007238 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.509220353 seconds)
  done (took 34.78778353 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.756527349 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.75169128 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.167569319 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.508686523 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.526870077 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.533108166 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.923054576 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.517823279 seconds)
  done (took 29.044694175 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.509191413 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.508689951 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.510473665 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.509333807 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.509816396 seconds)
  done (took 8.908699264 seconds)
done (took 1307.068343434 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.510019402 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.509202864 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.511515882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.511851922 seconds)
  done (took 7.401808844 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.473160021 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.474433874 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.474754935 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.491512181 seconds)
  done (took 10.272330149 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.347102115 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.17437318 seconds)
  done (took 5.882335372 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.088569089 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.078187857 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.083382082 seconds)
  done (took 7.613768263 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.810740048 seconds)
  done (took 3.172921572 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.494872401 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.496467672 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.521549539 seconds)
  done (took 8.873412645 seconds)
done (took 44.578191844 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.501163001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.270843872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.669377475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.495978617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.674275641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.668189028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.756948517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.497235302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.514371709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502118837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.506599238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.677756622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.755903158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.260385573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.755338769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.266648507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.6729287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.495390174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.505708426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506939774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.78219733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.496534602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.512667902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.509816035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.669242705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.650456079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.501831267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.271808758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.510011398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.5002388 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.656409779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.514546056 seconds)
  done (took 86.891063739 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.495993091 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.501392255 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.521478836 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.501849962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.500194091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.503380256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.502019569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.503030086 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.50931994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.501973572 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.502203589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.50459689 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.503712428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.50512385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.501704719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503785175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.504146369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.528501975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.504337685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.523305783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.505541093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.513462581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.502213776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.523675084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.530827701 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.50629992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.504958057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.504360939 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504389972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.518128967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504186264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.504848272 seconds)
  done (took 81.608164363 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.502475054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.504196617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.505637567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.523979514 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.503850331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505367512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.524859772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.504292002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.503327126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.516357856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.504492726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520872432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.50733891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.515487059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.507202758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.512975409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.509819243 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.512831169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.505149721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.505834474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.506512822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.505222151 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.519163291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.516539447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503740481 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.527243122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.518581355 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.505293421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.525292826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.507502392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508700894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.50656464 seconds)
  done (took 81.712749385 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.746209878 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.517573239 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.522002766 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.512722577 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.520584617 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.518104688 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.511732756 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.752003563 seconds)
  done (took 15.967389287 seconds)
done (took 267.546248166 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.52837582 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.094467944 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.545378511 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.52022184 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.534681904 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.539093152 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.74973377 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.543295642 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.739715099 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.528485336 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.533368129 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.513560702 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.488462391 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.665265676 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.417648763 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.519664045 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.536024988 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.50873306 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.181548557 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.776473726 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.545560851 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.522547401 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.421357949 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.521675081 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.487983705 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.593934404 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.596732301 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.684264882 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.650682654 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.592236296 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.095396495 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.519430232 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.521125394 seconds)
  done (took 69.585357045 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.511710501 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.521087235 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.521591682 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.522504298 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.521507219 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.522376276 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.511440742 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.523769133 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.522774931 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.521556394 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.522624004 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.523958295 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.523724139 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.522722939 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.523170646 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.494107592 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.512200363 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.523066417 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.512442935 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.495419812 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.522444156 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.522031006 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.523300284 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.522060313 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.523814504 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.522908901 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.523685102 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.525863621 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.523503683 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.525013457 seconds)
  done (took 46.960493193 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.524310348 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.208641282 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.399484965 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.526369069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.515058151 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.519968509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.87582469 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.528978411 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.518671285 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.519650441 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.093014154 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.531258548 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.554345401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.405409366 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.522564831 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.525446781 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.525010899 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.516720434 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.212170359 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.529924987 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.878569823 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.531258866 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.881236182 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.531006638 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.520362674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.517649967 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.521145752 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.433786945 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.549545031 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.105276006 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.518162238 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.883743661 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.363680402 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.476808778 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.528913265 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.532186018 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.525491633 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.115286581 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.525741257 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.518623893 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.876899598 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.517009049 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.419019168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.255190891 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.544618864 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.527465053 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.479430833 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.115936922 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.837300119 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.528184123 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.460711921 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.527776534 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.529901227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.520605295 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.833359854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.524521193 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.518695748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.497968301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.525073259 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.891373737 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.5333147 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.520487897 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.227769084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.524845592 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.219936689 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.526356697 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.528534872 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.521010787 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.436349017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.52800996 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.260422705 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.541374488 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.52786284 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.117836902 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.227365678 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.510033851 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.523756759 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.229082105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.386085597 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912156302 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.530913132 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.427482057 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.922352751 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.529323642 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.534148362 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.533244963 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.531036279 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.642394816 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.8769914 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.194055731 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.271349262 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.51745952 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.883711953 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.530606587 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.523532845 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.520014916 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.536403906 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.532259701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.428515883 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.267993577 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.544894956 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.531124585 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.248312085 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.546194692 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.884314483 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.526672931 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.472803379 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.529842548 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.595174254 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.533326647 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.530850648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.527104155 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.884961261 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.526132547 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.533846738 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.24685376 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.152649029 seconds)
  done (took 215.669141964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.516254727 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.516357987 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.517691552 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.518378564 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.518116138 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.526592162 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.516760731 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.516833137 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.525221042 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.517484439 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.518416102 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.527030962 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.525653682 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.518765462 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.530250265 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.519823097 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.51746403 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.539102964 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.51852969 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.519647315 seconds)
  done (took 47.805031521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.536057938 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.219672597 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.193751421 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.537193304 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.535561409 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.526773815 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.597604025 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.540301822 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.535222357 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897758452 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.749566166 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.542477745 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.536184851 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.535401887 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.195609564 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.507722269 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897447243 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.221363799 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.536975811 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.221845281 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.508979259 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.534864344 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.525464524 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.222118543 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.909056394 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.887340855 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.599032973 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.226491601 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.536931372 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.535849487 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.222809593 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.536779369 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.528118787 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.208433041 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.537626682 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.552128706 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.536632294 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.601397978 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.606860636 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.904230613 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.230704103 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.898908308 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.546705383 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.706226374 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.541462959 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.510609412 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.235672966 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.539978576 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.510472684 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.538991362 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.542046751 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.212250512 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.531630342 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.214195979 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.537381839 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.539841719 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.226838092 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.212351645 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.205242775 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.751932777 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.534069638 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.888909596 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.537670555 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.236626175 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.539667329 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.540041728 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.538582863 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.755671553 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.233986586 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.890560996 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.904233655 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.903086376 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.539376426 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.61362896 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.546482298 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.904065209 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.61310184 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.956943611 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.905492624 seconds)
  done (took 140.984082051 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.853275107 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.663180585 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.988297235 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.180816705 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.107967115 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.683544061 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.663332165 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.810956227 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545878339 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.641021856 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.319137838 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.638960569 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.386958251 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.61889348 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.65590743 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.672757511 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.003998784 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.526849219 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.246528857 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.294058609 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.536097328 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.649074201 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.072257193 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.752733297 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.52769025 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.136978857 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.549911429 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.144018775 seconds)
  done (took 58.255930302 seconds)
done (took 580.629889879 seconds)
SAVING RESULT...
DONE!
