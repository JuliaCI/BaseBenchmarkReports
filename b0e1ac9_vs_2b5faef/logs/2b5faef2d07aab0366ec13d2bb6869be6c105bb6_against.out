cset: moving following pidspec: 10343
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35880784 seconds)
loading group "string"... done (took 0.558364243 seconds)
loading group "linalg"... done (took 7.130382665 seconds)
loading group "parallel"... done (took 0.157133122 seconds)
loading group "find"... done (took 1.110985343 seconds)
loading group "tuple"... done (took 1.744105711 seconds)
loading group "dates"... done (took 1.186756057 seconds)
loading group "micro"... done (took 0.216079921 seconds)
loading group "io"... done (took 0.986830752 seconds)
loading group "scalar"... done (took 37.751041108 seconds)
loading group "sparse"... done (took 11.613104165 seconds)
loading group "broadcast"... done (took 0.902259806 seconds)
loading group "union"... done (took 12.284232918 seconds)
loading group "simd"... done (took 4.203641736 seconds)
loading group "random"... done (took 8.441356859 seconds)
loading group "problem"... done (took 1.725738822 seconds)
loading group "array"... done (took 19.852823731 seconds)
loading group "misc"... done (took 1.627787851 seconds)
loading group "sort"... done (took 3.128239802 seconds)
loading group "collection"... done (took 16.346283027 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485929821 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123271372 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113489363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118251349 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14421771 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113598571 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12183283 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082976268 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.798233388 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1471228 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119384999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414668897 seconds)
done (took 5.034658356 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170901893 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082438418 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080781023 seconds)
  done (took 1.225671012 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065129187 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121036483 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066365177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067064453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06694072 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065963909 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065871529 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066371647 seconds)
  done (took 1.583511765 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073101946 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068498955 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068688382 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068300797 seconds)
  done (took 1.338232272 seconds)
done (took 5.456085902 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765209748 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201793696 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183352291 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396316098 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132417952 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153437157 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645585439 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327252367 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182711748 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081167941 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104141963 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318247366 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108157096 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628478889 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075948015 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090418963 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137048562 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427893704 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067382457 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081977809 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088813484 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127760567 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085075787 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074357029 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142924066 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067394477 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130045891 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080237161 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066738351 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207751132 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172683799 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648308171 seconds)
  done (took 10.0992585 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096928402 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097773387 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068843098 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136738389 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099235151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071339302 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071861124 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06738166 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08690651 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128216899 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089075102 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101233483 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065505293 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068844114 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084803862 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204105011 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08266151 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082479568 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070041001 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075554455 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118362446 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078665034 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077897093 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077715671 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128626859 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180137591 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099871415 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099474001 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069050626 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08224069 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115018179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126192736 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06755964 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068339334 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126804152 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096105388 seconds)
  done (took 4.561231345 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.289697112 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14090213 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091273347 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131816813 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065232912 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10701306 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065542561 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080635647 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199818679 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353915336 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.578821625 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110884959 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104030414 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067503482 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068319594 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067058908 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340390442 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106919372 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102871894 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080401257 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068993498 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068047258 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340088731 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067181253 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063161602 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067258967 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057382335 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12220556 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067084924 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925435305 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.128576052 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068724075 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102171634 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164794544 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087971581 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272975291 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068394632 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064876889 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150687564 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070575214 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084068448 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066788236 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08349387 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103573752 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113177336 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065621856 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067206406 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162107304 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065509171 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07969429 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.974391248 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155143892 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079167207 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065981959 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250989962 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086806016 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069538161 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065005615 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180460355 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138284568 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068841429 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066434947 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068085931 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069206262 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.355732492 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065871552 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.720816631 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070405171 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076623088 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06908921 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069929651 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072510028 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072228717 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088177324 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066229836 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074990309 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065526405 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066064862 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06653733 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08365462 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358756014 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066119792 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089494946 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067263773 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063740636 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085334993 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095905398 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070437977 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065003614 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099600786 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067920877 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168429765 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106837609 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06741745 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084710825 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069566426 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11347802 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067190573 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063890088 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.084276337 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067708067 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09824009 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06969216 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099056278 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08185575 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068540159 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400267826 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064494035 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065265389 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065382469 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068736626 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06566355 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067521879 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065926552 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07940827 seconds)
  done (took 20.824053071 seconds)
done (took 37.834185601 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270055335 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075535631 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075515992 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075264838 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075226976 seconds)
  done (took 1.734696662 seconds)
done (took 2.876166964 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120019902 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099199074 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065063048 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095230584 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064229675 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099624259 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098505823 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080612306 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098897795 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064136918 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095760741 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064479873 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064211799 seconds)
  done (took 2.266314892 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084614995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08328029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069820389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082265019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063546602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082331403 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080641284 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088912985 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080839052 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071838194 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063551506 seconds)
  done (took 1.983359242 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082944083 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084386584 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069707865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081616015 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066525953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081111864 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081185554 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085609686 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081293753 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072989176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063519609 seconds)
  done (took 1.978631788 seconds)
done (took 7.355977504 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07906748 seconds)
  done (took 1.200476002 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.587133991 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.059263189 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081157252 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111476502 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182972418 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117546927 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26883758 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085015971 seconds)
  done (took 8.794881355 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10072622 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07196488 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070047702 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071529982 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070892387 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068677456 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069659606 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069670485 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068741844 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068439087 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071989815 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068863685 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071927937 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072217635 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068600882 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070516503 seconds)
  done (took 2.356257324 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092484142 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091380728 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073885317 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074422607 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072141228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071889608 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074307573 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073063292 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070438777 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071736759 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074631189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073300062 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07163376 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064943448 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074020324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075646953 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071287105 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074103406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074957347 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075224304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074587401 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064428427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071233343 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073695385 seconds)
  done (took 3.011457326 seconds)
done (took 16.49107271 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115068873 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072629405 seconds)
  done (took 1.316455982 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083505493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085984917 seconds)
  done (took 1.310301958 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085697571 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06515855 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093473038 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078756953 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066490054 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065856464 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08903406 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065743007 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065838588 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066089096 seconds)
  done (took 1.883131991 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071408153 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080053735 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072183931 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081556619 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07413919 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064628517 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072858846 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067913282 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078377474 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063110158 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071399736 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082515088 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072093924 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084423107 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073525283 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068972934 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071127637 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067445953 seconds)
  done (took 2.461031777 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067052985 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066717718 seconds)
  done (took 1.277989864 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067076649 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064023235 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068534898 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067157562 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063379599 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062667256 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063783159 seconds)
  done (took 1.594799947 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394155515 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110084815 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298370416 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070895569 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081741002 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24983909 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065270791 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070738592 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070138765 seconds)
  done (took 2.593320069 seconds)
done (took 13.581315727 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079507477 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085400113 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095392888 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362748522 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091483462 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065871438 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11412041 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18897086 seconds)
done (took 2.243068309 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216131591 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.615217529 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387438684 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197877174 seconds)
  done (took 2.351306784 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332100312 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087023017 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060411808 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068039971 seconds)
  done (took 1.706100195 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067260649 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068280259 seconds)
  done (took 1.29020274 seconds)
done (took 6.71896228 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068005549 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065900954 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083012545 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063601645 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06615173 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066144226 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063228208 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06471131 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066329079 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066028012 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068603219 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065538927 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066048754 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063329521 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063455216 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065826718 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065581467 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063735517 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066421462 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063234169 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063313232 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065339764 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063274841 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063192132 seconds)
  done (took 2.7597 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084178171 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066358119 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07193099 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071123371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070725837 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071109699 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071159437 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066141598 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071065443 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068186662 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069928957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07064994 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067926994 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070345858 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068205022 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069926406 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07160276 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066246385 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068036582 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069832258 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070988442 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066134184 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069804676 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070835991 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069450659 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069557103 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068245654 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06617154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071394215 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069725006 seconds)
  done (took 3.256374654 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071069421 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063283527 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063918614 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070573237 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063886383 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064880583 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063017719 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063813842 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064417484 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063023963 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064991631 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063401814 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063787308 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064320116 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064802494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06753449 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079004262 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063492269 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063306479 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064380983 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067032542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063356299 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063901113 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063713586 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.175173572 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06292323 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063867095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063564624 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064059787 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063373601 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066724925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066741871 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063225413 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070486688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066519577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062982566 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067114633 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063098865 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063859997 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06276292 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062824359 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0635092 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063070424 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07021752 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062967272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064902906 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063787985 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064587787 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063656254 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066005751 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063354316 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063106665 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065420058 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064387637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067439174 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063028917 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063827865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06249989 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064288086 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062606002 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062666972 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063413779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06532667 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064135959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077577293 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070188206 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063069987 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064899248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064565411 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065734076 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064878145 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076173208 seconds)
  done (took 5.964012388 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093567097 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087111988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065733286 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065039304 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062019766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064486687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067375157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063971499 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065346124 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069824043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064178333 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065529082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065559226 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076650536 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063881064 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065338957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0694834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061929504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063857764 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067053835 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063986871 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067403457 seconds)
  done (took 2.673349524 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155177532 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070226892 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105856645 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072758614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067458359 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072618614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069648331 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069893035 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069893683 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06819152 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068152119 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070263251 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067072536 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068151253 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068354272 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068284911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069974705 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068128286 seconds)
  done (took 2.536505407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078073062 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065968742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086076844 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066121101 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066015434 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068060194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070730283 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074121227 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068148783 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065612983 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074326666 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068372938 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068309341 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066104235 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068074001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066596777 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068342175 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066064882 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074173132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070344983 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070610092 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073873145 seconds)
  done (took 2.711628895 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080671202 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067567477 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08278664 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069194868 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061903084 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064127222 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069710324 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066097088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069942456 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067513703 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065962075 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064182319 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069258637 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06578216 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068841277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065991578 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067556388 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065776579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067204917 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061774097 seconds)
  done (took 2.530341106 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087547329 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067563149 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067876051 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075955552 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067168247 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067808641 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074878039 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067136331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067004746 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089368835 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067346327 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067114509 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074768226 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071943438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067139511 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075038688 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075590853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075009072 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067216188 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066957103 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087427927 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067185494 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074914841 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067382223 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067435384 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067142906 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067029525 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072536786 seconds)
  done (took 3.181139567 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067706675 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066389984 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064286695 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064615054 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064277501 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063745709 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063295699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06357311 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065976894 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063384442 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065681599 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065906574 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065980468 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066425353 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065860341 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066565685 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066046766 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06345274 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063720343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063573007 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066103435 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066324468 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065949324 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063735942 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063916039 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066613408 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063763365 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063382666 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066116848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063239857 seconds)
  done (took 3.122085299 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077128258 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073658349 seconds)
  done (took 1.324937865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065085232 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080183127 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06358993 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070138015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069918673 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067053564 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073566451 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069747649 seconds)
  done (took 1.736397539 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08313331 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078356773 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068480993 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080930027 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076334045 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082668881 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13333055 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067954938 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073107423 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064379885 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080232132 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065723934 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072556968 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066589063 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072089025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072623729 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064079087 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072294682 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068266329 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064836081 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067649761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074981861 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068942716 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061912008 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067611578 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087914699 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076796638 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065588647 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06903999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073010819 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071727332 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060361036 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065836166 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06611152 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063832681 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075693385 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080992921 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068968635 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074356993 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066952409 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076304514 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061199139 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070197539 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072301563 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076627658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066160184 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066747175 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061319878 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063956583 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06834023 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061092543 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066408608 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061198152 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075923955 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069959419 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077061921 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064795355 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06777551 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069499078 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069633967 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073289316 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06836004 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068909645 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066375243 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076370429 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070537003 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074966319 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061443915 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060487258 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06479599 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075673947 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08866377 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072455678 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06673011 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066575634 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063775902 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068730949 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066909257 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071054791 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072203636 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065731899 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071111881 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073029556 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065642732 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068613465 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073498196 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063167452 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067860526 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063543503 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081404793 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064229952 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06330858 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063170019 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075165 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068406978 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064975564 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063278239 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07186195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059209442 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065999635 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066295296 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065625744 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075095784 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069508236 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070320655 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073959111 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072404585 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065267071 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067719401 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061803814 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066305762 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064497065 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072537482 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059573669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068048843 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066013188 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065720859 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198528854 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066051513 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068171727 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075279641 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073369462 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066850534 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064187291 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070649192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06756953 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070518756 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075165785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066180451 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062734774 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061894068 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070378706 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066924546 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07078677 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071966039 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069997725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061447656 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064957717 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072774632 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076104001 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067745264 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067858633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073200744 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068713596 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066428756 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074303254 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069303428 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065926521 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072964314 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067866493 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062122622 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070496689 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069797768 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065333693 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070861632 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070329172 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069438752 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067471555 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066209606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075028188 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067020871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066050932 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067336417 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065381836 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076938631 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068797229 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062438075 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06360824 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076123917 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064815558 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066216923 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065862358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069022138 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067324857 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064498248 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065880866 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069206042 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077350805 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07089512 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068031675 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072358904 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077539927 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066218152 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069240887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066744199 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067641562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067545053 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075828867 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071806268 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070486382 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068805181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062753659 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071263926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073106536 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065443903 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06416152 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064983365 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070245358 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071167113 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070032298 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066860603 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063830254 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066396209 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068904547 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068392068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065372684 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064735579 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072527722 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064486818 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072381097 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065932524 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074712574 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068396428 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060570207 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068138946 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063414763 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071202906 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060672459 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063357692 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064980073 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065741961 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063843178 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0676297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059126513 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071587486 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072125916 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065259277 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064330609 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064600262 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071231058 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066486201 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068390792 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068006584 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070421544 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075364313 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064063884 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067784059 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.20098013 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067957975 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061017801 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072805446 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066136546 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066694661 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066227112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06530759 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069790644 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07640563 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073082707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061817214 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069013614 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065302801 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066333567 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062465743 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071962124 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070459404 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068250154 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074079152 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06791116 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067180005 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070416493 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066788604 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068149237 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068461015 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070150495 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067429933 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068933899 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066747399 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06981659 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066376581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064387255 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069141498 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066727664 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067410941 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072499122 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066378837 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067539831 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069505536 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067724076 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067284937 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067062244 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066092725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070171589 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067427285 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067622929 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068669606 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062569156 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074753836 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067026111 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074800821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067526686 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063996355 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074074246 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069597554 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072525708 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067509718 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067766038 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068535381 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066040355 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069579528 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074495252 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064580633 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0777305 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07471951 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06769734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069090024 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067233756 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068457671 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065857347 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067293229 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066780103 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066111658 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066192057 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071088583 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068468148 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066775656 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067878862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066795379 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066665374 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067430943 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060525666 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065250839 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065677597 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065917223 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075776863 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066153602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065566621 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064926407 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066748534 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06523088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062590367 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073724864 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074793234 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066377554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072584361 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065276126 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067443601 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076665168 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059262343 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063299635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062923346 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063080086 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072134493 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065253274 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074032759 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065065761 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064296925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062264792 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065701767 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063762619 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059676219 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063222139 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068586798 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064359159 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06386854 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064955008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067332805 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065816537 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074105216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064020845 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065677398 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064843964 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.192055192 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06595783 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066784282 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070121694 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068187796 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065294927 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064556749 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066524679 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067111652 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068167314 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066537539 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068999942 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076428753 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066260046 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069603615 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070840261 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062195862 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069996244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066697881 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066646024 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066392183 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070403 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070310522 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068275742 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076279517 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066704363 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06799252 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066639974 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064651177 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066977181 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067238055 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06716133 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066145717 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068032615 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074526058 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06492311 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069962397 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066839766 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067317223 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073835899 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067454472 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070372321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073768863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06704332 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068877073 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075197804 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071647864 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070347132 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068125577 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067945246 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072557607 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066227872 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073201049 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067093547 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068314478 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068582828 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064889695 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066577921 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066849652 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065710364 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072809001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067473547 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065674534 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065671836 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064625774 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067374457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070005279 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073958636 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068870713 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069734052 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061933564 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063163136 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067229557 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065048437 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068221155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068963242 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071847225 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068531387 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06618626 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065070186 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075180155 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071616103 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069910217 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06417333 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069737111 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066943656 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068251732 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067087913 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066176329 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067506834 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070229911 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067735058 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065750159 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073017629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069189236 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067076611 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067670782 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067060506 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06603837 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061185082 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066546502 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067809231 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071146948 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067854278 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065380453 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075193228 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062795156 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.0652701 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067907753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064067331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069204771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060270599 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066543844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065802016 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065693672 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060344622 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064354225 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063082219 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066568331 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064349603 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060441711 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074950436 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073882164 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067881601 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064233326 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195369427 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062782152 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062825856 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066934655 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068559338 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06933979 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077345778 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066616304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065925768 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062377598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067053342 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069416003 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070579638 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063806546 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062189441 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06623539 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070210778 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073071524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065605594 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066411513 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070182607 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069526666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0653308 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070863323 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063759793 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070861621 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079554272 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067857759 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067588772 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072888416 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074262642 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067816716 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062206204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067407797 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069973084 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067238512 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067688826 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068095701 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082114855 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069922561 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067615317 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065744386 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069508274 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066372242 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074704865 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068093673 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068265253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071891526 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068675857 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076307134 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069545784 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074170775 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070009851 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069818824 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065868283 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067516659 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064729037 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06587333 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068154203 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067645365 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072035531 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074975493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066306484 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076481346 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075537134 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068011775 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063702471 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065503308 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065771322 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061857265 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067003997 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064703748 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064675786 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064405282 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065164001 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066929597 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072013298 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067211856 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066791903 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065455603 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06052583 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068465579 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068279706 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066721003 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063051035 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066109472 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066863461 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069808056 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069211134 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063785399 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068046698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06776837 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066707644 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061664484 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072334527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065101186 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067691775 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065372611 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065903756 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066977118 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069470797 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070445354 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066957378 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068221165 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069560016 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067339652 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062064731 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062855237 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069737659 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063005769 seconds)
  done (took 42.444023988 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105470167 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064295079 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062414089 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062281879 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073719455 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063176654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062128664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062932374 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063350372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065508333 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062493653 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062871027 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071183193 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078498137 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074519269 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067565933 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062416241 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063884759 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062590982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063516379 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072069309 seconds)
  done (took 2.742122076 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076549861 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071248651 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073166253 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07623526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067483929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070948096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073139653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071030679 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076486918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067680335 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085790135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071064881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068006407 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068012156 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06743236 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071537303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076513107 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068227736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071519156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073374002 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07136228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073311504 seconds)
  done (took 2.86519796 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069965391 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066616536 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068619382 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062072912 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067070066 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062525245 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070318363 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064388643 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069905905 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065566607 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06590066 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065990873 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068211216 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061815952 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066374056 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06434271 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108613097 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069664214 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066000532 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066827674 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061633206 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06842536 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062164236 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062699352 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06524637 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069813136 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067252177 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064730092 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066261332 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06538899 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066078552 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064231322 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067693329 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066517442 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065177409 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065204274 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066697383 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066078873 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06191812 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064323082 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06697852 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062219158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067008827 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067675507 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064354126 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064352165 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067861152 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065822003 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061468531 seconds)
  done (took 4.542604059 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082559644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11028815 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068337822 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08871768 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080418315 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076061936 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069634521 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089896734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063714964 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064614582 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082159409 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08035172 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066125546 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070955588 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07269261 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066185687 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067126568 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064772052 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070876592 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065181626 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070400403 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072889193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08046521 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079193128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06998099 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065101714 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065310028 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069991409 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078348707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070823513 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070107457 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071474968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080765537 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071773527 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065247675 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067646383 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081467774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065951863 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068425195 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063149932 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067352442 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069677353 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072236667 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081562055 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065501309 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07048089 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065137081 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062930411 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077958027 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068144147 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073071302 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0796006 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069567265 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06568288 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06992875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080601847 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066026911 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064354911 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068617269 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078015775 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063406795 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069615857 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079601449 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067663575 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072745357 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079768085 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070982691 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069563434 seconds)
  done (took 6.333624303 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077887129 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074042279 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08162686 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080893634 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072644723 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072753065 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07237611 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072688357 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072302093 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076877793 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072685389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093306883 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06855267 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075327644 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072887103 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073184126 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072606252 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072660765 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072529267 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072484864 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072909094 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080547051 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072574926 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079782812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098538234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067990698 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07271863 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072554928 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080528377 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072721587 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07990604 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072683126 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072682585 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079978239 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079734807 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072296403 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065545968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072253215 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072910245 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072297024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067461601 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080246323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072130405 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067399361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07226116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072396022 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08042872 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079837819 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074920108 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076913841 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072239313 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080360437 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072080888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072801075 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079908307 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105494984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080265208 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080190108 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072466817 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080381014 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080173096 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086084795 seconds)
  done (took 6.012742162 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086945873 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074623579 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076199151 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062093794 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064415475 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069715303 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064614368 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064532727 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074476295 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074854887 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077401522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070368509 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073098807 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077104399 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070009023 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07290197 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070596216 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069715231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074808235 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070221769 seconds)
  done (took 2.735744244 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076589544 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083128937 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067400229 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0730021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0693517 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072262889 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068610187 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069840062 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067201447 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06951775 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07631483 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076273346 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067298475 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072448381 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076146542 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071750558 seconds)
  done (took 2.445487096 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078442055 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074345359 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080314756 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067110577 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064470954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062769527 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066079761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06173848 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063054017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07768013 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065953606 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068632153 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06614941 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065236284 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063279083 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069020861 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063247467 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06431116 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065935035 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078571701 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076532439 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064577041 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066719695 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066308438 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066125675 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071104659 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065737879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063579293 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063171818 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066199439 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066363333 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069435134 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062901618 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06366481 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064353872 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063102687 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065668361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066013874 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068672529 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065732411 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063598395 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065510135 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065564829 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066760758 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062354311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066012618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062361105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068180569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063978683 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066566207 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065857279 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068438051 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066221061 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072814436 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068736853 seconds)
  done (took 4.974078417 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08097307 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06961495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061943627 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063976439 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06937933 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067931804 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069788442 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067864633 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067739372 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064384465 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067857129 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068644578 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06767467 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069621253 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068015716 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06978538 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062446629 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067861217 seconds)
  done (took 2.526276749 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073463301 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067722612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073023485 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066008179 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066148113 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068008512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062070777 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064608783 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064494374 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066042084 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066164685 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068639974 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064874399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067979083 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066163973 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06579325 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06841204 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064623951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065791044 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062205852 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068268505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064598152 seconds)
  done (took 2.759825346 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095963166 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083927281 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13881537 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078851649 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083587434 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071867901 seconds)
  done (took 1.848339317 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093331997 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080837418 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06687623 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088162302 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073322976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067500381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067426139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067951406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075921425 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076243329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067866545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076001293 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075787322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075350481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07276242 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073526875 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067264602 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067247248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066349203 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084091374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067461019 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07574559 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067935029 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066988187 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067868874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075582593 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076366999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076179737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067455648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076183407 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073383301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067644394 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075905251 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076591175 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069088643 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075827576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067578991 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084431869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073253254 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075287277 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068699341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07330707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075905139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072181507 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075783596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067625308 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072023542 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067424743 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067785206 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085962552 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07306137 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074753669 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073553903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075819904 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076050254 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085812069 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075973809 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075488921 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073473375 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078439785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075280809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073385483 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075103554 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076167571 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074025135 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075436766 seconds)
  done (took 6.178258912 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085177289 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087711318 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068122434 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076014501 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075500448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067778857 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067346422 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067604056 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067557898 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067291036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108029495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067934 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075738728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075963113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068151581 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067659776 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068040918 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075803669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067427399 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086355498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067451304 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075668882 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07548008 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075669058 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076140344 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073002443 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067882174 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06747154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067485573 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067371507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072948795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068083929 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075925424 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067058834 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075444964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067855933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067503987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072439932 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067505718 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073633126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07533045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08426814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067955529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06734522 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076291792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067228653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067282743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067209607 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067385163 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067429441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076268464 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075990722 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075858768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075007699 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067615534 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067627029 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067581905 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067466925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067575342 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073050665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075250144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067377777 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086450437 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067929134 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067798025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075403599 seconds)
  done (took 6.091828508 seconds)
done (took 127.442496577 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186149221 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165665662 seconds)
  done (took 1.643941178 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072043075 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099522153 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077117953 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128790889 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067142243 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100138203 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099636814 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078248907 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065885849 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066446516 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066331605 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068518174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131410685 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066256982 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066381524 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068647408 seconds)
  done (took 2.628653 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099785703 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160105417 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099708005 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065201038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097486473 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073209855 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065010204 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074951425 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070837286 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065013324 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072940234 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070503069 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064660545 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070227128 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070883397 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072943761 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065003739 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072908344 seconds)
  done (took 2.741621303 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104966142 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091959554 seconds)
  done (took 1.508017953 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164122826 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106307184 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150538076 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346423078 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167481008 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.234440237 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129100011 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129254375 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121643438 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12475986 seconds)
  done (took 2.980304568 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100692672 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151237585 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255802026 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114758441 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072408227 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094901526 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115923267 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078191645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081081322 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080105992 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080520428 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07659978 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099290105 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073507737 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073573531 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076412944 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102584382 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072072389 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074394837 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076589499 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098847823 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065792804 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073760347 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072631985 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077607936 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077683047 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06571469 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065489843 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07713703 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074318797 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076987435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093797653 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077388217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107346231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070633908 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108589863 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076695091 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074733355 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074449308 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074506824 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078689363 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078980362 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07218524 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076375122 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065531608 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077018317 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066156277 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065792814 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078273665 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067351892 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07845757 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07725888 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107717869 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066777343 seconds)
  done (took 5.930793072 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104933727 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104752261 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071872682 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111513534 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1004465 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071595594 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102194919 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093420018 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103393538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070475859 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068886118 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070747668 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082452294 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083060251 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112314302 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104538123 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073992884 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070570643 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104528457 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10334203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069508531 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09588679 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089870714 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101994872 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067572969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070720013 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06843394 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070895738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077437613 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07943884 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070253351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081244207 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085213768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078779153 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067441024 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068466117 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068436797 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080003229 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080086028 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079144019 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077827229 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067842976 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068128759 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069535834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070116843 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068126708 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078887743 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080997555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079037753 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069652815 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070202964 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068424173 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07001628 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08044839 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078152863 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081128628 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080570209 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068505981 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069093467 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071584927 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081446294 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079662515 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079290016 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070223083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079153058 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068245035 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080938108 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084837602 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068680592 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069916952 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069078698 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0697386 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069662641 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077743671 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078059045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069821834 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069579203 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068160632 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079810953 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078098628 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068245737 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076942596 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067040111 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068449302 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069281233 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069253012 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077042252 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077810305 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07479654 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06692696 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067854332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067522985 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06614953 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075074743 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078151462 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076992278 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077192493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068257706 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077227014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077040345 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068748457 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079730962 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067322399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198167527 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071009296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080025379 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079305812 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080676835 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069920756 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06901281 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079450352 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081010642 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06919823 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079659537 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081688398 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080372018 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069183643 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083167146 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069145272 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081185883 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070760903 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08099123 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069642828 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080229513 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068929739 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068768483 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06996744 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081106622 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071172015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069294266 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070297716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07123395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080316739 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084083537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071652137 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083209604 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079346929 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070314224 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07927536 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070094626 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080143605 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069729604 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070947468 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067783001 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083341361 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068739272 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068835055 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070177828 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081460196 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068665687 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08114594 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079443523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068775709 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082272371 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08093308 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078486471 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080726955 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070698499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069354697 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069235656 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070171452 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079418894 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080123042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07077211 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069423865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079008082 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079773574 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067655439 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078301076 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078502074 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079281921 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068613405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069841689 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080475589 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081195103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078557526 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077999184 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079286541 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068194409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077882059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078110217 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067978148 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084110757 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068062691 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082613911 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079020246 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076655567 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078447092 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080169982 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07991274 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079245502 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081940142 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06681934 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066541346 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078109412 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067205319 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068379381 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077268124 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068872536 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068791071 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081688809 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067482964 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078017951 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066535118 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07719926 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066127953 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068476784 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081099891 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.197957142 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072111114 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081059444 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071046388 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07929766 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081783827 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079767763 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068926987 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07009393 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080205153 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079407263 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069261532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069034682 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071497507 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078167713 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078428672 seconds)
  done (took 18.648640439 seconds)
done (took 37.401064386 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209168917 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150786199 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198306727 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118430306 seconds)
  done (took 2.093586044 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124803308 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101055622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094998237 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065014673 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101686381 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065191773 seconds)
  done (took 1.906152183 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315372965 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210717867 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182470524 seconds)
  done (took 2.058490126 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200850313 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187836826 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.396075409 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254022912 seconds)
  done (took 2.503398167 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14636624 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089217648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066929389 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082833059 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134104603 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160680763 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101113758 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125635232 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077990284 seconds)
  done (took 2.396451764 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147068706 seconds)
done (took 12.457046429 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.234602989 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.239537255 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.121210293 seconds)
    (4/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092709928 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.072441112 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102699699 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072462738 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161151634 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.159172456 seconds)
    (10/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077901939 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.218338091 seconds)
    (12/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167609648 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171371685 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081920297 seconds)
    (15/309) benchmarking ("sort", Float32, false)...
    done (took 0.12684717 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.183758938 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107699128 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105709312 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092327241 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076943142 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07241499 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166273214 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072957729 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190376378 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128986827 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051940903 seconds)
    (27/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071151884 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072238981 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088295436 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07064792 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07159676 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216730419 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061857081 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064759477 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073575721 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194979542 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071635796 seconds)
    (38/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069678456 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076980122 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077165985 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088452319 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160983886 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.178951372 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088827135 seconds)
    (45/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189025101 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074798745 seconds)
    (47/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.147763526 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063153075 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160691939 seconds)
    (50/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072585535 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182972936 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072294654 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073253836 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089612913 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.163124138 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084795339 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099133297 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139968308 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068334223 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072461423 seconds)
    (61/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071671845 seconds)
    (62/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105544624 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072260438 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108498136 seconds)
    (65/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075020772 seconds)
    (66/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183933268 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066793343 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089299598 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195617322 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077005131 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072152113 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088286555 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087755547 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064991581 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.187673557 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172400977 seconds)
    (77/309) benchmarking ("sort", Int8, false)...
    done (took 0.138294734 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051483382 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.16667273 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087716018 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073243058 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068511723 seconds)
    (83/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07415352 seconds)
    (84/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.291106242 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159046402 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077304618 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.289687424 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06602626 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075285228 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068572136 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075527143 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132834875 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.182472027 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.067313205 seconds)
    (95/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062793194 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052979507 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071086971 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076515019 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105923706 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158656771 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066581416 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090194106 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114274158 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125037868 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087402451 seconds)
    (106/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068164965 seconds)
    (107/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100014582 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151794093 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07677009 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102126473 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073118125 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08980363 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072155867 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087803011 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065976528 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068351657 seconds)
    (117/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073726775 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.164155708 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091330243 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156628601 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131593357 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169766617 seconds)
    (123/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147041746 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065382116 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085141347 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065446881 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072115428 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107847216 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089786393 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070596542 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135287596 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051567884 seconds)
    (133/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053336466 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134205187 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079344652 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094336908 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052152486 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075732459 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065249593 seconds)
    (140/309) benchmarking ("sort", Float64, false)...
    done (took 0.12580374 seconds)
    (141/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067184972 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 0.133288606 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072921828 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089532299 seconds)
    (145/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106937347 seconds)
    (146/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062967446 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051104586 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149877292 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071551319 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078026046 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063939507 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076537846 seconds)
    (153/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051085793 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070362184 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078754644 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085049487 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.14394976 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051118223 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066079137 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08816089 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079407961 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071805476 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104890637 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149260702 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112642705 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064688239 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071864637 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072090572 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05066797 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065076599 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052179707 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184600988 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06593431 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.151102758 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072620076 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090729481 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061255699 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050735931 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.135497604 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071868997 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051973339 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05087822 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050792726 seconds)
    (184/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066289888 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064364485 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064852325 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074216361 seconds)
    (188/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065557192 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078783634 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13498355 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136177367 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.221349183 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052536235 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073245492 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.077154294 seconds)
    (196/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10020846 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052620066 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051565936 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066491145 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065853798 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095653087 seconds)
    (202/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054360211 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072035677 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065811946 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051645872 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079842952 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093755711 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051718851 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07392669 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072627378 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051452011 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051655766 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063991491 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187504661 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068689117 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051354072 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07143059 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073862178 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110878622 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087580868 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072585145 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094318046 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151964793 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067229155 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118803886 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068345073 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065350761 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088407085 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053308277 seconds)
    (230/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052314661 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065648707 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135540783 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072053241 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073012314 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05276562 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064591303 seconds)
    (237/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151397955 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071737351 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051911702 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050882756 seconds)
    (241/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051518344 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106164873 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133019333 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052129382 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06594154 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053292119 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05166917 seconds)
    (248/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088803832 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065389814 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06573448 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066639663 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052575585 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051666569 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164086731 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06675445 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085222912 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070193945 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051406783 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174306372 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080833487 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064625735 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05113776 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098245298 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051753871 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071405953 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.148357921 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072938465 seconds)
    (268/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079771489 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107025424 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051562681 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.077965945 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051782228 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052455271 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067965741 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074764386 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052176848 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051164889 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052252413 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064969845 seconds)
    (280/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05241948 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072259225 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085425872 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063893085 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051488783 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066089378 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063286995 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052777964 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072238625 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066465764 seconds)
    (290/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052050406 seconds)
    (291/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087367515 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065045667 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068184 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065000417 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07061232 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053519304 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.09994024 seconds)
    (298/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051874123 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173293411 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064539172 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131896305 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051029832 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170838762 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071269773 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069982367 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052291502 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065893609 seconds)
    (308/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085281422 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061583636 seconds)
  done (took 30.315673769 seconds)
done (took 31.682181549 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087687042 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093787155 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074327436 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092910563 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080592254 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076332777 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072267687 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077876182 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080152682 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08132315 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077922363 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054660895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073865702 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073681046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073632117 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090971827 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077743379 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072458067 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07249465 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064613818 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072432352 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065493539 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067451796 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054536248 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077633497 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07125271 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072144759 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073832143 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065341628 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065418031 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06881319 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072798658 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065177556 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077505924 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071345355 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072944393 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074347972 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075570307 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066969809 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065610226 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073928139 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065489512 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072628 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073455242 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071560895 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070900039 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072723336 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077634932 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091130004 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067932277 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07421529 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075563949 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07596775 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071948164 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069360232 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072530797 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070548805 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090793083 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07319566 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067757205 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07358515 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073535407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070831588 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072791309 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072545045 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075356064 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075202587 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070511134 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074388589 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070529546 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065079071 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072492442 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068823948 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065534639 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075227681 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076816179 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064287563 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070658548 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072211523 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071056105 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065335335 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067236726 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06709599 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07154335 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067268761 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054458481 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068673781 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071121449 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064175223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072731503 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071204412 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071423905 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066926558 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07494575 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064207689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069693667 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064970961 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064852037 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06618796 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068504134 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064500755 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067092238 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074021137 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066014457 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070514364 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07817622 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064706406 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070710636 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063785019 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063955859 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078433943 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073984462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064980065 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06748474 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064111001 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071976943 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064581803 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064457997 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064328429 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063930536 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069780561 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064109112 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065908886 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070759142 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076156577 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064176234 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066975912 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066188255 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063669383 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069026629 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06400771 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.197567163 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067684113 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062959047 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068521363 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066214485 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072690054 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067854246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072810622 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066985521 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073462213 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070258427 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070489434 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070756383 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064187865 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058483977 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06825778 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067979243 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067646209 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06584099 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068065017 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066006735 seconds)
done (took 12.364867207 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068937215 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142825239 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098783857 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094772352 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085890003 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066530656 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076332089 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101670098 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067572367 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102437666 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08730757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084318737 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111839427 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06462987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065868118 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06940877 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066954253 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081719333 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100859217 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085984097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11583969 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065546027 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094508264 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089654953 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087146292 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092088985 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066210836 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069643721 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068842316 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100223511 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085969393 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069643229 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066504348 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100118045 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09249815 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083106861 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066035034 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082140262 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066082659 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065818195 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067263098 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098110146 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079678412 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080441726 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069638887 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069190376 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067109071 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083472461 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088415071 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07836992 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086372625 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102722426 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06887536 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065362245 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064250728 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085326425 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065146147 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068503228 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066212644 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068065108 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065638292 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069082636 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080561893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081622149 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069565571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079726131 seconds)
  done (took 6.749571248 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085714074 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090745121 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082662532 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082910348 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065914876 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065723796 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066200948 seconds)
  done (took 2.010207702 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069133004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087648922 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089561166 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088589297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084208657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086737214 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075271713 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066123352 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080083387 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067782613 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086750497 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101364654 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067449559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072799725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090411198 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066376603 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090432274 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066438452 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069318223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089444177 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068024275 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082559972 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06949675 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066883063 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080543481 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066290367 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112816051 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071054492 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068057851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069265449 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064457143 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106600578 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080114735 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075383029 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066121829 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080388043 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080203614 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064615448 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082549907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07125713 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080049831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067549505 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067029623 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064363144 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070469959 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076145911 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067377434 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066994173 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068937112 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085876132 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066638596 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079542478 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06941259 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068907719 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067764208 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070119679 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075793742 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067016055 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085786117 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068098483 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082964016 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082383033 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080219536 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082853965 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068957312 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08014653 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080362927 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069010641 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068277471 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070281337 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082394661 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064877096 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067623518 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076362203 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068125466 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089114555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088697232 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067642306 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075558988 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066642636 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066701051 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066160982 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088714123 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068825167 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065900528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07058739 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069153058 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064635146 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065306132 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069762186 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064484099 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067414981 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068770314 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069181638 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068856289 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082347894 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068252957 seconds)
  done (took 8.713893602 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072246813 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069554486 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069165953 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067575698 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068253151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068061477 seconds)
  done (took 1.905722894 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096439597 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069220538 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080825636 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071823359 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104101823 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086880217 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087006405 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078742864 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084277781 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078425886 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086587608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088817185 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092821302 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072845199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08683567 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072279976 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08745815 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075387798 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078327824 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073045269 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086787089 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072856923 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07267082 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081679786 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076019536 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071780469 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066904064 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078931292 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078179154 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079013317 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072309979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075331841 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070659042 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078378605 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086830958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071054171 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071946258 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077432711 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072417699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075596448 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087328182 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073007513 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074344812 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077144156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078446727 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070861493 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077181761 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075556931 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085936318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076514962 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076755484 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071742437 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075050622 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077034339 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07054103 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078253658 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076463441 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086117679 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071962058 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070184435 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06868523 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075073941 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077596176 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075021505 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078444835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076725052 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070288083 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072546875 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072654117 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07143678 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076616237 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068627702 seconds)
  done (took 7.048835957 seconds)
done (took 27.882149164 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545128029 seconds)
  done (took 1.999440439 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600594818 seconds)
  done (took 2.082161135 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.80994763 seconds)
  done (took 8.289640128 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39462789 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474645014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.697235471 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130659604 seconds)
  done (took 3.219752523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.679857151 seconds)
  done (took 2.171191743 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212951487 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196029487 seconds)
  done (took 1.909392497 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382477283 seconds)
  done (took 1.862437044 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106779668 seconds)
  done (took 2.588789031 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266077555 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165763327 seconds)
  done (took 1.915739878 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.463679776 seconds)
  done (took 1.946102969 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.847571155 seconds)
  done (took 6.331485228 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208570932 seconds)
  done (took 1.73971324 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242488594 seconds)
  done (took 1.729494464 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.782468417 seconds)
  done (took 3.268410124 seconds)
done (took 42.542928698 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082493229 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080286567 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080636934 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077480955 seconds)
  done (took 1.791854298 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079349514 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073062349 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076311766 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07289959 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076875108 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071790311 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073794901 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076154205 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071718155 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072519784 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072226455 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071651753 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074357936 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073938445 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070400649 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074605879 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076083039 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072039492 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074998712 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072126106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070235519 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074165063 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074499253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071653276 seconds)
  done (took 3.257498402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081386899 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073642828 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075072475 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071918228 seconds)
  done (took 1.800773452 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07931884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091099737 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088580414 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07741872 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.0920928 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085338103 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068667472 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068469776 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072687838 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076723058 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067612257 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095531 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087128436 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076415976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07826412 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065526234 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067821058 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086628996 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076966125 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07737434 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06933594 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076243635 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067140238 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087183974 seconds)
  done (took 3.371693979 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079627804 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103392177 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076852005 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086948539 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088906342 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06563382 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07377574 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088375434 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121948831 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065036161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069645347 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065092821 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072060684 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06455426 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075712374 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104388195 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107485065 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068117382 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095367194 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065181323 seconds)
  done (took 3.142467661 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075047165 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070331426 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065744141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068539778 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077021027 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072999268 seconds)
  done (took 1.934359048 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070363405 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06844842 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06762953 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066760842 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071085945 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066569985 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066066945 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06701784 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067625861 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066553025 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066445153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.0655609 seconds)
  done (took 2.308287225 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172952215 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068859455 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068801579 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065658975 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070931023 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065507777 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079635272 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067592265 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090260433 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066159946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066074638 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068025274 seconds)
  done (took 2.45330888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208232759 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075790369 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235853808 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135941632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110819564 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114828003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104143055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112887007 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142998296 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101242782 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167401782 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165341865 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106620642 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136444523 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088651678 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097038734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155072882 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162272189 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10309642 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16443174 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143516036 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12408524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146233173 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100925077 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10572087 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121007345 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07086671 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080232355 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169575112 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131036772 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145399984 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110251859 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09271094 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174436379 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169027655 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140087409 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133152546 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082998214 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102990924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131144858 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195782283 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087655271 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160374382 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243706767 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080362292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132893274 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120771038 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119529163 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105862132 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089853272 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145701182 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182069746 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138226628 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087340673 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112106905 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115079717 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1156997 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1034987 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182705973 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160571316 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127110559 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071220804 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099119361 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152388842 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131196894 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108029103 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126258272 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094032908 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133266935 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153093214 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118203716 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143476193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12798889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087881642 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118510977 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139419926 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12751549 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168099076 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123399569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071862739 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123397211 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102436939 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080277424 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140870838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074454642 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173171996 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097911852 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105022379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112253048 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107763638 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107752762 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158318102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13962792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244348318 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065942696 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1043466 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120845318 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147110842 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088059759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108110683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116155142 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077688099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138400712 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074996983 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123100685 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074744361 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124548014 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132101348 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075803507 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121394106 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101116174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099946783 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133970071 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160251059 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08887119 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082116015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166192764 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122142634 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103693283 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144690344 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156297627 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099081185 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103424542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149132337 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178678076 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08889542 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16268705 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107492454 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08364929 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086878678 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123732194 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112231619 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121518618 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081786821 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117364255 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167304178 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074333664 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094347645 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13214017 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078160177 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07983903 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102377485 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099564922 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093926205 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09932451 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103156401 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135632534 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119710837 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101900591 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268719013 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099569756 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170338292 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088572902 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09962891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104402347 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069377257 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13714888 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156870784 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078938995 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164163742 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123350322 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105585748 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120124845 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082673326 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138963127 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078484859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07074239 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143143087 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109924436 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109806432 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150348616 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104280563 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127750234 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118440509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134805902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133476975 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129029257 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104981202 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087596947 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110895723 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125075006 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072271101 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090701549 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079652466 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104005163 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094976 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082648954 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142624899 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12398769 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09958853 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110752364 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095693089 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145503628 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076416047 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128536455 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117567688 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092950554 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150886822 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150622925 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130073553 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098148963 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141257396 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0687436 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072311052 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232233909 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124954763 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083887474 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083946288 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117115813 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146530062 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129093887 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136768177 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11196541 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121266795 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154674038 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069666253 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114777481 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147911524 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121436368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104904273 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090407002 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098511968 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142545709 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107390972 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182411742 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114325362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125645695 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152991761 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099704315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079204015 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107052179 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135306703 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104142182 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144117556 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099550236 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087215859 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110089698 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073819833 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099612684 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126701804 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119227643 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135104681 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113677057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131951509 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076239725 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115694996 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118685175 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120927697 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063436312 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119233258 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159471829 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093381536 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118120329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151283586 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078240943 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12259657 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320564682 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146481712 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084909067 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109961102 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117903326 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127993587 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119656025 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140566313 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107365406 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135220624 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108092721 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085533572 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087036859 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096808609 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104385117 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094607871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108019476 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114547216 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094697541 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131857003 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10235448 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109549032 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118238422 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096376797 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089754463 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096066145 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173607402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119704632 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172020421 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097784298 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144956264 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163248031 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074445939 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078613174 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077881633 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13925546 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083644405 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129934812 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097245318 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105705179 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123005408 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141567453 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094042369 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06758765 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107564207 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13273908 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11130096 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097467675 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103721916 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16111448 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099483832 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079243198 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112846799 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103749093 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099997593 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313908492 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062045675 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097880766 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075611633 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080995786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128005095 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152704526 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080934302 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10290247 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118255935 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111220224 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127683834 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102525986 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099710938 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113893175 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149290023 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127868784 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089835847 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111981291 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129091966 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156993817 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105221924 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095006184 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170746225 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168431716 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15936811 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09059655 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113340766 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113193012 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107725619 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138626971 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082597814 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163451103 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081788196 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135195122 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103868033 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089537986 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129653595 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098499339 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088130868 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145648518 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115953143 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082013093 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076990786 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116602313 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11899424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105208667 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074604953 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137563321 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072093284 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131286719 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166751599 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079891855 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248494788 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097642093 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080345164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108634897 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102522743 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089630735 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098524122 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17330744 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088684597 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149479465 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141669381 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113106307 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136026957 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099283365 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636447853 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077417894 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151614169 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116015392 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172349312 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097752317 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11706555 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108626511 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124467899 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145069619 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10532283 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176990018 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132341416 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115354172 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079738968 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102165067 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102856271 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088575344 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104361363 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11287024 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115500284 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093476683 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115161911 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122825708 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081563127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095016162 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15481497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115789503 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14231593 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140586361 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083704223 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116511121 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137459229 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078853886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120719496 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150397519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103632866 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239846055 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080794195 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102409948 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169663417 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072817145 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163483549 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120046452 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108736826 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113152295 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115292564 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131715522 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10747205 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121694646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093895661 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109755468 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112723589 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081478993 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077387936 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10441281 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113097373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096961822 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098201934 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098041196 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151602711 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071014731 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095414596 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102854593 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145204866 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174610886 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087655281 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082341418 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119039927 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112354634 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112746967 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119826471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078894202 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08192822 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081340186 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076890249 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107939683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111502732 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104275189 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110640556 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163871807 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082305703 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225167222 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09462207 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103415042 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069166673 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077833408 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094639325 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096193054 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106925846 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09955406 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166883465 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093297006 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088752764 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091244178 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071802914 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081032267 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124211775 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106658645 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114318721 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093967431 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061100599 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105007032 seconds)
  done (took 58.416866089 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108997963 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083104006 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09694825 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.161062809 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148319525 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234642373 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.164468412 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210711423 seconds)
  done (took 2.86489383 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069899142 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093674691 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09869086 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082279041 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068076086 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067844895 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22360824 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07984569 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066069196 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087924939 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07788426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068307185 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415962342 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065645395 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066811357 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061480155 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066741504 seconds)
  done (took 3.381137159 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365845994 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599313933 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371077203 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072331206 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.039770858 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088320957 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.124344391 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127304892 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072904654 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53824888 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.695786225 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124885043 seconds)
  done (took 18.837114997 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078384879 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070446242 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085092397 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085007702 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073020847 seconds)
  done (took 2.066581998 seconds)
done (took 107.146148521 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082865954 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392450173 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054506595 seconds)
  done (took 2.090269822 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085905555 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085383779 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08596361 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083426399 seconds)
  done (took 1.96526928 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07737213 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076269515 seconds)
  done (took 1.769270704 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225125913 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.14065468 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087234657 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084748719 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079220551 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078966923 seconds)
  done (took 1.866629593 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074981706 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075791599 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073506652 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076552023 seconds)
  done (took 1.91804334 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079269302 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05318768 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054954895 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056041474 seconds)
  done (took 1.86343081 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08849419 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079430878 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078590448 seconds)
  done (took 1.864748495 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104333454 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085303617 seconds)
  done (took 1.809114133 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085222831 seconds)
  done (took 1.704660928 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101192522 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114513214 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128852016 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109944819 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137206803 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109296233 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085909877 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087206783 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07736835 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087779489 seconds)
  done (took 2.659966558 seconds)
done (took 21.659112942 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081881912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367065938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361733112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090324059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668986051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357521588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996925101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092803659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114263024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068070041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085105993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649101683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989218993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323196276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975148968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.418342741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650692997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068683496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0688849 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068250613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982346894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067953289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068220016 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068753491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65175932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372531298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068436382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.417294366 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06843184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07001379 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356012504 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068541748 seconds)
  done (took 16.357897847 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07366804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118781341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074482749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083921213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071016662 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069769935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071969258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069276803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120329175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068368529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084903689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068215756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072496877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069221039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087515257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068999622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069179146 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068981885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068745957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069022072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086989806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068218852 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068525823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06876804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068369815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079783658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068551242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068689624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068568637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070438287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071591402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069297327 seconds)
  done (took 4.037183283 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118489421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126384357 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074780716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10384763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113065974 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070320654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143753719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093272508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128109347 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069008505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08505752 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068430515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101391529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069069611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08793991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069024203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069981142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068949811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069239794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069387346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087952027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068565277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06912528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069196418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069280234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081713167 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068953649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069275386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069251728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071054441 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072135801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069434466 seconds)
  done (took 4.298018256 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075682069 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077520347 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084382275 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084078657 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069583701 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072501276 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073163554 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069876868 seconds)
  done (took 2.243425784 seconds)
done (took 28.560421506 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08175485 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069409212 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073116875 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080834185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07367213 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079244005 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067383971 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074844304 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072487409 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073284029 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07509226 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067906372 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071210097 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067266338 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073831671 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067982038 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07961068 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071902857 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079436129 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079926131 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070180176 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073483115 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074297762 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079623781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079729723 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07922617 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078333289 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073316583 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069938548 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070924113 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077197128 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084317806 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068936668 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079671722 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068056903 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068250684 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072008586 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068341554 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079687869 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077483868 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069875432 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076663181 seconds)
  done (took 4.729668971 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091556356 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091679234 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084672389 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062268813 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066635444 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065864399 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089038862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060250439 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060177877 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088193231 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05654352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06016043 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062644284 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054471741 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059805835 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057389303 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062082043 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05647249 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059750635 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060496335 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058303431 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054421389 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060674837 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06327953 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059936329 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062241343 seconds)
  done (took 3.355618387 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077924219 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085183985 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089295034 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127770937 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10464797 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077439697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078256942 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093037741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086050087 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067530459 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071024142 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094295256 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088651481 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074142152 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068058097 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084914324 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082730643 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06965696 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073936072 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091453591 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084976529 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084117561 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093111098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081276059 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066996114 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069893241 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071577464 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.092840424 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072676354 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077168877 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071468861 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071480368 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069839136 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079387363 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071534003 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069285914 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090981811 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077408207 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078248671 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068235086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071278581 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068867801 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089878009 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123555896 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067653817 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074392277 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075791364 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077159403 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068014589 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086719719 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07909192 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067442842 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071060492 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067084247 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067782779 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080599353 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069820283 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070114538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076627532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070697818 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085882708 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071504999 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083030455 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067516679 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075309423 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06665575 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068693034 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066871531 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092693284 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069478487 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109015262 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069166263 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068893766 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076530785 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075651866 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073708049 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068164191 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083121631 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077994616 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071741991 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076583641 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071355402 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070888208 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088148874 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070601044 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069447638 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069082363 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074275416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070356909 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069480181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080711018 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067814646 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070578444 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084240177 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067504042 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068883187 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073545646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072169347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067325392 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07799909 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07206061 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067716707 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076283906 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067037059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070489209 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07756184 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073163284 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066179598 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071980556 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07313269 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068426227 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068679805 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070242467 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068981707 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075820899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073804972 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071857603 seconds)
  done (took 10.596541101 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166984954 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155325405 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07140659 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146099273 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07740568 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079691385 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147918949 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095214888 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068583886 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069051832 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069078449 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110224779 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106700573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116242432 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078976756 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068426115 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083853225 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114227261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149863374 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14388594 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084059903 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077865883 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070954241 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069299216 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070738761 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078288648 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086120419 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076745216 seconds)
  done (took 4.413789717 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08366616 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09789227 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074271415 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090053685 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091461192 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067940218 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070590206 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069632443 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080776102 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079305487 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067988235 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073870948 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07498547 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071525564 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06894664 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074943924 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075359908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069566144 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071776044 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073107772 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07861634 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080866739 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071984743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067408795 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074507494 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067223865 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064811885 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084829966 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068704757 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090313185 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066061547 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075557398 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082368828 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069010927 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067825616 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068062001 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068038458 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067969104 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069946881 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066678543 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066742051 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058283532 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067144626 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079744155 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074227065 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057105593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073108865 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073604323 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073070382 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06543206 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070891064 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070441433 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071064722 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075073566 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072867022 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073220166 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068893938 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065940973 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075912696 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067674141 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064831135 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066249258 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072273369 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066076356 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075359943 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07230318 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066382503 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067473102 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069703519 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07365406 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067500449 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071287189 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065483175 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069647695 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072420675 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069562921 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068668108 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066450226 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067484557 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067880284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055796989 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067788874 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054025851 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070965043 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066168921 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066420436 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067582713 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072806607 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080029566 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069100385 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073685048 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069183824 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067072233 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070645433 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060456472 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070475883 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.0830175 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082723583 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067701716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065630968 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082175183 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072487083 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067316126 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056542615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075208712 seconds)
  done (took 9.16856534 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093869699 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071194538 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084052016 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09156007 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086937356 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074864947 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077103742 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069845649 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082843091 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073867718 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076747543 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068484972 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077621372 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077485173 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070685393 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077078588 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072384036 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08285764 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082456728 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069067812 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076217617 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08060894 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089766501 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080852645 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078563631 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080577759 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089478575 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072924215 seconds)
  done (took 3.897067859 seconds)
done (took 37.792635467 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.727631763 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.900048346 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.713738538 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104251604 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.803544697 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.93629971 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.779789844 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.716483039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.93050239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.748631147 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.949884981 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.783486797 seconds)
done (took 64.746009029 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.773601114 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.858550403 seconds)
    (2/2) benchmarking "String"...
    done (took 1.989722602 seconds)
  done (took 5.499541738 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.012736629 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.315859601 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.955751796 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.711117874 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.716193754 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.016647112 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.531484314 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238364503 seconds)
  done (took 30.135901518 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.851941708 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.942671848 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.399396288 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.4653097 seconds)
  done (took 15.360809874 seconds)
done (took 62.514678693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.71674506 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75517568 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.724165069 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.694220467 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769899644 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.731852273 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.122049825 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.7464317 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.710353114 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.703205804 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.7133406 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.14290429 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.715067315 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.066579252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.715743944 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.718194249 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.76810516 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.193887959 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.866538018 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.732064291 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.724824281 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.863345083 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.713686383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.722531425 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.714846056 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.710589904 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.152524089 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.713509415 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.33124111 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.719314777 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.740968397 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.346366054 seconds)
  done (took 202.411650242 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.712588571 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.738953442 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.83427296 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.742989554 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.204270456 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.895140757 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.833205958 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.219988657 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.718599767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.728860725 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.840037273 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.711413056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.852765488 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.712498078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.755814444 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.790127445 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.954445953 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.868196006 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.756002665 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.887989392 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.719770478 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.778380498 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.738079051 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.823635721 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.72639058 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.738409401 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.748160195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.73765169 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.906977672 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909667634 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.763335471 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.761153421 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.915067336 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.585946458 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.719560225 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.718967332 seconds)
  done (took 167.701428354 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.889839078 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.718272053 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.714487386 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716878122 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.721127649 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.715592887 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.838308064 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838364854 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.173998621 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.193681534 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767480511 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.530828371 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.711820096 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785569016 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.726891256 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.7130544 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.731607538 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.742386367 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716514844 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719992287 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837242003 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.727826132 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.876226395 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7193658 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.71854249 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72623793 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.086807037 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714325216 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722552692 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.962360951 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.71718229 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717712778 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60866033 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.48138407 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804190487 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71461077 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718921739 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.713902317 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.933869232 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.711506672 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.718913888 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.714087632 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.717228356 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.892749126 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.717695503 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836410692 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718110797 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221599527 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.718620171 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715981674 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.468653167 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418186601 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.723228179 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.718605688 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.719760506 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.717871985 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716102318 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.727349888 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.302016868 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.795330605 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.724739314 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.724998436 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.729611737 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.724512272 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.82968895 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.721134785 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.863025921 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.781073503 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.938086934 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843995628 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7259621 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786546905 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809948605 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.713371726 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.718480703 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718740829 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.722615104 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.802205834 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.718753452 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.838840655 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.725453329 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.720113847 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.716492724 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769764835 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.787377984 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.717959363 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611654387 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.723833614 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717769675 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.047147669 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.793103148 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.720272132 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.722908387 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72193592 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.845621226 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840643636 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525271046 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.72075625 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.723485652 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.349423019 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.90338121 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.921226444 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.716563446 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.004455003 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.724573402 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815259429 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726019038 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.722086741 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.722741547 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.721256687 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752654314 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.717872622 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.78262835 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.717695191 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.090455719 seconds)
  done (took 395.913241366 seconds)
done (took 769.625938912 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.37983785 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.344217563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.466344107 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.363365905 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.342045487 seconds)
  done (took 13.554858641 seconds)
done (took 15.214411715 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.812615714 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.814850568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744443946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808965231 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.741388878 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.807322466 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.788537732 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.743074238 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.786085048 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.747495605 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.777000643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744919118 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730193154 seconds)
  done (took 24.703866806 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.956703611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967947376 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.792370857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.96792841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774351927 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958408889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887765555 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.879592873 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876137788 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741875424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.732458045 seconds)
  done (took 22.19270902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.966028517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.959727863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.795058902 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.963262063 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773293097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.965190823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.886175028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877021258 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.881522177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740027171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.736439931 seconds)
  done (took 22.202981372 seconds)
done (took 70.75841048 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.730328842 seconds)
  done (took 3.384695067 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.753831385 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.894993566 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.734268167 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.734206588 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.729862155 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.732577129 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.733495524 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.732638019 seconds)
  done (took 15.711577735 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.731111194 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.732747545 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.726950779 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733907539 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.734982852 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.73242157 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.730648962 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.730433103 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.731438298 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.733221001 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.734359753 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.730509961 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.732367873 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.737662824 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.730245527 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.730852478 seconds)
  done (took 29.375184462 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.728273787 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.735490291 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.734603254 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.736052545 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.733952139 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.732479894 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.737234716 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.732004017 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.733812635 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.731508981 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.736469731 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.729381154 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.729078102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.735662691 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.732820705 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.73281056 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.734391614 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.731607262 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.739732541 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.732527213 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.733702042 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.731567965 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.731223807 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.73595681 seconds)
  done (took 43.262197623 seconds)
done (took 93.392145962 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.657971739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.174580828 seconds)
  done (took 8.499358074 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.74168895 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.734886784 seconds)
  done (took 5.186594766 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.737844373 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.737060503 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.733163623 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.736943799 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.739051546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.735247666 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.733084105 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.735464762 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.740965323 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.735836515 seconds)
  done (took 19.027352183 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.738341614 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.740000966 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.729068472 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.737213882 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.735118267 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.737547478 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.739387786 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.735319777 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.736578071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.731934778 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.735025285 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.737569531 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.732572584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.738702914 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.733385672 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.73929705 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.738065989 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.736264919 seconds)
  done (took 32.916064639 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.736601296 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.737641487 seconds)
  done (took 5.143584144 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.731714432 seconds)
    (2/7) benchmarking "second"...
    done (took 1.728669112 seconds)
    (3/7) benchmarking "month"...
    done (took 1.733525316 seconds)
    (4/7) benchmarking "year"...
    done (took 1.737153149 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.73499528 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.731932111 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.735132372 seconds)
  done (took 13.798419024 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.738963743 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.900035064 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.977679171 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.397744712 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.738386355 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.73913126 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.681544725 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.742182681 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.741103266 seconds)
  done (took 19.323990733 seconds)
done (took 105.559181275 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.563714092 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.732654648 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.103218347 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.790451335 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783008467 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.078485665 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.754907457 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.957551043 seconds)
done (took 42.429199168 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.776560459 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.290962538 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.319631799 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.49872669 seconds)
  done (took 12.77817071 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.720030411 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.291090776 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789900052 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.325397779 seconds)
  done (took 19.848617001 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.106369699 seconds)
    (2/2) benchmarking "read"...
    done (took 2.094003945 seconds)
  done (took 5.869702114 seconds)
done (took 46.94619795 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734030852 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.733901905 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.731123182 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.731120415 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.733357905 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.735524577 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.731274244 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.732812064 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.735278171 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.733295079 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.734449137 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.73325385 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733781312 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.732872775 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731128077 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.734103081 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.734988113 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.732682537 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731802369 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.732077872 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.732758019 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734426133 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.734058215 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.731897357 seconds)
  done (took 43.257564672 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.735322734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.734985709 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.734825213 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.736640135 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.732641504 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.735997462 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.73528675 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.732710832 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.735852841 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.73537109 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734328209 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.733042893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.734385865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.733269258 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736090883 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.732832097 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.736183589 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733130653 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735706783 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.733559525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.7367714 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733869215 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.735718341 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73533234 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.733744161 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733751567 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.736097899 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.734850229 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.737561985 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.734424207 seconds)
  done (took 53.708935201 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.743228286 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.745690293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.739017427 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.736355758 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.737018996 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.738933287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.737461401 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.738270123 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.737770387 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.737772343 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.736740059 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.737482641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.738207859 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.737284132 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.736287885 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.739605853 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.738594406 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.73829258 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.739356873 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.739233416 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.738820101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.739154871 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.739059827 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.739042741 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.739369006 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.740314636 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.739621833 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.739140739 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.7398923 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.740737733 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.738609858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.738267385 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.73955702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.73959931 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.738724193 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.739221804 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.743383476 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.746891714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.738795448 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.73908086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.738166558 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.738523972 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.738003366 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.73995094 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.739335027 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.739954182 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.739845642 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.74059487 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.739926571 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.739104578 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.741341958 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.739635822 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.740096983 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.7392827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.739471162 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.743731309 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.739501864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.740665306 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.740409708 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.740260547 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.739676929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.74187478 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.740349242 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.740903658 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.742394199 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.739834673 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74006471 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.744956144 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.741941354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.740910545 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.742123131 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.742246346 seconds)
  done (took 126.932436049 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.742591258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.739419042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.737555188 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.737968629 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737569351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742455267 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.73700707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741139999 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739717815 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.742338878 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741617662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738420061 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73925387 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740496855 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74181484 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.73923416 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.742439307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740209686 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.742220395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.742739714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742413183 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.742058247 seconds)
  done (took 39.960763308 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742489193 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.741955702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.740461852 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.742989301 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.739985383 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743069319 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.74195646 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741322548 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74310264 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740193102 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73943515 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743468252 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739892663 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740992176 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740088066 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740619734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743934063 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.740689176 seconds)
  done (took 33.018178764 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.738792698 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.74178625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.745033757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.742427357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.741988278 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744485184 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.743677322 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744308507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.744636286 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.744092871 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.745141861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744503336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.747051053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74451562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743891979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.742770063 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.745749144 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743538043 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745767965 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743325674 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742064894 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745849698 seconds)
  done (took 40.03727617 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.74541796 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.745828553 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.742817859 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74353091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744982128 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.746250402 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.746983355 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.744799059 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.746203123 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.747778196 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744212703 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.745575398 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.744396881 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743880775 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.746278164 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742659625 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747597267 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.745986969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748612415 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745263748 seconds)
  done (took 36.582479956 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749580359 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747744244 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.747527876 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748081192 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748327346 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.747593605 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747968462 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.748163951 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749176602 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.751360141 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.748965319 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748417377 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748944203 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.750610498 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748594924 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748606505 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748642749 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.750382882 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749099123 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747561704 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749971171 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747436688 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.748140175 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750411089 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.749739835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748990005 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750542553 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749417772 seconds)
  done (took 50.644863902 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749383199 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.748766321 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.746315002 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.746932443 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.745368888 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.744820008 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.745838884 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.745442059 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746521218 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.745389211 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.747143673 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.748995449 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749051909 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.748109411 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.747518633 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.748745188 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747281793 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.746081067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745362861 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746152583 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.747163631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748312514 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.748862942 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.744447668 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744446167 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.74818129 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746143815 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.746108314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748068635 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.746296496 seconds)
  done (took 54.083285628 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.767750049 seconds)
    (2/2) benchmarking "in"...
    done (took 1.768389639 seconds)
  done (took 5.213073179 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746393111 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748652954 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.748974171 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746201417 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.747121766 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.748042555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.748684052 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.746794977 seconds)
  done (took 15.657858277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.74642604 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.749192452 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.749302917 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.748562446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.749126666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.748217547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755393938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.748544832 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.753531273 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.749541868 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.755196095 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.759109472 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.752155478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.748638784 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.750425529 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749354207 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.748548061 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.748529782 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.749575797 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.749255101 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749494005 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751391535 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750644461 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.74593884 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.749020783 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.763500744 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.753242344 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.746951228 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746894042 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.748691756 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744883545 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.74473056 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.747690257 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.746950011 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.744813756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.746603428 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752186976 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745508381 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.755601408 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745896799 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7474046 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.743151648 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.75080819 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.748886286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747178963 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.74913115 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.747525917 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.745664318 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.747043847 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.749702282 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.75491754 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746746804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.744989976 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.753413187 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.748379561 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752666531 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.74789095 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.749237237 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.759293959 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.756107442 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.757577033 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.758091127 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747706165 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.743955748 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755897762 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.777019954 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748921841 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.742064144 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.741347938 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.746751253 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.750527454 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.761769109 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.758396712 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.743110631 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74653101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746976493 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745605403 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747747818 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748937466 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.748021815 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747442004 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745531082 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754538432 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7736671 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.74576929 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.746260397 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.744870918 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.749374743 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.746058459 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758524645 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.747360094 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.74797341 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.742750687 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.744731265 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.747617497 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.74436256 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.743641648 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743534103 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.739922828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.744531008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746751947 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751166256 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.755035801 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749533826 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746695373 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.752233858 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.747480891 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741329202 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.749849145 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.750974841 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744132773 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.748132049 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.756232775 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.741325525 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747525685 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.757894499 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.745118393 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.746880655 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.747020437 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.744207985 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.756349544 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.774238728 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.746986381 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.744951178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.748933215 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.758612499 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748912994 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.749246012 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.747936568 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.742599618 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742434926 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.746164044 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.744397162 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.745667569 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744980126 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.747718889 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74636251 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.748269181 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.746262062 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.744040778 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.749691817 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746642479 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.751658643 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.749648529 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.747982383 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.749977825 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.75253422 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.743882252 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.74654313 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.748805842 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.743453536 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74633786 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.744846624 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.74809637 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749002225 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.747390923 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.747353605 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.745414437 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74538887 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.746795404 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748054826 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.744833557 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753240181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.749067602 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.75281478 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.749756499 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.748281816 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.74863147 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.747960616 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.73740425 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.73869389 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.737397069 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.742610134 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.750476689 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.741120695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.737989228 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.740177437 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.738690728 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739067261 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.739545244 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.746231833 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.74753891 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.737284768 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.742795801 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.737493271 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739003748 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.735530803 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.735615474 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.738716244 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736740827 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.740597337 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.750818138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75039519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.748023369 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.737464934 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.74344234 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.736690468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.743012671 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.739342134 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.738039795 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.737638966 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.73688126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738379484 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.738146494 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.736594933 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.7359942 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.737496765 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.737104287 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.741140052 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.737565275 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739847862 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.738987278 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739037141 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.738230429 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741677215 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.737533926 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.737161548 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.734680735 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.73871239 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.736608824 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.739115388 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.735989721 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.740326143 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.735096625 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736894951 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737528862 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.740514087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.737650044 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.737986396 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739444927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.739713829 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.742565201 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.736451394 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.738524285 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743039783 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.735799766 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.736677252 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.740300045 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.738568175 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7339205 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.741539057 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.748611602 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.738193759 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.74246419 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.738863224 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736362513 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.736961701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.74175316 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.735828767 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.738967423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.737225832 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.738189026 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.73450539 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.73796509 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.739300968 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.735121495 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737928037 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736515362 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.736839898 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.735551375 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.741183993 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.73563744 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.735477531 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.737887236 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.748413954 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.741072594 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.741811387 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.737838463 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.737177813 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.740201513 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.736582695 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.73475734 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.738792733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748666257 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.744763807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742275332 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.736920805 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.738276443 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737882834 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.734499178 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.739289967 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735060972 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735473366 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.739736795 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.734438199 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.732012559 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.73496137 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.735094725 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735484288 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.741605915 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.738405066 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.736811672 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.734615335 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.733639882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.736698697 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.737270007 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.732364124 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.734425802 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.733313036 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736161671 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.737238384 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.728786544 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.735014032 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731508693 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.733671759 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.729099961 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.731713368 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.728871315 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.730258747 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.732483099 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.733166837 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.741608705 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.736811464 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.742051064 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.73383867 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741731789 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.731582688 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.735379427 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.745127733 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.728197592 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.728413068 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.730553471 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.731265658 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736374265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.730868151 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.729998054 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.73620225 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.731833936 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.730316438 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.730914535 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.730282665 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730022815 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.730541989 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738980362 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.730716541 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.733955231 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732246821 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.729046635 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.731162409 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.732330392 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.728366623 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.734978217 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.731202276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.730712465 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.729090916 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.729848255 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.730440289 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.733765016 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.731784644 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.727970413 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.730819896 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.737169779 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.736876447 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.73332314 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.730604568 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.73721764 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732996282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738970265 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.734117721 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.733592399 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.730150699 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.734320085 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.736143137 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.734005766 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.736506369 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.731590885 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.732293607 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.737977032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.729926686 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.733153611 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.733651581 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.730153461 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.731092471 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737734188 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.758775427 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.735166458 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.733928547 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.725982282 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.732834904 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.734803757 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.731935257 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.730272497 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.739310147 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742558885 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741499793 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.732669933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.7363483 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735344549 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.730426538 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.730721492 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.730214129 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.729306743 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.730359634 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.733396703 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.733794746 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.735758635 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.731701076 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.734440029 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732858461 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.733842176 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.739334117 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.73094939 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.731903461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.732965788 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.731545369 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.729135676 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.731964298 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.732679134 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736191379 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.731378908 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.737013268 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.737025309 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.74110815 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.736639292 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.732544335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.73242121 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.732456594 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.731958052 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729364933 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.7307084 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.731479976 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.733256258 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.730698325 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.731268694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.729627131 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.731445895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.729899179 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735313938 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.732108935 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.738231236 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.730805456 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.727135563 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.730726408 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740143502 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.728986817 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.731200866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.741582331 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.734259937 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.742998173 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.74491272 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.732990212 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.73053739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.734160391 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.739417996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.728858872 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.733340855 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.731951721 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7333672 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.728109055 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.734212157 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735888801 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.735211432 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.730405214 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.729028061 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739279065 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.730971058 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737309896 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.728388061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.735986045 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.731529603 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.726583076 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.730860212 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.729042328 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735788462 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.731830793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73027543 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733010542 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.727295197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.731427358 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733998154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729545556 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.733137904 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.728988256 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.729752814 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.732043862 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73172737 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.726097229 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.73013826 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.729940218 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.736428943 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.738122077 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.726183688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.732312704 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.730276854 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.734360771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.731823784 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729500219 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.725292279 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.727695648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.728712338 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730134147 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.736536918 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.730854616 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.730222117 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.730099591 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.729836756 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729619392 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.73679472 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.74001223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.740040245 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.728630585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.729113852 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.732330718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.730808779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729646971 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.728531447 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730013306 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.729217981 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.737783028 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732099097 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.734600804 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.729558032 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743112567 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.72988294 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734346166 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.727269477 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735875294 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.726215205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.726726402 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.729055715 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.732474213 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.731809249 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.73851566 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.731274119 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.740442924 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.729548151 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.732298325 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.732421887 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.732410909 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.738822859 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.731977937 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7313433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.731344305 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.73175877 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.742351052 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.728585585 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734279807 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758900353 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.728423222 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.730140816 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.72772777 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.726357317 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.727815394 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.73039009 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.730485827 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.729128165 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729701638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.729512667 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.729986634 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737763105 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.733452011 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.729487341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.728422894 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.730329425 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.733829652 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.731754398 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.73468755 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.729589015 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.731583836 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.732939211 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.736153209 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.730406289 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743359579 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.743137079 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.730826065 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.738143447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.734412784 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.732040549 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.73228176 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740832292 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.739985929 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.733634574 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.736340588 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.731227683 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.731031956 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.730599829 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.731822256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.735433495 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.727780762 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.732400095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.745016894 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740931146 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.734515143 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.734501503 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.731217166 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.732546332 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.733988185 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733398183 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735476423 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.734105711 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.735630919 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736960968 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.732197325 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.733002371 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.733412007 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.742476746 seconds)
  done (took 1038.061407947 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731203884 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7289797 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730520553 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729839308 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731418481 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730152548 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730551936 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.733294448 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.729575669 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.733884117 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.735724911 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733892547 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731435019 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732534175 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731208354 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.736446757 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735471633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.733916018 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.736670157 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731219805 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.73351964 seconds)
  done (took 38.042591523 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.736754433 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.733640331 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734122025 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732318386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73287591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.739770965 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.73327761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.734143846 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.735393945 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734632719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.741129618 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736471978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.733899762 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.733035816 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.730927956 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735619382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.737604328 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731383386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.733848901 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733489274 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732521853 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730979584 seconds)
  done (took 39.828358424 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.736113908 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.735072435 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.735391146 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.73292997 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.736335656 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.732398392 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.734807107 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.738027534 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.736125965 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.735477328 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.735029339 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.741521992 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.742152545 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.73955564 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.735150259 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.738371514 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.881037635 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.734249882 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.735039535 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.735217825 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.734608913 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.741779348 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.734871428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.734698478 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.735634842 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.737064132 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.737904363 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.736702541 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.738037477 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.736865978 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.739059537 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.739338706 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.733368916 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.736085034 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.733958305 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.734463939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.741871592 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.737429079 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.733918837 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.736392022 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.742610844 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.757631388 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.73588701 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.745978842 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.736265783 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.740856722 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.738988328 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.745246311 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.736357058 seconds)
  done (took 86.952094811 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.73595417 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.736888401 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.735303285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.735241793 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.737262352 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.741597166 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.741622769 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739460538 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.736017486 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.731736452 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.737123319 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.734108475 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.736146991 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.737262658 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.735968404 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733646139 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734527418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735892764 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.734415223 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.734822212 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.735128739 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738099063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.736863232 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.735240349 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73704445 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735549 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.736910525 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.740125561 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.733194038 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.734044365 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738567309 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.735280493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.736882825 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.736989162 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.732888492 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.739475949 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.741096434 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.734243743 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741332034 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.735736741 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.738491737 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737442972 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.73873491 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.738006406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73643126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.737388806 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.73783712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.735929135 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.736542746 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.739313272 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.738065596 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.736641754 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.737556368 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736348912 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738536414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.739501895 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.736355701 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.738173172 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738000887 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.735820497 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.736770397 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.73882749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.737489466 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.738415248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.737778199 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.737420829 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.73584861 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.739052162 seconds)
  done (took 119.780465241 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741620953 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.740985021 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.739797352 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740746709 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.740678774 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.743197842 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741765016 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.740447103 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.742176674 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.739348419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74021429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.74118427 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.739885903 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.742400604 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741059706 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743442401 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.740067858 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742247709 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.741113242 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739303977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.741564395 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.742548128 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740402693 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.741382272 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.742176787 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743115554 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741529388 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.740734702 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.742584799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742314641 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742840916 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.742250108 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.743388362 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741148239 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.744030553 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.741889586 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.742501954 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743152092 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.742304497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.742703133 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.740795521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742382184 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741609854 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.743136073 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741714545 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.740696844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742657357 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.744101136 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.742007388 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.743260239 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.742051817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.74196426 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744232087 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741922895 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.743556223 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.741717718 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744533526 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743036455 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743517728 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.745545736 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.743705329 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.743530258 seconds)
  done (took 109.677232756 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.742057725 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743435917 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.740381537 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.741954301 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744266125 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741138663 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.743534376 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.742374403 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.743270517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.740907775 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74362992 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740608155 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743823788 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74258904 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741599799 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74109524 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743356206 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.740738436 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743619849 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74459077 seconds)
  done (took 36.520004474 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.741160999 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.744529882 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.741722485 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.742052619 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.743533174 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.741019181 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.745455455 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744243333 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740997744 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743585652 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.743111294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.744358404 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741807677 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.742892092 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.744688063 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.742949433 seconds)
  done (took 29.560527705 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.74121804 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.745222923 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.747239641 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.7453909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.742338411 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.74216338 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.744668563 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.741546502 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.74169767 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.745159638 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.744462526 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.744037654 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.74352915 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.745139378 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.743094903 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.746083856 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.742782931 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744518728 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.745143807 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.745328123 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.743628669 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.74302887 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.74417869 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.74553857 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.742426367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.744789711 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.743300476 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.742498756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.741484985 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.745089823 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.744231173 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.744494247 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.744445259 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.743357671 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.746372713 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.742864506 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.745209394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.745476403 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.746307565 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.745396905 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.746047157 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.744029299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.746934923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.748445027 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.744384064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.744976045 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.743869839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.744598575 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.743380359 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.744272419 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.747238028 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.747375718 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.747928589 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.748480013 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.746686624 seconds)
  done (took 97.626540491 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748294439 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.746909866 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744812419 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747411817 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.748115258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.74519867 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.748292026 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.745771365 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745369673 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.747893365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.747123521 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.749588113 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745456755 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749427013 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.746846121 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748816145 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.746840067 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.745628764 seconds)
  done (took 33.12222554 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.747455184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745123103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.750254404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.746144742 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.746424463 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750914741 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745088866 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.748511632 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747935429 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747343295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747103717 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.750232367 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748059233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.750256641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746486599 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745782575 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.749497068 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74838486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74644069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748193211 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749679502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75034914 seconds)
  done (took 40.13153384 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.750492067 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.749866543 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.763454484 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.768799924 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.770513881 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.781481814 seconds)
  done (took 12.260728587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749129351 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751339208 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748768033 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751998677 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751874902 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749284183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748357423 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748350098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751406482 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.747193272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74908561 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749740955 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749968067 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747457013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.749031185 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75010295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74754661 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748842424 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748911568 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750978311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74699215 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751112926 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749370426 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.748204677 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749074543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.748512316 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.749629992 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.749728682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.748892006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751998673 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752252333 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.747976549 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751512153 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.748504639 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751780139 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752495818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749308172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751729325 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751487511 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74859392 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.751415538 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.752874739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751392546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750386084 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752856231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749422756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749474396 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.749282245 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.749135377 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753446376 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.751818841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749805282 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751118232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752353586 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752429638 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754168471 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750284913 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.74903586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751324349 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750348091 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750343603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752074832 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750409128 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753845369 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75082253 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750660513 seconds)
  done (took 117.198745825 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.749521265 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.750354546 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.751199192 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751061359 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750010566 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750012962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750396098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750456394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.750680236 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753254313 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75393441 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751468523 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751239122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750379062 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753055664 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751090518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.751192629 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751340547 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752090891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754298195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751364599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.751210775 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.750676618 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750405871 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752198085 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754421182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751959223 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75216891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754447196 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752580946 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752608916 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752092629 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75285862 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.752398264 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753214121 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752274234 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752117687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752574753 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752838711 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755581809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754162858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755301668 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75210763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.750959538 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755246008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753278809 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752960716 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752720999 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753813977 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752920597 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753328451 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753111488 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753693292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755988852 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752565647 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752759538 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752459109 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753875241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754034916 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755743473 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753057381 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753768478 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757712284 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753316518 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753903487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753716244 seconds)
  done (took 117.355727475 seconds)
done (took 2416.876885906 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.748866212 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.757366569 seconds)
  done (took 15.188067617 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.926526338 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.877519651 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.761683391 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.795022554 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.759587361 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.780471631 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.780916964 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.758634627 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.76171521 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.766624438 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.761814217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.952660024 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.784146873 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.761404434 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.764195031 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.852488515 seconds)
  done (took 50.542069599 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.765965618 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.764595694 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.777025032 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.770146729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.766559392 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.776872868 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.800036062 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.765895661 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.806885653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.77945828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.834230707 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.774885135 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.767564823 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.816209139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.779077259 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.782674302 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.853192396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.844602662 seconds)
  done (took 33.918619034 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.841915502 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.764463983 seconds)
  done (took 10.309118187 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.785998482 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.771702907 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.75793028 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.784618092 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.771917591 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.774429174 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.795372704 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.793084477 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.783818285 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.782661191 seconds)
  done (took 69.499069535 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.775230173 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.767069858 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.76543652 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.765024794 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.763618928 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.763156781 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.76335479 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.762156773 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.445556779 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.800164449 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.769772297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.772218045 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.766851001 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.767266686 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.764474635 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.785733036 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.895945363 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.765932324 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767734083 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.771279802 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.763794678 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.828981261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.77751524 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.769185161 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.795409973 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.443902528 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.771607319 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.770893222 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.89525705 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.763186228 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.765370285 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.767345456 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.769054438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158083704 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.061707945 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.763710137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.775001371 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.778882701 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.763928369 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.89596182 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.767747318 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.773185238 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.745216542 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.050656928 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.859814676 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.810640457 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.116242272 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.769076031 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.768400899 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.795011481 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.769971323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.767336892 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.781078253 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.283873602 seconds)
  done (took 127.033189644 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.766540052 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.06204901 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.918078551 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.764521326 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039242164 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969857728 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.707960825 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816466352 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.762132619 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.964591513 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.92514645 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869255676 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.761865218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.765503286 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.760758094 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.759958698 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926208783 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.826388947 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.763028711 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.760545534 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.788473102 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979034903 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.885462718 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.759787318 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.783280983 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.972234575 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.879608238 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.864929945 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.042060132 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.76172467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825217014 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.763647364 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.763587455 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.758495751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.921429946 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.859947953 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.849379538 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.760371675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76213736 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.76743722 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.42409876 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960228597 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.856864879 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.901351709 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.955423186 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.964990899 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406532309 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.760858578 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.399865273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.929943334 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976105852 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.969940908 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.883639019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.764035949 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.993734927 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.768335095 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.762640735 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998695514 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.907128051 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.87060595 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767241797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.764083511 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.76035444 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010375341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.764618677 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.862049911 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.763873002 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.76237205 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.864382741 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869223511 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.902378211 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978080112 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.796043146 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.671675453 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.269694081 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.978763909 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.831377795 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998361747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.763971874 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.761848994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848704731 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.518824623 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.922551617 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.013405199 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984435859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798575422 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.360203725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.764000462 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.963889222 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.949757796 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.958784915 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971253078 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.91577093 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.961824406 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.764778813 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.764441855 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.009035802 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.901588959 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.768002977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.126739134 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998351661 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.323807226 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.788460408 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063464016 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898850702 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.134795548 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.391729244 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.765719452 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933715923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.804102419 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.766042956 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.767081024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957161592 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.575479316 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.76546424 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.311578812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.829580215 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.769530993 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970863758 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.768789885 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.976023239 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767918134 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004308729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.436292843 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801138531 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.939501701 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.97346057 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.560082583 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013444465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011131504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.88719756 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989676429 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.353634963 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.769534659 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.042704777 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768011477 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.767687544 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.935954689 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.768210485 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.915720111 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.767534612 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996896914 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791965656 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923709809 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771921554 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001963854 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80532128 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820686632 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770028199 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.901027469 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.767852551 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.694456042 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.924795437 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.771094992 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.766865277 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.22037559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.767081752 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914447904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.999094086 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793355804 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838245427 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.290912093 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768868737 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856085233 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.795175176 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.202103007 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.770441662 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.927419825 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.712813546 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.204283191 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.769207693 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.01196973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.952622859 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.770211263 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.768446025 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.510901942 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.474912383 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.770647229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.928620403 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.149942964 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.414501559 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971835633 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.771852037 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895199262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.770944503 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.848321999 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.121022583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.768536963 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.768618606 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.769147225 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.771919436 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.771417853 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97761789 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.801389535 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.268661277 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.909122123 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986191608 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.081307576 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992427116 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.815353208 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.771896919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.032171868 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.773834343 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.834205057 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.771946644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.794058142 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004809959 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772579891 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981970298 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023800847 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.672297038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822808799 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.772086772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772471954 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.770850972 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.921999249 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865752175 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.774142407 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.772854118 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.883770453 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899241504 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965123146 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.366938098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.951045703 seconds)
  done (took 875.568435462 seconds)
done (took 1183.740006964 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.77323385 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.770009367 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.759511371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.77051658 seconds)
  done (took 28.78037434 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.780591157 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.777505606 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.779303925 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.777675203 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.780317791 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.777921416 seconds)
  done (took 12.379098634 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.816762937 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.769426481 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.77101013 seconds)
  done (took 21.063348509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.846347305 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.185037496 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.880518275 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.216590053 seconds)
  done (took 9.834497556 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.78007464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.781571907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.780954368 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.78212496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.783125604 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.783040708 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.78160461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.782720464 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.78683164 seconds)
  done (took 17.751702501 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.151388502 seconds)
done (took 95.667792593 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.092745141 seconds)
    (2/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.128675208 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.002751396 seconds)
    (4/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.224646441 seconds)
    (5/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.439377476 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.432061333 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.039078211 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.868000865 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.772469807 seconds)
    (10/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.79789414 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.358849799 seconds)
    (12/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.94278181 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.698764336 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.929737091 seconds)
    (15/309) benchmarking ("sort", Float32, false)...
    done (took 5.538218716 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.140508343 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.364269076 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.778200316 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.459141075 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.825319097 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.799421096 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.726210793 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.803922595 seconds)
    (24/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.966553952 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.764381114 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.405701444 seconds)
    (27/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.896041213 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.858844399 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.783434899 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.993783289 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.177567559 seconds)
    (32/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.04948724 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.042381275 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.17382569 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.799093302 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.66018624 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.953175132 seconds)
    (38/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.90158307 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.775372339 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.946589744 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.662939499 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.837484734 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.135031006 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.676579152 seconds)
    (45/309) benchmarking ("sort", BigInt, false)...
    done (took 6.776949449 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.312496461 seconds)
    (47/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.070984343 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.762361988 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.974314502 seconds)
    (50/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.802376927 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.078228549 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.891745752 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.803434389 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.794985475 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.362108915 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.042413768 seconds)
    (57/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.909853566 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.946383362 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.844721965 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.945101168 seconds)
    (61/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.900892295 seconds)
    (62/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.966543054 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.883859363 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.047343655 seconds)
    (65/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.78652488 seconds)
    (66/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.119670984 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.836366347 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.150907054 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.761433024 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.869063329 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.975006229 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.778017837 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.346694361 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.509667965 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.206750752 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.775763154 seconds)
    (77/309) benchmarking ("sort", Int8, false)...
    done (took 4.774730906 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15676648 seconds)
    (79/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.763236647 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.82726538 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.862978528 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.841205012 seconds)
    (83/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.776893569 seconds)
    (84/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.004192149 seconds)
    (85/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.293696728 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.835160034 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.859184179 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.102497926 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.888153472 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.707280131 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.250832041 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.913163521 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.762647248 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.562293656 seconds)
    (95/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.030235901 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.175299995 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.805347744 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.072424663 seconds)
    (99/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.764978377 seconds)
    (100/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.010931941 seconds)
    (101/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.781853747 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.610558671 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.977665245 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.947428513 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.689565736 seconds)
    (106/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.185950591 seconds)
    (107/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.032517241 seconds)
    (108/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.852230422 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.783352901 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.454953505 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.031598413 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.022780686 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.942636585 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.677272241 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.783804278 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.943391832 seconds)
    (117/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.790688074 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.643239704 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.157288406 seconds)
    (120/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287064551 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.886691306 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.780015217 seconds)
    (123/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.841720344 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.121329407 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.000808024 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.163520767 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.807128105 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.277293813 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.42223771 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.928702811 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.783277795 seconds)
    (132/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.946000737 seconds)
    (133/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.768448566 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.638031702 seconds)
    (135/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.613847385 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.782655711 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.864819899 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.199907444 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.122964848 seconds)
    (140/309) benchmarking ("sort", Float64, false)...
    done (took 5.596075747 seconds)
    (141/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.864813616 seconds)
    (142/309) benchmarking ("sort", Bool, false)...
    done (took 2.228755348 seconds)
    (143/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.808329648 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.937533731 seconds)
    (145/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.283635673 seconds)
    (146/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.765150186 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042180405 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.401577401 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.038051515 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.457055152 seconds)
    (151/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.873293368 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.782637347 seconds)
    (153/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.85240736 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.99842767 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.288617905 seconds)
    (156/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.041938146 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.038898944 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.979001483 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.779130991 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.876713178 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.965835198 seconds)
    (162/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.886461032 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.95022573 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.8914221 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.887969048 seconds)
    (166/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.021686311 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.809548428 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.80930238 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.860317153 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.156403581 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.672738499 seconds)
    (172/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.077803229 seconds)
    (173/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.914390924 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.08786069 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.805817837 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.575897693 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.066540792 seconds)
    (178/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.93541901 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.787418371 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.415133641 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.24353299 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.082050176 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.973379946 seconds)
    (184/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.214233704 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.093403947 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.058262195 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.885596632 seconds)
    (188/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.784489619 seconds)
    (189/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.41595851 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896250148 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.804857402 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.11994732 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.071179042 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.812591412 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.082774419 seconds)
    (196/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.956226945 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.149985602 seconds)
    (198/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.37551193 seconds)
    (199/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.302113114 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.53366686 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.930346464 seconds)
    (202/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.80666437 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89970235 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.021844766 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.662994656 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.297553334 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.840160512 seconds)
    (208/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.915200536 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.830717017 seconds)
    (210/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.811843022 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.00998314 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.169461241 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.842262774 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.772141682 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.840444608 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.091652238 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.876170913 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.812771466 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.11284017 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.426617442 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.017542164 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.772922061 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.106892547 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.835968689 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.788774362 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.911634424 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003564722 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.831503783 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.298091586 seconds)
    (230/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.92962594 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.930738306 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.786704079 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.810657617 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.798429183 seconds)
    (235/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.812969277 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.831485409 seconds)
    (237/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.883556171 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.813689397 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.985153284 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.887828024 seconds)
    (241/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.122653636 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.475706804 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.76739196 seconds)
    (244/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.774740233 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.798625892 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.81849528 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.626890215 seconds)
    (248/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.872530141 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.45055738 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.343692915 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.956523299 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.366900584 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.091093104 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787494852 seconds)
    (255/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.925993772 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.805609959 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.804493016 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.095917194 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.792508356 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.605703971 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.891364548 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.679897702 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.861245982 seconds)
    (264/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.923656855 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.820279197 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.126197832 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.173718445 seconds)
    (268/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.701795349 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.578073326 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.017964075 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.790530467 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.745795297 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.773669883 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.93163686 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.875057661 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.296402902 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.893058998 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.74879677 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.085808498 seconds)
    (280/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.190952503 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.887110939 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.77841772 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.882947205 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.935847143 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.78885668 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.631119342 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.046672982 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.586738518 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.788510426 seconds)
    (290/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.84065611 seconds)
    (291/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.821248344 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.175535681 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.853087928 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.034805446 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.834452624 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.804885819 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.867295845 seconds)
    (298/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.921842716 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.79208352 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.88600672 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.793692119 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.06186771 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.788750243 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.909005849 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.81603756 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.157331441 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.79371177 seconds)
    (308/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887064544 seconds)
    (309/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.107852159 seconds)
  done (took 987.421091527 seconds)
done (took 989.200026571 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.825992012 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818697267 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.803636902 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.825077131 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.915568705 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.83387935 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.814372801 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.806884717 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.853593045 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.852995424 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.801613889 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.830420358 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.806565394 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.804762959 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.804162992 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818049634 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.117901437 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.825220958 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.823065282 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.813604091 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.819580924 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.803694763 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.853997738 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.832257123 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.809545057 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.808433686 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.807763997 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.824044658 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.917142988 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.80885524 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.807712479 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.817611355 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.117935061 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.823863231 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.800873431 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.824828683 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.816486455 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.815960988 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.810496485 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.838121505 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.25364094 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.807489057 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.807384421 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.807821649 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.807290958 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.810766702 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.807825242 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.812632401 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819270486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821227496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.249647799 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.82439045 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.809285864 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.809927322 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.81796115 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.807680583 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.810941284 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.823108262 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.826060267 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.822354761 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.109841905 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.834409883 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.8093228 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.824250242 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.815735657 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.285894324 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.806332758 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.813284309 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.254272133 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.814809145 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.286413615 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.818489054 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.810066705 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.82007362 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.839433394 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.120647769 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.825521913 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.807928397 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.817019443 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.805786888 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.819073175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.81968483 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.814656503 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.810329082 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820844525 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.838016367 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.818884792 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.808690128 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.820125193 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.826978649 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.814777413 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.817599212 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.814948751 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.80472292 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.819168469 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.813726939 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.81075114 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.811065489 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.813738901 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.82146168 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.253636713 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.827639144 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.805958724 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.808739991 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.808980515 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.824677429 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.254721591 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.812613128 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.830729937 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.858368575 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.810343337 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.111419858 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.834763153 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.825226574 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.819434916 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.813044353 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.804494325 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111472409 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.275025698 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.828688871 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.811648988 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.807506741 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824543495 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.814871461 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.808120407 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.124134512 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.834636069 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.823696415 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.931450859 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.823365415 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.842906361 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.808094607 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.814426986 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.838888627 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.828024988 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84047114 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.812752475 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825756606 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.826362075 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.808571321 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.821014977 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.823431369 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.811063317 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.818585337 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.806742275 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.840040113 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.824117319 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824225407 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.832685742 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.932709768 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.81037535 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.109729082 seconds)
done (took 284.53006308 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.877722442 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.802669259 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.904253422 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.807608352 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.892111399 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893558144 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.806082534 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.807449765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.806708893 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185363365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.805825859 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.807361457 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.80355208 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.8069254 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.889241566 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.808235705 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.806689257 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.148295379 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.808190116 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88086694 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.804360435 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.805789984 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.809371329 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.189735445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.800771841 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.807314767 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.878947785 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.809904814 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.155906578 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.808200756 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.801682396 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.154176767 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899607904 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.828384191 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.819597159 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.81721165 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.894476741 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.813094147 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.890581848 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.890049221 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.90699191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.849314917 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.807272891 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.808653154 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.814844405 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.813338388 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.808687319 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.839095104 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.811186251 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.806151596 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153478287 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.822268356 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.810086834 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.807889035 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.807470413 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.843246222 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.808530053 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.811438631 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.899582155 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.813654342 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.87359697 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.191775353 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.187578933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.81129923 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.809046698 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.809258643 seconds)
  done (took 180.287899917 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.877106091 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.885867946 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.879774051 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.813691102 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.273951431 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.883813927 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.81274323 seconds)
  done (took 15.164011231 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.817679418 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812777088 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.86128916 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.861163562 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.811778339 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.962349832 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812810519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.823602775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.807551415 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.866151759 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.811564138 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.812617058 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.818607242 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.812057907 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.860262105 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.822272117 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.926605726 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.812180002 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.81919195 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.970477071 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.810428944 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.818051989 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.866107098 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.82441951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.813808107 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.818852753 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.398654092 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.812039923 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.811082563 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.81316844 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813042115 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.855827355 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.814411443 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.812156579 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810138726 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.930419404 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.814657924 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.813334784 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.81361591 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.813647274 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.812497286 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.81364527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.8158452 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811787755 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.81184825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.836734254 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.813878792 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.815304576 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.813761076 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.812153575 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.865347614 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814385866 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.811267487 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.812276511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.87337918 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.822445861 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.815300747 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812750325 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815477155 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812731382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972148149 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.863514985 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.81644636 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864188128 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.814818957 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.816798396 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.814896328 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.815766146 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870415474 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.81515424 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.864969738 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.812923835 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.976994005 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.838047879 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815382748 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.819208824 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.818499936 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817176011 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.81596621 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.821727662 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.812306448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.815560545 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.821514413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813871821 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.813891966 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930272721 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925711663 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.813891714 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.828034977 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.823391084 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.813686654 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.87024077 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.816438649 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815312461 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866742593 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.931904975 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.872411921 seconds)
  done (took 200.384110507 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.821695166 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.823762213 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.817156471 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.831209403 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.818397516 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.81562074 seconds)
  done (took 12.669722084 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.818263231 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.820931286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.816901495 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816738094 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.818388312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.818905554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.819120046 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819950567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.821617796 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.816529574 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.820283777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.819309492 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.818563115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.819041936 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.819817563 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.817304183 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.819686471 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.814875223 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.817344429 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.819614964 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.960337007 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.81952881 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.820392543 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.82002224 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.821977522 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.818484711 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.827426612 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.818492057 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.818097915 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.827437454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.821803278 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.820113748 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.819236687 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.824517677 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.822892856 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.819784964 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823896521 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.821854729 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818161578 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.817623316 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.82152231 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821568878 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.81965764 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.819939038 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.821455444 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.824760199 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.824699281 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.827413454 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.82014211 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.820697416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.82168609 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.821505053 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.821879671 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.823045044 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.821419366 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823931362 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.824923292 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.820752772 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.820505726 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.821706284 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.821407713 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.820949574 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.820747394 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.824864145 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.826786806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8233968 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.820649892 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.826079791 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823057169 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.82272105 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.823151428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.818707401 seconds)
  done (took 133.996647421 seconds)
done (took 544.252232509 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.051676892 seconds)
  done (took 8.797562889 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.908368809 seconds)
  done (took 8.747489612 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.606250945 seconds)
  done (took 10.358036303 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.865909494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.835590605 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.827173515 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818480651 seconds)
  done (took 29.109429753 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.837697018 seconds)
  done (took 8.590065127 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.831334353 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.818080861 seconds)
  done (took 15.437850178 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.913496594 seconds)
  done (took 8.667044383 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.948799033 seconds)
  done (took 8.703666835 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.847293395 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.830896067 seconds)
  done (took 15.443424554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.803351498 seconds)
  done (took 8.556444436 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.510229076 seconds)
  done (took 11.271196637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832959824 seconds)
  done (took 8.599314194 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.855706296 seconds)
  done (took 8.609869229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.846781983 seconds)
  done (took 8.601089771 seconds)
done (took 161.237652347 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.822276537 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.822525707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.820743219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.817883259 seconds)
  done (took 29.033950259 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.857123945 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.8563456 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.859372877 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.871985954 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.863436423 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.858955753 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.851239297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.851056331 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.865778482 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.860958457 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.864500696 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.858288097 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.85739043 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.851576618 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.861376251 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.8591002 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.871937151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.859099778 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.847185456 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.861236033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.824381837 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.868929943 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.861174106 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.824489515 seconds)
  done (took 46.319118228 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.021837109 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.895861807 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.976123326 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.87800861 seconds)
  done (took 9.518602444 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877229867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.87874664 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.889851448 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.93130753 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.9660273 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.890687465 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.854516066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.84751789 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.835231745 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.877097149 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.9556875 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.896388834 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.962227256 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.826730196 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.013325882 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.827453907 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.826912872 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.880614711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.931241348 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.945540524 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.824150292 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.877430745 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.882427518 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.896544255 seconds)
  done (took 47.143761001 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.825695776 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.834482562 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.835525603 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.828917384 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.827504764 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.825906088 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.83402615 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.826824673 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.849057996 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.826730769 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.822970447 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.826100261 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.823041699 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.824321174 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.822937505 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.837402936 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.838163297 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.827008374 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.826266505 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.830401775 seconds)
  done (took 38.345462602 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.82014543 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.763546649 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.170439464 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.074151212 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.819787634 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.81799669 seconds)
  done (took 32.216255878 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.838675383 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.830840912 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.825514643 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.879602001 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.961701666 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.831386853 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.828647557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.833898772 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.869828219 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892851193 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.844934046 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.850804295 seconds)
  done (took 24.040325214 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.821733855 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.822640987 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.819632685 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.838163748 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.834954761 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.831750117 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.835421582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.818466525 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.837026489 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.845474394 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.833988278 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.837873833 seconds)
  done (took 43.733278724 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908933019 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.866194367 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.869581502 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537147613 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201351607 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031721663 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428915029 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168989015 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.82391591 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094738759 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.827053431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923011585 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077920071 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312895492 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853568629 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.280734065 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115899764 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036636938 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850817464 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485474779 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885569236 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.996217554 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.593850768 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881356455 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034135153 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95126085 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.083881858 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.822923084 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960651781 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864485753 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834120138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.823410679 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09616011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21507038 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925111532 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832212858 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.441859783 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.54211965 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.808292775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.604020542 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.525520947 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941150845 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839024193 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826736232 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760880767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.972865811 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202852334 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.829333244 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.538913456 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.825977249 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837426361 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920833759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.829201754 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.641880085 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775560512 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.828159683 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.822935214 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835231363 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403779762 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946040073 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.01636487 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.796694584 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.919126879 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559564032 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220248009 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.975038458 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.828315868 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.831805524 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759579565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.566241393 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878463805 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156273221 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.845552326 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477545227 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127369162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.899675032 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770595164 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104117303 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.356185404 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.796248953 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054249697 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827616386 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764742674 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.778368203 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764370012 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103722202 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866678212 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.593461233 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875050568 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177125079 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.839074894 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846967788 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852762556 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053872379 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.714272687 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830719253 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.578060295 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979214091 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850367537 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.172367352 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767122639 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.834433285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087783175 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.045367734 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906352943 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.32017251 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989999785 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395884661 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.879062694 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981180733 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873744549 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.101785125 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887798114 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94026206 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882529029 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829903586 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134450452 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415831133 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.9644173 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.836872321 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955233892 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152933263 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857566485 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909001056 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838957852 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.831930879 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575436501 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379955899 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.829249076 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.829232129 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903390268 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873327102 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.83120751 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780136866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.451785332 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883678701 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.846335377 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054117932 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392248479 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140331615 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766409091 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157712109 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.922890187 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.053346703 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.476426595 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.900281458 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092731007 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.891883859 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.924057766 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87734915 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848209733 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932082449 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854612319 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.97375602 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119618631 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.833757065 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.837339109 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594796971 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864026953 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827627431 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.836200477 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629783156 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105086675 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.853236392 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837201982 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.721015059 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845449911 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897235333 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839784884 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.843434077 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368072012 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.558952331 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.836923334 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.412299249 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052607888 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84338155 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.500912902 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949368595 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.916966914 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104676692 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893073786 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.768664488 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.541112618 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.52659542 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834041037 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768808039 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.83133371 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842508289 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845713304 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.029619953 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109106389 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876420634 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.507511422 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.873536529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846873448 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.839627409 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836589414 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.344714008 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951812686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.01467338 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874325153 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976894809 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.849985685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767895808 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.839142156 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836439867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83725768 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.835595532 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866998217 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.512429615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218006152 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094503567 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.444696577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847354166 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.541450817 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.891109233 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.833518425 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477680631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119733717 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.863431105 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849627174 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.851234057 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.578904567 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.537877984 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403550378 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13845126 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146444794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277159478 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.037381748 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859488962 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183872252 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767521277 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391996168 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894726361 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186990308 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77897201 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923143742 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.481186809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173412702 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849733473 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065602067 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230525239 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.527453742 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97044882 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048961327 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870697478 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.969201083 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794032717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.121043021 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979915625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.504299059 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028514709 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179599196 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.46920922 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.951178308 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.837198834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53174418 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9241324 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.545138948 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.006747971 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.018897207 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.775229973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301910914 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842263909 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062577087 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1903312 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.009257211 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.959819959 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773656779 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846694042 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84992092 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.839754091 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.834019219 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.713776459 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.09001503 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848932084 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774642453 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939864036 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127797074 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.73896976 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.844283488 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841972099 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142029892 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365744369 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0040109 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.915610254 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.354261881 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838605768 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770100629 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773762624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.531485741 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844997095 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.816058427 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04839541 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.941974543 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785328187 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906467078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917373071 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095774038 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852384924 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110351427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111611935 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.535619254 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862028492 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.939302449 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.466034724 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.940123506 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.838381244 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074832621 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591738627 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063151213 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.91873993 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.795658757 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.837899083 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054069456 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838886123 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.729662859 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061764382 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.562960606 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.850645954 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142376139 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914347249 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.707965307 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.875879714 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.931643403 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852320557 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919743929 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852425801 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.854573917 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852945652 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888864423 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.705329137 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.953880057 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.854161119 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934779107 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961766092 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.362976383 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.846077369 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11761675 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192581277 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167303664 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899535143 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842170186 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841561195 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775636026 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987071462 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066707307 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115570036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972463957 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.957011218 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865764678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.45661572 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.021048347 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082991728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116658493 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.736300042 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341412941 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.878895349 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.842254003 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855157522 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.054266824 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056628472 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152776227 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979351222 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.917174642 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209009675 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11633737 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.842073942 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843912442 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431551909 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.857711213 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.539597921 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.887561442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.751141107 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106926399 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853569437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232194454 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864274027 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.002223127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.616350568 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.515210049 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131710888 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.833790746 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904277742 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118489992 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227889056 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158743997 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908886394 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856033608 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.955484314 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992456445 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.738724837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.844509844 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845077994 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89710027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.557366114 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854191724 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11830227 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15352763 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.840357102 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.718347596 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866400165 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.856165434 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069377903 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111928061 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097078961 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854542923 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851686846 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.660107334 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117217136 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90164395 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778904916 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.84815089 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944167184 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094640606 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865416321 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.300273703 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.555985841 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122499906 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.847791255 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865873266 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.991568241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202287259 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160530621 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.380640972 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054460222 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434786859 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420446127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147977653 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.852448644 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.991645006 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148138781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.849918299 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.911871359 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881867046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.115286938 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154665628 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.861771831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514263723 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.811864843 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189966309 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406590265 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78428113 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857115874 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.906927613 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848426693 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977857442 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856796781 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.72082726 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984281094 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.619300855 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.125488351 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.852974933 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.841416502 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.527910213 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09940886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879799118 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005683897 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850561475 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.521355625 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.202674287 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105519436 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.916047712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.855015595 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.854154283 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849759265 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.837376906 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046792003 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.04433355 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136914348 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.939573393 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.884776364 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853393323 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.068394521 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060978599 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.682624526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974602858 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908719535 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891180266 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.755022281 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.351768248 seconds)
  done (took 1656.66619754 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.851950654 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.873613947 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.903051283 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.9098845 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.90049575 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939067011 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.892840464 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962572866 seconds)
  done (took 57.015066211 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.850806731 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.044820801 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.855947906 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.851582113 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.859291231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.851615891 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.035822028 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.859979125 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.876389587 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.860047614 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.849866606 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.848272972 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.18495846 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.871426007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.850544106 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.856046753 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.857850263 seconds)
  done (took 74.067495737 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.888930619 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.915088853 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.875590691 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.870110633 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.804729792 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.865396812 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.774506668 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.867289334 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.847355029 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.08346827 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.481725263 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.869882612 seconds)
  done (took 89.929106726 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.862584225 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.859735652 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.858528297 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.858740855 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.856845703 seconds)
  done (took 11.082573774 seconds)
done (took 2160.920279928 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.105094667 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.072171424 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072172626 seconds)
  done (took 5.926595775 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.999110366 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.047297347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.166795854 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.172141259 seconds)
  done (took 10.167874436 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.136479374 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.238839093 seconds)
  done (took 6.155804965 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.250089154 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.853414193 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.231480979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.85156696 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.849025967 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.854231212 seconds)
  done (took 22.340735442 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.856755622 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.860397144 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.857419377 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.858261298 seconds)
  done (took 9.215424529 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.836423856 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.534058146 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.838248886 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.84990575 seconds)
  done (took 20.841539283 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.604210881 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.614418666 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.602387416 seconds)
  done (took 9.604783039 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.335114924 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.741966375 seconds)
  done (took 8.860988583 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.114384218 seconds)
  done (took 3.895742249 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.989339967 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.16363819 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.355546889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.357091788 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.445029018 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.537852698 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.166638112 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.096812241 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.255453727 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.287940051 seconds)
  done (took 24.439041246 seconds)
done (took 136.668970072 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.233658247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.087602746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.058425588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.231471729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.083599101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.06049951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.058375187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.214787657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.696945967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.692597241 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.184128313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.078373224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.002955523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.088133694 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002577079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.220317874 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.085193665 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.253540783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.886346721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.083426417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.061221929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.826464713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.029619258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.837737613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.102473507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.008515928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.404740884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.221004633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.042555064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.424990649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.018498391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.260161791 seconds)
  done (took 170.325248321 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.64579149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.863714694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868361458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.853584376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.517549463 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.871684308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.854817642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.862221352 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.17302858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.155685959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872157242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.542713872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.871103799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.852890459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.862436761 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859695822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.239503274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.693077584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.869103131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.869696234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.874247262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.427526615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.872597152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.452588849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.243575255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873684273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.853514791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.275640518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879617544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881640614 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888615953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.860097515 seconds)
  done (took 209.381981963 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.860542424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882934519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.868371443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.859975331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.873444071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869446461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862135914 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.860431361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.471761918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447529118 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875033255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.870069652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860350663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870438155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873228978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859068222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.886542034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.871134169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.867966505 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885120453 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.874693435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.699879897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.885416534 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.707949606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.878620027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873629956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859638303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872641149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.868835112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.867554422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.872913375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.86365814 seconds)
  done (took 220.530842928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.070046 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.872282023 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.873595776 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.831861565 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.875167213 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.875065404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.867529456 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06932338 seconds)
  done (took 19.144335341 seconds)
done (took 621.175427183 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.457257054 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.223708714 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.052136749 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.898124824 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.135049588 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.931488869 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.89251862 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.957903575 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.633425601 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.961857291 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.591489202 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.90748874 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.687247211 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.912587061 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.021132702 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.94880311 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460321559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.550823621 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.071822635 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.964724878 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063155067 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.90505457 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.966505948 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.65019199 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69796485 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.91588384 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.077939362 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.469699626 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.899472832 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.061033539 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.651122937 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.279520251 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.904057845 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.885645057 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.940223533 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.92286548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.24551568 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.904013557 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.013372102 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.66533628 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.949009262 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.511500724 seconds)
  done (took 103.631651918 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.861572971 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.861232188 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.860805553 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.86322523 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.861731227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.86276615 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.859249696 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.859870784 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.866377139 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.860221278 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.859427016 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.862946563 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.860345944 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.862215762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.865762899 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.861005899 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.861611674 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.864073343 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.860527605 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.867548255 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.862749593 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.860689733 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.861165404 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.861015173 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.862499882 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.865662875 seconds)
  done (took 50.222904558 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.874555051 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018646668 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.098086337 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.892860702 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.875376605 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.876986049 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.894407252 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.878927547 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.880444395 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.876991047 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.969611169 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.882642267 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894401265 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.104579718 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.888812976 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.875854473 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.876287591 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.873617684 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.024040525 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896571017 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.89576655 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.880414582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.895057302 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.889953212 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.882173559 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.874940665 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.877666996 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.35567731 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.883559641 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.972521038 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.949626434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.893634274 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.316598736 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.105971238 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.936701365 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880230495 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.876062878 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.972519529 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.880778888 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882020157 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.895931511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.881627843 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098049833 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.372458089 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.893706328 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.876100351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.358743701 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.980613705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.918989699 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892166789 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.104592827 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.888045932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.876362199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.8756861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.91646704 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.886153847 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.874734013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.237911857 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.885324897 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.901523286 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.882813018 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.87745908 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031428353 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.884623968 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.026867807 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.883014283 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.886102032 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.876575178 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.098645075 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.890796985 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.383242938 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.887291305 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.878118933 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.971354275 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.022578197 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.386776927 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.890050938 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036908035 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.32797985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.909351141 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.887046519 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.339063157 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905652083 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.886238896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.885387901 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.880339854 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.877397738 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.923533569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.895702841 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.320273966 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.388228948 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.249515417 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.907677709 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.89342885 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.879302694 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.241457137 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.888533782 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.879485288 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.098315828 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.395547116 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.889426187 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.886630281 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.366113409 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.890524122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.897492168 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.886641721 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.107556704 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.892159659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.9235857 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.880911989 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.887236571 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.883938646 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.898561277 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.885505038 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.880121465 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.357528344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.986838989 seconds)
  done (took 233.026470085 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.875515933 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.87040899 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.872119943 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.873286575 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.873057367 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.881237936 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.876331631 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.873731314 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.879103762 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.874206295 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.875569506 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.875363755 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.879025363 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.876269347 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.90407017 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.881802195 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.487979015 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.874383759 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.875933322 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.870434888 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.521656943 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.875662974 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.87565573 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.875744769 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.876994374 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.873262447 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.879187766 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.895464685 seconds)
  done (took 167.629270079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.882351322 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.994731847 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.893306776 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.906244957 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.886590804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.881735473 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.905531459 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.895386835 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.886238115 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.879068416 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.87996099 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.940157531 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.89027229 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.979444701 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.908836376 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.912169034 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.982323238 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.886473497 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.879275258 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.879633975 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.909982869 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.874669964 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.940676518 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.005313452 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.894761708 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997072398 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.882854066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.882699413 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.881390351 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.999148968 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.891239905 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.941866624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.908217562 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.897450604 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.999711619 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.991752047 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.987765081 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.910591133 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.884841792 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.881552748 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.880457902 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.870067738 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.9960366 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.895542965 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.883213991 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.986698505 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.896399313 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.885962724 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.891469911 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.880480995 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.89578208 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.89937721 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.948099526 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.007683177 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.911662399 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.907555722 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.907006112 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.165294877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.888754646 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.982381553 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.874698948 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.999251237 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.897368029 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.870990737 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.884333958 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.889693225 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.910862799 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.911133089 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.984998236 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.890685421 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.980747597 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.9187532 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.88582467 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.882897997 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.887171301 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.997824436 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.99797121 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.920956088 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.916623528 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.910600975 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.879128195 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.885110486 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.875708874 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.901541158 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.887991464 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.997831798 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.99749502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.893430353 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.886987674 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.888374341 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.888588944 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.910489878 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.007771599 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.915949158 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.981393205 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.95224882 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.955633794 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.897203127 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.898175736 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.889066902 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.949363742 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.895562811 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.896589853 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.213331373 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.951647923 seconds)
  done (took 203.812415691 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.342373757 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.940881229 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.940346555 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.176976252 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.312154325 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.657517313 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.92796037 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.934845401 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.959728884 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.090882148 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.99192563 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.94719001 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.919090192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.906731094 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.933652401 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.953040354 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.936823606 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.237643839 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.063971029 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.039202168 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.91364971 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201496625 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.252216022 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.323600172 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.966503335 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.250881949 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.621695993 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.175100122 seconds)
  done (took 61.733545284 seconds)
done (took 821.848433975 seconds)
SAVING RESULT...
DONE!
