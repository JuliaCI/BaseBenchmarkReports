cset: moving following pidspec: 21474
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345947877 seconds)
loading group "string"... done (took 0.548455876 seconds)
loading group "linalg"... done (took 7.07038808 seconds)
loading group "parallel"... done (took 0.153766079 seconds)
loading group "find"... done (took 1.088821305 seconds)
loading group "tuple"... done (took 1.700025036 seconds)
loading group "dates"... done (took 1.168536204 seconds)
loading group "micro"... done (took 0.212984701 seconds)
loading group "io"... done (took 0.984919518 seconds)
loading group "scalar"... done (took 36.268419953 seconds)
loading group "sparse"... done (took 11.131752287 seconds)
loading group "broadcast"... done (took 0.903149789 seconds)
loading group "union"... done (took 11.848420748 seconds)
loading group "simd"... done (took 4.131343205 seconds)
loading group "random"... done (took 8.496335671 seconds)
loading group "problem"... done (took 1.767095818 seconds)
loading group "array"... done (took 19.785975719 seconds)
loading group "misc"... done (took 1.629098628 seconds)
loading group "sort"... done (took 3.133164626 seconds)
loading group "collection"... done (took 16.371567511 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486372657 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124153672 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115107574 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119219513 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145668766 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114962916 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12314562 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084157025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.797084948 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147884875 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119217137 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417181946 seconds)
done (took 5.101036239 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171720035 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083054501 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081763899 seconds)
  done (took 1.286618322 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065731783 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121474245 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066523898 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066886488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066901244 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065863741 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066251434 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066479976 seconds)
  done (took 1.644174549 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073761557 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068575392 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069007124 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068514077 seconds)
  done (took 1.404549458 seconds)
done (took 5.704323885 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767408139 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20112259 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183350043 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401987357 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1296053 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15417976 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636387681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.304065139 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184432035 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081186016 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108403426 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317525445 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107818937 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638153385 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076384698 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090560785 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137828002 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.407938953 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067419652 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081923682 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089315765 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128092586 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08759459 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075375597 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141892727 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067731873 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130670396 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081263067 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066691976 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209032511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172225998 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663842085 seconds)
  done (took 10.154313171 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09694584 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09796943 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068896786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136858198 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096715047 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06995021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071660173 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067799287 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08698004 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12831184 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089406678 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101359071 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065658813 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068668698 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084721557 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203935059 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080061952 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081580686 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070502561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075399404 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119349603 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078345421 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07808876 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077683073 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128367861 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17984489 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096145912 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097187182 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067096532 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080932127 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115389356 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126040138 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065669024 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066494845 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12482527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094903991 seconds)
  done (took 4.60250189 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.289182398 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14130103 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090978681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132267818 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110312868 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064948425 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107105221 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065288904 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080775298 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200814303 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288854856 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57648627 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111140651 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104201886 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06790268 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068859899 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067305336 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.451845555 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10851828 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10414506 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081105538 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069510053 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068746456 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341302903 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067646059 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063954084 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067795483 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057956517 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064109908 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122628261 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067133126 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.928336397 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125970285 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067145282 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101151194 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169749825 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.195192507 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088456936 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144038207 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068346258 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06493581 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151280499 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07094398 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066370595 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083999595 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104113763 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112791275 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066075013 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067480041 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16319613 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067365161 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07918427 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.9808025 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153319527 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077767884 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065279745 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245934746 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086420706 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069507285 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064848975 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179893902 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137034295 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068026939 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06683399 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068081029 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064770961 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069240646 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365454883 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066328206 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.775962972 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06958151 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075955109 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069589855 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072299194 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073036873 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072566653 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085360802 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066114964 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076008791 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066014049 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06599098 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066856033 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084008962 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358145838 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066191309 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067954696 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06444098 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086425503 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100960184 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067399672 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065231482 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200224595 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069556344 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066374797 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105919561 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066959564 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084570984 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069395425 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113089376 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066747261 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092926268 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067736972 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096960258 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070430001 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099816537 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081185338 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06833069 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397177611 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066204541 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06493536 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06777912 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066158507 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067546124 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066310085 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079564292 seconds)
  done (took 21.024381073 seconds)
done (took 38.194291842 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269861904 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075954918 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075927522 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075858096 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075833107 seconds)
  done (took 1.79319851 seconds)
done (took 2.99424502 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119844319 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099544756 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064471488 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095229004 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064695429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099947173 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099200111 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080906855 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099177052 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064620684 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096292855 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064267306 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064636467 seconds)
  done (took 2.332679922 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0827872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083603031 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070323706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08238725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063833628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082461971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080961935 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088774361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081303751 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07196242 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063866758 seconds)
  done (took 2.046490556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081392973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083458463 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069506822 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081034805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063688577 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083680369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081203009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085611414 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081556468 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0736321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063767314 seconds)
  done (took 2.039259891 seconds)
done (took 7.607468427 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077537206 seconds)
  done (took 1.261083191 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58764073 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.089971137 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081757831 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112327223 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183819504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11995415 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279547493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087062638 seconds)
  done (took 8.906278004 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101722998 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072022782 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069788332 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070906322 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068813809 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071412831 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069261611 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069737996 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070271629 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068566191 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068313175 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072135809 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070845422 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068284764 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070666924 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071777311 seconds)
  done (took 2.409806946 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092258969 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091714408 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07326419 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074801375 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071970064 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072202037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074651886 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074032592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070671353 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072387014 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074893705 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073825108 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071794693 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06506627 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074113382 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075676964 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071039234 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074396222 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075602561 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074542207 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074446229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064442084 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071843567 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074141997 seconds)
  done (took 3.07417203 seconds)
done (took 16.843648624 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115040006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071599988 seconds)
  done (took 1.375907094 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082384064 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084166611 seconds)
  done (took 1.364594676 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084533971 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065988403 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093058344 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079323246 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06641716 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066083085 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089939673 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066935079 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065966417 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065993732 seconds)
  done (took 1.941692623 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068986683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079796886 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071784574 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081901085 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074491313 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064403581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073339506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068016739 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078269916 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063321395 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07172255 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082798125 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071429187 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08487569 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072744795 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0688077 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071273726 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068209385 seconds)
  done (took 2.516930056 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066104023 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06683187 seconds)
  done (took 1.335239789 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067122458 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064085183 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067835926 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067634493 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064004104 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062786584 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06389678 seconds)
  done (took 1.656585579 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390621771 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1111891 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298034128 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070913512 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081739777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24973869 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065683504 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070916447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0704809 seconds)
  done (took 2.651957446 seconds)
done (took 14.045946152 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080104805 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086269886 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095502834 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362564787 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09177916 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065720349 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113755366 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193433369 seconds)
done (took 2.304490691 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213649277 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614179109 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.387876454 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197071871 seconds)
  done (took 2.406513917 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329685798 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086603185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059197565 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067011183 seconds)
  done (took 1.759978202 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06592179 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069126212 seconds)
  done (took 1.346693097 seconds)
done (took 6.939691882 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066575344 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065885829 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06338862 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066511056 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064051906 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063706745 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082525577 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065951163 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066346748 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065820962 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068393151 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066227198 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065980228 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066028962 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063552868 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066339542 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065728834 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063425064 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063650939 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063560407 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063605939 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06587119 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063323882 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063226681 seconds)
  done (took 2.825151745 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083297791 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067047348 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072370675 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071715574 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069807459 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071057599 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071519022 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066075146 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07120708 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067680799 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069765558 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069957618 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068094401 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070324389 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068471274 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069904469 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071406527 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066800569 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067862203 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069881024 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071565139 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066120256 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070472123 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070927243 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069654879 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069418741 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06851627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066680956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07093808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070074036 seconds)
  done (took 3.318336658 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069874052 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064016483 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064090954 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070601009 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064524457 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065258857 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063336681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064037188 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064109444 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063208596 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065165093 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063135797 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06392405 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064849959 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065877413 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06701531 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078780465 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.17464797 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063169988 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064576149 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066472197 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063603835 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063620204 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063120008 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06369348 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06305141 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063757543 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063265609 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063949486 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063271904 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066495703 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066683502 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063519608 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070141163 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066687225 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063019987 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067558755 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06312502 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063863951 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062749329 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063302519 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063484016 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063202079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0700163 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063727699 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064802316 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063418474 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064851583 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063808659 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065882714 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062925887 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062799982 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065178048 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064424608 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067182198 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063056886 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064259125 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0628742 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064686098 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062798797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062682843 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062683093 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065662763 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064546618 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077411964 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069648146 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063261184 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064681971 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064266855 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065357019 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065357616 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076562423 seconds)
  done (took 6.027716318 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091358824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087115288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064567532 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064617425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06168825 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06373968 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06751686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064039572 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065273405 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069495356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064359661 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064826181 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065245992 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076420445 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063953791 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06532198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069777437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062164378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063919608 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066883435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064267316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067332982 seconds)
  done (took 2.727101101 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153958144 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069913032 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104783776 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0737988 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067781924 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072948391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069820055 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06986759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06988342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067702794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068029888 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069718919 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067560327 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068474058 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068004151 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068198459 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06992581 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06799903 seconds)
  done (took 2.594419127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077410434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065983008 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086256614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066534656 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06584806 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068094518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070869724 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074414003 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068296759 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065929524 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074168561 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068293893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068094874 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065671502 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06806722 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066020928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068094863 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065566414 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073971276 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070534967 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070927317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074368334 seconds)
  done (took 2.771535401 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079705287 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06769833 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082705383 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068555594 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062182917 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064289049 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06999185 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065443823 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0699929 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067311236 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065973767 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064573071 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069191474 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065454013 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069301079 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065589491 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067622061 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065752688 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067123908 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061601666 seconds)
  done (took 2.588283271 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086401951 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0675325 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068166923 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07670507 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067228467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067259066 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075399015 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067097004 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067559358 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089128963 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067362462 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067095815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07531037 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072692746 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066823709 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074709372 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074928189 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075600443 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067289461 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067033636 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087036424 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067382685 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074889613 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067074634 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067198735 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067305002 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066802079 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072031491 seconds)
  done (took 3.241767417 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067033474 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065652892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063355587 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063718249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063379642 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06367837 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063241326 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063928834 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065998042 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063528316 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065692426 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065660858 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065811514 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06556583 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065954928 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066275528 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066336995 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06375981 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063381528 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063482782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065810105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065950086 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065859831 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063129085 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063366787 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065784602 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063605096 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063316456 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065841715 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063256951 seconds)
  done (took 3.175546792 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075569109 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072324245 seconds)
  done (took 1.383593904 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06376932 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079367534 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063605595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069511863 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070100164 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066346554 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073193887 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07011633 seconds)
  done (took 1.787557243 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081836244 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077362684 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06744876 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080895666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076556333 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082741491 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132055066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066953699 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073143814 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063880932 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079679543 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065529246 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072006482 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066487698 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071600532 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072541054 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064026152 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072513229 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068069838 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064758327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067272764 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074735661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068179598 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062173802 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067213418 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088171831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077135458 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066124548 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06895928 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073389798 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071864943 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060597914 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066019425 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066326693 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064227412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075527746 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081380847 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068594309 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074716098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066934279 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076898429 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061362071 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070584525 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072854347 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075852863 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066673881 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066445042 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061471124 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063937717 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068696041 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061425189 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066064886 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061084175 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075331986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069895119 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076470818 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064765483 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067880762 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069283672 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069556006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072874593 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067860257 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068610804 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065952032 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076113603 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071392555 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075055508 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061499729 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061266249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064042717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075502113 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088340939 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072070923 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066640081 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066800192 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06358263 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069384327 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067141733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071670171 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071921651 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066307359 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072113013 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073814432 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066578957 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068892805 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074918947 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0647028 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068980517 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063865966 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082504938 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065398097 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064339557 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064120686 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076665963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06978491 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066600519 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064035833 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072631791 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06021218 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066306091 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065638841 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065622988 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075099927 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069588864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069777328 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073534576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072553854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064944515 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067641577 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061614122 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065891867 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064335619 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072006433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059611912 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06803877 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065695752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065424672 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199262847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065506541 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067329649 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073958887 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072855578 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065414852 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063491531 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070087368 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067309962 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069986408 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074020882 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065207486 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062097871 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062468068 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070204682 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066073646 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070301226 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070875041 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06985764 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060978325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065195998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071868922 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075447917 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066956115 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06828695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072626598 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067768565 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065623093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073808579 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069425103 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065872165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072013929 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067268836 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062325541 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070088565 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069718476 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064868582 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070252683 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069463369 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068546726 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066505785 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065567445 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074557655 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067191671 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065741368 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06718828 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065548961 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077209795 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069136678 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062299728 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063531499 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076521357 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06493434 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066017519 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065921425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068709628 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06760509 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064132964 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065857808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068915352 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07753603 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071183964 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067699734 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072475732 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077258115 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065804874 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069502661 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06573324 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06693103 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067735056 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074729921 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071571145 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07134988 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068259371 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062752138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072207086 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073121614 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065693742 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064068201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065135275 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070233359 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071446769 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070077609 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066754985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064098259 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066634872 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069656515 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06881425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065884613 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065574458 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073299525 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064113536 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074726334 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067111207 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076082044 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069786023 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061736663 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069577119 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064528134 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072107296 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061618746 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064062135 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065359541 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066353562 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06402348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067190838 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059109943 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071698562 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072286174 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065554478 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064336187 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064719723 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071768541 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066625642 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068779028 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068506471 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071261956 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075095371 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064512032 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068450546 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.202480523 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066575901 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060929611 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072178555 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065664456 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066070465 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065509566 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064734908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070172583 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075854366 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072994097 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06133864 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069285899 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065679771 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065505148 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06263573 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071340837 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070137798 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067292864 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073692388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068180685 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067337427 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070925173 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06693648 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067894722 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068055219 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070155602 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067869589 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068638022 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066567592 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069951417 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065900098 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065047435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069142531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066336503 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066892587 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07257482 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066426113 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067864014 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069172844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067466758 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067401459 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067179241 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06661781 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069983955 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068425319 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06663529 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069319981 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061239876 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073920621 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066923354 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074014988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067361667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06398875 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074099953 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068711799 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072662349 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067481331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068121116 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067894642 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06651777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068930247 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073438531 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064429226 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077547881 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074372784 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067743235 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069147362 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067067177 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068240894 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065608002 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067612286 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066984364 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066536614 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066143718 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070786699 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068617203 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066268862 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067454131 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066744036 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066319403 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067360212 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060882953 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065503008 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065879804 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066274765 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075915602 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066764071 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066300728 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065144695 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067223175 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065579161 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063577606 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075191537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07609549 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066495152 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073465525 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06555426 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067979377 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07654358 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060670713 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064534678 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064187069 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064464768 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073631517 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066773383 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074815677 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065883182 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065329973 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062959773 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06595129 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064019506 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059820378 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062920256 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068499593 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06411881 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063900135 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065231547 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067387898 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065958198 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074220758 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064778093 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066146953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064997419 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194011424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066207745 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06679448 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070766987 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06794128 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065294259 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064792829 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066570617 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06693862 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068120871 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066617834 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068213503 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076059969 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066737754 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070144922 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070479008 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061997229 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069786856 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066836839 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066930055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065714959 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069953973 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070488113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068268873 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075660062 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06598378 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06761679 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066592047 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064667595 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066680287 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066831494 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067500876 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065510511 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068071974 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075665677 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065450314 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069914328 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06639536 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067047639 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073548892 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067536027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069574475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073300335 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066522323 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068924714 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074262248 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071492915 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070130184 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068490055 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068443261 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072421853 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066029327 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072931037 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067588004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067548827 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068231903 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064163103 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066342149 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066659589 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065232927 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072297937 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06753063 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065950331 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065311913 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065223741 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067672397 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070065353 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075064168 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068923467 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069887503 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062011306 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063733239 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068745495 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064804432 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068024764 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068648917 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072158173 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068653976 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066319055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065177505 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075340638 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071784545 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069941501 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063910919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069921288 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066827923 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068086198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067137273 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066537526 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06759528 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069865481 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067715622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065821833 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07368644 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069959929 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067657725 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068208477 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067647141 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066650937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061725324 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066914688 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068431921 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071473499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068195248 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066539134 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076457759 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063768834 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066013409 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068741145 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065262073 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069987992 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061496186 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067233748 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066293861 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066243026 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06040242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064386464 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063472315 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067248976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06445271 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060326068 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075437915 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073826607 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068104115 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064354775 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195517682 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062103761 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062410568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066535096 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068795958 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069266983 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076980635 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066214257 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065952626 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062259262 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066891595 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070346211 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071052577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064485689 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062762505 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067007557 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070024761 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072525893 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065819744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066794014 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07061281 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069365321 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065497994 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070286898 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064464028 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070606439 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079642366 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067347826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068491089 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073138544 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074388404 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068009447 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062457608 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067331705 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069886227 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067774364 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067634501 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067914258 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081324515 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069844593 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065963089 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065465487 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07029149 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066192298 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075130762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067648392 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067153222 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071628945 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068617297 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076454545 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069563043 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074687232 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070091933 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06955579 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065830767 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066827006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064825861 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065888409 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068133158 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06744403 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072533895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074912111 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06585748 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076979199 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076040579 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068361639 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063222098 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065722794 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065900233 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061558581 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067934178 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06454733 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064263842 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064655672 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065349877 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067088565 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07191179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067279973 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067188025 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066789941 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060698504 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068166164 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06853407 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067064248 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063438699 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066441279 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066750638 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07057012 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069753222 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064769498 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068180785 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068327749 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06738641 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06234094 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073081491 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065687587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068478692 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065798193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066351964 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067355759 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069880891 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071496405 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067702836 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068816648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070211769 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068611428 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063246237 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062963884 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071198098 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063998346 seconds)
  done (took 42.555218865 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10027909 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06338994 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06216308 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061914069 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073828445 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062800723 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061487947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063681235 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063776977 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06558477 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061871788 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062395634 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071016923 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078064276 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074663475 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06687416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061801058 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063254173 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062182228 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063079313 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071116864 seconds)
  done (took 2.745494008 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07358681 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071596928 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072150539 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075304195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067337924 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070740182 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072513743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070896 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076220852 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067238604 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076027951 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070998068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075535882 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067959435 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067135991 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071067543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076093364 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067445894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070507012 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072655088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071571046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07233012 seconds)
  done (took 2.884325892 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066756161 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065977627 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067970841 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061395044 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066057031 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061369158 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069529647 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063615655 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069168909 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065395281 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065215216 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065192828 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067642471 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061362947 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066282005 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063810439 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10781731 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068875258 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065766896 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066588247 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061160193 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06818281 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061449032 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061930483 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064911896 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069011542 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066720118 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06410997 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066215194 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065313009 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065943831 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06383137 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067377825 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066097389 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065257402 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065215888 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06555958 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065498186 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061167326 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063780944 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066421568 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061921609 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065933922 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067024406 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063618361 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06361855 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067515679 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065623194 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061278153 seconds)
  done (took 4.545162741 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079540605 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108923202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067785405 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088423531 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080550872 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075385346 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069098237 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088910995 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063189516 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064302374 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081452458 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07970598 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065907933 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070540022 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072343748 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065764195 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066758672 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065090397 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069823742 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065288381 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070112896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07231483 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081728762 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078978867 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069722112 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064619925 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065791233 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070631635 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078538766 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070617751 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070328562 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071218606 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081398114 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071057036 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065062437 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068162295 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081720841 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065702115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067785639 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063069308 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067866503 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069112047 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071597651 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081583201 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065527148 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070579944 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06505754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062622651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078556275 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067620291 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073019388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080141653 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068984817 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066194188 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070064861 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080377494 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065553408 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063869895 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068463436 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077805813 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063123081 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069506875 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079353057 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067682029 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072483682 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079818416 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070724009 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069550196 seconds)
  done (took 6.346339042 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074613315 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071925196 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080981366 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079802233 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072361271 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07259639 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072459383 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072106837 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072202465 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077109202 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073229911 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093310677 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068218832 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075096236 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072485031 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072235867 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072738921 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072218233 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072906551 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072842505 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072505211 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080400311 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07290941 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080365142 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098163979 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067896272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071981417 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073226288 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080874043 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072197644 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080090339 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072062271 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07262523 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080390168 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079670698 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07196205 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064933177 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072028284 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072322813 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071960759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067495625 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079865375 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071701113 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067239295 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072114707 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071568407 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079785543 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07893146 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074859336 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076768145 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071897869 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079842764 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071660949 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072203528 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079978819 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10448039 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079911349 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080396514 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071997833 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079984944 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079631333 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086806702 seconds)
  done (took 6.028164188 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083184425 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074791311 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076462773 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061745376 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064370918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070210915 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064792403 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063917217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074712157 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074635226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077086862 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069888619 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072961063 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077188805 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069884351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07280324 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069900361 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069668375 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074140682 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069685881 seconds)
  done (took 2.763355392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074038269 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083331242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066757846 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071496295 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069190124 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07167629 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068267264 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069096933 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066675408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068762466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075941524 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075620034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066844321 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071771001 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075832679 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071182263 seconds)
  done (took 2.467283417 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07422372 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072034094 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080006638 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06645228 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064514412 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06265927 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065945597 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062198382 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062601904 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077668556 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066435275 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068057858 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06602233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064365372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063527463 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068443536 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062917608 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062959593 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065767702 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078153615 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076522692 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064513835 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066673857 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065816879 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066115376 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071082956 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065960876 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06367247 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063308436 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065964007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066781352 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069678516 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06311478 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064124466 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064869 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063512248 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066546469 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066631484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068414999 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066314162 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064521636 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065518906 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065852672 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066877642 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06243141 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066609149 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062317856 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068147291 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064137469 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06619186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066186418 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068451667 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06672198 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072395278 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068819063 seconds)
  done (took 5.001496259 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078855303 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06979086 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061718876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064421541 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068834519 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067859841 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069459331 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067667992 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067963774 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064580996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068011744 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06889277 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068346628 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069810245 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067726013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069557877 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062490909 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067734034 seconds)
  done (took 2.557524973 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071545493 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066674089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073963112 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06631725 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066451864 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068373486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062002739 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06459871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064607263 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06611982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065726705 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068518415 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064614684 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068399298 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065967126 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065996835 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068603969 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064717921 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065986247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062392405 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068787395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064344822 seconds)
  done (took 2.79083009 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092109688 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082378232 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139473451 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078581924 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083991082 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.0718991 seconds)
  done (took 1.876564587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090799778 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07921351 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066657974 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088527973 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073446612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067599152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067780727 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068307668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076136455 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076457381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067781562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076616492 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075902299 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075752234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073609281 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072832634 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067566209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06756609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066485898 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084299439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067473746 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075911223 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067779732 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067463721 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067631624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075502129 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075909549 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077872157 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066953759 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075703997 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073373057 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067569846 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076096526 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076086718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068817578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076415641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067523403 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084409107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072831399 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07570916 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068842719 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073575928 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076494132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072441636 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075993551 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067664335 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072206855 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067636684 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067637041 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085872182 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07329697 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075942204 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073395749 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076516938 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076384824 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085666341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076287185 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075212082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073376658 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078168125 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075722787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073202458 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075550215 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076503281 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073053843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075452835 seconds)
  done (took 6.214359004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082269836 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085838633 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067493935 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076582637 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075289148 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06750144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068073001 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067746786 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067526692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067381124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10830633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067963207 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075456228 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076047967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06781797 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067802812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068096437 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075583228 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067369946 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086593995 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067531517 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075679963 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075321132 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075537624 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076105695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073463276 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067874149 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06773982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067826678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067895877 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072573298 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067851231 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075766447 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067173074 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075438346 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067804021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068211014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072212101 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067714759 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073467732 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075545709 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084155064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067704689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067835847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076147323 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067865283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067989324 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06752144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067877686 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067126944 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076195187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076027964 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07638253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075394129 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067903625 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067739395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067419426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067477189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068109512 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073903513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075624284 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067167905 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086045112 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067597029 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067541517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075651212 seconds)
  done (took 6.123343814 seconds)
done (took 128.550158942 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182174861 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165894348 seconds)
  done (took 1.674345033 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06950786 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097452025 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077127776 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128503811 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066663639 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100504098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099117495 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078131381 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066396865 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066369646 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066241907 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068764045 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131462018 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066177746 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066318673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068887544 seconds)
  done (took 2.656307204 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09650989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157720152 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098296855 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065260692 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097174509 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073407367 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065010625 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075167728 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071046909 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065234319 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073308065 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070287022 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065368029 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070470603 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071069073 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072801585 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064961395 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07328173 seconds)
  done (took 2.767740957 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101392271 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091644876 seconds)
  done (took 1.53748042 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158890072 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105423147 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150824141 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347517379 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167960478 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.143714881 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143170978 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143827954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117581717 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140493473 seconds)
  done (took 2.959265256 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098140049 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152316575 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256554344 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11503223 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072346372 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095218233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116579369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077917342 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081127743 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080692969 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080282658 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076395061 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098604866 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073481126 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073613698 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076533154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102374017 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07238064 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073930334 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077060919 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099284985 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066170721 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07342629 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072089383 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077197657 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077592364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065897255 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065664196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076822525 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07440259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077322394 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094328669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077570476 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107737611 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070649076 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108316269 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076640372 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073927189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07412536 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073961409 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078996104 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078833344 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07256354 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076232506 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065495159 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076740144 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065445235 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065565915 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07830627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066957684 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078416449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077010225 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10809206 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067215208 seconds)
  done (took 5.95904944 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101358643 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104835752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071575305 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110796078 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100505939 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071311288 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101904719 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093644772 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103098642 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070436184 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068283057 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070422559 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082779807 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083534166 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11168475 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105010661 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074073935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070819466 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104226906 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10307309 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069015028 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095087611 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089544288 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102086844 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067677248 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070826539 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068322565 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071003935 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077264076 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078561164 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06989589 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081208921 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085199597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078491642 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067605095 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069793205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068416562 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079895638 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079787189 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079749295 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078237118 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067738468 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068192377 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069833355 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070284322 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067715588 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079256871 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080856367 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079433112 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069400709 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070258104 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068306026 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069738401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080424182 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078521629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081530745 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080196038 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068574994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068875629 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071963329 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081575559 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079689333 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080105999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06995179 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079103637 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068675371 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080902681 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084743776 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068733421 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069867448 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069270776 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069765538 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06982494 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078159906 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078583379 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069840519 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06995065 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068205563 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080645353 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078974292 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068074635 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0771262 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067829444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068380545 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069938916 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070069283 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077955678 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07984209 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070166361 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068006933 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069150157 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068261003 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066383712 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076025252 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079166039 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077775956 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077808928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068769309 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078062149 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078139411 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06913838 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07886322 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067450525 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197886686 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070690534 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080224503 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079538212 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080209846 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070200516 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069289005 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079384073 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081717952 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069461162 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079970157 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082701863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081068551 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068582354 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082082515 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069445909 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081021885 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070415162 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080926255 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069306029 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080827171 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069907531 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068424392 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069342781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080825401 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071368106 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069952367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070048784 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070803391 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080006313 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083261694 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071290198 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081482107 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079232939 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070971804 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079883847 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069775824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079528092 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069884765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070522506 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067871788 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082622015 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068954103 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069214301 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069958866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081429782 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068882545 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08129592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078850172 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06801661 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0822826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080788369 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077571736 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080336546 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070419329 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069904998 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068658746 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069711562 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079080478 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080834223 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070575747 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069414317 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078918034 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079495969 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067749022 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079290776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078731812 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079130317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068536203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069714258 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080674794 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081096111 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078535699 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07858595 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078421227 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068314217 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077490189 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078481178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068654211 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084536627 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068110406 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083268768 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079765891 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077278909 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079128271 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081135069 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080877562 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08066292 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082940348 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068698901 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06785728 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.0799124 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068387352 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068633589 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077264139 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069070822 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069187478 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082339744 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068088173 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078772506 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067422675 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077925136 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066468601 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068555987 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081804023 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198728382 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070344623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080549243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070146629 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078335496 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07906165 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069164301 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070343406 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080910818 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080046015 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069105949 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068419424 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070994345 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079256709 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078350451 seconds)
  done (took 18.701631387 seconds)
done (took 37.606163783 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209931305 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153178117 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198739934 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118797172 seconds)
  done (took 2.127794729 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122689624 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101131168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09524541 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065137906 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101749364 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065113221 seconds)
  done (took 1.934996076 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3127198 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211614456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182350996 seconds)
  done (took 2.08828828 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199640855 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187573297 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39325114 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253368447 seconds)
  done (took 2.523445457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143006953 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089441143 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066824174 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083376823 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135093875 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161633196 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101572736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126081816 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078872358 seconds)
  done (took 2.419454319 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147713002 seconds)
done (took 12.625164522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.125111586 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.246506361 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142991075 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.179256429 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.177370745 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195192501 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092212921 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.220919222 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094750482 seconds)
    (10/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.190763002 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081446212 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077038996 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072377526 seconds)
    (14/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074061534 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090502576 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158323136 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113351624 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.218887998 seconds)
    (19/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110389609 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07138834 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110271661 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204278925 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052688097 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072388309 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076716478 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094146001 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079718645 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149661096 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21616077 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088033318 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157488954 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090026207 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071479514 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071204776 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093309888 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173361842 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123551135 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072754733 seconds)
    (39/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194329256 seconds)
    (40/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097230031 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.090197988 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134746425 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136659656 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072786922 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158734768 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072294643 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071958726 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080281169 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106688658 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086871449 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174807481 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067037788 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050942496 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191423658 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078493845 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051141858 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07476934 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07207603 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108446079 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168530165 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088346798 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076013631 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104150203 seconds)
    (64/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184567761 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051818983 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070468292 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07281507 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.116024369 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.065658235 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080344673 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193679228 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071371965 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071121859 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073614868 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.174834394 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205923182 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090667402 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138518124 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064561261 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050664963 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1303951 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147676194 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.211560839 seconds)
    (84/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079786888 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073943079 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067511378 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.352454766 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066022822 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.102325035 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071270762 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089245394 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166814881 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090353818 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158917854 seconds)
    (95/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086489261 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08885337 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075757476 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09249681 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066184836 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157238094 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.15415588 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065490232 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075103815 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135984534 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090294465 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09621988 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065379015 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070864176 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087949304 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099043532 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069201346 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072033324 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09572619 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090327291 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149849439 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076058755 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095094144 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160519141 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067311845 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165262744 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.135303435 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073614639 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166615115 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072387731 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074709072 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053257545 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073240255 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066249801 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134927491 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065364709 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070253561 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071899131 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164936083 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184806866 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065194369 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.174363871 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067579416 seconds)
    (138/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185369498 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072295876 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053193205 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06429518 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070848833 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065255198 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080386834 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089817211 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08144094 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053376365 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.150996988 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065151553 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072106173 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137364599 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07831638 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118917223 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066411583 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062467601 seconds)
    (156/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051607095 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096632031 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065480156 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073435317 seconds)
    (160/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070093504 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075310857 seconds)
    (162/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072633847 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.07574056 seconds)
    (164/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108631795 seconds)
    (165/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087734549 seconds)
    (166/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109589731 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.133864594 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073028404 seconds)
    (169/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052011837 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149116389 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116394409 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074753113 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098205303 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054214961 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051658517 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07471253 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170827631 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078987933 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075571422 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091186001 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068206554 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068650283 seconds)
    (183/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066220592 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064238691 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.09972011 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071335229 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064709387 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.092855814 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.204312886 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066532459 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074923355 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053032286 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06622882 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053023485 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067052264 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073268823 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074151583 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064901999 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051953493 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071926997 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068796332 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 0.139089915 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090795528 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112265041 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051394558 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060847829 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118334752 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052182616 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092173563 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074811749 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072495463 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066885975 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147876215 seconds)
    (214/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061948809 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11075225 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072279622 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152775969 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061818541 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067237691 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051491165 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067411794 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051744977 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051864874 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175958832 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06750146 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07201824 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065406618 seconds)
    (228/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060998727 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064540405 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075606276 seconds)
    (231/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061560107 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05175333 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051953052 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05318069 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149475532 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132262871 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051409055 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051984636 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125126504 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08606481 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.196469877 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066126958 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051670933 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066433791 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053411156 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051586696 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072061793 seconds)
    (248/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060484044 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051054039 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066552773 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 0.127074882 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087295712 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077520623 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087704847 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073063642 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.0515058 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091821052 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064902578 seconds)
    (259/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052176047 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0668334 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050993756 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088861304 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066431565 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05143105 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071715521 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064302308 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054158716 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07283269 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051905283 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05250835 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052982073 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052633683 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065182777 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065759124 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094823088 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06570436 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052901261 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067410939 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061818107 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063904756 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063325293 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052537704 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065170637 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135122267 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072572605 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063592593 seconds)
    (287/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072744694 seconds)
    (288/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078197049 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063953221 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072224485 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051204669 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05289518 seconds)
    (293/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061721709 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054677102 seconds)
    (295/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054792871 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067950201 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065897713 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071021038 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066844231 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052826345 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065323501 seconds)
    (302/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066475195 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086587119 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071882577 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052602145 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051007744 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051273848 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06998235 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 0.124597211 seconds)
  done (took 30.372606743 seconds)
done (took 31.762941243 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085546033 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093569971 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075724491 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093526149 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081100002 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077667627 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073136004 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07919483 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081074804 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082864146 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07920453 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055923109 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074673745 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074796411 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075062323 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09199817 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078885065 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073003047 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073660736 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064975328 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073113793 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066143504 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067780593 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055007112 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078101347 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07195728 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072500777 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074402604 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066109408 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066386466 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069421397 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073576146 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066458363 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078831574 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072235305 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073380647 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074997813 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077213381 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067936321 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066316754 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074867391 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066451088 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072985335 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073538403 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072290615 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071710158 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073511084 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078290327 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091824369 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068719267 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074735941 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076567422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076643061 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072726753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070146258 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073380799 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071117886 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092019345 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073929244 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068201393 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074156365 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074148606 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0717284 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073699959 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07350235 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075661382 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075682018 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072045829 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075430888 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07160487 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065802983 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073185731 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069368465 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066305138 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075787552 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077186331 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064636191 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07111577 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072733158 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071544367 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065021668 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067928405 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067198817 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071410084 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067695947 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054793669 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069344939 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071564469 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064554822 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07333618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071699764 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07216623 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067018294 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075259033 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065630063 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070953594 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066159768 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065470908 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067147256 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06981714 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065420559 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067579187 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074989813 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06702995 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072246161 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07927446 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065544624 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071879323 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064414786 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0649904 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07975482 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074864789 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065576602 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067397928 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064795611 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072224516 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064594229 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065258209 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064977972 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064951694 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070494356 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064901758 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066847467 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071895703 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07685571 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064707151 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067954943 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066508809 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064229082 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069519673 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06463512 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06455942 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.202336487 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063407727 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068974602 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066930628 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073507908 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068923466 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073289038 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067804915 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074347152 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070451666 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072215785 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071333842 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064756679 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059183879 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069187079 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068603456 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068305042 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066410123 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067939047 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06638342 seconds)
done (took 12.495893466 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067204163 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143641863 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099681314 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096377989 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086508111 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067532954 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07643812 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102314086 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068544975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103165892 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0877621 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085667482 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113356323 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065290461 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06649978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070541842 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067440279 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081999627 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101517622 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086691416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117329215 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065794358 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095164978 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091074245 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087913443 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093046599 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067385568 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070300311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069701593 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101078021 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087314097 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070160088 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067404831 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101262217 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093316677 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083759001 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066900929 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082720024 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067145462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066037524 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0677653 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098841006 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083135478 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080553707 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070579268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06962447 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067719081 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084140323 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089641654 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078829662 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086729664 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10295466 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06905107 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066099789 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.0651566 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085896516 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065875373 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069387539 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066459235 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06836373 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066087684 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069602994 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081750041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082525087 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070335718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08075896 seconds)
  done (took 6.82240509 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084087435 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090621601 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083442283 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084396974 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06610011 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066899772 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066947266 seconds)
  done (took 2.029041643 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067209589 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088773844 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090684426 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089238059 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085671533 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088123726 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076400916 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066884338 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080923324 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068040726 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087568694 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10224632 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067546541 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073231308 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091267996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066607778 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091362194 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067011378 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069698939 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091208431 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068633044 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082486036 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070683398 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067389043 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081245234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066978119 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113864673 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071002076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068469655 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069667006 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064764941 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107343277 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080815304 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076264962 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066651838 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0810848 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081462667 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065333429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082969126 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072110778 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081004589 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067232192 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067650696 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064731937 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070705766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076837367 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067303038 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066759015 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068862392 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086254697 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067357013 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079666021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069411568 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069067805 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067724764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070488554 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076238451 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067611606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085913995 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067771888 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083086273 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085386324 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080659447 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082928509 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06919799 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080465326 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080466653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06940388 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068776491 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070441279 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08438891 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065341518 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068271041 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077903004 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068185818 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089333722 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089246324 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067602338 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075723574 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067007158 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066605238 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06687116 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089257066 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06867279 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066303648 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07049912 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069617573 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06494874 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065471319 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069983316 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064571453 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068275122 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069092013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069877423 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068909993 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083628853 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068855697 seconds)
  done (took 8.780460323 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068776443 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067760624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0697474 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067899082 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067949095 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067563883 seconds)
  done (took 1.919008158 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093395583 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070042213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080914018 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073228754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104983252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087292453 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088470911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079600163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084260698 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079485569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087637005 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088665415 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093343707 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073320682 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087132634 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072477955 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087928458 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076389611 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078969267 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073307807 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087323637 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073051475 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073375472 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082226553 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075799016 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072059282 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06758595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079045359 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079070131 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079099651 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072920083 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076128471 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071213969 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07885071 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08732857 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070966965 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07230538 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077402867 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072631647 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075821501 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088754463 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07306032 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075328888 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077747248 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079076458 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071524074 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077547569 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076141023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086540776 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077587179 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079034195 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071998531 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075523367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076941657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070538777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078508663 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077299968 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087290302 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072354256 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070237984 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069027664 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075151579 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078147879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075525002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079141901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077258134 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070635754 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072492142 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072792249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071965558 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077360143 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069503547 seconds)
  done (took 7.104670578 seconds)
done (took 28.126874605 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543570783 seconds)
  done (took 2.021223995 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60456255 seconds)
  done (took 2.106047283 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.556985178 seconds)
  done (took 8.05692967 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393278267 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474575615 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695127454 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130953594 seconds)
  done (took 3.239863087 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67595902 seconds)
  done (took 2.185921103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210836113 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196973541 seconds)
  done (took 1.92854167 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377942287 seconds)
  done (took 1.87365517 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112327142 seconds)
  done (took 2.610374454 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263511852 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16370129 seconds)
  done (took 1.928746229 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462978298 seconds)
  done (took 1.963569556 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.844045713 seconds)
  done (took 6.345514632 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213739574 seconds)
  done (took 1.763170782 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239831931 seconds)
  done (took 1.746662827 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.704241851 seconds)
  done (took 3.202806148 seconds)
done (took 42.479575229 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081055992 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082140699 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081725517 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078623427 seconds)
  done (took 1.812391089 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077492628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073202023 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078233739 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073944461 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.0773088 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072964458 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074482258 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077642084 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073040099 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072936963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072878029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072999578 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07526202 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075452404 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071277622 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075657099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076776112 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073049145 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07653981 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073577134 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070997247 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075453129 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075460113 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072496583 seconds)
  done (took 3.29158858 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078076467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073918416 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075462228 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072820758 seconds)
  done (took 1.807986438 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077797638 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092255424 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090271488 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077885026 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093607776 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08678477 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069934532 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06976648 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073216269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077306323 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068333045 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096692661 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088065082 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077284142 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079644254 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06661353 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068838836 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087200794 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078026334 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077905683 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070508799 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077666163 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068147352 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088534855 seconds)
  done (took 3.404845317 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088198608 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10358114 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082440112 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089247395 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090976994 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065943578 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089429665 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08958725 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124290735 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065725102 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070422067 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065740471 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072951494 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065846156 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081422003 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105639508 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108226705 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069199907 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09617982 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066364872 seconds)
  done (took 3.204645794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073802956 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071746631 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066072324 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069437934 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078443371 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073567855 seconds)
  done (took 1.946225176 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068427318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068584506 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067978653 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067338284 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07244209 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067495355 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066551751 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067851143 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067866367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067331636 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066826217 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066835252 seconds)
  done (took 2.321163108 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172707852 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06936198 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070149247 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066983417 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071090723 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066749467 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080284262 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067997062 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090903339 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066994984 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066828197 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069316271 seconds)
  done (took 2.467157093 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208681399 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077144093 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238177896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14870738 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111985797 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11619183 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112696686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113986395 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144043748 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102517477 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16894898 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16754099 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107757256 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138211433 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089965523 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098730197 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156740929 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163448399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106156433 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166863477 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144917194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126030146 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148028748 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101960929 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107001155 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12266291 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071400639 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080598003 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171522765 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132413113 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147679167 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111771372 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094312075 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178208805 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172636543 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142999401 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146038045 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084230404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103258104 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132940579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198852063 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088344475 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163482662 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247965954 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08199629 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135178045 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121093465 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12101557 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106606567 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090734761 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147698739 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184360744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139994996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087969875 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124569692 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116666209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116209352 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114642548 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183601215 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162196008 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129551247 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072434345 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109160109 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153997837 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132596483 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109554282 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127240255 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095171599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13519908 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155839752 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119280797 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144388753 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113877896 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08962852 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120074305 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142322787 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129718464 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171951838 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125940293 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073681662 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126619749 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103891805 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082017474 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143185551 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075688305 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175307297 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098742011 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106773799 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123844816 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109676754 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109805606 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161279272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285623261 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105592199 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066893427 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105629085 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121485056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150374527 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088227037 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110033152 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117507089 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079214048 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141215983 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075520415 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124829142 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076794031 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126239336 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134258985 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076474772 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123313385 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101054508 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102213688 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134491657 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161753375 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0900077 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082462674 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167747985 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123334438 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105719747 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145708004 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156422117 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10060039 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104037165 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151415207 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181355238 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089937934 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164452271 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108239229 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085096672 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088152368 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125103453 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113622311 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12323707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083459912 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120445736 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170092414 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076590105 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095685489 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133956905 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079138166 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081002683 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103718358 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100716353 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095191218 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100287799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106074162 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138571801 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122299766 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249544322 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127995937 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100335304 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171756022 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089885641 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10204963 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105736808 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070903656 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138347663 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158760227 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080336868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166060207 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123917102 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116728287 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120372934 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084547488 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140492529 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079175883 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070215306 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145778898 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11137087 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111112911 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152277234 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115991001 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128578032 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119983277 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135930198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133525386 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129523197 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10615273 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089172172 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112656876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126716855 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073771973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093405235 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080878839 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10462194 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096540627 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083878121 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143280625 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125988129 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109765556 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112974224 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097540355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14834442 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076727794 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12905466 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119644565 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094363944 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152736326 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153925431 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131598927 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099383492 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143613236 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.213151445 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075491069 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091327476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124780233 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084216394 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083841537 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119537653 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148515377 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131017997 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139586937 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123058984 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12259243 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15578271 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070613995 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11637819 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149420304 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122336787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105880168 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090906023 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099392055 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144474406 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110229788 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184059145 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114948335 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127041451 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154557863 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104345511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080352971 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103658429 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136939008 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105167507 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1451806 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100469913 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08849044 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111105868 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075046676 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100955974 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128251249 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121387442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13660039 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115337254 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133931299 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077869393 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117717079 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120350901 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12264535 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064114493 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120137306 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164642484 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094456634 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118462718 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152824173 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079300754 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.278549469 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178638382 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146346285 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08560901 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111887802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119584484 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129180606 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121572858 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142002759 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10985556 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137301813 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109739435 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08655994 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088839339 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099908312 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106579781 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095838031 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109917448 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115917575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095482683 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132397663 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10420877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1111119 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118514275 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097032174 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089313146 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098374059 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175443498 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121026099 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172857399 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099644825 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14615686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165063117 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0754468 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07980568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079036316 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140617891 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084426317 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131726895 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10676818 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117479882 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125324641 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14366852 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095941769 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069326403 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109135586 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134114911 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123776641 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098741069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104999207 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163970679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100087994 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079283606 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113075172 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113921845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245612319 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177163799 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062486928 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107905217 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077529409 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081578522 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12887138 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157330927 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082655307 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106556466 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12042097 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111492215 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129188716 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102964758 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109303839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125955525 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151399894 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130266586 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090609637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1127941 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130800603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158327282 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107070557 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096462916 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172858648 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169765741 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16163737 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089273859 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115637706 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115028723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109045623 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140439711 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083802619 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166003571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082875364 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13750707 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105066694 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091757889 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131241164 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108156674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088937477 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1519715 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118643019 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083220466 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077917772 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117897551 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120189191 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106685531 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075581613 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141388697 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073385369 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132046311 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316413941 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083596911 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107402007 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098353229 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081014599 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109882131 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104266561 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0902985 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099453254 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175421782 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089053794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151532685 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143271916 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114668199 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139029202 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100446339 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637915653 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078755039 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153318708 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118084754 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174303687 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098363393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119171593 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110162209 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125181254 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146403095 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105764039 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179358644 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133442053 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117332351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080413089 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103323073 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103822315 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089636888 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106812636 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114771098 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116969162 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094628349 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116956776 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125139255 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083049696 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096342068 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157433885 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11813534 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145041734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140220229 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084947138 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117935113 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139461047 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080175289 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122110138 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296836483 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109094107 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099388273 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081316858 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104369931 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172734332 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074105517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165055164 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122302244 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110933613 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116042731 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116825579 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133589439 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109332587 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123594242 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095743699 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111218711 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114835637 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083587859 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07767568 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106118939 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11449034 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099059778 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099367231 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09880953 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152526484 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071937856 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096901996 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11481847 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146985629 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175554525 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088632648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083166697 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120796566 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113504053 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114373182 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121715284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080001812 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083396887 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082757411 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07755637 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109105289 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11297854 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116077892 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112492883 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166398086 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083393188 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225857904 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096049426 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105443951 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070431701 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079333254 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096088672 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09733748 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1075206 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108728898 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169420179 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.23670864 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091894709 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09553586 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074445425 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084533961 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129343187 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111790011 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120024585 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099437559 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063504327 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110304731 seconds)
  done (took 59.56682743 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10896322 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082746096 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096848303 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150754083 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123762265 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213610131 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158080309 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200891923 seconds)
  done (took 2.756676537 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068790729 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095259956 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100088975 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083395557 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067238989 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069308012 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226333798 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081641463 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067151175 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099093419 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080481511 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06981605 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424288234 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066703476 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06895547 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064061293 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068173718 seconds)
  done (took 3.414416738 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36918043 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60276605 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375629289 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073645478 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.850225724 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090966863 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.037262216 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129309839 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074701732 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539860708 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704819122 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126383837 seconds)
  done (took 18.59822585 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076676353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07112714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085623561 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085440785 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073096911 seconds)
  done (took 2.015191541 seconds)
done (took 108.164726572 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081014687 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388449823 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0541016 seconds)
  done (took 2.094540979 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083627595 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085812745 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08565317 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084060365 seconds)
  done (took 1.970554323 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075233595 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076780637 seconds)
  done (took 1.777335843 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226053474 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140479429 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096015324 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083414246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078586477 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079056807 seconds)
  done (took 1.86983017 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072796282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.0751702 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073503622 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077322034 seconds)
  done (took 1.922325008 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076589003 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053087758 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055719266 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056650958 seconds)
  done (took 1.867105183 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08745409 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079630892 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079603585 seconds)
  done (took 1.87136919 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101995097 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086461495 seconds)
  done (took 1.813555851 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082554254 seconds)
  done (took 1.70857385 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093649488 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102573639 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12985206 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111334299 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138117698 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109851777 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086497922 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087730167 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07803763 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087878997 seconds)
  done (took 2.651170543 seconds)
done (took 21.713082254 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078796264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359860531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361232137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091286229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66954144 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357784565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.967646875 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092827835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114351307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067548437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084443791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648191029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.99200206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320988196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980064954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319297473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650428687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069170426 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068310625 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068910221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95248983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068267849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068167487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06885443 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649056573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371681207 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068349186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319756212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068618408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069972471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354795617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068807791 seconds)
  done (took 16.107681818 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071733652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119257925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074340202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08525924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071239239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070348971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072258347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069581945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120903518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06820859 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085564402 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068295094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072961279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069228848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087959103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06962275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069741361 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069456126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069124027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06886551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087291919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068504459 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069272297 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06896236 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068429627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080954785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069805286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068918246 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069436607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070959889 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071829935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069458579 seconds)
  done (took 4.057172939 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11691618 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126484476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074934341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103825097 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11380359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070884085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144465536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093371781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128674587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068629429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085089805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06873393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101813801 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088770405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069238959 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069846118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069663597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069031801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069375056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087961779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068936314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069174014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069663554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069429843 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082173487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069763097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069586636 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069598489 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070999006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073631761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069886157 seconds)
  done (took 4.318049324 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073257 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075978924 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083933797 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084303606 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070749813 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072595186 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07339727 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070254412 seconds)
  done (took 2.250061258 seconds)
done (took 28.370167757 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079189814 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069883738 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073697779 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082101489 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073692098 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079697889 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067824347 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075164691 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072914883 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073799619 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075576599 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068207206 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071671659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067752228 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074456125 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068162138 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080233053 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072677081 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079821066 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08013796 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070467096 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073725867 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074496515 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080029605 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079828011 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080198055 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078122731 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073491961 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069968387 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071804075 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077384685 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084502064 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069329345 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080544932 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068684321 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069029709 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072170867 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068768697 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080089266 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077607726 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070425304 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077722545 seconds)
  done (took 4.762822202 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088812199 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091671388 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085657507 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06170201 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067422312 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065546062 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089596401 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060623259 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06015977 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088237749 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056225271 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059895698 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063244215 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055084971 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06010015 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05750758 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061985044 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05704183 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059998695 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05968241 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058527979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054628522 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060627076 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063370614 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059162544 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062362359 seconds)
  done (took 3.362723058 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074912932 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084895531 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100037762 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128228366 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105659803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078411308 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078973763 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093244377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086400283 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067458258 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071648185 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094701477 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088907331 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074614904 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068465064 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085467411 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08319834 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069572335 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074469394 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091441625 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085188017 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084390412 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093449092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081154604 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067377457 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070109298 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071726546 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081876084 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072982993 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077544331 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071621172 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071240836 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070406276 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079187273 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07192004 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069720461 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091453952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077828483 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07826412 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068950855 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071810919 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068915641 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090282278 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124005035 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067873836 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074617568 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075910915 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077240747 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06799516 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086797692 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079325302 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068061 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071176574 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067392536 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068316203 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080928177 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070267815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070677399 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076941696 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071026866 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086506568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072047553 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083194518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068111174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075536137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067588231 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069125987 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067140572 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093051378 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069548719 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109265222 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069166225 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069038387 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077110328 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075348825 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074159059 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068332922 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082944995 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079655806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071738559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076514124 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071371001 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070951387 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088008824 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070130308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069382923 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069031197 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.0741234 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071026071 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069559449 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081173792 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067910285 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070969211 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084510042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067641562 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069532492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073958468 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073267743 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067402803 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078855139 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073065151 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069100482 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077442756 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067795531 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070836957 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078145073 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074031683 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066777045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07254133 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073459108 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06850269 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068793636 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070822983 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069487603 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076006934 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074155892 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072170581 seconds)
  done (took 10.638550821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163303759 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155354671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071044506 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146374465 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07792555 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079954318 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150785374 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095063815 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068752878 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069796983 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06972301 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111102872 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107130072 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116172822 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079392389 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068608479 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084485281 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115028664 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150619678 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14427322 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084312955 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077424229 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070629008 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069553515 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071231996 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078714422 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085559901 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07807327 seconds)
  done (took 4.43009938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082563182 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098351944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074523783 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090180374 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092684392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068734714 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070679863 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070203888 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080989594 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079674777 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068310181 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074383652 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074809977 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07190341 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070203535 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07584418 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075863697 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069752137 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07158101 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073354404 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078090523 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081252803 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072242295 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067699775 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07479233 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067668582 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065221706 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085046903 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069299504 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090969092 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066701252 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075366083 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08187711 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069439793 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068190259 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068175798 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06810048 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068310371 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06986162 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066906459 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067173951 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058437492 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067252337 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.0803236 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074481051 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056934199 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073073239 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073402799 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073146862 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065905356 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071088983 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070802095 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071044949 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07525897 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072989386 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07287322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069436289 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065979047 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07620433 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068375443 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064881846 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066227058 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07237535 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0662748 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075890969 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072499269 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066347132 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067620754 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069747009 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074065709 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067708021 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071019845 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065766613 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070227911 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072770599 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070458838 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069115072 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066721898 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067686132 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068309637 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056193967 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06778611 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05411324 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071035634 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065899372 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066615499 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067771989 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072813526 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080768476 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069997687 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073704495 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068741454 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06702524 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070911477 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060822612 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070702928 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083240237 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08353725 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068172593 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066426642 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082166166 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072698163 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066897315 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056781287 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075327463 seconds)
  done (took 9.19424298 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090206084 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07065387 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085000743 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091724331 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087191253 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.0758604 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077730192 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06995387 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083165808 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074644161 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077031772 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068834838 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078084731 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077294496 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070838936 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078005573 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072875095 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084182783 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082832292 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068976934 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07646422 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080836082 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090212496 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080978081 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082155051 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080648537 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.0897199 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072779421 seconds)
  done (took 3.912161022 seconds)
done (took 37.945137275 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.728191766 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.904188145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.723340072 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081561268 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.991975153 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.756156491 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.87597268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.718870979 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.969484007 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.761583876 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.976247877 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.772490018 seconds)
done (took 64.92118032 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.734081087 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.857516216 seconds)
    (2/2) benchmarking "String"...
    done (took 1.99070916 seconds)
  done (took 5.507785963 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.022746687 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.320367426 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.960770345 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.713084083 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.720269673 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.007553014 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.532140053 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243573811 seconds)
  done (took 30.157046829 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.879402376 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.949503102 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.420949972 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.484684458 seconds)
  done (took 15.449610262 seconds)
done (took 62.620196728 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.742819464 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.750065542 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.744340926 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.696496148 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.771178987 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.719221152 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.178173655 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.758045842 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.712319716 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.70495495 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.712641752 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.138761749 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.726509848 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.100313212 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.71342098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.715929624 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.791655759 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.30003976 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.867343595 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.720211139 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.722393274 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.758622612 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.714526484 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.721345521 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.763059474 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.710773423 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13800639 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.724329644 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.331375597 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.714952447 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.745517019 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.198410427 seconds)
  done (took 202.465554347 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.708925573 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.574254171 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.658074046 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.715061793 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.09809219 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.894586545 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.825797023 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.167825086 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.712246204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.72568832 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.924623988 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.708859673 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.945907543 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.653871319 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.7393663 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.812862495 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.893553474 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.949049477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.740779371 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.833417474 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.732573368 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.741995095 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.691152092 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.899138456 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738975368 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.808353905 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.882780264 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.740667269 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.906001447 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.865618418 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.728396703 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.726749392 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939203824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.588075402 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.730800532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.739882445 seconds)
  done (took 167.39870136 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.87939835 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.716221932 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.715238177 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715583885 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.714778316 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.727156956 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.715817789 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.837514525 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840472819 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.178081732 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.992160636 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767089715 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534578166 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.714567675 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780973079 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.726877973 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.718470327 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.729705909 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.739912853 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.71750712 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.71321963 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838993741 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.727055389 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.159911255 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723885208 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.715269627 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720609286 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.086240727 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.714240155 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714239635 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720227794 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.973608046 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.715756376 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716027231 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605276441 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.08376337 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.714922961 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798815546 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.71747715 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720855384 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.715030912 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.934787701 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717064082 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.715701769 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.719196904 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878076175 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.716050038 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.836566179 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718899332 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.216639308 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.717255868 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715746771 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.407172841 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.383224339 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.718640632 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.717283461 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.717869019 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.717346768 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715964106 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.720747748 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.423049133 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.79038243 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.719398195 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.718982439 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.721959064 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.717740632 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.715724147 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.902469916 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.715471944 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.821586202 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.775992311 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.837478431 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.837623532 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720313057 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783051164 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811405383 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.716987516 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.716491268 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.717375471 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71801167 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.798648701 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.718121642 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.856854217 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724482462 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.717632977 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769532056 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.786379645 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.717929405 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.619901494 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.718518856 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.717951959 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023303718 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785083252 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.717442951 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.717408054 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717857371 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.897760672 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843962888 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.508413289 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.72215621 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.524061581 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.726425018 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.852061491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.71427744 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.893158355 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.714606668 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.796116277 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.719305133 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.717054564 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.715542402 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.74521107 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.714592345 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.770115633 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.71636264 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.084760885 seconds)
  done (took 396.201534597 seconds)
done (took 769.662751694 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.377827549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.338380578 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.459517827 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.366578623 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.339714386 seconds)
  done (took 13.541298189 seconds)
done (took 15.197897253 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.8012697 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.808570541 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.739470263 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.804432315 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.733773502 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.806097669 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.785866489 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.739963321 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.771140226 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.740231265 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773367024 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.740805226 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729734091 seconds)
  done (took 24.634580097 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96032325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967311172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789353932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.955789945 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.766233066 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.965741176 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887044051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.873041303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.877393387 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733587654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730967611 seconds)
  done (took 22.167140226 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.95760041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.965230653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.79272963 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961006539 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768097791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958578516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885008162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.873758221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876453444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.734744435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730099611 seconds)
  done (took 22.164220258 seconds)
done (took 70.620920843 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.72487942 seconds)
  done (took 3.385211169 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.746827 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.886594562 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.73127903 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.729497629 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.729192443 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.726454532 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.731306541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.72701132 seconds)
  done (took 15.671998952 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.72644738 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.72849723 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.722717362 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.724706225 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.721885453 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.725448403 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.722877317 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.725796542 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.722561265 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.721887825 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.723395371 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.725675806 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.725944159 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.726126421 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.726149396 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.726450097 seconds)
  done (took 29.259145723 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.725081812 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.722784148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.722915902 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.725888473 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.722636152 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.723902359 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.723551931 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.726462907 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.722065537 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.724406313 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.724290266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.722535221 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.722958222 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.726471774 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.722731342 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.724683963 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.723400197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.724300057 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.728446069 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.727245382 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.725284952 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.723782297 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.724540456 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.723112788 seconds)
  done (took 43.047714866 seconds)
done (took 93.022798152 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.635284112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.13183053 seconds)
  done (took 8.429768081 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.730587447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.727650019 seconds)
  done (took 5.161593205 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.727725725 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.726770177 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.728700392 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.726224353 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.725897582 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.726635142 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.727740061 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.728104184 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.728677375 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.727201631 seconds)
  done (took 18.937072686 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.727670942 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.727346143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.724550795 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.729043121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.728354905 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.723748169 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.728721329 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.724880784 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.727056303 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.725166432 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.727716084 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.725192735 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.726368855 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.726037364 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.727455606 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.724056144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.725083398 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.724612159 seconds)
  done (took 32.73785336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.724231312 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.726799243 seconds)
  done (took 5.113312392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.723499917 seconds)
    (2/7) benchmarking "second"...
    done (took 1.724179568 seconds)
    (3/7) benchmarking "month"...
    done (took 1.724470277 seconds)
    (4/7) benchmarking "year"...
    done (took 1.724283819 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.72521169 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.723499773 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.724250357 seconds)
  done (took 13.732234133 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.726772507 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.888843377 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.957957454 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.390674064 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.730001549 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.732160126 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.657119891 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.733010308 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.732052981 seconds)
  done (took 19.211994321 seconds)
done (took 104.98465972 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.544155506 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.730150618 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.054184899 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813819356 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.745115993 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.025083762 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.766834591 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.953978699 seconds)
done (took 42.296673235 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.807879025 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.271503085 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.305158801 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.026289675 seconds)
  done (took 12.266784357 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.706364344 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.240356941 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.776783872 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321923497 seconds)
  done (took 19.730899513 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.093234014 seconds)
    (2/2) benchmarking "read"...
    done (took 2.093738941 seconds)
  done (took 5.85598955 seconds)
done (took 46.325803008 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.729467633 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.729073608 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.726544112 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.73088115 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.726177987 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.724957866 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.727197281 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.729516306 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.732009343 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.72991631 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.729007162 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.731644932 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.730917741 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730282042 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728846698 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727691269 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72888453 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.72794018 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727939586 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.726888463 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.729605181 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729740955 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.72875347 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.727593583 seconds)
  done (took 43.157823434 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.730582838 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.729797812 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.731693659 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.730940158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.727606958 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.730872337 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.732003236 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.728341595 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.730682963 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.730513276 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728789858 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.728812828 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.733857351 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.728835387 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731693728 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.728803554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.731482342 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727657883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733137393 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.730581735 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.730885223 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729472696 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.728613049 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730800369 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.731340895 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728101755 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.730951679 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.729043621 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732162166 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.728491226 seconds)
  done (took 53.573452009 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.736883088 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.741505211 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.732158721 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.732744928 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.73538048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.734753381 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.732921189 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.733706206 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.732931752 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.734367958 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.734989444 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.733293844 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.733716615 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.733924672 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.734070037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.733567877 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.735412464 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.733103127 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.7333845 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.733469886 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.735326284 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.73565446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.73480822 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.733317051 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.733169321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.734149216 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.732744516 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.735612006 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.733124037 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.732791841 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.734617793 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.733143985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.735365079 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.73495353 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.733987534 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.734837313 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.738817733 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.741222624 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.733969517 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.735559017 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.734235993 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.734212577 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.734614499 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.733448903 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.733847574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.736339796 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.734235808 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.734047773 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.735009906 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.735209446 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.735009419 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.738020925 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.736630868 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.736320806 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.734890177 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.736202958 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.737377478 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.735373749 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.736385231 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.735649756 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.736106814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.736365286 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.736345206 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.737679559 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.736661447 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.736738018 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.735953953 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.739003029 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.737454402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.734899189 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.736324195 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.737029137 seconds)
  done (took 126.605248817 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.735963852 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.737358324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.735384907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.733993055 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.735167388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.73780453 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.735308491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737896062 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736070327 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.737532873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737884765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.736238807 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736006116 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.738343088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737961491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736042573 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.739022942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.736636908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.740660376 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.740125618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.739110082 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.735127656 seconds)
  done (took 39.887898172 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738659793 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739519206 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.735493093 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740280487 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737696703 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.738096114 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.740115313 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741041842 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740365657 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.737011615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736817405 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740111175 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.738781113 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738459827 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.737130993 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.737353809 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739749704 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738375619 seconds)
  done (took 32.96934344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.735847853 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.737995124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.73970398 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.739161173 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.737135785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.742599661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737873538 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.741037789 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.741842484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.738228942 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.741089711 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740439245 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.740640151 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738215793 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73996782 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.737438747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.742922629 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739012502 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.741383222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738738633 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.737801395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740727014 seconds)
  done (took 39.945695797 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739520588 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.741543383 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.739269113 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.739748544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.739576954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.742932802 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.74148536 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.738146999 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.741615371 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.74157626 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738253653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.74234084 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.739834922 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7406376 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.738980067 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73944726 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.74109976 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.73941553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741141579 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.73941404 seconds)
  done (took 36.48367048 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743305533 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743894945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.742685817 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743380831 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744758584 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.74375103 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743279214 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.742518094 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742043072 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744429121 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743282032 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741918187 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743442638 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744497594 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.741614205 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742548384 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743692596 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.74278427 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.742623075 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743594562 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.744720577 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743630242 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.74339365 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.74314611 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744507984 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.742991698 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743852483 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.743394323 seconds)
  done (took 50.492289962 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.743044287 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74480081 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.740937385 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.740600914 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.742044215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.742115209 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.740588815 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.743756792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744454787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.740601284 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.744018579 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.744291613 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.745542757 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.745422593 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.744567951 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.745000228 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744570758 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.741455264 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742592659 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741552565 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.744828377 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744941371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.744725345 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741508504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744193208 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.744594186 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741228646 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741945389 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.743436999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742009913 seconds)
  done (took 53.97558304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.761371292 seconds)
    (2/2) benchmarking "in"...
    done (took 1.762607861 seconds)
  done (took 5.202274949 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.741934338 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745828877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.744806363 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.742435185 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742349503 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744278853 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744758544 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742360266 seconds)
  done (took 15.628211793 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.743246753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.74459555 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.745856848 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.74458435 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.746237861 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.744694527 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749448528 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.745206509 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.745708839 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.745575636 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.751184761 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.753477811 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.746999358 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744740229 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.744665463 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.747982229 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.745362964 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.745266668 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.746052356 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.746223964 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74623576 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746546847 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746723869 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.743355932 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.746535636 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.755117616 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.749779078 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.746439181 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74511324 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.748925629 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.744776668 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.743082799 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.748544979 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.745733139 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.745947628 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.745998647 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753083968 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745885144 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.75182983 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.746363152 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745515064 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.743709305 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.745376233 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.746962202 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.747346678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.745130869 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.743878386 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.741111129 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.744644165 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.747863461 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.749921009 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744418644 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.742899982 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.748073367 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.745666698 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752505953 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.745024357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.747888466 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.754429981 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.753652892 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.757415805 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.75289791 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.747817829 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.746928045 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755887113 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.766750743 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.751306519 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.744308754 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.743610613 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.747529048 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.752894278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75787792 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.75639454 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.746923006 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748599054 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746773968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.747484083 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746465354 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75437335 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.748614181 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747158057 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748035773 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754779872 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767696537 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.746598984 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.747543505 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.74745328 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.747149719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.748268847 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75585712 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.748128892 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.745911138 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.746004596 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.745977043 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.747229301 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.749884265 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.748549994 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.749899439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.747154471 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.749131694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.749710944 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751696452 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.756122146 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74935272 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750254037 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.755994601 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.750387828 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74982885 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.755256755 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.749049196 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750956452 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.750688836 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.756659273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.746927168 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752487782 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.757355023 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.749838428 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.751045529 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.751753801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.749867444 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758949401 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.774668709 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.749831242 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.751723138 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.755383065 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.760538468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.748317949 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.751470886 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.749772307 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.746948117 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.745694262 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.751937633 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.749755468 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.750156433 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.749463297 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752778135 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.746620733 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.749849388 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.75110525 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.750629966 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.751032167 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.750235013 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.753287353 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.752140614 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.750211769 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.751449272 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.754499725 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.75165597 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.750145535 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.749538303 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.747198808 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.749946536 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.751546985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.751151742 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.749078104 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.750107663 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.749550591 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.751380103 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751364677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.750589907 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750471579 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.750966735 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754695996 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.751621827 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.754844249 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.748814916 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.748432425 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.750208041 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.751124674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.75048539 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.751478618 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.749782791 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.754062822 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.760393868 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.751330208 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.752426552 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.753686967 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752952361 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752460037 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.752550146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.755290353 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.758279991 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.75219087 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.757921964 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.751186726 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7524062 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.752253397 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.753099689 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.751642991 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.751872878 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.755404479 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.759878635 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76505873 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.760549003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.753388452 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.755631227 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.754118098 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.756303414 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.757271266 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.752927042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.753419163 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752938138 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752608631 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752572707 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.752987238 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.752857419 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.75225364 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.753003158 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.753130175 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.756304146 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753504416 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.753808923 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753903407 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.750100663 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753750669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753289341 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.753120633 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.751953166 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.753152689 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.753564811 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.754519864 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.755771743 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.759306109 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.752547636 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.755733348 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.755410011 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.755280185 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.753733878 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.755137689 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755806221 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.753455487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.759280834 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.755234925 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.755404691 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761690953 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.755209933 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.755749982 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.757558666 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.75727812 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.75336684 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.758527821 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7630193 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.755631857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.756581988 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.756719458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.756628539 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.756302946 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.761434966 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.753510875 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.757286789 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.757276832 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.757073595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.753074931 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.756372435 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.756174718 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.757244286 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757761617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7554873 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.75659355 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756305593 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.755671455 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.756627725 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.756038595 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758473708 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.763973118 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.760043523 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.756133923 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.757109928 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.757776396 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.760318272 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.75524214 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.756293005 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.756210383 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.767365599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.76472184 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760956703 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.7574252 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.756930948 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.761338271 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.758339173 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.76093313 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756702581 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756019249 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.756495464 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.755774786 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.754912144 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.758233509 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.756991782 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757599613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.758148857 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.761550824 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.757720374 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.757304602 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.760372753 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.760271751 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.758692068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.757209164 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.758170641 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.759703757 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759695145 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.757193446 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.756974322 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.762837866 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.757092434 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.758619196 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.757424167 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.757360435 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.757935502 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.75942192 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.758699981 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.761192979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.767244556 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.761808887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.766459073 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.75908881 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766295144 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.758893974 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.760345611 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.767402099 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.756760907 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.758825368 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.758892074 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.759885847 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.765606491 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.759541379 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.760098152 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.764719872 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759988068 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.760001843 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.758539797 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.76031239 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758245631 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.760869331 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767163341 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.760402646 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.764091721 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760493878 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.758404213 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.760552497 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.760657781 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.759336192 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.765175007 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.760280063 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.7615358 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.761315716 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.759650633 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.761701795 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.76160606 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.760624311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.757106408 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.76030228 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766237544 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.761005434 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766727203 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.760258173 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.767333592 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.760545773 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767026513 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.762250144 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.761481068 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.763011996 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.760583011 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.763315138 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.761449342 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.763254594 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.762137444 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.762032848 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.764729629 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.762521418 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.76453838 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.762998804 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.764170374 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.762476604 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771216779 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784947176 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.76188567 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765956567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.759667235 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.763926277 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.767518221 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.764369944 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.761573627 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.765471796 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77327249 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76955427 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.763054653 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.764990271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.763521434 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763250041 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.762238957 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.762648449 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.763520244 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.763660245 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.763692863 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.764106747 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.766140883 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.763549841 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.765436377 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764078282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.763811686 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.771016871 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.763725253 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.765363662 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.764283459 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.762757128 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.764196206 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.764574253 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.764927693 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.76718431 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76421672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.764987376 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769388496 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.77084032 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.766267341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.76417599 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.763526729 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.764898037 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.765064666 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764295125 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.765988538 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.766071491 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.764568368 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.764971147 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.764915517 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.762322656 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.764391703 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.76428888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.765911465 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.766981931 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.771506285 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764403036 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.763140588 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.763247908 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.767099654 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.763742791 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.765783885 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.772098871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.767704956 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.773959728 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.77207638 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.769658572 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.76463229 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.768096666 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.772400429 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.76468068 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.766126881 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.766998858 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.767832131 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.7677889 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.76902834 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.767358091 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.772519875 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.765625928 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.766196421 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.774152508 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.767367972 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766680591 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.768738878 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.771729344 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.765865116 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.763192659 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.767300236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.76668579 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772837875 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.768204538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768172506 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76808584 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.766022884 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.769530012 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771406558 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.767274323 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.769509737 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.765315709 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.769147181 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.766709626 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768587754 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.765952128 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.766528201 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.766568213 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.769625186 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.773504195 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.766521053 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.770705357 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.767871456 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.770298428 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76946817 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.768517719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.766178325 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.765498898 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.770495682 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.770169735 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.768045207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.771712998 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.768770348 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.770252282 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.77083231 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7695326 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.771249541 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.778103341 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.774626876 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.766027149 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.769101625 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.768770525 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.771651082 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.769965637 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.770038151 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.768564788 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.771521468 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.767625211 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769350786 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.767966351 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.771298602 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785973503 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.770347271 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769633681 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.769653684 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.773616581 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.770973208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.766877911 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.769954124 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.772273721 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.773519369 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.777975843 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.770630337 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.775547282 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770753033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.771738706 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.774701576 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.773830828 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.778633359 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.773844225 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771808522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.772129869 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.773948404 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.78497473 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771377892 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779251833 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.797633173 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.771687842 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.771254161 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.772295211 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771222217 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.771672612 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.771895819 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.771326111 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.770975634 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770889231 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.773054294 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.772417573 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776696539 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.773588212 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.771194814 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.771942171 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.77222042 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.772546722 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.769227562 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.772846478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.771276205 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.771075766 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.772356871 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.772357885 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.771938581 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.785135698 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.781940836 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.771363018 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.774399857 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.769917661 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.774891264 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.77475074 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782606591 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.779290246 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.77346239 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.772862751 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.774535539 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77445582 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.770706638 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.774855286 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.772255632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772558614 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.770666604 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.784394282 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78188058 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.776824076 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.773826097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.77476104 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.774937434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.775010472 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774671014 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774210374 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.774885981 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.774057977 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778541328 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.773757163 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.774394123 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.775917479 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.781220453 seconds)
  done (took 1050.718134025 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772348455 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771712606 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771651656 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.77074919 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772234821 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772246153 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773425989 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771432694 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.771892119 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771646795 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.772311566 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771506025 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772325653 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773948702 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772134781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771357763 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772304906 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772526817 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771471979 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77242331 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771630674 seconds)
  done (took 38.922230478 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.775866066 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.772941153 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.773053426 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776242774 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771920119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774853476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773619694 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775387244 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775963059 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772966885 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.775667105 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774861105 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.77419538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.772630657 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773152967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775761692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777194592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773382082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.776808484 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773679986 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778075656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773087386 seconds)
  done (took 40.751682009 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.777416349 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.777272546 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.775574429 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.774515725 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.776725536 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.77515591 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.778068643 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.777696951 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.777546952 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.777181474 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.777320725 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.778972943 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.782757216 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.782826449 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.778673224 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.777888035 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.920954845 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.776968128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.778254706 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.777650609 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.775571342 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.78129745 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.775421105 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.774392488 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.775977873 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.778660055 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.778917064 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.777780143 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.777517462 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.77978851 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.782915043 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.778866671 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.776761591 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.780454686 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.777627105 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.779022918 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.78383531 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.779404581 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.776088329 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.777467785 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.787728902 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.798306489 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.780718486 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.785997407 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.779593252 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.778546598 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.781920496 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.786840678 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.775858702 seconds)
  done (took 89.035673024 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.77923155 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779626086 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.776545296 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.77832077 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.779273956 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.779494023 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.77967014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780860996 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.776919817 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.777701694 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.78099043 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.777756624 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777339784 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.781102557 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.780227576 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.778355084 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.777000748 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.777211859 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.77753322 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.777545297 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.777215138 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.781305907 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.780177207 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.778387767 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.781584694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.777464763 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.778371525 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.780588785 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.777862615 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.779675279 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.780700028 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.78109404 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.780978217 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.778806255 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.778516616 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.780269546 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.780862917 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.777820911 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.782213334 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.777893503 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.781539337 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.780492982 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.781537956 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.781920973 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.780525706 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.779485651 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.779478865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.778696386 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.778585812 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.781235692 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.782555649 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.779370046 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.781307208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.780176633 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78147484 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.782373807 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.780641873 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.779512561 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.783069962 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.780913061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.779411753 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.783027892 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.781196437 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.782689831 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.782603995 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.780119787 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.780959969 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.782522602 seconds)
  done (took 122.747855899 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.782232884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.783483462 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783274958 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784741053 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782653308 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.783168867 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783273793 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.783410421 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.782965333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782770812 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783275703 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.785008594 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.783138228 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.783962317 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.783020551 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785002677 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.784683574 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783963315 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784027505 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784467971 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.784746854 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.784610544 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.786283808 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.78493475 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784148707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782806792 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784526929 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.785124102 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786320686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.785486134 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785065165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.785531536 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.785825267 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.784341108 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.786033113 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.784188202 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.786276808 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785816966 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.785312298 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.785842205 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.784802498 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784816325 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784951667 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.784116387 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784581003 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.786190551 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.78484602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.785389434 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785809542 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786256998 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.786939084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786144971 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786228855 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786412358 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.785777221 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.786425663 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786491498 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785670788 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78643945 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.786692793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786260172 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.788023377 seconds)
  done (took 112.385767718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784909307 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786304977 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.783440474 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.782846436 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785916441 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783663306 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785764623 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.786881308 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78643269 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.785666693 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786587648 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783856518 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783482126 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787008614 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784530996 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784302816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784589471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.7840682 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785620921 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783883841 seconds)
  done (took 37.42067176 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.783879566 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.786311331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.783686851 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78330529 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.788818208 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.785918331 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.786287241 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787594664 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785865617 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789192128 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.788816848 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789761618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78462211 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786584909 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.787902553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.785820237 seconds)
  done (took 30.305357573 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.786144188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.788655024 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.790710909 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.788578597 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.78649975 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.786257525 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.789826517 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.786185292 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.786100034 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.789197504 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.790992268 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.790847576 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.789551945 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.790406554 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.788010789 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.789101347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.788323956 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.786964506 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.790232528 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.791132768 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.7879657 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.786978232 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.790803212 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.790311215 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.788077638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.787765983 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.787492929 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.787283631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.788428903 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.790036365 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.78753907 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.789011924 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.787682437 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.78866355 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.790425116 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.78809305 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.79016456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.789953459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.791317945 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.78941894 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.789827944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.789121434 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.792269058 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.790929593 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.789475093 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.79077829 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.789207202 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.787930452 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.788545035 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.789778102 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.791730898 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.793292357 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.792477554 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.792543293 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.791043801 seconds)
  done (took 100.13579147 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791721857 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.791585559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.788397828 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.791578174 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.792924634 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.789721108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.791988286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.789423977 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789861368 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.792556902 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791129983 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.791064553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789928351 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.791576464 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.790796653 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791984921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.789718134 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.791358613 seconds)
  done (took 33.96266614 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.790321346 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789718547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.793600611 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.789781915 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.791180966 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793307139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79015016 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.792360054 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.792359729 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.790943977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790569402 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.79198315 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793192824 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.79306184 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791442894 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791281952 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79355967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794436422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791196511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792074799 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.794244755 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793341354 seconds)
  done (took 41.152606221 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.793131972 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.792397655 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.80873589 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.813702746 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.813491204 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.824421383 seconds)
  done (took 12.574343893 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792866724 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7938512 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790792592 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794642399 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794347162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790721682 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791731545 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791783908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795746398 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793092505 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792201612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795450828 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795672193 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793745344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795147071 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795537286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793403365 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7943447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793325231 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794804578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793661588 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795880713 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79402726 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792642238 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79305955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793116511 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79471854 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79318876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793224115 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796215657 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795317221 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792553471 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793894439 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792961967 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796498749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795626115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793646421 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796436612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796138043 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793428295 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.79572223 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796550644 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795460647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794015344 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796868138 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794890589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792820407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794046422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794552171 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795564826 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796670311 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793316481 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795470051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796549406 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797210099 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796736723 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794823676 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79327455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797909368 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795720376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795212602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79695077 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794957767 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795751439 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797117535 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794763307 seconds)
  done (took 120.173191855 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795588735 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795642182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794759484 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796787486 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796154025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795876656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795928542 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794430785 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794909107 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795528894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796965537 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794516243 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79514596 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795287906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796506264 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796074368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79410735 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797327185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795865076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798206452 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796605766 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795963016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795492126 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796707004 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795916496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798329991 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795677632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797465828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796252843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795846536 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796556919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796190817 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796268123 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796666812 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796853244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797467381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797676446 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795923111 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796921162 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798941092 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796877116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800057481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797470218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797302329 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797813369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797276373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796931539 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798275949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797151097 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797374567 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799142791 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796861645 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797839472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79828413 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797984473 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798912763 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798222944 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79857808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798838473 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80028028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797955211 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797712136 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802219274 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798402111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798544131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7983997 seconds)
  done (took 120.337575841 seconds)
done (took 2450.208661663 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.868222487 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.069618284 seconds)
  done (took 15.672443095 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.960024363 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.91315287 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.797539825 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.841856535 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.798356369 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.817747086 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.814438737 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.798328847 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.798382452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.798585732 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.798125779 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.985226292 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.800349374 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.798483528 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.798482006 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.890509036 seconds)
  done (took 51.147731388 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.801538225 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.802341739 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.814725494 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.8046061 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.803314729 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821312388 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.836801532 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.806350315 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.862412373 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.816562539 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.930366894 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.813529084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.802440402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.858741165 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.815590251 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.817761975 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.889850749 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.880586204 seconds)
  done (took 34.713358646 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.883029425 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.804446433 seconds)
  done (took 10.430271633 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.820951194 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.80740498 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.835803631 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.819102081 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.806310057 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.802481226 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.809058574 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.809320715 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.82898848 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.856014861 seconds)
  done (took 69.935479751 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.808148849 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.805384366 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80355639 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.8019303 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.795378411 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.801116877 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.80416043 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.798914482 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.499993256 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.841271837 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.810676872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.809119069 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.803393842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8048808 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.801693183 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.826143448 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.924716269 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.801308898 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.801716497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.809149237 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.804937433 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.860948595 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.816902389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.804825332 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.834143533 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.495491767 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.812513494 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.810752232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.921998252 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.802324493 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804258695 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.805078258 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.806088293 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.188233259 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.091011124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.80421935 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.812408437 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.811391172 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.803359553 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.918587834 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.805582388 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.809881134 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.797665477 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.069238626 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.902204406 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.847803166 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.208684629 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.808749276 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.806709957 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83690002 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.808158907 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.807585934 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.818174704 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.318197114 seconds)
  done (took 129.148264202 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798675368 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.108024782 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954139977 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799559273 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074011025 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008344791 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.746392954 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849388035 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.802365725 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004153455 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964542494 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909278143 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802464664 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.800167472 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.802576183 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799959404 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961721819 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870770625 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.803190334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.799687749 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829742854 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011300945 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.930954165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80351804 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.822881938 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013047062 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.923820004 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.908543466 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.08298969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.799873329 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.867308447 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802867661 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.803533711 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.800143261 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.958019205 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.899893758 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892954768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.803345597 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800875137 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79972254 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.465876906 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998750738 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.902135082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946698627 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998483913 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007531671 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.451448021 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.801681519 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.443307632 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965127358 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.016992629 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.010475377 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.928675752 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804336538 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.032538083 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.801931799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801525269 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040814739 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952295986 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909995432 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807017845 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.800872244 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801258013 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.047020755 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.806164551 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.902474478 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805882423 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.802897219 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.903181202 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912237804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945435046 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019147224 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838533584 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.616902935 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.310288449 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018612226 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.874683392 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040710269 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805230713 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.802702255 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889155423 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.551928425 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962686293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054448341 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028459327 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841210447 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.400688575 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.80257869 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999597962 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991229289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000031338 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007697861 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95801961 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.016820897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.80361615 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.80369548 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.033943589 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943163729 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807375298 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.162482061 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039261732 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.461371158 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828253473 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100983331 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939717629 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.229392647 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.430607252 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804853818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972621823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845308667 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.806417669 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805379092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.996358361 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.613644394 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.804867482 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.353070208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871009128 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808092166 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009207032 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.808439056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018131328 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81122165 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042814313 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.250738746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841192858 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.979215571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010164219 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.604143204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056728504 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05245161 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.927049589 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.030420671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.392716901 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.807175805 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082576254 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.809255298 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.806123995 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.974524046 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.807899713 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95493515 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.809060189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036122144 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.833080149 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962716353 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.810734735 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.042655666 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8443606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860151123 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.813619439 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.938292814 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809213422 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693701588 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962134243 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809247407 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.807811655 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.246536864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.807762789 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954399732 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.039739207 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834488494 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878539085 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334544188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.806360071 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895605726 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835850837 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.550336354 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.807960061 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.965005801 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.753280696 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.253526557 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.806973564 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.048865866 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.995250198 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.811121871 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.808630062 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.548930363 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.513789363 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808036077 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.96685141 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329607864 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.458341237 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0111016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813014387 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938148449 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.811629249 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.885398477 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.155862983 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808286299 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.809235561 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.808067897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.808926295 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.810644451 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018327765 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.843233539 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.307866709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.946340762 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027719593 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.120650199 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.029378908 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857749965 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810519363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.058402392 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.814121271 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.876140638 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.815443466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834221172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044440005 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816773051 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.02295908 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.067218204 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.820889948 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861039457 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.814789631 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.81159911 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.809990259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959431919 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908247217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815009592 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.81037631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.922912161 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94017626 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004058641 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.408084907 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.978815295 seconds)
  done (took 884.886806073 seconds)
done (took 1197.666759597 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.811708041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.810646612 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.799778044 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808203137 seconds)
  done (took 28.980919862 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.8138862 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.810371955 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812335044 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811283466 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.812711765 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.810969445 seconds)
  done (took 12.616756711 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.830400636 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.804458373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806547778 seconds)
  done (took 21.186629457 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880060279 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.223481172 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919402091 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.259032631 seconds)
  done (took 10.027010365 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.813811698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812723141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.813612097 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.815130162 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.815211853 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.81524116 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.814035245 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.814013832 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.817154098 seconds)
  done (took 18.078327621 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.206787905 seconds)
done (took 96.845278674 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.83071265 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.39242428 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.536698523 seconds)
    (4/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.063768263 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.000732005 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.903158997 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.455146884 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.800297616 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.395915839 seconds)
    (10/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.188370885 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.950595314 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852932118 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.833031734 seconds)
    (14/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.892117849 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.054234583 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.083561129 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.619414701 seconds)
    (18/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.325800056 seconds)
    (19/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.954000703 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.969611147 seconds)
    (21/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.023320748 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112623851 seconds)
    (23/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.799051585 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.386473028 seconds)
    (25/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.996639001 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.092137452 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.937586552 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.958150084 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.111825804 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.730427498 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.009141748 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.104050263 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.942783619 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.023471052 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.812280338 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.15414504 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.888198563 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.835792753 seconds)
    (39/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.403343126 seconds)
    (40/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.941088008 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186268057 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.811275226 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.817529953 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.922629094 seconds)
    (45/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.040686437 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.077333675 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.141677664 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.716799656 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.83242868 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.72487206 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.117067298 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.874395028 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.110632282 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.339069369 seconds)
    (55/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.321258929 seconds)
    (56/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.988789136 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.89859449 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.83580946 seconds)
    (59/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.106882076 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.81123086 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.695810561 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.845986224 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.030168355 seconds)
    (64/309) benchmarking ("sort", BigInt, false)...
    done (took 6.811262667 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.122355408 seconds)
    (66/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.946149505 seconds)
    (67/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.45765012 seconds)
    (68/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.89833321 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.56200843 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.641430106 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.424680854 seconds)
    (72/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.83868827 seconds)
    (73/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.83615732 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.930598484 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.187903796 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.797500475 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.081650632 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.95180822 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.111280094 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.910208855 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.926937616 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.88931643 seconds)
    (83/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.921672114 seconds)
    (84/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.489974956 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.108816916 seconds)
    (86/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.877930943 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.898124391 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.058631276 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.207160771 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.82940165 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.797637449 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.772525241 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.615768371 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007540215 seconds)
    (95/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.040591162 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.821095309 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.813336431 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.515424528 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.470878243 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.406781341 seconds)
    (101/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.943256584 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.203424864 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.841572185 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.812867826 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202336276 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.766125416 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.063885019 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.914280483 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.09855342 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.25129482 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.881537806 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.220252329 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.863603427 seconds)
    (114/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.840057561 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.905897455 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.662021292 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.942038665 seconds)
    (118/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.10025479 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.968860464 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.247317386 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.261636518 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.839554617 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.905574873 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.075887395 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.863001556 seconds)
    (126/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.192493726 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.900912262 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814418047 seconds)
    (129/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.154112322 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.983470898 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037209303 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.078801334 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.813559521 seconds)
    (134/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.802100155 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.71231181 seconds)
    (136/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.003832352 seconds)
    (137/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.881202939 seconds)
    (138/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.799531884 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.948545275 seconds)
    (140/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.800154412 seconds)
    (141/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.59402911 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.851900241 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.109304483 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.685418787 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.861480306 seconds)
    (146/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.381272493 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.813505702 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.669954933 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.046738333 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.845587628 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.815446845 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.820153828 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.870606454 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.842649719 seconds)
    (155/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.118926983 seconds)
    (156/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.986134716 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.950921637 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.147530213 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.843393443 seconds)
    (160/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.933270858 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.826247843 seconds)
    (162/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.843015306 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.140219072 seconds)
    (164/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.107288034 seconds)
    (165/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.901052302 seconds)
    (166/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.950090212 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.086078347 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.84707053 seconds)
    (169/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.951417111 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.84756793 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.816597667 seconds)
    (172/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.876526162 seconds)
    (173/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150493527 seconds)
    (174/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.183994982 seconds)
    (175/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.968679038 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.908648973 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.817209062 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.496588104 seconds)
    (179/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.825945067 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.505691096 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.846626798 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.88157677 seconds)
    (183/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.915156811 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036844436 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.89338748 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.84357788 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.410649556 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.804528971 seconds)
    (189/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.994199638 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.965078193 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.866816361 seconds)
    (192/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119972297 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.091316679 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.295890921 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.924821735 seconds)
    (196/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.906989043 seconds)
    (197/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.828057709 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.876451449 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.981592205 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.966369035 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.383563451 seconds)
    (202/309) benchmarking ("sort", Int8, false)...
    done (took 4.914758136 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.988391267 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947061816 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.708350466 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.022239813 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.850874714 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.216484918 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.512515674 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.635771167 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.027994199 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.818322575 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.997079324 seconds)
    (214/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.330974004 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.892776001 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.176663165 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.930285859 seconds)
    (218/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.322960034 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.820224608 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.112292142 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.198395191 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.087386912 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.170773484 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.82248371 seconds)
    (225/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.990564136 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.93649718 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.143911092 seconds)
    (228/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.993390835 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.870356538 seconds)
    (230/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.821174183 seconds)
    (231/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.03915563 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.810914411 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.221920168 seconds)
    (234/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.415643909 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.92232811 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.827491855 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.933766648 seconds)
    (238/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.884727578 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.927267249 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.837497928 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.812745654 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.159692762 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.201313648 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.00321123 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.898152678 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.525763226 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.946289253 seconds)
    (248/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.992971555 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.122336452 seconds)
    (250/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.933526078 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 5.582393296 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.098643564 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.932247031 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.830942345 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.862790742 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.845385391 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.876780813 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.918944925 seconds)
    (259/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.167000013 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.916229722 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.892184581 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.637521986 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.946655813 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.020645376 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.849843989 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.772936212 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.809002833 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.813515281 seconds)
    (269/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.004561263 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.404925057 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.220662571 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353540318 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105495732 seconds)
    (274/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.82751744 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.202006688 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.916395406 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.849897367 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.989829604 seconds)
    (279/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.113985872 seconds)
    (280/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.907678243 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.808666813 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.970206101 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.324306037 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.824736969 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.919410344 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.906775194 seconds)
    (287/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.833588685 seconds)
    (288/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.340643824 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.952696609 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.561434709 seconds)
    (291/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.127579502 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.850414969 seconds)
    (293/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.032586684 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.816349756 seconds)
    (295/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.325188218 seconds)
    (296/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.898462038 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.825412495 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.886108306 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.182958744 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.724173212 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.200210477 seconds)
    (302/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.910506542 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.747331905 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.863270431 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.223565696 seconds)
    (306/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.032986235 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.187532018 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.852421875 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 5.651103451 seconds)
  done (took 1002.166979528 seconds)
done (took 1003.984497167 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.860207284 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852763171 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.837365339 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.858600282 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.948035753 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.865097305 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.847396025 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.839970438 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.884763208 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.88744561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.835239211 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.864168285 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.838259861 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.83860735 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.838401875 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850321865 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.147564182 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.867403156 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.85357971 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.847969257 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.852409412 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.836373142 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.887018212 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.864142368 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.841600352 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.840977564 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.840836056 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.856427145 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.948729251 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.840453472 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.841468728 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.848940969 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.147431438 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.866181851 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.833720275 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.858143351 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.848506113 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.848710265 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.842989809 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.86978104 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.288422577 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.84596308 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.840319188 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.840338103 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840798132 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.843795262 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.83961309 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.844731781 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853846377 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852547291 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.285423197 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.862293422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.842692916 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.840972191 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.850671643 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.839036667 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.843814122 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854889558 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.858811484 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855760814 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.1387578 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.874186906 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.842613553 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.855045578 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.847519264 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.324192752 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.843459705 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.846019498 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.29184638 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.853411594 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.323712384 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.856098487 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.84227051 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.854007846 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.872348464 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.148605598 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864654693 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.840157848 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.847986322 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.83760005 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.851479119 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853608998 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846909263 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.842069384 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854404147 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.869055964 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.852206003 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.841557028 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.850836707 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.860351525 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.848010422 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.851964399 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.845471586 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.837838696 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.850899682 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.845858649 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.844467164 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.844015563 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.846887306 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.852884423 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.289334796 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866762857 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.839875549 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.83998554 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842451131 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.855555744 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.290465998 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.849266546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865471593 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.889786002 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.844076944 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.141644919 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.874680318 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859937529 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.852012554 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.846268212 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.838098103 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14133517 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317677434 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.864377019 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.845359734 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.840481556 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859629153 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.844800334 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.840045772 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153286931 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874003444 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85593673 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.964040818 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.854473537 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.875143241 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.841151819 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.847411542 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874824241 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859061956 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.87416952 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.84791781 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.859262068 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.859366976 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.841425294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.854440847 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.855688565 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.845640842 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.850953701 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.840143174 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.871708299 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857490651 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856122629 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867103544 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.96612992 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.842895377 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.141950638 seconds)
done (took 289.641187172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.910980837 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.840962324 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.939105735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.841297434 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.925528644 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.927949853 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.838779003 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.838937201 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.838536543 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220222005 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.839385271 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.8409599 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.837335612 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83870782 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.923700738 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.841218876 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.839055532 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182226957 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.84285656 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912144965 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.837457263 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.839662474 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.842192644 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.223024682 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.834120774 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.838406915 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.911384252 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.841924144 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.187419423 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.838202458 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.840927628 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.187770841 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.929875866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.860505096 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.85217424 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.849808353 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.926801542 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.848833955 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.923691637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.923470706 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.93991339 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.883983182 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.836204184 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.83670419 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.84659274 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.844846298 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.841137913 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873142614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.84111547 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841435853 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.18444263 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.85305951 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.841742795 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.841717583 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.841068097 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.874872959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.841089346 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.844371534 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.931809147 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.844885271 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.90842058 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.224520645 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.222207021 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.844219481 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.84119503 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.841543594 seconds)
  done (took 182.49782804 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.911362226 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.917225253 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.911117054 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.848583465 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.895074642 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.36197728 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.848156485 seconds)
  done (took 15.46865065 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.850556707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.84519193 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895132515 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894914451 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.845804517 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.99556709 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846182303 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.855464378 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.844102547 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.8988454 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.846172348 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.844895525 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.852565296 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.837863994 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900442255 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.856066754 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.959836296 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.846463564 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846369163 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.001422877 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844281368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.851984253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.899894763 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.857339507 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.845994097 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.851738534 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.429591557 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84637961 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843452649 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846534761 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84353471 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.88869209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.846422042 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.843464023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843582105 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.964237838 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849422691 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846689974 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.848644167 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.850328349 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.846831704 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.845576154 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846084424 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.843548499 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.847788326 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.8693677 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.846258391 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.846084688 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.846885587 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.847349078 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.8987665 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.847568804 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.845444506 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.845115772 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.90318265 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855543261 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.848757211 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.845212091 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.847696682 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844384577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.005980883 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89509465 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.847229837 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89534016 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.8486739 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.849113328 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.84847387 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847457113 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902612594 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.84838677 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896459252 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.845438327 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.007147489 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.871443706 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.849317453 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.851045265 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.851471969 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849183474 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.845667649 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.855149716 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845909449 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.849363163 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.855119988 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847245745 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846912642 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959886017 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958617445 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.846269667 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.861761072 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.855950958 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.846356681 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901862499 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.849867908 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.845896084 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900442672 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.963939509 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.904913395 seconds)
  done (took 203.603169601 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.853557475 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.856942152 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.85012211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.864884593 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.84997606 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.849881012 seconds)
  done (took 12.904809537 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.852094465 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.851785917 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.849171496 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.851674215 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.850466274 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.850869661 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.851431086 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852098447 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.85587128 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.850867745 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.851769715 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.852535419 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.851168169 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.850772337 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.852056342 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.850786802 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.851558263 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.848027259 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.85011588 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851590383 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.994291596 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.851983313 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.851131977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.851344834 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.855322702 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.850410556 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.858692029 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.85200665 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.850961919 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.859841808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.854994616 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.851649154 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.852088058 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.856834071 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.856805381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.852665721 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856267993 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.852101713 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.849985537 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.851260524 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.852314758 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853022015 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.85286337 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.852790177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.853362944 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.857893188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.85858905 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.860857662 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.853468095 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.853427886 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.853986869 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.852039031 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.853660248 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.853306665 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.854106694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857603353 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.858230473 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.85434207 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.853557843 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.854265961 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.854487343 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.854355205 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.854707097 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859261397 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.861018591 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.854300892 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.85394366 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858623483 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854981696 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.853965042 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.854059211 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.851094166 seconds)
  done (took 136.380313501 seconds)
done (took 552.641750295 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.092792819 seconds)
  done (took 8.876946083 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.895639049 seconds)
  done (took 8.767508573 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.490416354 seconds)
  done (took 10.276766947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.855819476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.874645338 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862758544 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.854758995 seconds)
  done (took 29.245918076 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.903707634 seconds)
  done (took 8.690355701 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.865754585 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8501354 seconds)
  done (took 15.53891563 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.914608836 seconds)
  done (took 8.702816573 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.952719895 seconds)
  done (took 8.784123944 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.866320153 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.864601195 seconds)
  done (took 15.53307421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.835927625 seconds)
  done (took 8.623380456 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.525858281 seconds)
  done (took 11.322267738 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.861866198 seconds)
  done (took 8.662684663 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.86770191 seconds)
  done (took 8.655296043 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.109323462 seconds)
  done (took 9.896680296 seconds)
done (took 163.358927534 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.852369025 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.851050764 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.8519736 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.849837592 seconds)
  done (took 29.193856139 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.890786313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890827938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.891541971 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.901533135 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.893306038 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890367642 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.883171777 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.88295887 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.90084619 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.898410618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.898275777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.897588112 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.894743629 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888150667 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.898788825 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.897517677 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.906869906 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.897390343 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.887870261 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.899345573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.864005092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.907231323 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.899181161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.863225609 seconds)
  done (took 47.212473885 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.058971573 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.934132765 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.016101294 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.914748904 seconds)
  done (took 9.717092 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.914544885 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.915611377 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.927422898 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.966299999 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.995926271 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.925866993 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.89059221 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.884145186 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.870947571 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.915581509 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.992012281 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.93282546 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001782973 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.863259054 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.050607475 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.864311554 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.863914905 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.916235822 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.967366707 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.981587325 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.864118043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.915757538 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.918369395 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.932757596 seconds)
  done (took 48.066484811 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.862110316 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.870035602 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.868522814 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.86265006 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.862483481 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.863687226 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.869030612 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.864788036 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.884496386 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.864627589 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.862271386 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.862598425 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.862705108 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.86359584 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863022723 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.876958327 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.876131291 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.864101011 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.867266445 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.869523624 seconds)
  done (took 39.136507929 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.856983846 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.722534274 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.209442801 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.113639445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.857758276 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.856874439 seconds)
  done (took 31.413459513 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.877172595 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.870748447 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.865696953 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.921902374 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.004021674 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.874093403 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.865348444 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.875933099 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.910740927 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.932802798 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.887742301 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.893204652 seconds)
  done (took 24.576426227 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.861064673 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.860455154 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.861202659 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.877038053 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.876679103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.873076104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.871778245 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.858645815 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.877802207 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.884140629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.873073231 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.877189472 seconds)
  done (took 44.252218606 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949812887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.904930005 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882519271 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585962583 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24293297 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072476946 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.465648854 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203124278 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.865935198 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134350756 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920563597 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962845215 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117269531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431790147 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896266954 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.319828828 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159354285 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076408016 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893543951 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53643894 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928654142 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.11961455 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.697839754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921110055 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074277442 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992656144 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.124166246 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.86324172 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996350542 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903748767 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873776983 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863743722 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136857655 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24112017 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968689703 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873864538 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.524399665 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.584725674 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.855839201 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.634151418 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59039641 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.987062446 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874439544 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863943921 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799577616 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.087673559 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24675209 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.871286452 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.575427437 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.864556746 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875685457 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959739466 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.868123939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.684494155 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821163936 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.870941003 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.862384906 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870557563 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43618216 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.992313358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.129721672 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.841905557 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.957324386 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.54130121 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270038354 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.016084029 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.869639149 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869019552 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799790262 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.619959131 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923178444 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194842474 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.886085219 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51605271 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162380464 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.95012228 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810310381 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14092852 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.476288252 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.841324782 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094424422 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866182931 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802722483 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.810832267 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800689153 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141866705 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907017953 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.616392081 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909591376 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204970205 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87852291 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884686409 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890415564 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.090545627 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.753173651 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866707603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.653992194 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024069878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889041356 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207081686 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802837091 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.871045611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123682873 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.07943295 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.017779859 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.365367464 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02937166 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.501973338 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.922459005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.087684176 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918506246 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.135100439 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927590046 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989629258 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923725801 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868842606 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168108849 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.543858046 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.007104174 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.898090971 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997778757 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.195908303 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901651227 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951972643 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869965054 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870238135 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654350022 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423320404 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.869222376 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.87081995 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.014424349 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.919564362 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.870692069 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819337456 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.494468384 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88675614 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.885791021 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093197976 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50803276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184121256 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804055059 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200164369 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963377853 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.092660574 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512225621 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.942693641 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130880249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.019335447 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.050288913 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920178274 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889729935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973384264 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893109345 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.108885674 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166551834 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.875002465 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.874989707 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.668775195 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909870718 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870673225 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.876196466 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.671579638 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144985535 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898447967 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.877221174 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.760406667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.884982573 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935408311 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876682631 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880950569 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.4120806 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625085077 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.882932531 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.459849947 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095514795 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881713742 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.60155947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988878249 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960486092 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142120928 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933344795 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.806331607 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.583827316 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.565308643 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872771392 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812497925 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873320454 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881996437 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883766329 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.06856046 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.14467322 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917734526 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.560839718 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.917497415 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88406546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.87823767 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873756924 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38666929 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.008349863 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132107432 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920697311 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017124217 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.88736155 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808304051 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.877544931 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878658269 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.873702866 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.874901112 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907661866 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.558025463 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253233754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136289693 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.528289591 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89272871 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.601091387 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.934260406 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.884134066 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545027033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.230937594 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.918404583 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892898687 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.885425168 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.633544848 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.573672478 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449690974 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177605617 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177965906 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306485485 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.157628701 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906164499 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215269762 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810094917 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440730251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935824077 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224009736 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820035644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965029052 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517698907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217500496 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891257666 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102912232 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255025273 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.61762074 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019043788 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088006424 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911480356 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.100656784 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840208958 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.163011861 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017540117 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566769439 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080265776 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216360498 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.531874071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.000281744 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.875525769 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.560674116 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966319096 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.592865724 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049230284 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.131719503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863631014 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353061719 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883218634 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.102674126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224649159 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.125489214 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.006961854 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814002452 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888816184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.889560175 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.878743867 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.876438791 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.762074605 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.131887435 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889375504 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812292387 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.056204838 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169444306 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.780865859 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.883349598 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87857981 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18096896 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496861404 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048150158 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.044360041 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.40441713 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887680348 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812623487 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813075094 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.571524685 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884572237 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854934234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086132333 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.9835459 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836856612 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.036703136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140782233 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.135713628 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.893407391 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146673849 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15592049 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619113193 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909440331 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.980142777 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54736722 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.986674463 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879124354 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116040968 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682565474 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.111359622 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.91530898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.834828835 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.878263287 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095488248 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88089696 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.782577519 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10997309 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.604419868 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.904932276 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182768536 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954483078 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.768262336 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.925715266 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.972439964 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891195859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960642463 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89182671 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.892196017 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.892526272 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928608433 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.774960239 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.003845103 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.895322953 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976659958 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005107075 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410273707 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.887402859 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151520009 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240179806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203540122 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943200306 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882602234 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884425677 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815674734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033818969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107881057 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155774472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.010870614 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.995242801 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907781913 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.54369278 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150803352 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12578712 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158206984 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.77846622 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463480436 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924709177 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.88371072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893650975 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.094683449 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094160361 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191043747 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037353423 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.033824331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254781483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157998149 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.883264779 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883712866 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473505021 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.915934195 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.56868527 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.927742792 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.771338175 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158771975 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894058909 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262329934 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907443415 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.044132871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.657585604 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574656902 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177376802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.87232412 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945225327 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153507218 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265115815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199837597 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952259792 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896395264 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.998347035 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031662334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.764346306 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885006193 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88415876 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935235381 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.595425799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894742333 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157273394 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197688788 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.883557045 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.774874365 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909319126 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.895179382 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109061896 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151917177 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140594866 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895281242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.891759244 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.70186007 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155835202 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946183176 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820152542 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.889863871 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984809637 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135391612 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906706331 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.339722735 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.597896954 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161219378 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.889263725 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908840949 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11334581 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247697803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208966593 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426694693 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098493276 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476455408 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.529399445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191297602 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.8928204 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.116830899 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192817318 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.891164272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.029629812 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928054593 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.152596976 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199944161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.892571852 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581097518 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.858564126 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.229524101 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491453677 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83067249 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897881428 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.946240415 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888353005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019180294 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900410929 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.776897929 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120815966 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.650854628 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160522056 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.894258667 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.872889316 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.601434195 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.238966877 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924074041 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030415284 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890838638 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.561829278 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.240014529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145486894 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.039282383 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.898813412 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.892791364 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890299095 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876810721 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.088336727 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.085320029 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168582349 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.074382632 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.928085471 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893443558 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.106152949 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101470785 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.754231049 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027347943 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034716256 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933968462 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.795050885 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392090497 seconds)
  done (took 1680.320668707 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983885518 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.895976685 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.949232266 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.991120595 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914968325 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.069155854 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.9332485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956498703 seconds)
  done (took 57.520505733 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.889255664 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.091276024 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.897959736 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.890319818 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.899151714 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.895350201 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.058751633 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.901500289 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.898918648 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.900121296 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.891458696 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.889759418 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214135984 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.915281379 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.890216269 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.891118118 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.898651243 seconds)
  done (took 74.764725063 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.8919018 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.993524916 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.910914426 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.906310087 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.847650874 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.903354108 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.776960039 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.905426678 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.89736865 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.128526859 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.528181645 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.916746412 seconds)
  done (took 90.436009518 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.900422824 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.897794313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.898849895 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.897497052 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.897943838 seconds)
  done (took 11.325509629 seconds)
done (took 2189.745592551 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.287706568 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.104667584 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.123564401 seconds)
  done (took 6.056824797 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.039759488 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.086840046 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205867651 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.212811454 seconds)
  done (took 10.375234868 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.180273433 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.275494438 seconds)
  done (took 6.282820595 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.290810472 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.893668761 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.273723515 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.889213665 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.890879484 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.892973582 seconds)
  done (took 22.504689058 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.894622098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.897342804 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.894217256 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.897300954 seconds)
  done (took 9.41029257 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.874750112 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.579642228 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.878715208 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.894096041 seconds)
  done (took 21.054297121 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.64250602 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.664464677 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.638421329 seconds)
  done (took 9.772493001 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.362027488 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.779292298 seconds)
  done (took 8.968521213 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.15123421 seconds)
  done (took 3.979275233 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.016284302 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.166899197 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.370732046 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.403733822 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.493263554 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.593710577 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.22167912 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.147647033 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.298987193 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.336176061 seconds)
  done (took 24.876959257 seconds)
done (took 138.853523672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.273205999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.89336779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.103473666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.2329324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.117113621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.104504724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.099913945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.212800641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.740456763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.736918709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.232297833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.115538712 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.262327341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.136037612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.261755824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.132371351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.113744204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.292632261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.927437212 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.163551618 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.104631647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.870703368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.073122758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.884155252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.115422559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.048836004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.449932224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.134490148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.084338594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.459137187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.050918204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.315053263 seconds)
  done (took 172.573000783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.816599184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893876013 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.898213816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.894818338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.3382557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.902653909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.896586151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.894819436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.194350236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.184730526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.917638932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.361878829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.915270492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.895031544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.901802256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.895300013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.284488212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.905294589 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.910864697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.913118434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916866833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.27039549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913173469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.291963872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.294443308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.913019436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89520776 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.916487254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898606275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.900823811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904484064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.895703325 seconds)
  done (took 209.659440655 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.894684384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896006132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.896998398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.8969869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.896950695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.897543696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.898743776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.896562576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.478400428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.472056561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.90552488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.902879376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.904165271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.897547691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.906960666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.896857926 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.900218986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.900396273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.904097078 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.905685923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.907231959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.643884777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.908423309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.643448734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.922957699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.904120437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.898591152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905842947 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908199001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.908950859 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.909525628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.898180102 seconds)
  done (took 221.351495679 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.10060679 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.904447151 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.90495789 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.858882615 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.90488802 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.904050555 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.900856584 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.101360099 seconds)
  done (took 19.42708462 seconds)
done (took 624.850478657 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.368494397 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.211196228 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.080967917 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.928616572 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.139562199 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.961009645 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.925068233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.987549873 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.648636069 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.992481881 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.617294479 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.944299444 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.711365621 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949251703 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.052170186 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.983703913 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.494789835 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.581883205 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.105055644 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.987574147 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.094192381 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.892445272 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.999630117 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.681573418 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.729903942 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938536552 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.110007308 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.50291135 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.936929402 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.091715398 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.698570679 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318035758 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.937122927 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.923628552 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977738442 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.959175776 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.280558862 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.935019175 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.048812686 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.698688917 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.960779874 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.534318556 seconds)
  done (took 104.75697387 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.896126976 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.895338658 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.892922937 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.895490629 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.8959812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.895102738 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.89344625 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.893680254 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.894534367 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.894414171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.894540982 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.895232084 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.894650441 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.89545996 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.894506487 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.894438616 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.895843132 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.897408029 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.894137758 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.894824047 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.895562965 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.894254585 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.895676485 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.894080477 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.895519886 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.89572913 seconds)
  done (took 51.115945092 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.908466133 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.055824249 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.137829982 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.927796887 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.908104141 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.911518197 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.927072869 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.914396187 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.910956014 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.910916424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.00615816 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.915921297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927803465 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.131083643 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.924587045 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.910163866 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.910152538 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.910309015 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.063583231 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.925790011 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.929745632 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.91532994 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.928751518 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.922735403 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.910572638 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909272513 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.913595308 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.376046388 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.918392493 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.007782814 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.953187302 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.932804954 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.346452889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.141407573 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.962880166 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.917895433 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.911066105 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011745692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.916870165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.910709386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.928000756 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.915530969 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.132118744 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.406805583 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.923627017 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.911581192 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.387369939 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.019897032 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.9519148 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.922361164 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.13476001 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.927084969 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.912560242 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.911440425 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.947218786 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.920960125 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.910207144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271805774 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.922261421 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.928998164 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.917119859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.911794087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.064350871 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.918784018 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.055808536 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.921138278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.920103724 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.91195029 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.133479034 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927091894 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.407470898 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.924288863 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.912831281 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.008822387 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.059405698 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.412106489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.924893374 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.069593271 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.362411779 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.935938294 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.919641487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.36917626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.940360643 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.919727786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.91397273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.914126531 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.913391899 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.956068866 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92851214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.347543016 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.413769839 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.286507124 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.939905492 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.927564273 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.913220158 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.275681358 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.921272789 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.913286733 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.129312371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42430704 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.925968424 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.921635828 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.394589365 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.928241713 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.933406409 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.923074327 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.138121412 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.92912424 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.956833897 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.915427429 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.920834399 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.91795382 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.933796759 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.921726169 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.915947818 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.387482713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.030319599 seconds)
  done (took 236.966385059 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.910142695 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.918152541 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.909003584 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.909055006 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.908543088 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.914288427 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.907415718 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.907327768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.913779324 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.906608822 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.90857498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.910253758 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.911129446 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.915681114 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.376598601 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.916479934 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.521679487 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.909694188 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.909228982 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.910936463 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.590686531 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.915614406 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.909139977 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.915492819 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.90914751 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.912618097 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.919267484 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.947432592 seconds)
  done (took 169.162375381 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.916800007 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.09660257 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.934581768 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.952574896 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.928051463 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.915511068 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.940952794 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.937323839 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.921593154 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.915377718 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.915638578 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979134281 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.928726616 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.049672312 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.949743945 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.949752993 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.024217784 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.926896958 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.916380692 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.916293719 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.944460323 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.912319077 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.978690558 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.044076308 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.936395661 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.034461101 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.924024272 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.919110013 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.916529073 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.036480806 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.934148574 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.978952351 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.947173503 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.935742839 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039609432 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.037238169 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.026603783 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.950453984 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.921832818 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.916782954 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.916306984 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.906086629 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.03668083 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.937601453 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.918651084 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.028035811 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.939017429 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.920471443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.928442979 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.916921171 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.930962216 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.9370705 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.98581842 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.054135111 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.953747112 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.944626984 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.944407455 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.215047776 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.929475151 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.020545416 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.913788057 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.037303139 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.940158615 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.907458241 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.920303289 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.924740426 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.94726979 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951235479 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025919974 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.927981311 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.019918239 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.954738041 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.925931951 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.917904445 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.921412922 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.038610822 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.041084416 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.954850894 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.957401633 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.951290116 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.915054132 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.919799135 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.909120469 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.937424361 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.924359426 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.038356293 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.039495394 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.928430024 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.921910853 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.922156223 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.921568175 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.946457606 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04700907 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.956229351 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.01914475 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.989363982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.994918339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.93412658 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.933507663 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.924114847 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.984567424 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.935412591 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.932050676 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.266916791 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.994509925 seconds)
  done (took 207.980519555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388829202 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.97560855 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.975261438 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.212610026 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.344023993 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.728743767 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.968810965 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.970742087 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.99796702 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.133060505 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.029567656 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98412474 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.957147309 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.944844385 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.97188623 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.991753347 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.97467442 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.25794579 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.091464314 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.092613925 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951663084 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.257445755 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.28627951 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.357904581 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.005452893 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290976685 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.654039429 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.212669811 seconds)
  done (took 62.866579454 seconds)
done (took 834.680179155 seconds)
SAVING RESULT...
DONE!
