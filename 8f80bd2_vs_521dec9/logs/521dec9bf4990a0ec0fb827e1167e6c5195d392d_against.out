cset: moving following pidspec: 21898
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.001336593 seconds)
loading group "string"... done (took 0.624657566 seconds)
loading group "linalg"... done (took 9.899691386 seconds)
loading group "parallel"... done (took 0.184998414 seconds)
loading group "find"... done (took 1.480163726 seconds)
loading group "tuple"... done (took 2.318092005 seconds)
loading group "dates"... done (took 1.531122723 seconds)
loading group "micro"... done (took 0.241494383 seconds)
loading group "io"... done (took 0.594027857 seconds)
loading group "scalar"... done (took 47.907888216 seconds)
loading group "sparse"... done (took 14.336476675 seconds)
loading group "broadcast"... done (took 1.268727776 seconds)
loading group "union"... done (took 13.12818019 seconds)
loading group "simd"... done (took 2.729531253 seconds)
loading group "random"... done (took 11.066045405 seconds)
loading group "problem"... done (took 1832.301191964 seconds)
loading group "array"... done (took 27.478324038 seconds)
loading group "misc"... done (took 1.201244469 seconds)
loading group "sort"... done (took 3.990773163 seconds)
loading group "collection"... done (took 20.233350697 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.769446753 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144710984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.215052568 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.376751862 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242663381 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163532473 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.172617138 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.583404233 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.06685936 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.286042881 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152632114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.598749312 seconds)
done (took 6.490099604 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.278425837 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.388299682 seconds)
    (2/2) benchmarking "String"...
    done (took 0.179655646 seconds)
  done (took 1.227156278 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074358717 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.183968444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11327672 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.112913785 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100643122 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111901327 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.112723878 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112208405 seconds)
  done (took 1.511647207 seconds)
done (took 3.759074313 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.553686879 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.873430474 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.586911448 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.172588118 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.202924629 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.179998467 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320635753 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162639665 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.113658397 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107369848 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.221268208 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.403803641 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.499891504 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.08629973 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.089233061 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124459695 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096193977 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.729956354 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081706044 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.139460084 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.594096141 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11535771 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116042518 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124621836 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205969047 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131143431 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165701166 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092224985 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681736539 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102788259 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.230303923 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083533925 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.176383094 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.255760661 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079177347 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10649693 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669010249 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183730563 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117090102 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099237102 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.71818144 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080810246 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.245038678 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10503147 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111901626 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18975834 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.105352069 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.096868708 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101332243 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084119654 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172056121 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465570631 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106048852 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170134119 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107460559 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.705794408 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097250232 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155803951 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138098747 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10638194 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082524477 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108575728 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157182543 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11302023 seconds)
  done (took 20.363682298 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161160575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167108037 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092680193 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140932316 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143068919 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095841383 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097104154 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076664848 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.129478953 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.234532718 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139903789 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.186548413 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074198075 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.100524189 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144066219 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250916736 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104404683 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122582889 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099567465 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090012385 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141375717 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110409902 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10815996 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094174684 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.182845072 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204193187 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109413185 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121078718 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096746899 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116631743 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138417426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147309663 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089906168 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082897317 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.202310099 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104439779 seconds)
  done (took 5.38100402 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.228826227 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115812397 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.239763125 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179835063 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14806497 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181372589 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142939637 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301103694 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.240768409 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183392435 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129252672 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109517858 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076791167 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094503552 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093267076 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.70865544 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.179881758 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151381716 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149095926 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102155144 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096328367 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.38494436 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084959289 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097353796 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083951356 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09280533 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.220695156 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084458661 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.38265154 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097347635 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107651394 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130356289 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204177832 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.117883524 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140926664 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101087017 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079635581 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.236802649 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108743077 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076427856 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127804198 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130750715 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133269319 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096548319 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094423686 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.245349345 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09705555 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103002036 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.141338664 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199032516 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.170231922 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098439274 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.369917145 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115306549 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102942023 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08139145 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.308177724 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135144736 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097510013 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.092157495 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085242632 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092786486 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432561336 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106285462 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.921179243 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.095798379 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165003999 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.172179028 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097005372 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089541789 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101884623 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083326239 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117239691 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095618267 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07702408 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094842301 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077512114 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09957787 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097167879 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102487339 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098369412 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094492194 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145797359 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117992747 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113309175 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121859327 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08642311 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095160023 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125962067 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080413509 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098678664 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17149641 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103705105 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080364704 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120154805 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099219143 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140304094 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097155581 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211672873 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080643066 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122620882 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099037461 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126145109 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098020917 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10604241 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095613789 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097963084 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076968402 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095179592 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14424453 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09481238 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078284897 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099147307 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110588457 seconds)
  done (took 24.377947902 seconds)
done (took 50.781752218 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.523718656 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.121712634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.120472342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122574851 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119406087 seconds)
  done (took 1.746541862 seconds)
done (took 2.456028962 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.385723815 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187233089 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.1210531 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186573009 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.104606088 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190389145 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.190890483 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117676076 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204435407 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099013252 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184169298 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099893705 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104046872 seconds)
  done (took 2.918496145 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098069834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124719203 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085220341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116023601 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078219019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11495365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112476906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124918446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112230216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105761731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078996466 seconds)
  done (took 1.858636014 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096194684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117844222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085560872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111879919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077026968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109936793 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108814322 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104129014 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110272062 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088728734 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095005618 seconds)
  done (took 1.817893908 seconds)
done (took 7.297557368 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.219979896 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.795421173 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151047981 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.202510457 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.399519279 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.256274654 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.644805346 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165760694 seconds)
  done (took 13.75650616 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.119184129 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101524667 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101595527 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.14563699 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084775748 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099370758 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085561805 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099191956 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099695858 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085245104 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09827895 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085329199 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099214554 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085278131 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098500255 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099985422 seconds)
  done (took 2.370892108 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139714921 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138335475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092717951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113802111 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105259333 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089891925 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10804011 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105437902 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089016446 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103735145 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.110027524 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.095911199 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.108341767 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.101777113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093844987 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113309437 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102212742 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.094623071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107840846 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10785947 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097471954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104222278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.109058698 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.096407097 seconds)
  done (took 3.339612691 seconds)
done (took 20.178565591 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.183063069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099755245 seconds)
  done (took 1.008419043 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.150138239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154269137 seconds)
  done (took 1.029711267 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11483772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098624063 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141943303 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11909894 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099196835 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082758556 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.136465377 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098067638 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08286235 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098428168 seconds)
  done (took 1.805067639 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088181746 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102849337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.110827255 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.147956325 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097822902 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103639992 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103619212 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087850434 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104494877 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.097725947 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094531162 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.123419616 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106926825 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.239435012 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088868531 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107856259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113930913 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105616529 seconds)
  done (took 2.752792116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083758766 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098531157 seconds)
  done (took 0.909777985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091318318 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099716823 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089225099 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103994657 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09884758 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084150702 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099910231 seconds)
  done (took 1.39462988 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.545740826 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273211354 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376551688 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12174994 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142983769 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.398044377 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143789219 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116203655 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115968669 seconds)
  done (took 3.002835118 seconds)
done (took 12.632891897 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091897579 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.234828218 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.594667659 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123040068 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082095374 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156773652 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.328730955 seconds)
done (took 2.342850134 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360320775 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.156315576 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091501712 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095845949 seconds)
  done (took 1.430690352 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079867168 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107548797 seconds)
  done (took 0.924326681 seconds)
done (took 3.09485035 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.117436531 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097444458 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079273808 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097868409 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.09663699 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08101758 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.095680352 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08020824 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094839467 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080848226 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094993725 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080688792 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095989671 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080960616 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096156017 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080121213 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0967688 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080631572 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095994984 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081379423 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096149154 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093738169 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080780877 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095125486 seconds)
  done (took 2.949104794 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108922469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099754362 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104156202 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089193845 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104222444 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103281233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087432185 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100676416 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104771911 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.086114571 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104310554 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.104184194 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083793491 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.104438973 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098882027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.090175439 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105265115 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100582737 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08476674 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105025453 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103639482 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086247316 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105593588 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089257695 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104426883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105553361 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083738612 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100963404 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10419806 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090280711 seconds)
  done (took 3.678990784 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091678263 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092157124 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082415695 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106588052 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078485849 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097851553 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077464205 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093797031 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096838576 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.082303911 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098978101 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082276184 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093535063 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085019562 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09942576 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084529169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107998526 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093255497 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079147417 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.098306754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084890596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092862177 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081822098 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097436253 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081878801 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093797462 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082187861 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09629841 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08268865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096573025 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099064512 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086254091 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096256531 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.092416111 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099770575 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080823966 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103486099 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078661091 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099906691 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094438253 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079878302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095983699 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078992375 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103935215 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081258695 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098336605 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078923859 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099246542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083029592 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102110935 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093030827 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080300153 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101319377 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084964408 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100896671 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079360807 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09894157 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078590691 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09932145 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082978976 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094520893 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093489674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.087549168 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098145458 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097428379 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105081189 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093498338 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085784241 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099678657 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088251113 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100890443 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093405075 seconds)
  done (took 7.328349919 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097117387 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110659661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083584092 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100588969 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097841662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084584188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.106326267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083598661 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100685596 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.107403746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083056133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099547649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084494114 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099932632 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082710689 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099483512 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108310844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083879613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09912853 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082849026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098470142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106882498 seconds)
  done (took 2.848395737 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.264376212 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089852404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.152793468 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117500052 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1232783 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117383373 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087187673 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104980901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105288716 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095166335 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109969165 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103906353 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123982728 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094810101 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110943326 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112787586 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088112712 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112082465 seconds)
  done (took 2.860336654 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103762192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102679736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125307969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087104467 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103670959 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084677445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111413932 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119243449 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.101196613 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.086756954 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.113467815 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100944494 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087602554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102554906 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085496713 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102757338 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101029313 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087273805 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11345868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110678783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094866166 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113919502 seconds)
  done (took 2.993048107 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104355961 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101991866 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.140556429 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090694846 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.1006783 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100551219 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092749222 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103109752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109329605 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086766053 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103039788 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086703619 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111631921 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102066756 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094909698 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103483469 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085383129 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103340419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101575679 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085058383 seconds)
  done (took 2.757178559 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.181173571 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100126741 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117723958 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132325537 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117109097 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101865598 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131146082 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118025143 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101209792 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133242897 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118986413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117386933 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130812063 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110686513 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116395329 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132167366 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131671442 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132002722 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101922867 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115563288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136414409 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101361845 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132617847 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118042245 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117104065 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100946514 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116215159 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126409967 seconds)
  done (took 4.14440035 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083795881 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097795451 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083894856 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098884499 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083261996 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098888062 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081782308 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097499055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082277124 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098221931 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082143966 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097851846 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081169921 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09727968 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082590989 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097901138 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081570989 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09814657 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098127383 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083215711 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09821892 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082343614 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097782435 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082874767 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098129189 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082274909 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099332626 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082968244 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098567606 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08130767 seconds)
  done (took 3.464586779 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096744378 seconds)
    (2/2) benchmarking "in"...
    done (took 0.126258691 seconds)
  done (took 0.978938465 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093441973 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120904468 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08178024 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099856014 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.110178048 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08391234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111856232 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110990769 seconds)
  done (took 1.572791862 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.15066139 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.15071499 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090269819 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113140663 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.150747108 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.14334616 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149340493 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08867902 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103201078 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097885562 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147890819 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079484176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106267933 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085792501 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104731433 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110558952 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085224157 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110314447 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.108592388 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086658614 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107034408 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096660297 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107137616 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112777037 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081518981 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108168462 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109273869 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098801022 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102040773 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107614845 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08777426 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.101319682 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088880423 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106723863 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084239221 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.148787149 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114923563 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102396751 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089285196 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109232584 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11162485 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085410599 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107963 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103300539 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094059698 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106957579 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090597395 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102357444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080478304 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101408678 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101511097 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084993072 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.101106943 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090826909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106712594 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114654525 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086484181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10250014 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.102594733 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084913342 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10472612 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084674616 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108887118 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.111410751 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090941023 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107286745 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10500103 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086056094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.103093595 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085079629 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106122266 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121444107 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091353068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10690094 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090918269 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101794207 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102167112 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092090856 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105910424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106394797 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091433889 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108795487 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091555397 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101449771 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100957975 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093444963 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103854917 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087512756 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097610452 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116090822 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086808192 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102271414 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079964736 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104322777 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084695924 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104494066 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098299731 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089648513 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.100628087 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090783839 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107944437 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104699416 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093556194 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108845443 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107101698 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089118849 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144160104 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103264842 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084626899 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.104900822 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09128185 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100177364 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109043726 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.084091315 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102999309 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084765134 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107024217 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106961808 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086174828 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106399141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093061221 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108480343 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103540315 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083939178 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103394317 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089209013 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113242137 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109610264 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086752914 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10413115 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.085933641 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105555854 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105097328 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08799737 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108222418 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085838783 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.10019345 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103069606 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090010621 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106934209 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084351169 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105445015 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107284621 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08876253 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104334568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106830124 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083541041 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097517868 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090634388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10112832 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.085047047 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112333669 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102366959 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086452011 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103337883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111385356 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085182917 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108352422 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087192799 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106709507 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107962848 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080659243 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102760375 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087619589 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10849072 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084890204 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10240939 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100659996 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091806628 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098619214 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088187025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0973057 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08562531 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.109201987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102829322 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089471073 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102493166 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120103443 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099484253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10877033 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08945362 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108223194 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105840692 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089770686 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105971226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092495567 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.108344084 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10354505 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087548649 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108939175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085168562 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.107738257 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104865327 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090949348 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098695288 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086351728 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098574441 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107887029 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091975299 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106559365 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.090292088 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104747969 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104080291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097238923 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103793561 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089680691 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097832623 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105627082 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.097183436 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109445961 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092773189 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109036946 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10336112 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08661577 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114205391 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086866247 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106919228 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.103271718 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081922409 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098987206 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091787887 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106371776 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08418263 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.101560455 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108634211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091818991 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104573681 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081730163 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.107018196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11132425 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084116666 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108250548 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085167203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106238454 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117085929 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080474641 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102698996 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109824471 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089816373 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.101309902 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089606038 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.106140933 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.107739683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089025382 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.104384429 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088941813 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109621213 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086502372 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101892017 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102060363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087628706 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098910933 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.086976715 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107992964 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085939497 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103041047 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112336599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092098489 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108986212 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105778428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090185615 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.109009998 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.092195253 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104646029 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.108690857 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084314502 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099261719 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08632611 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098705604 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086011251 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102365861 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108423741 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087276352 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106094189 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.088548086 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109407322 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105872158 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090992581 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120428374 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101757503 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081242663 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105720973 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10679677 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085904272 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103968008 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086391403 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108787536 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107970327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093661133 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102648896 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.084787057 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108461447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101511462 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091882387 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.109828665 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.092040233 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10166882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.089494777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103633822 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112797548 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081985308 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.106601266 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105772599 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089694383 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103881082 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087741368 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101658479 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099005153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085939743 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.1106394 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087195975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106250475 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106891185 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086346132 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103518171 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084868858 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10964359 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105028555 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094398496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103020015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081244827 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100663938 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090664447 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10751234 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.109227817 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086290143 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106481635 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092886389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107518143 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101656853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095989001 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111696748 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091940354 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098555808 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0878191 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11242223 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.084168352 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10638646 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103919109 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083171966 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109965055 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093231415 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.107831984 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105354011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083567642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10336085 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091546848 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105904487 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089106725 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104439305 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106953001 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083543346 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106107531 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091606152 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106918549 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110363461 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089817725 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106691592 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086311925 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108456649 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085783244 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083999458 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099245807 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087563337 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109559926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083013693 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.107459771 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106556253 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08726741 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105110761 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.090382603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103201483 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10987949 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09026416 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105394339 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096837148 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.103998156 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105723512 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090303378 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107983332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081759482 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105744998 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088654377 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111319757 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105757084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.090875689 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10607748 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10767902 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.088269496 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107911274 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090797498 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109466007 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081982489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110267437 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11157279 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087588345 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105202856 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087650699 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102049305 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105676125 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.092182192 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105531249 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095220232 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110626032 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105437961 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087479331 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109524125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08898119 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110478189 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103040239 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0923507 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101885502 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093306101 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107009531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110947073 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0870512 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101610671 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090709566 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.108149096 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10767104 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093618602 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.112241292 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081740549 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100516214 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105505593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087564312 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116214567 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095079278 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106431719 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106328121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.087800443 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105080317 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093772038 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101256844 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103678416 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091078212 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111963931 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08824655 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104287748 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106727234 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089746104 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11190247 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088399441 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102765205 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107694534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.093707834 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106286376 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08557989 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104076865 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111074423 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088578806 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10436352 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083357542 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115098893 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110931762 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093175346 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104119565 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10873217 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08762906 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.107044258 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09317058 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106275829 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108009233 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087990844 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10888578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096208922 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100545834 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105835436 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100162376 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108756946 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091267407 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.107123433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105771935 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094567324 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112279986 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.087423218 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101031081 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100734887 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088726238 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100515331 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.088581976 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115278335 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.1070343 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087452644 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10874619 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090196021 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.107531477 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.087406638 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101728833 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110849803 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087429342 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113386668 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082767309 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101518105 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086998165 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11062121 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107705554 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091488978 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105855826 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08787548 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102737177 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106223858 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094340015 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10829491 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091930478 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108177096 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10663581 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087547388 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117001694 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086397662 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107466594 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119068314 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093747925 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109691515 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108515344 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096569005 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112641272 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08890739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.111497966 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105913724 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091135284 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112437517 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095492178 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119829392 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107362213 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083060273 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.110097239 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087118952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102367999 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113543082 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096021397 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.112773622 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108352852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086838262 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113861658 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095945767 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108707194 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105419797 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087649504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108581299 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087431931 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108706024 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086616863 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.113538354 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.11257918 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091753535 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112854602 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084270706 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116586678 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112133081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.09397352 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104790398 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083902958 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102394724 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107058602 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095368106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.111290634 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089347036 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.108832121 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090139799 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109703693 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10828059 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088005174 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113218135 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091562744 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105402842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109927126 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089660466 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109149322 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086710981 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.110613628 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111552691 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093622892 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117305403 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.092621014 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107322729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105039572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091602398 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106999965 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091840861 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108930164 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104676444 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084201412 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109683205 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094936015 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109153148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092915252 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115277421 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108088885 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094040746 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115773913 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110015675 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088123378 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110653372 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089415566 seconds)
  done (took 60.502451872 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.166612668 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09646612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108158449 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088551657 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138432909 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109802387 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107375634 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090120781 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108982431 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102037692 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107152247 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106647825 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130803457 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139758083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136720607 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104011828 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107303831 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108069369 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089118879 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108516772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130417185 seconds)
  done (took 3.186628553 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113121756 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12860533 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12547038 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129185192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117874263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105739842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125036305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12493368 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129236122 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120568552 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129900508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124465495 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.101304427 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.120286556 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119965706 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12006181 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110473368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118887655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126188119 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.12500883 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119776411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107491913 seconds)
  done (took 3.441255147 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.097904662 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109632195 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09370756 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.107516736 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.090944234 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106944139 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115454162 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087501629 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115824464 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089445556 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.104440477 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089566544 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112809518 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.105953908 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086829601 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.106888506 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.097926859 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.109856314 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.094101485 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.106882374 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.124807959 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087401584 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.108144457 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085221539 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.121298555 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11367102 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091885869 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.110919718 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.084553112 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110132846 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088058317 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109382473 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.110597747 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085366429 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104584157 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.091504104 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.110392617 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105914155 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08880981 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11049416 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089831567 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112756978 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.11574834 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088462475 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106790657 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090162098 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111997923 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087550881 seconds)
  done (took 5.680539996 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153301493 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.17282752 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.118310469 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156860314 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13489904 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105286054 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.114117885 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159187125 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.115531763 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094850288 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136375104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134025256 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119932583 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.123412182 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.098793886 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.115365363 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118197413 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.097280283 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123705651 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114376144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123181587 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103371986 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.133455777 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131735769 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118228811 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094775951 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11782098 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.123814713 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130862602 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.104918665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121402638 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123843976 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13215938 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.119960184 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.09633806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120069907 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.137397768 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.115688041 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097892233 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113075188 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100197546 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123318525 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11751761 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134912646 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116496678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103050093 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117082075 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.110839555 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114870251 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120817461 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127434419 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134583608 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.118533082 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098243027 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124994407 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135669022 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116012756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.096631532 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.118054234 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132781586 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095010112 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120667747 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135355918 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.118747655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106520576 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132918413 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.118448404 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118030321 seconds)
  done (took 9.112280941 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125590798 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.119273466 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13447981 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134044583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118581551 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.099954249 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118939183 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.118873848 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100759984 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127996951 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118458578 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.207603929 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.114711882 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127457608 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099790849 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120035154 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11875747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119362421 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10087868 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118576098 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118978425 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133617625 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101357377 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133496877 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135008269 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114861894 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099663336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120615224 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132748369 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119711382 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136494649 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.100542284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119828513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134063721 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135221119 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.120069938 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091675373 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118049447 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119007344 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100341067 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.11540741 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132849674 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118957629 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09585291 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119028021 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120592769 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134310305 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135229621 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107194107 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128841316 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119028387 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133930907 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119226949 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100145116 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134510319 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144114524 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133469349 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133683562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118999507 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13453031 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134020121 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144394281 seconds)
  done (took 8.399586773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088692278 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108241237 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08913794 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10763646 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090432298 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108320902 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089405135 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.107634333 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088690987 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.10733966 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089148573 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108835162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08902963 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108868936 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088812084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10888399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088106872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108430776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108343861 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089678737 seconds)
  done (took 2.786129099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102208293 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.13495613 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.112930089 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102835755 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113061525 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122266296 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.094822426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112590681 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113044891 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094036828 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125089598 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126485659 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094141539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122358292 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.124100439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120433107 seconds)
  done (took 2.632568422 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116366228 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.134329631 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168497359 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.115926934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.11333947 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100990959 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113798591 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094194098 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111285815 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118968729 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.098151561 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116645235 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092210635 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.112894204 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.112308666 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.098100126 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.110964234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.098053531 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112255335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169799853 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.120749399 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.096316246 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.114930912 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.116471898 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095563684 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.1208759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121471135 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.094208927 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.114969957 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113934433 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098150461 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123017335 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.110889212 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.099585829 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113360667 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.095342379 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.11280013 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113000372 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099095317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.112349676 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094088371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.115955868 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.113000935 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.096906656 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111295135 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094781023 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110478821 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.121102769 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.095801414 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.116104558 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092500049 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.119388056 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.117312311 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105467467 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.12217572 seconds)
  done (took 6.94113111 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107193522 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114518722 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.127349566 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091002048 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114416564 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096706095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114659173 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116080771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097404496 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.109062775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096682094 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114762659 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115992165 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0964635 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115656201 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094788676 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.111251558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11563336 seconds)
  done (took 2.772929823 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100282993 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111748085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098961851 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113506854 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092237757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114789384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110256092 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092036865 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110543744 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093138472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112081529 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092155523 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111202896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.112192963 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094042775 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11364961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.092595496 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111758254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112447993 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092495946 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112121276 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09090888 seconds)
  done (took 3.10714443 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10608127 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.168952743 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.122780807 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180098202 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.11268904 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.110310512 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.102500566 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11307514 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.130798017 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.090812146 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109802212 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.089789573 seconds)
  done (took 2.265587718 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123755349 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157244382 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114003225 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093220678 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128052351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118948974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118622027 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101035712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130937785 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136827259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119716917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133304874 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110878213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13370097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12713294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126206218 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118179408 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09953664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114259443 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145581044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119527789 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131568384 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100168307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121056226 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120297813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133740823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112218657 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137217748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120814987 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131321935 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12636047 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099637424 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132960798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13808004 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113686655 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132536585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100040714 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163534097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108517287 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135076438 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113543227 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124970871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111348933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129443201 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13310584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120658781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129616877 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101073064 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12085175 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15243917 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126303805 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136165388 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126466266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131924831 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132312514 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153279121 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138604404 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13503318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1066756 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138756131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134189658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127232675 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135016678 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137954565 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128505059 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136279204 seconds)
  done (took 9.123076129 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161239011 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096925868 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121450124 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139131187 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135107135 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10084671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120563901 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120269958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10062381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117239347 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173134398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120902085 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134544241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135011379 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11998207 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102178415 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121057562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134380313 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095213548 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171782089 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100514895 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135026521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135229199 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134652629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137965682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129392904 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100009858 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122634034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120559809 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11884512 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109281228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120907341 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134694361 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116010732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134957274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10224541 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119933496 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129695689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100661538 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127133368 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135371249 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144431082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119635351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120498523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138223304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101089295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120240079 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115629251 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101840485 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115371077 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139611869 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138895236 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138252464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135467157 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101657439 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121233968 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120330793 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101070972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122136977 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127104507 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136221134 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10038701 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174558913 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101086366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121135033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134768138 seconds)
  done (took 9.010877957 seconds)
done (took 165.273317334 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153569224 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.17539607 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.152496459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150812346 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107369842 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122546889 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141589777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.152302501 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107186511 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086573391 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10683259 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091894473 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17416435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086090174 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107119824 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110871961 seconds)
  done (took 2.855861809 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.208395331 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.303420795 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129874156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112580552 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09746694 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11131831 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091710076 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114784502 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108250812 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103566677 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109690692 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090014314 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122898788 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.111009242 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08980401 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110181511 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.121664858 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091228814 seconds)
  done (took 3.062487655 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115393525 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157276766 seconds)
  done (took 1.114205353 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1272481 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215013811 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296136779 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16928416 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.139648754 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135591793 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.170991834 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128996723 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.20449671 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132884306 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.133453803 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095866206 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141411491 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121327685 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.105892103 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114191675 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144513424 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.103606218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.352137259 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117345646 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13742891 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.097224486 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122605621 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.123549594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.194257059 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13240939 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.096236903 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11617725 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116980064 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.105058058 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.12263647 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13486056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.1324021 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180975099 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121643108 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.196930887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104091536 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113825501 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.122407946 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095279463 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119127614 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119361672 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111940086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114733481 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114645046 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104668962 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117128622 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.115267056 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103999892 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126041192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12490698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122274274 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178179278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126206405 seconds)
  done (took 8.252645188 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.906838916 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15623119 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093348101 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.033922053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146545449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131208454 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.909050965 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116865198 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.277699215 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.901899557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130991272 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106348087 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.284074963 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.271697461 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.184301226 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.391699417 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.746802864 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130862224 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143227698 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165257586 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121836703 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145274618 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114924207 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454949346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094771778 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112852663 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120105455 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107483402 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.199992539 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090649533 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118077718 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.220938202 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.284572903 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230572891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11400013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090727598 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111972094 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18714771 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.319971042 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248350048 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.185202224 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088428457 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111974642 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127666864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115631751 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109612726 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.201418815 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195054802 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.212093029 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097438567 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127905446 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12426987 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125945115 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182679862 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10992841 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.370296194 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374062533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110249739 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103089144 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132488238 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.298883022 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112700011 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.258678115 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144256057 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.241992616 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110965343 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85293522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185954365 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111448719 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102448661 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12271019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120861622 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126136127 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179500234 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389683367 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130128641 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097442857 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113035288 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.255204251 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091575437 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113811873 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182841616 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116769624 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123584533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131309497 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109756412 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.211176893 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26929375 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131502504 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123435289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.119822388 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108099315 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116440251 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232076093 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.269531699 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179011422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.253870968 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107635412 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.20605014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184981229 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126936439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.211111949 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.101854966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133334679 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128512456 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248059342 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154235205 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113722223 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098408022 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122857659 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157480627 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117290164 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122422153 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189046837 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494031226 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185711504 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112070539 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095929629 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124660887 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199356395 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102085294 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.28760146 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125576859 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.207284503 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101904917 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110360084 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.102515141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.20686327 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130919344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124683233 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107610658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124638143 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.290572909 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.254041357 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130436363 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24363491 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.208168105 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104001611 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.214035286 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123457244 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190368424 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125688969 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105267168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11822697 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843356523 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129623585 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124130954 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09830408 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.224155371 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092937828 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113349703 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091267122 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109810255 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837331169 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094234486 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110394046 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092479638 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125188409 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124363752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120759964 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099720784 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.201964157 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26801618 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128090578 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120857086 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.092927676 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179384451 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11780719 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.112376855 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.092403575 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113627856 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123645075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099240737 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115206546 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193635691 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.200479204 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252240335 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557180645 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092134403 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114162555 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264368841 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113886037 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.339270886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124763689 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262504494 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187510525 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111530308 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372698823 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.210421568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204963145 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094652837 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.213799012 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089563738 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123198589 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.202472129 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093386266 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122890686 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177329942 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134195867 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131310605 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.196150527 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114225 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248817197 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111027181 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188568256 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116383456 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126494789 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.340635013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111386274 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11625848 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.20277396 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096272197 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115067529 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.648973261 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093273379 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126768414 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126003671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.256519609 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.205826571 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102586244 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123071218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128546026 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180401625 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.252974669 seconds)
  done (took 47.708356919 seconds)
done (took 63.827761728 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.327102097 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.285299833 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.338954604 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23696787 seconds)
  done (took 2.133568926 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.23841232 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162329307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.21481946 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091328477 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.22541472 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090876274 seconds)
  done (took 1.886784118 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.544652926 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.442079776 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.375990947 seconds)
  done (took 2.231481019 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270053121 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.299740389 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366421161 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.495358121 seconds)
  done (took 2.405708566 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287774137 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116168399 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131794511 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.184408497 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.255860382 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.281444627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.159949839 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206126511 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.118175593 seconds)
  done (took 2.658631232 seconds)
done (took 12.18367156 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.299802129 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.199832746 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.221841702 seconds)
    (4/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.320705921 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119939869 seconds)
    (6/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.34549373 seconds)
    (7/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.266085777 seconds)
    (8/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.222786969 seconds)
    (9/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.175752812 seconds)
    (10/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.205189845 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12185621 seconds)
    (12/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.230870218 seconds)
    (13/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.274933137 seconds)
    (14/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.202915641 seconds)
    (15/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138668668 seconds)
    (16/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.168446102 seconds)
    (17/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.204641186 seconds)
    (18/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.123314525 seconds)
    (19/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.235919686 seconds)
    (20/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123697384 seconds)
    (21/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.103051272 seconds)
    (22/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.2285991 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.284901216 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15525905 seconds)
    (25/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.232392606 seconds)
    (26/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.124733307 seconds)
    (27/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099310701 seconds)
    (28/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.126244581 seconds)
    (29/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.213838296 seconds)
    (30/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09755564 seconds)
    (31/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.137818802 seconds)
    (32/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.122552654 seconds)
    (33/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.144571228 seconds)
    (34/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.2515108 seconds)
    (35/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.15616639 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121056452 seconds)
    (37/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081950665 seconds)
    (38/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133807199 seconds)
    (39/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134200173 seconds)
    (40/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100105536 seconds)
    (41/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124879483 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.118788898 seconds)
    (43/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.165780113 seconds)
    (44/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181318943 seconds)
    (45/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114626531 seconds)
    (46/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.138486761 seconds)
    (47/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.121297795 seconds)
    (48/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.209990522 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15590663 seconds)
    (50/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.104952189 seconds)
    (51/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099378351 seconds)
    (52/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.247626277 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.150024886 seconds)
    (54/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204725967 seconds)
    (55/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228980524 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.124484029 seconds)
    (57/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.23726504 seconds)
    (58/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.0827015 seconds)
    (59/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132977664 seconds)
    (60/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.222914181 seconds)
    (61/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.231609844 seconds)
    (62/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.147375843 seconds)
    (63/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113610592 seconds)
    (64/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.165350293 seconds)
    (65/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168995885 seconds)
    (66/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105142659 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121038371 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.15310371 seconds)
    (69/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101625217 seconds)
    (70/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12049407 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130710511 seconds)
    (72/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.21372033 seconds)
    (73/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.187074056 seconds)
    (74/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.210514198 seconds)
    (75/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.169689492 seconds)
    (76/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.081059025 seconds)
    (77/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.121972164 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.16361357 seconds)
    (79/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.212543151 seconds)
    (80/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17209597 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.200064775 seconds)
    (82/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133509874 seconds)
    (83/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.177083639 seconds)
    (84/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181285429 seconds)
    (85/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131478779 seconds)
    (86/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.128470136 seconds)
    (87/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17945157 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120471182 seconds)
    (89/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.122436588 seconds)
    (90/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127950134 seconds)
    (91/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084809957 seconds)
    (92/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.10716601 seconds)
    (93/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164272423 seconds)
    (94/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111916444 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123329559 seconds)
    (96/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.196841981 seconds)
    (97/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117958593 seconds)
    (98/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.15012212 seconds)
    (99/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107274915 seconds)
    (100/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.101512081 seconds)
    (101/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.16623081 seconds)
    (102/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.2090055 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119971594 seconds)
    (104/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100109952 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.135964485 seconds)
    (106/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097519853 seconds)
    (107/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.136188887 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118832615 seconds)
    (109/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114088456 seconds)
    (110/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.103329119 seconds)
    (111/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.17336749 seconds)
    (112/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.106951277 seconds)
    (113/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167711116 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09850805 seconds)
    (115/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.123472192 seconds)
    (116/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083132579 seconds)
    (117/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.105537441 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091264156 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.122586556 seconds)
    (120/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.082234792 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105451641 seconds)
    (122/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084504028 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.132018988 seconds)
    (124/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.08228129 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.199337853 seconds)
    (126/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.105307907 seconds)
    (127/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.143660709 seconds)
    (128/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.1080851 seconds)
    (129/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126326836 seconds)
    (130/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.150766558 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.141333296 seconds)
    (132/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.139114672 seconds)
    (133/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.147665549 seconds)
    (134/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.108015851 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098877041 seconds)
    (136/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.10666022 seconds)
    (137/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198544055 seconds)
    (138/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09927641 seconds)
    (139/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106023326 seconds)
    (140/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200257153 seconds)
    (141/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085505128 seconds)
    (142/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127461947 seconds)
    (143/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.113977683 seconds)
    (144/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118760382 seconds)
    (145/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090293031 seconds)
    (146/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108315495 seconds)
    (147/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083025983 seconds)
    (148/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.133980941 seconds)
    (149/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084657505 seconds)
    (150/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.105822765 seconds)
    (151/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098695475 seconds)
    (152/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.106940657 seconds)
    (153/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093993981 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.137290369 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.134956406 seconds)
    (156/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099122107 seconds)
    (157/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217034452 seconds)
    (158/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.216505293 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.124066924 seconds)
    (160/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.099634543 seconds)
    (161/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105609406 seconds)
    (162/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083232782 seconds)
    (163/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.105658749 seconds)
    (164/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084144407 seconds)
    (165/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106491797 seconds)
    (166/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.084237693 seconds)
    (167/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105969926 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083939607 seconds)
    (169/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121430936 seconds)
    (170/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110573434 seconds)
    (171/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.11892349 seconds)
    (172/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112995418 seconds)
    (173/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.130553339 seconds)
    (174/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084095003 seconds)
    (175/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126521172 seconds)
    (176/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.083442639 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11457018 seconds)
    (178/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121036753 seconds)
    (179/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09180122 seconds)
    (180/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.110596519 seconds)
    (181/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100127686 seconds)
    (182/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122167999 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09942653 seconds)
    (184/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.107808146 seconds)
    (185/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.081922771 seconds)
    (186/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138123089 seconds)
    (187/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.081886445 seconds)
    (188/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214309206 seconds)
    (189/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106676602 seconds)
    (190/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110090683 seconds)
    (191/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.107942411 seconds)
    (192/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084876359 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122712602 seconds)
    (194/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122910652 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099432283 seconds)
    (196/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.105560751 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.12850955 seconds)
    (198/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.109283783 seconds)
    (199/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.099964408 seconds)
    (200/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13680244 seconds)
    (201/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132520026 seconds)
    (202/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083619903 seconds)
    (203/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.106088195 seconds)
    (204/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174250912 seconds)
    (205/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.138027884 seconds)
    (206/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.105614178 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11330696 seconds)
    (208/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117018876 seconds)
    (209/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.091340326 seconds)
    (210/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179578173 seconds)
    (211/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106715273 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099979717 seconds)
    (213/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.106373749 seconds)
    (214/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.145934421 seconds)
    (215/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.108136915 seconds)
    (216/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100937605 seconds)
    (217/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.132982439 seconds)
    (218/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.123785422 seconds)
    (219/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.083590781 seconds)
    (220/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088084106 seconds)
    (221/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.133594183 seconds)
    (222/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082533994 seconds)
    (223/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108984969 seconds)
    (224/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084272671 seconds)
  done (took 32.071608447 seconds)
done (took 32.949266322 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.509812955 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131376775 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103846178 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126519679 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.182887255 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.129326443 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112263908 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.133066983 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.131076839 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100961624 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.116509991 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.108749561 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12733609 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.1828453 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131695426 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096067735 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120541206 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.132810121 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110559512 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137054051 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.182535626 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120318203 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109089923 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11984637 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.184325389 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123137048 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103565443 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127484978 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132567496 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102035491 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127229351 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09690694 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.135025643 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.135002303 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092824228 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.123151657 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092471232 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116323337 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.124706022 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.102904296 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.132270702 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.101165677 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130041023 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.120030142 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102466286 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124954525 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09166215 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.131540727 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117390438 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102174097 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120990263 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135024589 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.100182559 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117250977 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092025689 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120283939 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.130912931 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094166472 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.13333324 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093054045 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.120167086 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115947621 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.104372717 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11638081 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.099614062 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119518793 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.123027709 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104297402 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123231674 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094722923 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118275326 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.099047335 seconds)
done (took 9.926193583 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100157891 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179344494 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.184384155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.190244462 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.151411839 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.137492391 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140605429 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150556482 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112163497 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144418926 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.155800563 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.148408578 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.191230266 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131576754 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113273005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126502424 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.133308669 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108424593 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.192231146 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147011125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15540141 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.132984673 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157252618 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117559917 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126005034 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157505951 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12671235 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.102390738 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.124549063 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131997025 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120849783 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125891356 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12528524 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123140449 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136706226 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.129393371 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112884293 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.125532558 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.122507757 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.101194237 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13926936 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141896202 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099044497 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1365594 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12670523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.106534504 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.133860426 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.131614508 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.103427846 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128352375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12639473 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156025972 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109358011 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.132987273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.13049092 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.1085438 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.132458687 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129906875 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.104911928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.130925334 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100888855 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.125802329 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126475244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153127451 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103434944 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132469155 seconds)
  done (took 9.661726645 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122528854 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160333929 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135443669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133743767 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108904988 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.115487499 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090588939 seconds)
  done (took 1.793293467 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094083821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186535436 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185186427 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.185223437 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.2026111 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.19648931 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13925351 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094376254 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.157508049 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127914801 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188284939 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218295817 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.125638211 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.111187511 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.213495959 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094127947 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189902386 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11747226 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.129275348 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187438819 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109186826 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.150629896 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.1344523 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093320734 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203511938 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096317293 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.266195846 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111140012 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124798602 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.103134747 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.132871759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.202520642 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.179578181 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135501127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121964982 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.183090032 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.181539875 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130154783 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199071493 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098683327 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.181041445 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.131349397 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.13077861 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.106235572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.131074241 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169370976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.134793746 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107175253 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.128936913 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187484562 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.131921999 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182654338 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101276692 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.133550859 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130247792 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107547975 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13865969 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.130652713 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188621691 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133052371 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182698023 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182245555 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182975676 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.181631381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140431045 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.182717889 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179643636 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.103357196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126867095 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.130248113 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183764953 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104651927 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.131983493 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.168535059 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134618959 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186109949 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183020302 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125969009 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109444322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.12315579 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.102308776 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121858387 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.170933509 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.130798059 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103481779 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138977258 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132703162 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107272845 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.12308745 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144955034 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.105337619 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.131763672 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.135776039 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.104966091 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138205474 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.184755793 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.131694013 seconds)
  done (took 15.073812258 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096866552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117751154 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101713953 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120526978 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095217778 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120445229 seconds)
  done (took 1.595640525 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.128195188 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.133326245 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142955576 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.107849945 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.189652728 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21551917 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.193676521 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13159041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.126544777 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.143504421 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.189697361 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.193831192 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215325584 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111408931 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.192744806 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135290501 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.192781687 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.132629318 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.141596926 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104567859 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141519642 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.13437779 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103700483 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.18104391 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.137178287 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.133712657 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131538765 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.117461067 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140749945 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.130254334 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.111571391 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.135862909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126989198 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.129894442 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.197446638 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102507831 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130294427 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139059426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110252623 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.135310116 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194494335 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130446876 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141925717 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138278605 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107294666 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128544965 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.138270639 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107593759 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219118852 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.115484079 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140768381 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.134374538 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.134591177 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.115876693 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127864121 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130361506 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.115076336 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.219632678 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11159633 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129415363 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134886136 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.111402829 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132347795 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138466293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.13456695 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.115593663 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.128383373 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133404692 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105365395 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.13561644 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139153204 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108759929 seconds)
  done (took 11.039998919 seconds)
done (took 40.087689451 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.121309482 seconds)
  done (took 2.061534141 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.966635315 seconds)
  done (took 1.907812187 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.206381881 seconds)
  done (took 17.184424889 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.569739321 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.646627767 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993094633 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149882066 seconds)
  done (took 3.303505579 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.974083267 seconds)
  done (took 1.93870426 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.328648657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.283033396 seconds)
  done (took 1.560636695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.857775317 seconds)
  done (took 1.812400532 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.449975553 seconds)
  done (took 3.400589252 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.382078844 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.198015452 seconds)
  done (took 1.545340587 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.672855903 seconds)
  done (took 1.632169107 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.19992903 seconds)
  done (took 36.160040756 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246806563 seconds)
  done (took 1.216846876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.313828856 seconds)
  done (took 1.274749793 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.376415633 seconds)
  done (took 4.336601439 seconds)
done (took 80.286668737 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105906859 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131735619 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108369038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128629376 seconds)
  done (took 1.428286388 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.115709974 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13048302 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.133374047 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.107046346 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.139172942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.107064376 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.131401182 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137088495 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.105566117 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.132349909 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.130156841 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10769844 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.133772155 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12833356 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.106056412 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.132307041 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.110128285 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.132744582 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.130791218 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.106965245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130754075 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.130847976 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.111177546 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.131813477 seconds)
  done (took 3.924794704 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106124336 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.122139012 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102249964 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121778944 seconds)
  done (took 1.415855945 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115676752 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147096202 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.145195353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.114852723 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.147036818 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.145197223 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.102243121 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.124896243 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.104465639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.138472257 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127028898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149075573 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12184663 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.132444819 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13699751 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100398697 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.132207333 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.124681444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.139102401 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13853905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.102064915 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138024833 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.126188792 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120787345 seconds)
  done (took 4.039341958 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.213014841 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.119705834 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.155321537 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.183137961 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.156772108 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.103549122 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.158783344 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135098871 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.136336775 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.107968331 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.133086576 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.192096942 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131169565 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.111595088 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.131878055 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.136623404 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.110828045 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.134076588 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.13542337 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117737797 seconds)
  done (took 3.775893217 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107675036 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122522656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094218634 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122978418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128434585 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102974937 seconds)
  done (took 1.654715152 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095459224 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114866013 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094445907 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115213826 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.098727323 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116598624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09206616 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115861976 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09262526 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117373015 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092577212 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115642201 seconds)
  done (took 2.236438938 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.304189259 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097757548 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126605016 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122515434 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101800651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121785228 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.136716283 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097213351 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.255611328 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.122211076 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114414021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197935097 seconds)
  done (took 2.76928464 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229130887 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106967369 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28880394 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389278745 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17393894 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181260311 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289338638 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182508168 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22957038 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127748783 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237998706 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169746401 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140930868 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218797683 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126935997 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.202897573 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215640695 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218623969 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161317027 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226821967 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179473532 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183362073 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197368151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164991515 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149485412 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173295195 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.128653648 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112788277 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214206051 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185606492 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193431363 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16112601 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151385708 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221442854 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265119406 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19719198 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32992017 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147386705 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204808291 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201825829 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27847424 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153344872 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213717025 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168575754 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142020091 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196447403 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170451943 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.221749999 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120016342 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152232725 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203947568 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214854384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204382808 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150093269 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310603921 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159748216 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.161937608 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192381724 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209075538 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235193859 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180523998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.108051006 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222113164 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201003475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200413503 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.160943416 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189246004 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138572199 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194012826 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213248881 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196937283 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207192202 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.203949092 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144968404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176304733 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184947533 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167080956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193988223 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175538682 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129026309 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137574362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148045095 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137736117 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198736276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106576666 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250350288 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120479918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.228304989 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223053252 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173868788 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177680948 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180192168 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184038361 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162340357 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13029886 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133699103 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.176472909 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17094412 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142599416 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170357867 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158541726 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140782359 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165598094 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.1064001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172901317 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.148171988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182447458 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17998597 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.142984845 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1788903 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162995494 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174589845 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188067803 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204235844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143187071 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116969403 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23480902 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170657126 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.125311239 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21599798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209040206 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180465088 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147326987 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188076444 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213730119 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155190322 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209142601 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154741566 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143320377 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166024471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17319173 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170958359 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14255355 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139162768 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167507965 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213497691 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137983708 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147523591 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190574727 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137933228 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113182781 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155210808 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148470406 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.152701283 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.16497338 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.128404873 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168627515 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1725338 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166478317 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172389953 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155579707 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242243084 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117964144 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.173686718 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159864991 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129671511 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201313144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203161658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140279128 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203610599 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188984182 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234631774 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178811076 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139113526 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198484857 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113583691 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.131672004 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182022233 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176243928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178498556 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202073356 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231134209 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188783387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.167903777 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161350589 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184082298 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.190358662 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172811742 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15722417 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177723091 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185323431 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131989384 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110570814 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13996023 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151283792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139995483 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11700268 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226057782 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179591697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200966422 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177726845 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152843463 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198960168 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.139980659 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181130723 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.191021309 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149759075 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20496264 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197791277 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182307875 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154592158 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187809335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.13055652 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133960962 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.122229679 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183764516 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144022927 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145610317 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155882199 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200996377 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191611236 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162254019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242968087 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188064571 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211716247 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131954852 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.150579766 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186481871 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173721511 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.200295523 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145219755 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.174811858 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195458896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157486413 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211862957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178310959 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182503827 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245853608 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.172155606 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140140188 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137664521 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208940567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127167091 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178911733 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159342024 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147595152 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167317949 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.1498261 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112282755 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225728041 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155293998 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200264044 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.170381864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192092674 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135951858 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156398955 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173277961 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155540258 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10379701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18496162 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232070219 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133320816 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196813911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192104203 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114277003 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321121186 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231884402 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204103705 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150739248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155706882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176036963 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174628093 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178707506 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199220915 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156514023 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197321508 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172483442 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.154568405 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120253424 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15987936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164308355 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167860931 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146969599 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170290864 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.153185838 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205942722 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15645063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172223587 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179052786 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.13257646 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.170720045 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152126903 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218641951 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172819752 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220230242 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.144027141 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.212537935 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206580539 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107886668 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138122721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139810274 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199795049 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115675139 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173196957 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.220131644 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213600647 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172220198 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18317891 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150512694 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135593148 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174792785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161372153 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213187639 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154394603 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150085552 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211185672 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164383617 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140256403 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178686967 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291867782 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156791551 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190289249 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.103332213 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306571722 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111381431 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142979819 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173952317 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18906332 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161218476 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.171363196 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203765443 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131794523 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176247414 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150805821 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.228846293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226355256 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189655568 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193431612 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.155587205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173534906 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179613584 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194139281 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155433834 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.159192095 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175618114 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199617112 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207584967 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146703919 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177010883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175999381 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174189329 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194201476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146076588 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203156815 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141702352 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182817744 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151483108 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13688004 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171626199 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19501388 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145157815 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19377744 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170726674 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113777117 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139696213 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165456451 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173319377 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156682594 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138722586 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198747859 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1102966 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177743055 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196258802 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140745824 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169983805 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158626946 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1441244 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129284619 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158573207 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14669758 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178805321 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204266991 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.143579491 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195146644 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18898656 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180610362 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174533745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157012798 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.676364499 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112936448 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226154046 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133415742 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23649225 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161425473 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185694359 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1744227 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135227088 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212153703 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137405715 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.237462904 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209380524 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176237073 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11542364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154811369 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159092897 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144118732 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164023935 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176624748 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125022638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149427264 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174565278 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160432542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.157664285 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121341985 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228662908 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132919794 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230205486 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200567279 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1508247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180903046 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195691177 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140515103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180491114 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188292497 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154111596 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166965631 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118044937 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148015366 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195198557 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133020221 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174747455 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173484648 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174832153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177485401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.123525539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174284517 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154389094 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174202309 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139503836 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.172363088 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172052744 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14293011 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.114694777 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168073732 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173912112 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170566821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140765109 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.157192978 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221679253 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10717796 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14512846 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290641794 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171884146 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214480601 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.168571676 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145772196 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156890246 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170314882 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168735967 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172622614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115415339 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141672057 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145512467 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.191607534 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170331018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171274155 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195108798 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176985581 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207060664 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156132926 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252744945 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150074402 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168782497 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.143978802 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.116320846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152500707 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146711863 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159373658 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203347736 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193015394 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166484599 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.158022325 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140809572 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107549593 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143732819 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175658141 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168555247 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173816503 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158386973 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101803519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156109489 seconds)
  done (took 84.735975229 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160338196 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147882877 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152846226 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205435237 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175472953 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266471912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.215661717 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234797995 seconds)
  done (took 2.613381015 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131476579 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.118712802 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150720427 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.130378169 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.131914759 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.436379625 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144501187 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.105821062 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193588331 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.16719636 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.103737815 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.66683767 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.132251143 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.131156511 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121408226 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.129244155 seconds)
  done (took 4.046318012 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.223168899 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.52360545 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.549804893 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251049953 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238492951 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.186654375 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.696647526 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202056121 seconds)
  done (took 11.922254843 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136415052 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148384964 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.344071923 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.218645861 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.167077241 seconds)
  done (took 2.074917126 seconds)
done (took 127.593938053 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10909869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.151906293 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108683108 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152096781 seconds)
  done (took 1.570615524 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156055652 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.119190565 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094826217 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11723778 seconds)
  done (took 1.552586876 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.533670082 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09012913 seconds)
  done (took 1.716570131 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.133051719 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152136458 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.152074615 seconds)
  done (took 1.50801311 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115635015 seconds)
  done (took 1.176228118 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107724282 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134499728 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.189296536 seconds)
  done (took 1.497646446 seconds)
done (took 10.083166191 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131604113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.521092191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.420093867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116354727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726615607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411403954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.068422803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162857438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198041231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09571561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14352227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675111044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021092057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.462032856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978379353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367572514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705570939 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099601319 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130705395 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098801748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.043111365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122213077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098396848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126450147 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676174587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429213822 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121921832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.356479029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122504862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101613369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414027477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122874278 seconds)
  done (took 17.321196906 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143278352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189680109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134075659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098693183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129117809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124913691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.109561455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138832471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198084222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123775945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117413813 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124210918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128674425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098606157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147482918 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096386491 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126664622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125086873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105535006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125329617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118185268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122677502 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124762102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100396979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12320905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111876872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124940452 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137687679 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097261815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128987925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102275311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124323167 seconds)
  done (took 5.071250995 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148252135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197701826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135097313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.158703147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.178367187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098628608 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215159642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164663412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198105782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124831828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14531664 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.096881024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164640408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122583648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122806542 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123608014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101306052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126767622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13117542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100335112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145877772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096920092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124827781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126307423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098307789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138845356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097739607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137909323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124113925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103956948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130519654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123590519 seconds)
  done (took 5.378594202 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110055566 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138858119 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.120395978 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146842704 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.132532236 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.109584306 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.137506109 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104512548 seconds)
  done (took 2.071321488 seconds)
done (took 30.902328423 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123355147 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.143088583 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.116878979 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.1380826 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.198829859 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100745443 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.142731903 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.126863936 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.111291373 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.146140704 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.098585186 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.130058641 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.117115433 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.133596287 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.181890031 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.137777554 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.186979073 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.183129058 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103207676 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13767138 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103130293 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.188606386 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136987325 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102922715 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192013918 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129096284 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.178884747 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134055002 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10773432 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127379243 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.181408858 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.108522411 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.130340899 seconds)
  done (took 5.646423428 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201256644 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.210112674 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.102112462 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.131269071 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.209832606 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.102248556 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.227552121 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.104303713 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128940081 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.10364226 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.129795369 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.200491003 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.207314857 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.220559047 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.238437847 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.208349119 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.196357669 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.207232256 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.194253263 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.212861732 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.198227335 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.130788846 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.209648111 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.211240826 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.102665413 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.131149352 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.23410576 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.206444126 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.23616231 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.196329934 seconds)
  done (took 6.474693267 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111669733 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141933013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12320269 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198220307 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169045107 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140049765 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110542235 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.150058772 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.150784018 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098325427 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135369799 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.137979059 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1432754 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.135803526 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10413019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145860317 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.150570943 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100940501 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.133056167 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118965867 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.14523873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.144764429 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114218313 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136905057 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098262062 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137120488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130208904 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110883682 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.133616489 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.106667174 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.131078236 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130021526 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102125469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136171022 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102886858 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.138930971 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.154472364 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108028926 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139758637 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.162283924 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.107226603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.132515831 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146987351 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.144731429 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.127954608 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138595788 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.111997329 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135884308 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.098151753 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146972962 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112829645 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.127955917 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14982872 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.097713999 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.126610323 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134108638 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101590421 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.130411132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.108624981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.130928286 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151391521 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.106818312 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133909293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.10082373 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131975279 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097714989 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125927214 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133264089 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.122945287 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132951877 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156764096 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09998026 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.138069358 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106784168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132946495 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13580282 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.100186509 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133042682 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107593078 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133197934 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107657834 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.131853998 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131374451 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.119060911 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148319599 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140814089 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.109530222 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13731183 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101715299 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127952481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139785138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100701805 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.130941579 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109357948 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128758506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.128983499 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.112015199 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136532368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098341519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146556834 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.133225306 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099178559 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.143526036 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100529321 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131190401 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109225982 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.140491165 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.127911195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.108791365 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139175054 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.099066353 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.133044828 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130130681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099627045 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.145023832 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110716214 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.131436139 seconds)
  done (took 15.923022794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.299980983 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.310245197 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208249006 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.396938912 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.1246054 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.226443706 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.27592368 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.228382136 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129084665 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172371116 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190229825 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.267102018 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.100194459 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.160822046 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305992985 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.374125338 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16049406 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174345103 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.172554106 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125704855 seconds)
  done (took 5.497440728 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.12241065 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170281056 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160997261 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.16189192 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.105621375 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14221745 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126682586 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.125151739 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.137132127 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134193916 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098643147 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.142585887 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.107660356 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137091595 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.146513293 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.174630235 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105128358 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.134132255 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.12413934 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.134985515 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138992641 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15721695 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110866526 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156956067 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143783725 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115647689 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.127759451 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.134709444 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103340791 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.1329694 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10514303 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149506036 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.136241115 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106259278 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137592161 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.110594461 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.129867764 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.129157763 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.101970225 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.131525564 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1169457 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.138439691 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103343863 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.125539386 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.112343576 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.130527456 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1398864 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.109907963 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140880454 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.115592008 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.139625904 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.14035369 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107301232 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.149419114 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.102176181 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.14456623 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.142152215 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.141094268 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.108445625 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.127245486 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098169047 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133156107 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.105333114 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.141551724 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13847726 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.124720426 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.145594638 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.129458626 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.106943417 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133627639 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103989386 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146966884 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.15713185 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.132924908 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104291984 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.150852488 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103749415 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.120859241 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111462794 seconds)
  done (took 11.288850248 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129981795 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134634564 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.120163286 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.168427173 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.150193222 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106766537 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.13420768 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.120270009 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.14176733 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.142658324 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.113733544 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.142811442 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154918273 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113277894 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13274008 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143606477 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111409557 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.173475568 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147459123 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134721911 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.147021946 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132669251 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.114490728 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.141692286 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164098288 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.112455456 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162969951 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.139023313 seconds)
  done (took 4.947418415 seconds)
done (took 50.856201617 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.273852687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.389673063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.181715384 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.173996311 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.203201768 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.186266125 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.175703549 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.369151983 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.815165842 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.177445974 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.176715494 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.175018011 seconds)
done (took 27.401661208 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.527909646 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.74370817 seconds)
    (2/2) benchmarking "String"...
    done (took 1.488683659 seconds)
  done (took 4.327152791 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.167285031 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.168517569 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.414912993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.16923918 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.183495204 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.184729343 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.174452375 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.171685104 seconds)
  done (took 15.562957985 seconds)
done (took 25.683663619 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.210799316 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.379417205 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.432388144 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.18451236 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.17386822 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.185688785 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.167297021 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.194839986 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.179050129 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.169357578 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.162303108 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45113047 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.176388768 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.555250572 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.162603736 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.191205513 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.185896952 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.4153128 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.175280923 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.216644372 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.164719153 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.163879319 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.22303544 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.194128531 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.179923275 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.184771167 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.205993409 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.173628829 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.361309285 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.192556939 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.219048835 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.173028192 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2162904 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.177175355 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.287171275 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.191806658 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.357073782 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.173271404 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.168670576 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.178766428 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.364660439 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.537904796 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.174247298 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.165147492 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.203591275 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.208931397 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.17228259 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.867851509 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.183869869 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.164251722 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.22936746 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.569952979 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.190223365 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.193228811 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.180753997 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.417036676 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.193180383 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.195382793 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.200472163 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.192486259 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.173293114 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.174634121 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.175568433 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.185740872 seconds)
  done (took 141.569307082 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.174577274 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.174442102 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.172919451 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.230338282 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.177203992 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.174886867 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.173684347 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.174471717 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.174286607 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.20118858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.179852766 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.174349462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.177990656 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.179738455 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.179246248 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.195216511 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.178721324 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.175778151 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.182427773 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.174845319 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.200213423 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.180352099 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.190971796 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.177228357 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.208955706 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.256514723 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.216096183 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.179833552 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.180296629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.164733719 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.186985053 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.225476094 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.701073447 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.020461975 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.158408786 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.177914647 seconds)
  done (took 79.152280581 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.152610792 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.15470396 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.152584339 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.182877531 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.150958206 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.640529337 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.641957048 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.875845505 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.555390318 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.256054785 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.358470389 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.142923262 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228345043 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.153904979 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.139808527 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.155544924 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.180140379 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.14295027 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.139592429 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.630862812 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.150028215 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.158500685 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.311861279 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.148731544 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.162588715 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.531821951 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.135834449 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.161711019 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.453797524 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.177822272 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.135634001 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.443564761 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.464750518 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241374641 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.131306088 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.157260865 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.132326297 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.402465248 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.130039162 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.130009351 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.133276756 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.731377932 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.129086802 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.617293515 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.12964569 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.016315774 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.126683982 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.123756087 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.042293759 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.682498652 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.141765428 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.123774421 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.125751108 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.123561148 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.124589952 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.150801235 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.977105476 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.215172758 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.139732079 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.127142081 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.152086502 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.124736732 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.246318679 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.12634826 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.45797939 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.185208997 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.240234246 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.124226679 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.614969664 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.128555677 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.215756691 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240774189 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.123752453 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.123929184 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.124090216 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.123767533 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.229994201 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.12480151 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.124359582 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.491033078 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288623721 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.139118639 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.246160266 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.22201762 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.125268426 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433467643 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.130662699 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.129137856 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.831891303 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221186911 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.125943603 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.125311818 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.126132208 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.127159009 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.492013558 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.616706365 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.294419925 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.129321077 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.257166997 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.129060685 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.501941731 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.60996989 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.741299697 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.129156084 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.126690462 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234395702 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289209445 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.141105734 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.126732807 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.241444804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.129399729 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.18341994 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.125942619 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.520729058 seconds)
  done (took 356.481228514 seconds)
done (took 578.300225695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.827254139 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.788490392 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.90997602 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.813405226 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.778699562 seconds)
  done (took 10.173496889 seconds)
done (took 11.230129675 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.30369274 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.303358639 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.185692556 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.305323461 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.161476363 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.319686746 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.284086697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.150988923 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.227298437 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.203850917 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.2277656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.184189251 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.164895138 seconds)
  done (took 17.083023241 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.393283227 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.139419997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216455764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383683216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.178530878 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.386696175 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.424512276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.140726623 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.275675577 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148666514 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.148514687 seconds)
  done (took 16.897977696 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.391699764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.139512169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.221090678 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363595735 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.178413829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398937148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466932681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.141395533 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.284565288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.151465177 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149736758 seconds)
  done (took 16.951030763 seconds)
done (took 51.992564631 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.177618618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.300302041 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.162516616 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.153751138 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.146642638 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.149421401 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.154783599 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.14828536 seconds)
  done (took 10.456715322 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.146571321 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.145013399 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.146350938 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.146465715 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.144352754 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.14673186 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.146007144 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.147255399 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.147047016 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.146228197 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.144020886 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.146880077 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.145852363 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.145751846 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.146686925 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.146368472 seconds)
  done (took 19.403385267 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.148417393 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.145632664 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.146392895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.147283943 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.146390533 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.147265726 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.148377868 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.147219211 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.146739763 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.146653243 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.148583472 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.146419852 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.146464544 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.145803107 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.14810698 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.148413479 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.145608338 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.147319194 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.152090702 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.146962832 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.14810031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.148125679 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.147895024 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.149015332 seconds)
  done (took 28.606387263 seconds)
done (took 59.528559979 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.145083794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.1422909 seconds)
  done (took 5.35255029 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.207697665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209898515 seconds)
  done (took 3.484547589 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.148636352 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.147147053 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.149914196 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.148362313 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.148448037 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.147378061 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.147502738 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.148028671 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.149463616 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.149448001 seconds)
  done (took 12.551441675 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.150308227 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.149805423 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.149047058 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.148840743 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.150355853 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.14832394 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.1490569 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.149356487 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.148670225 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.148220097 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.149128989 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.149079757 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.150348571 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.14913228 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.149365134 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.150600814 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.150233318 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.150435682 seconds)
  done (took 21.757920998 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.163907476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.172454903 seconds)
  done (took 3.404801114 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.289712182 seconds)
    (2/7) benchmarking "second"...
    done (took 1.192050348 seconds)
    (3/7) benchmarking "month"...
    done (took 1.267491323 seconds)
    (4/7) benchmarking "year"...
    done (took 1.257922139 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.191600542 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.171416731 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.192356758 seconds)
  done (took 9.629500097 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.153483086 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.348836578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.452340684 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.724010044 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.15290866 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.196367509 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.019314595 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.198490927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.184386241 seconds)
  done (took 13.498828073 seconds)
done (took 70.745921502 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.140827398 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.171077385 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.168824228 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.16177238 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.506568433 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.17384258 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.144728485 seconds)
done (took 15.537102675 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.135091188 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.140551879 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.147404768 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.140924728 seconds)
  done (took 9.632249315 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.071245383 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55773479 seconds)
  done (took 4.698598721 seconds)
done (took 15.400925029 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.151490229 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153446146 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.151557268 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.152912225 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.150719551 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.151360073 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.151413957 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.151774735 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.151815552 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.150866245 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.152557306 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.15168329 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.152121362 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152574387 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153082585 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150775243 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151308613 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.152363804 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.153803314 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152952079 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.15216084 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151813017 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.152074398 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.153169066 seconds)
  done (took 28.721427208 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.153547878 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.15299026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.152714428 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.154544119 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.153305246 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.15396735 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.152496964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.153320656 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.152728363 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.152931971 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153403034 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.154131201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.153993618 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.153524557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153199997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.154710502 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.154556388 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154462011 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154952864 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.154237212 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.154630735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155827718 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.155162022 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155623932 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.154224935 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153869849 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.154524406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.153700034 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153796483 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.153576762 seconds)
  done (took 35.690753197 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.158463749 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.15938118 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.154182122 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.154831896 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.154889185 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.155030158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.154571241 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.155595923 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.154728482 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.154577495 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.155221222 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.155082753 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.156636289 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.155023647 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.155428629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.155355532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.155686272 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.155197748 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.155440472 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.155654747 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.153721629 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.156290067 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.155975468 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.156333243 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.156002819 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.157355501 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.156201735 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.156836407 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.156685043 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.156623047 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.155778846 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.156546136 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.157148525 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.157072861 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.156354099 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.155960252 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.160677958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.160823274 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.156154734 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.155514678 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.156194177 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.156506299 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.156798032 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.15757658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.157156911 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.157712608 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.156659249 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.158359202 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.156433286 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.158659684 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.157836882 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.156897705 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.158135215 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.156842192 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.157617695 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.159054843 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.158218572 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.159028108 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.157405976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.158288204 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.157033506 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.158704495 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.16016631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.157228411 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.158077519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.158489209 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.157662496 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.15781846 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.157987622 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.15877121 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.157923226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.158476133 seconds)
  done (took 84.371774113 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.159587018 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158105015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.15927319 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15711444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157036712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.158345122 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.158660425 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15878993 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158035905 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.159746942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158921441 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.158778489 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15974686 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.160483759 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15873278 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.159058738 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.159703003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158197349 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.158611663 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.159398319 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.158630428 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.160240005 seconds)
  done (took 26.573030969 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159354337 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.160752754 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.159057245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.161442113 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.16088271 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.160518011 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.160075645 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.162133206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160041476 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160838652 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159185457 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159247951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.161894835 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161174348 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160269735 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.162820776 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161165057 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.16209936 seconds)
  done (took 21.970319563 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.161287478 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.161025718 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.159864908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15954865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.162109071 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.16028833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161138556 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.162230205 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.161417926 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.160995958 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.161347664 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16150065 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.161709474 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161439109 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160897247 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.162590479 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.163253884 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161070899 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163149859 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.163764683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.163740587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.162636448 seconds)
  done (took 26.63561583 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164172869 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.165581374 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.163990685 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.162845328 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.16244353 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.162631789 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.163375117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.161956642 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.164122917 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.162938657 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16228653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.162465458 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.163669125 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.163449541 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.162796417 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.161205389 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.163774737 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.163740859 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163127667 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.162689963 seconds)
  done (took 24.342648021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.164768697 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.163987709 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.164559113 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.166128081 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165510889 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.164473852 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.165888016 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.16642361 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.166549682 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.164910001 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.16543248 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.165745834 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.167247746 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.165440736 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.164238454 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.165555278 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.166954515 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.165333815 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.165966628 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.166541598 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.167114451 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.166491131 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.166252097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.166098305 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16662508 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.166062472 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.167163465 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.165685667 seconds)
  done (took 33.7248348 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165515423 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.165491081 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.164379566 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.166003806 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165277085 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.167762332 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.16557234 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.166016641 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.165719449 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.166758806 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.165655928 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.166364625 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.165926447 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.166081156 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.166594013 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.166060445 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165377757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.167077176 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.167476802 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165816913 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.167839105 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167670677 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.167768175 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167370086 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.166922224 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.167370583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166831233 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.168754539 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167879083 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.16699111 seconds)
  done (took 36.079564857 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.215743315 seconds)
    (2/2) benchmarking "in"...
    done (took 1.214453868 seconds)
  done (took 3.513542622 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.16747948 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167742693 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.167583401 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.167296823 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.167886538 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.167800174 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.166773178 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168741955 seconds)
  done (took 10.424907631 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.16429347 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.169636397 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.168963529 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.16963395 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.168467592 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.16410049 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172787911 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.191184476 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.163979472 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.166866443 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.167672299 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.169585972 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.169117581 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.166528206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.166399639 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170285243 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.173331619 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.169204152 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.17007829 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.170030164 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.170232457 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168713507 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171458433 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.172481212 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.167281415 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.174367708 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.173680234 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.173121802 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.167356902 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.169972837 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.169092842 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.171697279 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.169259352 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.170635912 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.170586549 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.170758941 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.175715015 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.190811899 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.174477737 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174610612 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.172059838 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.170603215 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.16728881 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.170976088 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.169706195 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.172768628 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.171684982 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.171805475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.166339131 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.169845631 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.175632108 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16588964 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.172504875 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170079284 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.171865552 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17673771 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.194761855 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.168692331 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.172742375 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.176790753 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.184766051 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.180271105 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.171307345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.174505145 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175969952 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.182424912 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.177783634 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.19615481 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173387278 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.172845166 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.177053209 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.185400094 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.182760519 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.174923069 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173921849 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.17306869 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17014267 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174523333 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176790939 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.195580933 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.175425939 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173232112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.177594193 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.18304943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.171063127 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.175407614 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.174564151 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.174479387 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.17174023 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.178682912 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.196790589 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.173881949 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.168216673 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.170574825 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.172356717 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.17445572 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.169600311 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170515825 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.175156268 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.174376523 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173375318 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.173718052 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.175914087 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176795955 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175332714 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.178119477 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.177113936 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.171778121 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.177850643 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.178823881 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174382106 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.17341527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.174649227 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.175553312 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173905112 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.176214159 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.178158347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.173172187 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.17703821 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.17654974 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.178876847 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.188325982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.178843068 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.175789876 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.173633931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.181890653 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176078853 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.174352569 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.17942222 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.175645763 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.175800679 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.174129932 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.177352365 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.172178173 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.176190039 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.174358483 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.178228551 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.175483796 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.177348177 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.174752461 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.17696489 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.173308131 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.175184557 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.17699133 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.178959721 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.175449545 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.182950423 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.177610089 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.175148036 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.17588672 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.179802322 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.176683812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.174083592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.178069551 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.174894748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178334481 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.173739322 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.179843927 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176916838 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.179754769 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17727428 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.17297735 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177213816 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.179251333 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.178898014 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.176958359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.182973168 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.183852087 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.181450271 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.175251873 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.180558109 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.175698525 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.17734284 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.183129234 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.179561451 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.178107048 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.176745598 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180138376 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178869764 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.17910436 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.175841821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.178687327 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.178829327 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.182397711 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.183497089 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180036217 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.178795174 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.174977385 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.176107947 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180858695 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.177660698 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.185265675 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187800632 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18793647 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.177985981 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.181768128 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.17599216 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.182385602 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.180515552 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.182967134 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.181018838 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.17998889 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176569679 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181137661 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.177370859 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.181601122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.175869952 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.180901139 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.181726882 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.179983913 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.179650189 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.177245037 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178199734 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.181917889 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18115026 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180906487 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.17640716 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.18205741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.176056185 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.176902459 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.182943824 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.181994452 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.184981023 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.185215759 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179327113 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182397807 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.179972357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.17750893 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.183383016 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180910941 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.181562519 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185466144 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.199468519 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.180361062 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186278895 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.200905425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.177285041 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.182408974 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.185376679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.182633139 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.18091659 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.186743896 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.183618893 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182365531 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.182442988 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179866542 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184552183 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.186856175 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.187814084 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.178716835 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.184920067 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.179469254 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.184286778 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.180867643 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.182291602 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.180962322 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183733179 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.186748423 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.183586713 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.180839889 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.184536054 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.183251968 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.186124156 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.182169096 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.188163761 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.185750374 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.183601525 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.182142865 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.181904207 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.186246375 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.180188004 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.184679848 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.181760069 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.193564586 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196251857 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188134913 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.186578902 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.186241198 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186560933 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.187600734 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.183507484 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.181697023 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182255845 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.180922278 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.181934828 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.184906877 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185708165 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.187344433 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185173076 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.186341699 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.188026135 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.18585308 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.18098063 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.187309969 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.185208592 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.185977926 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.180544115 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.185930622 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.183877335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186286782 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.185136103 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.182501709 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191382301 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.666371457 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.18413667 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.185008456 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.184058531 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.181879605 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.185094136 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.187675025 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.185077123 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.191442088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.184588168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.18850517 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.18144935 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188919086 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.188016472 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.184025895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.188294123 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.18542602 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.179877621 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.181536923 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.185615838 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.187316904 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.205133438 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.18039422 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.185061895 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.181796505 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.183315159 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.18098526 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.182070231 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183362054 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.18216463 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18840221 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.201897912 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.182725981 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.182425276 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.186011397 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.183207363 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.183530044 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.178459362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184289739 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.187866493 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.180766875 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.181766554 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.180836182 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.183657713 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.184092559 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.185656796 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.185707006 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.182692825 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186914172 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.204625898 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186020715 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.186664427 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.189902014 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189023496 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188870156 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.210716035 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.183190919 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.185381399 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.186206689 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.184713766 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.182953331 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.183941953 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.187539884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.182811448 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.188521346 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.185012856 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.183309362 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.184058609 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.187035176 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.182091525 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190243736 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199120904 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.183038572 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188107378 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.185446212 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182172651 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.186645166 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.18594471 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.180292838 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.183514322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188334858 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189862604 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.181256257 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.18599943 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.183282856 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18660784 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.188205304 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.187064404 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.186879883 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.186607344 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.184481895 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.187472695 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186910321 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.189079614 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.184088559 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.187091377 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.183881752 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.19236283 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.189078095 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.184875862 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188422543 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.188291216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.181492205 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.184294349 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.188017766 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182659782 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188600949 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.184330007 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187908473 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.188243474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.187949197 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.186638753 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.188799586 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.183818012 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.185278849 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.187995341 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.189520901 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187441647 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.186948816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.190397024 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.184542561 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.184008714 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.190314291 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.184656735 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190115827 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187222583 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.188760058 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185666727 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.190268002 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.188620696 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.188686625 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.182943835 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.185464894 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.1913564 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18973354 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.191619527 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.188633382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.191453052 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.186055432 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188119517 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.190240035 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.184814795 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.185961287 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.18995702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.187223768 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.186140797 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.186861855 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.189370228 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.192315568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.18866269 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.184478167 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195041175 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.210967081 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191252991 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.187206907 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.188054999 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.186701789 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.189692158 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.190682141 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.187041656 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195039888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.210285654 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.192224625 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189105932 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.188617242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.187377993 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192601918 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191938581 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.187339295 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.192659165 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.188427051 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.192619615 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.192611983 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.191369388 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.187312245 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.187741837 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190375985 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.191468182 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.19288105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.191915566 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.192942623 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.193174153 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194670544 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193614853 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.192566618 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.191366688 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.187097904 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193020464 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.18785847 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.191772987 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.190919231 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.191829065 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.196589409 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191667652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19070376 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.196085534 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.197778615 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.193425057 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.188837917 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.190933082 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.194308802 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195362815 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.193702654 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190197837 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.191686343 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.194009772 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192680441 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.194011595 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.191366829 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202574482 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.217670582 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.188815902 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.191269666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194104396 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.196614236 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.193218945 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.194557315 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.191257948 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.194047783 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.199364023 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.194382169 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197534801 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21465921 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.191901075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.197110635 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.19167343 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.194162162 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.19507512 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198534324 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.194881237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.193704182 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.202997138 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.198418121 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.198519757 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.212772928 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.216204157 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.194109944 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.196629902 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.1916974 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.194624445 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.194402032 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.196778181 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.194208141 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.195473698 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.196782595 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.191870342 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19721314 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.196398901 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.199553044 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.195462082 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.190899002 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.194494942 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.196795509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.195095171 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.197922267 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.195740108 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.197101485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.197451306 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.192730624 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20526965 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.206120746 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.19786743 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.196341737 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.197411193 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.197408971 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.198104882 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19889527 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.201522702 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.196793288 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.196686796 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.194182219 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.19854427 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.199588385 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.193262867 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.1938033 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.194765957 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.19884354 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.206674912 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.209478483 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.200084338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.197024492 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.199439103 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.200069345 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194200129 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200142952 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19875186 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.195978499 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.196936282 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200910507 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.201337682 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.198242748 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.195354135 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.206471986 seconds)
  done (took 707.558858643 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.199135972 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196734145 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198705361 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.198164384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198924902 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199728639 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198270845 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199022291 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.198034775 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.198658831 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.197523522 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198199813 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.199883454 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.199155336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200453343 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.19991347 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198829422 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198888306 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.199766998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201767485 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.200799105 seconds)
  done (took 26.292875043 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.200627713 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.20017306 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.200109179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.199915049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199783581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.199034299 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198982822 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199655015 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199515216 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200069191 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.200833449 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199605164 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.200424858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.201177921 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199074329 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201009951 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.199439934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200774945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.199430107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199625552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200980151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201231121 seconds)
  done (took 27.514344881 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.200255556 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.202497702 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.19683679 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.202382858 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.200467775 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.200272628 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.20144501 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.201043134 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.201139449 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.198302247 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.197919451 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.200797999 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.203586598 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.206690018 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.200209717 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.203474628 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.200639203 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.202177704 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.202889637 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.202043053 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203160778 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.207358873 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.201487893 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.197404136 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.202610002 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.203346085 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.201927807 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202466912 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.199920981 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.204451225 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.202598909 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.198493188 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.201769974 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.200605789 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.201143239 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.206332803 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.201537884 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.204126256 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.203718967 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.207066779 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.215448019 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.201711489 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.206598134 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.207433368 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.202242976 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.201411523 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.208065269 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.203292026 seconds)
  done (took 58.838210841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.774508458 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.793123225 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.79302411 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.798832386 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.792511623 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.794939613 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.795836122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799450521 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.796453423 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.796495031 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.791688333 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.802098989 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.795231092 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.793793064 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.791046944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.798440566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.795844482 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.796525826 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.797466069 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.802205612 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.7984669 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79449376 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.795367457 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.799423215 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.80205351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797075127 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.795475297 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.793751342 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.798205006 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.795934318 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.798291398 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.799856413 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.806538907 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.804910339 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.801512836 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.800164907 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.808349555 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.804180761 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.799642373 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.801989475 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.798937414 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.797791538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.799656171 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.801825974 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.804511694 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.803267584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.80010191 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.799937033 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.80035338 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.80581874 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.802721708 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.802269996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.801919735 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.802023858 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.800618121 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.802066593 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.803102757 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.808227274 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.804533197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.804214677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.799062927 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.808435826 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.80474635 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.801947016 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.799772226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.803706661 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.80524949 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.801926515 seconds)
  done (took 123.483207724 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208446785 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.208821387 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20962652 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208135259 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208340482 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.208491088 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208274469 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.208368432 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.209352163 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.209621487 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209545237 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.208715425 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.2079788 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209440647 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208655905 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209655632 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.209255758 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210756272 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210832199 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20978598 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.209113653 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.209569642 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.209097525 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.209775931 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210163675 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.210684322 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.21181363 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210849265 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210237535 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.210688999 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.210119033 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.210318114 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.210283316 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.210121026 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.211131422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.210388363 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.210588298 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21148373 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.21110273 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.211386202 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212044726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210198304 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210306521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.211539858 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21175578 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.212059756 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210831935 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.211260999 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.211596632 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.210584836 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.211194449 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210507172 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210693366 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21047955 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.210749777 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.211917611 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210323291 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212944634 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211847331 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.212057956 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212788129 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.213124872 seconds)
  done (took 76.165621317 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211827562 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211276664 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.21224233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.212828429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212115971 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21305068 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211633193 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.212049284 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212419627 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.212270009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214578286 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212969145 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214248407 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213879185 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212450136 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215310787 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214045269 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213406967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21316525 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213118874 seconds)
  done (took 25.382514588 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.212867052 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.213504741 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.213465161 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213842076 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.213639808 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213720352 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.211954121 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213258844 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213623561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214788686 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213743204 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214707747 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213975875 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214318407 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.214515508 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214499284 seconds)
  done (took 20.545729806 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.215490219 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.213753974 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.214646226 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.215732166 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.215398415 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.21378758 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.214909329 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.216236668 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.216196052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.215214172 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.213574521 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.215917248 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.215042991 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.215287331 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.215316047 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.214657268 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.216164171 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.21477958 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.214729553 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.215114489 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.21729735 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.216209135 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.214384123 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.215020941 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.216597189 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.218147936 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.215558237 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.215106149 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.215484435 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.215497604 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.21669332 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.216135187 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.216085367 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.216009578 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.215945591 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.21635696 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.217231801 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.217186945 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.216674213 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.216784021 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.217220244 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.216555255 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.217980598 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.216130488 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.216372795 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.216186949 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.21571346 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.216739641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.215214651 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.216629397 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.216548656 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.217640208 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.218530123 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.216871013 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.217310932 seconds)
  done (took 68.005483129 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216148152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216756924 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216506507 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217225077 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218546795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.21831513 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.217772124 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.219469926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216776901 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.217083008 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216770488 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218912126 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217679318 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217984769 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217592399 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217893639 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219037295 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.218010212 seconds)
  done (took 23.046627109 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218487639 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218505776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.218561393 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218875226 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.217452656 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218771245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218471437 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.218770161 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219089032 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.219656523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217595165 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.219759458 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218965378 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.218341315 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219274442 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218602026 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.220177669 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218737259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220453874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220394746 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221791448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219531578 seconds)
  done (took 27.950306026 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.215259109 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.21472981 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.21426607 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.230276724 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.226033623 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.21401845 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.213255985 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.213878147 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.233764176 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.275475621 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.269020751 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.227807909 seconds)
  done (took 15.878487753 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222029965 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221582224 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220343953 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221250876 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22092705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221430694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221476509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22076081 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221656631 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221583242 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221161598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221219298 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22058505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22136475 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219612469 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222208815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221956976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221010472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222006409 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220931998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221539193 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221803945 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222205003 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222083062 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221226213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223291011 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222676627 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222415726 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221782077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221705994 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221573892 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220805703 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221583786 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222239935 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220570215 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221930812 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220280347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221501452 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222234167 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223440562 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222637055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221575698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221972775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222535881 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222422012 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223179392 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222390139 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22283907 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222252747 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223565186 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222676336 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223882585 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222867858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223616927 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22384629 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223418654 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224197152 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223295349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22335377 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223420621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224094501 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22468362 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223575846 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225156262 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224104688 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224958143 seconds)
  done (took 81.803565126 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224527129 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223303835 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223741321 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22421399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224849333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22507361 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226631301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225221457 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224584769 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224504483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225511138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225529456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224383302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22553903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225790441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225184571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224461216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224688657 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225240895 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225614163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224545225 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22567708 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226458683 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225698015 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225007778 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225545795 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225558842 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22586861 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226584021 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225084182 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225424021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225457732 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225827681 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226392132 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225357818 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225426552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225589171 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226141043 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226215592 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226449714 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226487748 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226992801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227378121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226968277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226945691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227118404 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227261673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227248395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226879281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227496827 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227034902 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226827212 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229061909 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226897851 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227113074 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228530269 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227044482 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226745542 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228817663 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227588517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228094487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227622827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227564805 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229283189 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228495672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22764191 seconds)
  done (took 82.067272845 seconds)
done (took 1697.652939443 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.38914673 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.341657503 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.222597152 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.236472422 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.223785216 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.219178976 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.239165606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.223232071 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.221927724 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.222731749 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.223404764 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.414217669 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.218117228 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.223933572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.223389893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.318833257 seconds)
  done (took 25.301863993 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.250950108 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.23417283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.33709826 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.248027707 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.25570981 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.405757006 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.287937921 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.232113975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.389340519 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.251514896 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.223524773 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.254836965 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.23249281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.22193599 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.249492101 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.40760633 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.465787132 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.22441201 seconds)
  done (took 27.312392873 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.648566795 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.248259867 seconds)
  done (took 5.039539967 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.249951818 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.231155482 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.233416309 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.229309559 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.222180663 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.223192764 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.228733328 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.227027773 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.229367913 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.346691513 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.233281551 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.245031726 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.248388264 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.232106439 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.235860175 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.274482997 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.387915224 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.236638162 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.234626816 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.238457895 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.231540512 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.322047921 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.271304662 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2378284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.346918137 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.232715659 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.234962424 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.238629406 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.371120917 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.237378301 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.231208803 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.231978907 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.235478174 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.225289672 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.656096471 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.248133142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.241400854 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.257971572 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.237491232 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.373413845 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.234176079 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.239491909 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.226343247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.654597729 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.387857187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.348481397 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.243604992 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.250156636 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.235186797 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.294985096 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.234596698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.234473808 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.290768292 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.009372304 seconds)
  done (took 79.689606452 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.278550452 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.226551133 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.405145986 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.247042454 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.227616718 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.227760113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.242826782 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.494416544 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.250264253 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.22852287 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.544647865 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.780181109 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.250183849 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.286879119 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.090740767 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.301431105 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.229223669 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.243056659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.229498762 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.233984064 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761661422 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229122206 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.229443218 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.322589004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.266593246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.724093418 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.228509388 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.240533034 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.229167704 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.230068245 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.736396463 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.25725992 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.290913014 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.231678709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.490847437 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.584290495 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.550232046 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.229942809 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.280849921 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.232121399 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.255891046 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708029632 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.567948903 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.229778982 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.231259839 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717954395 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.230096928 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.233767856 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.233142419 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481545831 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.230323404 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.232413273 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.246863834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.230903873 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.230285613 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.315324989 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325183216 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726319526 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229966124 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.230834788 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.280476647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.233422009 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.237804977 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.23190096 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.250834226 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.571114995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.45960462 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.238852635 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571969892 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.730392997 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.245056736 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810048539 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.246989884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.257053798 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.418473894 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.237895936 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.23030878 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736352454 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.239764436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.231292723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.554573501 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.235447362 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.54880876 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.24799693 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233386366 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.77734422 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.244640192 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.246813541 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.233790155 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.248980134 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.231913765 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250019208 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515835631 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.266541497 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.233276285 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.234120688 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.241006738 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233078478 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.234538016 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.239701498 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797547906 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.257672274 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.23407521 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236613081 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234554723 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.248905782 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.235084281 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.236461972 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497426048 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.236505578 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.23919248 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.236677833 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.233486286 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.257780592 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33015986 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.235977316 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523882474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.237241137 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.233645023 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.238248291 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.234772573 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279945966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.235079471 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.240372128 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.091948973 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.522036137 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.254109419 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.250641517 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235431666 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.2508948 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.234772889 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236267245 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.297267354 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.238481482 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008973636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.286385785 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.24016235 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.236344379 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.250537009 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.23484017 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.237841433 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2382213 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.52335054 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501301649 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.441253801 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.236769783 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.236015256 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995435087 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.273463332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413581142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.255168275 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.235590127 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482732691 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.452944849 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.239327526 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.23699578 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.241569884 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492613484 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.236596316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.552232174 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769814469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.25347157 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.243099433 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015396114 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947356014 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.238616414 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.239494024 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.553763724 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.254020244 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.237607521 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.237245631 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.239190722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.253131518 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.256136003 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.24183451 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.239065936 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.238605721 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.564767968 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.427469031 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.257491231 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.250267364 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.728215832 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.260161873 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239013219 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.257894454 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.240177349 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.239048472 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.314134082 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.245221836 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.240819648 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.241811956 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.246716045 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74397456 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.23822193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.239997165 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428641388 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923093634 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.256121486 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.238947875 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.255540967 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.154431689 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.753151487 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.279314795 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.530434658 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.248422307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.278684948 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241887306 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.268020575 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755392117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.240378675 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.259748467 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885025205 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.257365059 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.660398901 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.24156236 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.243728656 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834925871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.255930861 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.241525177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.2416191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.240966806 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535767465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.240275866 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.280792673 seconds)
  done (took 476.195781751 seconds)
done (took 614.676903658 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.241021201 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.242397588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.237271311 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.247047107 seconds)
  done (took 10.125841062 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.256119489 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.248812264 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.252831644 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.247361927 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.253289105 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.24746439 seconds)
  done (took 8.666576382 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.23982326 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.243630681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.247468428 seconds)
  done (took 7.891350483 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.43888465 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268560834 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.55594484 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.26678165 seconds)
  done (took 8.689916655 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.252239403 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.252542476 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.253011955 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.254022886 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.256851605 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.257701176 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.254248324 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.254178508 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.257258245 seconds)
  done (took 12.451333134 seconds)
done (took 48.984131955 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.264391463 seconds)
    (2/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.383402898 seconds)
    (3/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.352328542 seconds)
    (4/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.352174883 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.383159985 seconds)
    (6/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.235444105 seconds)
    (7/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.416669896 seconds)
    (8/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.310736103 seconds)
    (9/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.2771321 seconds)
    (10/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.397579566 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.302658336 seconds)
    (12/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.900874671 seconds)
    (13/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.347934093 seconds)
    (14/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.323356815 seconds)
    (15/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.279140383 seconds)
    (16/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.302305453 seconds)
    (17/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.28591101 seconds)
    (18/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.281313743 seconds)
    (19/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.494935591 seconds)
    (20/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.299347209 seconds)
    (21/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.349927643 seconds)
    (22/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.445938029 seconds)
    (23/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.935960245 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.467313171 seconds)
    (25/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.932096649 seconds)
    (26/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.276958645 seconds)
    (27/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.270666127 seconds)
    (28/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.393848929 seconds)
    (29/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.954662018 seconds)
    (30/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.347416495 seconds)
    (31/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.264983232 seconds)
    (32/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.285317458 seconds)
    (33/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.397450078 seconds)
    (34/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.236646106 seconds)
    (35/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.249768847 seconds)
    (36/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.471055915 seconds)
    (37/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.901481077 seconds)
    (38/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.284793095 seconds)
    (39/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.292930641 seconds)
    (40/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.27618527 seconds)
    (41/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.436996509 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.357922453 seconds)
    (43/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.343976244 seconds)
    (44/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.237455984 seconds)
    (45/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.378394384 seconds)
    (46/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.444640431 seconds)
    (47/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.448885868 seconds)
    (48/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.443029718 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.336745774 seconds)
    (50/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.253687736 seconds)
    (51/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.276215188 seconds)
    (52/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.23830023 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.3429694 seconds)
    (54/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.237929923 seconds)
    (55/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.240631681 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309480389 seconds)
    (57/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.157021223 seconds)
    (58/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.345798867 seconds)
    (59/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.301506631 seconds)
    (60/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.59120819 seconds)
    (61/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.399159836 seconds)
    (62/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.35539445 seconds)
    (63/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.407126836 seconds)
    (64/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.386284002 seconds)
    (65/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.295325331 seconds)
    (66/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.249068532 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.353037998 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.379370772 seconds)
    (69/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.422422008 seconds)
    (70/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.309398636 seconds)
    (71/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.338055443 seconds)
    (72/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.001199192 seconds)
    (73/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.40859686 seconds)
    (74/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.46043818 seconds)
    (75/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.397493325 seconds)
    (76/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.328275672 seconds)
    (77/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.296169221 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.294010425 seconds)
    (79/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.432542568 seconds)
    (80/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.97152435 seconds)
    (81/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.358187936 seconds)
    (82/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.286591731 seconds)
    (83/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.455222502 seconds)
    (84/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.300596961 seconds)
    (85/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.424279609 seconds)
    (86/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.297662709 seconds)
    (87/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.340224455 seconds)
    (88/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.358837817 seconds)
    (89/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.448943941 seconds)
    (90/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.251891487 seconds)
    (91/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.058839604 seconds)
    (92/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.265760868 seconds)
    (93/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.387694077 seconds)
    (94/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.333227033 seconds)
    (95/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.248767838 seconds)
    (96/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.025434305 seconds)
    (97/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.267000509 seconds)
    (98/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.284919025 seconds)
    (99/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.24086753 seconds)
    (100/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.28440187 seconds)
    (101/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.309190578 seconds)
    (102/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.363122686 seconds)
    (103/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.337737765 seconds)
    (104/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.28381852 seconds)
    (105/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.324958836 seconds)
    (106/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.255295145 seconds)
    (107/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.254165366 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.346818188 seconds)
    (109/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.324472533 seconds)
    (110/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.304191571 seconds)
    (111/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.080613339 seconds)
    (112/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.405371769 seconds)
    (113/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.419242491 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.334113247 seconds)
    (115/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.293340246 seconds)
    (116/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.328546936 seconds)
    (117/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.396349362 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.371745302 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.28315274 seconds)
    (120/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.373977438 seconds)
    (121/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.943432466 seconds)
    (122/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.450997978 seconds)
    (123/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.305674489 seconds)
    (124/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.389279776 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.457539102 seconds)
    (126/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.025138564 seconds)
    (127/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.343793838 seconds)
    (128/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.502619719 seconds)
    (129/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.330908393 seconds)
    (130/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.30524838 seconds)
    (131/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.257166843 seconds)
    (132/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.265485346 seconds)
    (133/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.319799599 seconds)
    (134/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.261680477 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.289746354 seconds)
    (136/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.383844261 seconds)
    (137/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.410764022 seconds)
    (138/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.3037497 seconds)
    (139/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.360830989 seconds)
    (140/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.245102335 seconds)
    (141/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.273821361 seconds)
    (142/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.368780286 seconds)
    (143/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.555844088 seconds)
    (144/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.293721834 seconds)
    (145/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.312607058 seconds)
    (146/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.598792533 seconds)
    (147/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.244306907 seconds)
    (148/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.375836719 seconds)
    (149/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.245335001 seconds)
    (150/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.407354273 seconds)
    (151/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.355590657 seconds)
    (152/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.361069273 seconds)
    (153/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.150963607 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.398522709 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.327897707 seconds)
    (156/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.34252842 seconds)
    (157/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.432226673 seconds)
    (158/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.016343124 seconds)
    (159/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.460945705 seconds)
    (160/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.290971653 seconds)
    (161/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.346841974 seconds)
    (162/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.418659119 seconds)
    (163/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.289869951 seconds)
    (164/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.482309713 seconds)
    (165/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.163142853 seconds)
    (166/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.02938168 seconds)
    (167/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.056135699 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.260774669 seconds)
    (169/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.296044663 seconds)
    (170/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.333926668 seconds)
    (171/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.409912006 seconds)
    (172/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.272533706 seconds)
    (173/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.393218454 seconds)
    (174/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.956201185 seconds)
    (175/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.304106663 seconds)
    (176/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.426681807 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.350199639 seconds)
    (178/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.298275054 seconds)
    (179/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.305576813 seconds)
    (180/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.317041572 seconds)
    (181/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.268381447 seconds)
    (182/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.291877225 seconds)
    (183/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.282439791 seconds)
    (184/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.081237315 seconds)
    (185/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.293413115 seconds)
    (186/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.3767842 seconds)
    (187/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.336800973 seconds)
    (188/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.39320359 seconds)
    (189/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.269060777 seconds)
    (190/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.280421856 seconds)
    (191/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.042056124 seconds)
    (192/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.392446218 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.403526413 seconds)
    (194/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.344722103 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.397335534 seconds)
    (196/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.004335353 seconds)
    (197/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.319080553 seconds)
    (198/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.247584179 seconds)
    (199/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.296684712 seconds)
    (200/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.450526067 seconds)
    (201/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.273205767 seconds)
    (202/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.129541301 seconds)
    (203/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.932415504 seconds)
    (204/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.922199942 seconds)
    (205/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.447112381 seconds)
    (206/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.389556807 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.3012412 seconds)
    (208/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.340111651 seconds)
    (209/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.35019358 seconds)
    (210/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.451823337 seconds)
    (211/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.457283123 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.414741516 seconds)
    (213/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.29307334 seconds)
    (214/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.321906126 seconds)
    (215/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.414445866 seconds)
    (216/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.289378173 seconds)
    (217/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.369123345 seconds)
    (218/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.295550958 seconds)
    (219/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.392766066 seconds)
    (220/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.423876114 seconds)
    (221/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.576487669 seconds)
    (222/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.368435435 seconds)
    (223/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.271542062 seconds)
    (224/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.998900623 seconds)
  done (took 353.800292163 seconds)
done (took 354.961717442 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312282322 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.446520321 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.265756809 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.264973712 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311896121 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.26107936 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.308440484 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.272605852 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.275547647 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.275928849 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.25922253 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.276249348 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.27904805 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.306783742 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.379349076 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.274823036 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.267574297 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.27195723 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.315016135 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332832952 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310017267 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31185637 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.286224289 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.266765359 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314493307 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314326913 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27476184 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.272338372 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.274142794 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.312792591 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.263188351 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.275779892 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.322300101 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.324689653 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3108943 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.272141052 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310642721 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.448012401 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.30939552 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.305424591 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.278850503 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.323923397 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279234068 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.277296088 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.322608297 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.28708012 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314114039 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389564927 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271160439 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.270303573 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319220858 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333994509 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.278878654 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.26512306 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.270074014 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.390720874 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.273319463 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315959867 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.274652007 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311905413 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381587201 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316421796 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.333557328 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315726694 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.276186494 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.28068639 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.274869135 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335222518 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.274378938 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311933063 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312886857 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.280481417 seconds)
done (took 102.957660498 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.390636032 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.267368845 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.407720363 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.273368156 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.427666933 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.407743957 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272566437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.273812889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.272936708 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.060081396 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.272105792 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.273047643 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.268098434 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.27382281 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.394232354 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.274490228 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.271918021 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.96039427 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.274703272 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.407159775 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.297083954 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.273915042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.273652413 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.062941895 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.26827025 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.264725813 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.407624513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.273766836 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.962893271 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.264437135 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.267772818 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.962296059 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.408375364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.293304677 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.283250718 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.282961396 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.427464035 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.293895473 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.38986814 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.388832886 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.412035104 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.312491416 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.265583215 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.270005397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277704472 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.275962898 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.276169744 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.304309329 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.27010712 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.275348206 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.962046632 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.286214007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.283746375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.275383174 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.275281532 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.295426809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.280067219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.277388068 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.411153562 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.276885207 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.394176186 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.066430006 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.063558018 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277038198 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.270482534 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.278826828 seconds)
  done (took 104.165927774 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.338064059 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.347321045 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.383029282 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.289720327 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.322521485 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.385629624 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.290954877 seconds)
  done (took 10.53909565 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279824467 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.276611562 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.324950679 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.323365101 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.276816751 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.428905719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.2767843 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.283789288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.277061417 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.324968421 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.277955947 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278892045 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.285800422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.271483913 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321419522 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.284225743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.388851966 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.275685016 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.278074675 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.42344937 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277761719 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.28625854 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.325150593 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.286074942 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.279953609 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.280844586 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.041599149 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279816946 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278730481 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.277654472 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279667666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.327801027 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.27845541 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.272925093 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27949587 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391487255 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.279644773 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279957624 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.278419387 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.276610261 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.279090909 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.278141377 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.278215101 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.280438226 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.279555774 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.301478076 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.279683915 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.279791185 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.280401065 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.279443103 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.32542647 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.2808915 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.279807403 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.280012305 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.330013743 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289464325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.27968867 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281207044 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.2804731 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.280431876 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427045791 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.323263565 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.282175178 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323116154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.282418873 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.281648212 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.281052397 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281214268 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366970036 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.283210322 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325842349 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.28112377 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.456719979 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.301608097 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.282902167 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.279448731 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.282260197 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281814819 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.27561052 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.28274125 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.282275719 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.277998062 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.283321159 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282373902 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281937861 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.434484699 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388285337 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.282190596 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.291654776 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.285412293 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.282971967 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330933864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.28318699 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.282402601 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329576654 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.393492126 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330505297 seconds)
  done (took 132.131861487 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291940815 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.290231247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.281791878 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.305753749 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.279324452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.278635208 seconds)
  done (took 8.914044277 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281462323 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.285140491 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.284394476 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.282922086 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.282176231 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.285958826 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284963761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281196899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.285628001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.284351666 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.284409735 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.28574187 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.285556414 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.284657097 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.285606983 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.284776264 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.284953085 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.285855014 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.285647696 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283297278 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.279840409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284372387 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285061102 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.282508031 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.287462213 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.285328483 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.300364316 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.285521095 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.28542202 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285843271 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.30338366 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.286577458 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.282735102 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.285734035 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.287355055 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.283943068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288059526 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.287196537 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288408795 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.286483283 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.288943032 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287075662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.286612502 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.287639066 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.284527485 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286101976 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.289689149 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.302243104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.287152073 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.288822935 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.28923186 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.28776908 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.288642915 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.289676669 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.286749581 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.303530854 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.290879193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289322455 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.287543916 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.284492313 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.289744417 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.288345454 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285803093 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.290213704 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.287459884 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.288590026 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.285208164 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291351235 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289498905 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.288526974 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.289730149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.288474844 seconds)
  done (took 94.871716785 seconds)
done (took 351.799341862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.07033579 seconds)
  done (took 4.263003237 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.417902106 seconds)
  done (took 3.612127367 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.972075884 seconds)
  done (took 22.172809563 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.33438823 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.307348057 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.305606868 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.284433078 seconds)
  done (took 10.424136245 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.546207745 seconds)
  done (took 3.738646314 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.283084954 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.293969671 seconds)
  done (took 5.772372994 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.508944737 seconds)
  done (took 3.701618827 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.766846473 seconds)
  done (took 3.966625396 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.300201086 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.296603673 seconds)
  done (took 5.796645208 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.270509637 seconds)
  done (took 3.464090026 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.502927656 seconds)
  done (took 37.697566764 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.298707608 seconds)
  done (took 3.495483318 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.302656533 seconds)
  done (took 3.496356105 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.803520144 seconds)
  done (took 5.996488423 seconds)
done (took 118.790852776 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.281752741 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.281607549 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.280647166 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.279986104 seconds)
  done (took 10.318275082 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.343342527 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.341879967 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34261968 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.342090925 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.342075862 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.342476472 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.331391096 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.316751203 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.343690654 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.341881997 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.342980857 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.342243925 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.342259171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.317377136 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.342309108 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.342933934 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.343942459 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.344357413 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.318021429 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.344488187 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.293042049 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.345234386 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.343368221 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.293008573 seconds)
  done (took 33.239549569 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.804137046 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.359083783 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441412786 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.341858071 seconds)
  done (took 7.143172257 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.370866295 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.370613401 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.38312144 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.422413858 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.435749074 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.382617122 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.316744415 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.313832073 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.299985062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371661294 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.420872977 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.362093555 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.448684109 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.292641292 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.498772896 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.293712001 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.293022901 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.371150038 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.4220758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.434363202 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.293696232 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.37211078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.370911606 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.361799075 seconds)
  done (took 34.100454462 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.303717239 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.310019115 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.295267023 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.311175603 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.296560136 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.296450151 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.296829476 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.300305287 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.295319669 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.295883814 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.2952944 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.310602269 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.301170592 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.296481881 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.303548417 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.297743712 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.300740059 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.298830465 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.296351905 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.303366998 seconds)
  done (took 27.203602139 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.284726014 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.284845549 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.635976905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.539509702 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.285410667 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.290416839 seconds)
  done (took 13.51970991 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.357202017 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.512573598 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.290744055 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.632046798 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.718652384 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.295794411 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.292629134 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.536405222 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.844310398 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.812023383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.353302502 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.361415109 seconds)
  done (took 19.205978619 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.297938158 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.288939548 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.299143255 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.304499299 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.343785449 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.313751758 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.298957802 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.287250809 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35014041 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.365168392 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.312190675 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.346584677 seconds)
  done (took 21.008499282 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387822435 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.291216633 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304570509 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307237774 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29072904 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135096973 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308979035 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984224207 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.314555682 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567450666 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292538765 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389565769 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.545918828 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304085507 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297956587 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.268603201 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523611598 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759448821 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297325299 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305278485 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327019394 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293065529 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317569482 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.500982514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314926708 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293668248 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.557958328 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293521685 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561912384 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311194891 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304683484 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294754767 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570338859 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937274935 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411666856 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499319417 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311629223 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317332885 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.30034158 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.306781912 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297762625 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298066583 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305522912 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295417358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295053413 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296577855 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002765453 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.322166226 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.296751925 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.29654477 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540920911 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397791634 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.301279284 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295636011 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338212149 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296152789 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.302549953 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420732444 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901613618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309718601 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297598395 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.302959428 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313288732 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3070843 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88805325 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.321449122 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.303052058 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303291677 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297391329 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305166534 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317331461 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297638822 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322841093 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298900235 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986525445 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32102521 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319500923 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829504584 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300591366 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.318528721 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528023707 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297365767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297969289 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.297835024 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29781974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969246499 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306296339 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.288205052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342016847 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01101033 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523928921 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333801225 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327450845 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521051988 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.284851514 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29875991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.298909587 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301727475 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320745052 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000665874 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316071654 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.304546339 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556252138 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.509533566 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299673017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.29061238 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764122948 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317444873 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.322563879 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300671142 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.512423989 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.885753145 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334626259 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300593533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336639994 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300096483 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008271046 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300788782 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.425241494 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307334711 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564660183 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.060399614 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301405912 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367782095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303967048 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.302406875 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314502179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302922708 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302396777 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.49994271 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32220766 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.333335777 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.302254544 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301399051 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.309159181 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318810446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.303831456 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523560632 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301632624 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585099344 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301473065 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303359495 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301933908 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.524154651 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.301571815 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.645307789 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564689969 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301867006 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.306857188 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334024576 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320303991 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405683561 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324153379 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.302842389 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577747158 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.308861145 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.309294844 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316200262 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304271113 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307526124 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.311337869 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316000931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873034616 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299942084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310979046 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191247887 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.319126273 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370927117 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31260249 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512492524 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.335537217 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312411513 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.315799256 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.315296784 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532446001 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313078691 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.304983996 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401511125 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.766769177 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886446794 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342132762 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.306863467 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.306215213 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.304541826 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304862475 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305296114 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305045422 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511548519 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339643724 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320429663 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.881661492 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328871112 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320253753 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.311960317 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316912038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.313919023 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305847792 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.315863228 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310905583 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31120707 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.323471024 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44958467 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.321624385 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307244651 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823944866 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313037147 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30616648 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304813945 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340659109 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320686848 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100796208 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584968867 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303849146 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559388602 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3234951 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.324602646 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.306964174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312205066 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309021956 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.32867993 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33643822 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.317290673 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321133204 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307549274 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888470306 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013128898 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830605635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337563242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.311212329 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31193446 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016440918 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326952894 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308588551 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5419405 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03149434 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326936449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776680251 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.328756256 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060827186 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562182582 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545765935 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316335059 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.317071763 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559201492 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524724957 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343633336 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308828208 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315395249 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.297377982 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855876428 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327471723 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392799373 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015720435 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336235415 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311001452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.358283033 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.322634473 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70668872 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32874858 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311026973 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314995276 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317237016 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107197393 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336878994 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310696199 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908680147 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32986468 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.798246299 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329917981 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.520555064 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345547837 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.315472135 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.324464957 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.326789974 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.569549888 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559732753 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319712557 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326995108 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839883189 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.199349675 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.320532745 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313500253 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019975251 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313884248 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59200934 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.318193879 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.319409422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320149051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312862695 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313272554 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.31369644 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321604629 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293137605 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784061895 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.312890368 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315958673 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318150486 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319003714 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.566698999 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.328430478 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885663845 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563577412 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317829692 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336020022 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.318933775 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313264777 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.323427201 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313743566 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312177019 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358366344 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536318145 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31357816 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.323864722 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328092492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524367298 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314138761 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313928072 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567801764 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.335991082 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.316790318 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060386548 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365358965 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315544578 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334082966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311215771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355241906 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400349743 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523923916 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.347393655 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325827286 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712368793 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335201208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333571025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.331541437 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41028484 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314300135 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.318030605 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.095466566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889041297 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048889189 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895106785 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58994693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321879145 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32512991 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315421477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478938129 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316044093 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591800551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317269835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.316921695 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373894874 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316811153 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33571983 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549348769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593264845 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316877093 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316697649 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321018412 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.316336525 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328793024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.528473677 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792820539 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850871451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319627209 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316589859 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032740141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61051665 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31787946 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316338777 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317502706 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.32139109 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.341803923 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.34588744 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318938103 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461202997 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565660493 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983260102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.345762857 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.347164239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.838258975 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318266566 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.570683786 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318819899 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.533101796 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913546353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023747072 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588830915 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390054449 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530978284 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.341967636 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484110898 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.318219065 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338841337 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318897851 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319374693 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.319262442 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.328841028 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896910893 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606383097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.325476532 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.319751691 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351931128 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.327699543 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542042292 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002465054 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5437492 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329683357 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326662785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320242864 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898089373 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595567133 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327427119 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.326435098 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558504737 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343683273 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344827643 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.839464777 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.32154454 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85604781 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.292006341 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341485864 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322853635 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010998418 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903014936 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347967921 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796883926 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323114177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322537764 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601036271 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.328698038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322877018 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603651564 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.326635057 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327041385 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537811407 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.918104647 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10506814 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.341750082 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340670941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.324751379 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323484807 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347273375 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321736866 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325680722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.734578239 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341960573 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322581098 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3367485 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.327062908 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32958395 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.327364125 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322881306 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.331927179 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.317833501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.31138713 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330218165 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455103426 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881893307 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345341837 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.003070625 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.649196091 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578959596 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328357759 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.314744754 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.329444902 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325613299 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324117874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32407179 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32477427 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85743469 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.330936529 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.33928082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331797845 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.326836972 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534918301 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325738115 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539107704 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351251637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346546582 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.31199434 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325555968 seconds)
  done (took 945.157282642 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364402653 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.350037013 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.341491199 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.420225696 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.357967243 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.422306445 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.395143969 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.331959188 seconds)
  done (took 20.215860163 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.32334668 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.334283603 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.323570145 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.331513643 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.324781783 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.791757819 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.356503634 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.331708014 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.346273472 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.323887497 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.326382929 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.313899516 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.347389426 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.323750914 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.320885374 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.337619115 seconds)
  done (took 31.997953872 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.272905998 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.463010772 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.175007494 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.356321363 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.325324278 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.322595662 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.554724399 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.346432362 seconds)
  done (took 26.049691063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.332739815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.333391004 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.333177987 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.333822133 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.335057184 seconds)
  done (took 7.901273001 seconds)
done (took 1198.256565231 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.334292679 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.33452659 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.334964665 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.333745163 seconds)
  done (took 6.5696553 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.315322958 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.315664472 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.317240917 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.331228031 seconds)
  done (took 9.512285883 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026087212 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.975023418 seconds)
  done (took 5.234997924 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.812122867 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.821314073 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.81293423 seconds)
  done (took 6.680759275 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.605004569 seconds)
  done (took 2.840240595 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.221699706 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.326066959 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.996225134 seconds)
  done (took 7.779160629 seconds)
done (took 39.850513017 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.32619819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.66794602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.483387549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.326844865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.489352485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.483466147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.127853831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.337157612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.326062627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.355473951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.338188692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.493726809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.042794216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.668788092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.043178882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.576096281 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.489969225 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.337354383 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.325981102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.350482747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.128641607 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.331455485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338240493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.325085194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.493660562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.472873801 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.332266273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.576060032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328849355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.325930669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.494637929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.326532834 seconds)
  done (took 81.299987113 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.32698677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.345987267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.328339475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.356628283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.326366706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.34628333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.32858758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.327231724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.331923993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.331590344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.35322962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.328395063 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.327305494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.327655332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.348271762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.328815557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.344969447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.332338642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.33182081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332077622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.329654302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.328051754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.346828995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.340268987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.334051859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.330022058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.346481052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.326686109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328254638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.335785227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.333873792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.360546265 seconds)
  done (took 75.983950666 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336725957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.333676918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.329248751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.332191886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.345534213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.334887076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.329599939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338186004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.329595756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345793677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.329192677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.329006322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.333698486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.328928531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.33326464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.329967222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.329817388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.333434267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.348349105 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.333174214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.350118426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343305779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338857696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329840938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.334718583 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.348470273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.338144835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.333852557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.335179896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.339593651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.336040342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.336607653 seconds)
  done (took 75.988538892 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612652048 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.341741187 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.344425877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.335844603 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.342803081 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.341041266 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.33611634 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620913668 seconds)
  done (took 14.515212999 seconds)
done (took 249.021960512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.34037114 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.834757308 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.384199853 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.348344318 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.363198189 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.362665413 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.558563867 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.379364315 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.559648125 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.357172655 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.358536231 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.338328645 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.15175494 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486450186 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.174181828 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.291171072 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.2146206 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.335224627 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.911601463 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.620533404 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.365561947 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.347497502 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.166978157 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.234450197 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.330125559 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.421045025 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440520349 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.561069374 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.496884913 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.41549476 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.845354465 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.350976611 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.347409874 seconds)
  done (took 62.935105047 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.337585166 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.461183708 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.343212169 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.345403723 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.468022797 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.363825945 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.340221364 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.345802063 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.344125033 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.344304565 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.346154963 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.345915051 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.347135663 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.393498612 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.469918848 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.35791493 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.340090093 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.46110357 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.338595199 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.338044033 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.39160252 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.345903172 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.347841202 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.393771216 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.345568878 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.345031508 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.462509629 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.366773499 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.347793833 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.461266333 seconds)
  done (took 42.483206411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.345602654 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.920900726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.081939505 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.35229918 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.341904039 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.34563312 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.623114846 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.345672183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.347001236 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.346415875 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.820906435 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366296483 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379779613 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.101210579 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.349949493 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.347329273 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.347257008 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.3429745 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.930394838 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.352184775 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.644324941 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.351519875 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.62515288 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.357825576 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.365806034 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.34425245 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.347809822 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.156999546 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.365383554 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.825326224 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.130220841 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.624888063 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.112319173 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.106072149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.114774144 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.353869896 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.348679572 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833449298 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.367906315 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.343870505 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.62424852 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.344648046 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.089464254 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.037917597 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.367373435 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.349892902 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.174834038 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.844361843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.599943519 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.35758828 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.111885501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.352076607 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.349997669 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.347933573 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.582497949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.348914207 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.345672486 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.193820922 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.370064772 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.628139984 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.350351593 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.346531165 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929801244 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.346584421 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.926620011 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.351998391 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.353749773 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.366683778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.091508831 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.353399003 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.056037131 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.368142523 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.350985132 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.829943238 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.952436443 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.248776067 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.353969958 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.937159987 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.15160856 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.648388051 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.35479413 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.14013395 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.654212024 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.354189064 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.353304799 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.353443736 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.35230413 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.448409099 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.625998404 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.006458883 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050342652 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.229479424 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.655129475 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360036948 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.347260405 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.206898201 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.377539725 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.353575776 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.08693898 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054005332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.370444743 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.35636779 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.06253689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.372121512 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.632173494 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.358204771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.103882783 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.354268303 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.433971289 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.353514368 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.357244086 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.372326662 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.633388685 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.357653876 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.355102568 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.040327843 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.8619416 seconds)
  done (took 189.835206767 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.344169042 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.359836758 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.343958836 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.359904059 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.34351844 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.351080427 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.343335812 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.345869698 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.348901641 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.343737023 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.343490561 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.352285123 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.350434954 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.344086644 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.343067202 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.344819977 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.343516891 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.348376804 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.344759246 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.34489644 seconds)
  done (took 44.196075285 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.353900204 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.899479899 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.887751644 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.358871088 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.354721199 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.352203216 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.405588299 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372508283 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.356368522 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.647504489 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.524105525 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.377645938 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.356332851 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.35620267 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.874514162 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.352359772 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.64778073 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90361682 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.357217067 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.900173431 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.346505948 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.356988117 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.35166462 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.899626967 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.672993217 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.637751948 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.41441669 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.925897515 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.37881284 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.357286922 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.907417269 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.361269709 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.353491871 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.908779067 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.378975716 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.372144919 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.357288161 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.409494622 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426421332 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.668178204 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.991969762 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.660821085 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.371853863 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.52957442 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.359494883 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.346653726 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.917762495 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.380460262 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.348499917 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.358734567 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.362619005 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.881222307 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.37516512 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.881679023 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.380795789 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.359387817 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.905170444 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.882273757 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.899174286 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.526995901 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.374296956 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.635569229 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.362642436 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.917412234 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.380930187 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.35850913 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.360871748 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.524661174 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.935461604 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.639442078 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.655193866 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65264393 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.359768522 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.417696399 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.377379957 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.7224735 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.420810473 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.754466677 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.657444343 seconds)
  done (took 123.607813231 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.625219353 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.472371121 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.752518369 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.962613289 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.357669598 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.494887201 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.471938398 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.615452557 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.376057201 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.435130583 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98767325 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.473408565 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.132107094 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445859117 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.48078709 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.502386958 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.758671362 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.323620322 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.057335774 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.973109114 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.355323585 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.485835713 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.901816519 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.573948799 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.355518914 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.937946841 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.313930239 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.017796347 seconds)
  done (took 52.898712111 seconds)
done (took 517.19673531 seconds)
SAVING RESULT...
DONE!
